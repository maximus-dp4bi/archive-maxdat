{
  "pipelineConfig" : {
    "schemaVersion" : 6,
    "version" : 19,
    "pipelineId" : "DP4BIDEV6a664995-c129-437a-ba78-22d50cbb0109",
    "title" : "DP4BI_DEV_OHPNM_CDC_ADHOC_TABLE_LOAD",
    "description" : "This pipeline extracts the specified tables in full.",
    "uuid" : "0c400acb-900f-456d-9632-10c11345062c",
    "configuration" : [ {
      "name" : "executionMode",
      "value" : "STANDALONE"
    }, {
      "name" : "edgeHttpUrl",
      "value" : "http://localhost:18633"
    }, {
      "name" : "deliveryGuarantee",
      "value" : "AT_LEAST_ONCE"
    }, {
      "name" : "shouldRetry",
      "value" : true
    }, {
      "name" : "triggerInterval",
      "value" : 2000
    }, {
      "name" : "retryAttempts",
      "value" : -1
    }, {
      "name" : "ludicrousMode",
      "value" : false
    }, {
      "name" : "ludicrousModeInputCount",
      "value" : false
    }, {
      "name" : "advancedErrorHandling",
      "value" : false
    }, {
      "name" : "notifyOnStates",
      "value" : [ "RUN_ERROR", "STOPPED", "FINISHED" ]
    }, {
      "name" : "emailIDs",
      "value" : [ ]
    }, {
      "name" : "constants",
      "value" : [ {
        "key" : "AdhocTableSchema",
        "value" : "ABC"
      }, {
        "key" : "AdhocTableName",
        "value" : "EFG"
      } ]
    }, {
      "name" : "errorRecordPolicy",
      "value" : "ORIGINAL_RECORD"
    }, {
      "name" : "workerCount",
      "value" : 0
    }, {
      "name" : "clusterSlaveMemory",
      "value" : 2048
    }, {
      "name" : "clusterSlaveJavaOpts",
      "value" : "-XX:+UseConcMarkSweepGC -XX:+UseParNewGC -Dlog4j.debug"
    }, {
      "name" : "clusterLauncherEnv",
      "value" : [ ]
    }, {
      "name" : "mesosDispatcherURL",
      "value" : null
    }, {
      "name" : "logLevel",
      "value" : "INFO"
    }, {
      "name" : "hdfsS3ConfDir",
      "value" : null
    }, {
      "name" : "rateLimit",
      "value" : 1000
    }, {
      "name" : "maxRunners",
      "value" : 1
    }, {
      "name" : "shouldCreateFailureSnapshot",
      "value" : true
    }, {
      "name" : "runnerIdleTIme",
      "value" : 60
    }, {
      "name" : "webhookConfigs",
      "value" : [ ]
    }, {
      "name" : "sparkConfigs",
      "value" : [ ]
    }, {
      "name" : "preprocessScript",
      "value" : "/*\nThe following script define a method\nthat increments an integer by 1 \nand registers it as a UDF with \nthe SparkSession, which can be accessed\nusing the variable named \"spark\":\ndef inc(i: Integer): Integer = {\n  i + 1\n}\nspark.udf.register (\"inc\", inc _)\n\n*/"
    }, {
      "name" : "clusterConfig.clusterType",
      "value" : "LOCAL"
    }, {
      "name" : "clusterConfig.sparkMasterUrl",
      "value" : "local[*]"
    }, {
      "name" : "clusterConfig.deployMode",
      "value" : "CLIENT"
    }, {
      "name" : "clusterConfig.hadoopUserName",
      "value" : null
    }, {
      "name" : "clusterConfig.sparkAppName",
      "value" : "${pipeline:title()}"
    }, {
      "name" : "clusterConfig.stagingDir",
      "value" : "/streamsets"
    }, {
      "name" : "clusterConfig.useYarnKerberosKeytab",
      "value" : false
    }, {
      "name" : "clusterConfig.yarnKerberosKeytabSource",
      "value" : "PROPERTIES_FILE"
    }, {
      "name" : "clusterConfig.yarnKerberosKeytab",
      "value" : null
    }, {
      "name" : "clusterConfig.yarnKerberosPrincipal",
      "value" : "name@DOMAIN"
    }, {
      "name" : "databricksConfig.baseUrl",
      "value" : null
    }, {
      "name" : "databricksConfig.credentialType",
      "value" : null
    }, {
      "name" : "databricksConfig.username",
      "value" : null
    }, {
      "name" : "databricksConfig.password",
      "value" : null
    }, {
      "name" : "databricksConfig.token",
      "value" : null
    }, {
      "name" : "databricksConfig.provisionNewCluster",
      "value" : true
    }, {
      "name" : "databricksConfig.clusterId",
      "value" : null
    }, {
      "name" : "databricksConfig.clusterConfig",
      "value" : "{\n    \"num_workers\": 8,\n    \"spark_version\": \"5.3.x-scala2.11\",\n    \"node_type_id\": \"i3.xlarge\"\n}"
    }, {
      "name" : "databricksConfig.terminateCluster",
      "value" : false
    }, {
      "name" : "livyConfig.baseUrl",
      "value" : "https://localhost:30443/gateway/default/livy/v1/"
    }, {
      "name" : "livyConfig.username",
      "value" : null
    }, {
      "name" : "livyConfig.password",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.userRegion",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.userRegionCustom",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.accessKey",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.secretKey",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.s3StagingUri",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.provisionNewCluster",
      "value" : false
    }, {
      "name" : "amazonEMRConfig.clusterId",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.clusterPrefix",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.terminateCluster",
      "value" : false
    }, {
      "name" : "amazonEMRConfig.loggingEnabled",
      "value" : true
    }, {
      "name" : "amazonEMRConfig.s3LogUri",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.enableEMRDebugging",
      "value" : true
    }, {
      "name" : "amazonEMRConfig.serviceRole",
      "value" : "EMR_DefaultRole"
    }, {
      "name" : "amazonEMRConfig.jobFlowRole",
      "value" : "EMR_EC2_DefaultRole"
    }, {
      "name" : "amazonEMRConfig.visibleToAllUsers",
      "value" : true
    }, {
      "name" : "amazonEMRConfig.ec2SubnetId",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.masterSecurityGroup",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.slaveSecurityGroup",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.instanceCount",
      "value" : 2
    }, {
      "name" : "amazonEMRConfig.masterInstanceType",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.masterInstanceTypeCustom",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.slaveInstanceType",
      "value" : null
    }, {
      "name" : "amazonEMRConfig.slaveInstanceTypeCustom",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.userRegion",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.userRegionCustom",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.s3StagingUri",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.clusterPrefix",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.clusterId",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.terminateCluster",
      "value" : false
    }, {
      "name" : "transformerEMRConfig.s3LogUri",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.serviceRole",
      "value" : "EMR_DefaultRole"
    }, {
      "name" : "transformerEMRConfig.jobFlowRole",
      "value" : "EMR_EC2_DefaultRole"
    }, {
      "name" : "transformerEMRConfig.visibleToAllUsers",
      "value" : true
    }, {
      "name" : "transformerEMRConfig.loggingEnabled",
      "value" : true
    }, {
      "name" : "transformerEMRConfig.ec2SubnetId",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.masterSecurityGroup",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.slaveSecurityGroup",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.instanceCount",
      "value" : 2
    }, {
      "name" : "transformerEMRConfig.masterInstanceType",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.slaveInstanceType",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.masterInstanceTypeCustom",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.slaveInstanceTypeCustom",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.accessKey",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.secretKey",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.provisionNewCluster",
      "value" : false
    }, {
      "name" : "transformerEMRConfig.useIAMRoles",
      "value" : false
    }, {
      "name" : "clusterConfig.callbackUrl",
      "value" : null
    }, {
      "name" : "googleCloudConfig.region",
      "value" : null
    }, {
      "name" : "googleCloudConfig.customRegion",
      "value" : null
    }, {
      "name" : "googleCloudConfig.gcsStagingUri",
      "value" : null
    }, {
      "name" : "googleCloudConfig.create",
      "value" : false
    }, {
      "name" : "googleCloudConfig.clusterPrefix",
      "value" : null
    }, {
      "name" : "googleCloudConfig.version",
      "value" : "1.4-ubuntu18"
    }, {
      "name" : "googleCloudConfig.masterType",
      "value" : null
    }, {
      "name" : "googleCloudConfig.workerType",
      "value" : null
    }, {
      "name" : "googleCloudConfig.networkType",
      "value" : null
    }, {
      "name" : "googleCloudConfig.network",
      "value" : null
    }, {
      "name" : "googleCloudConfig.subnet",
      "value" : null
    }, {
      "name" : "googleCloudConfig.tags",
      "value" : [ ]
    }, {
      "name" : "googleCloudConfig.workerCount",
      "value" : 2
    }, {
      "name" : "googleCloudConfig.clusterName",
      "value" : null
    }, {
      "name" : "googleCloudConfig.terminate",
      "value" : false
    }, {
      "name" : "googleCloudCredentialsConfig.projectId",
      "value" : null
    }, {
      "name" : "googleCloudCredentialsConfig.credentialsProvider",
      "value" : null
    }, {
      "name" : "googleCloudCredentialsConfig.path",
      "value" : null
    }, {
      "name" : "googleCloudCredentialsConfig.credentialsFileContent",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.emrVersion",
      "value" : null
    }, {
      "name" : "googleCloudConfig.region",
      "value" : null
    }, {
      "name" : "googleCloudConfig.customRegion",
      "value" : null
    }, {
      "name" : "googleCloudConfig.gcsStagingUri",
      "value" : null
    }, {
      "name" : "googleCloudConfig.create",
      "value" : false
    }, {
      "name" : "googleCloudConfig.clusterPrefix",
      "value" : null
    }, {
      "name" : "googleCloudConfig.version",
      "value" : "1.4-ubuntu18"
    }, {
      "name" : "googleCloudConfig.masterType",
      "value" : null
    }, {
      "name" : "googleCloudConfig.workerType",
      "value" : null
    }, {
      "name" : "googleCloudConfig.networkType",
      "value" : null
    }, {
      "name" : "googleCloudConfig.network",
      "value" : null
    }, {
      "name" : "googleCloudConfig.subnet",
      "value" : null
    }, {
      "name" : "googleCloudConfig.tags",
      "value" : [ ]
    }, {
      "name" : "googleCloudConfig.workerCount",
      "value" : 2
    }, {
      "name" : "googleCloudConfig.clusterName",
      "value" : null
    }, {
      "name" : "googleCloudConfig.terminate",
      "value" : false
    }, {
      "name" : "googleCloudCredentialsConfig.projectId",
      "value" : null
    }, {
      "name" : "googleCloudCredentialsConfig.credentialsProvider",
      "value" : null
    }, {
      "name" : "googleCloudCredentialsConfig.path",
      "value" : null
    }, {
      "name" : "googleCloudCredentialsConfig.credentialsFileContent",
      "value" : null
    }, {
      "name" : "badRecordsHandling",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_recordstolocalfilesystem_ToErrorLocalFSDTarget::1"
    }, {
      "name" : "statsAggregatorStage",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_StatsDpmDirectlyDTarget::1"
    }, {
      "name" : "startEventStage",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
    }, {
      "name" : "stopEventStage",
      "value" : "streamsets-datacollector-basic-lib::com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget::1"
    }, {
      "name" : "testOriginStage",
      "value" : "streamsets-datacollector-dev-lib::com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource::3"
    }, {
      "name" : "clusterConfig.yarnKerberosKeytabBase64Bytes",
      "value" : null
    }, {
      "name" : "transformerEMRConfig.serviceAccessSecurityGroup",
      "value" : null
    } ],
    "uiInfo" : {
      "displayMode" : "ADVANCED",
      "previewConfig" : {
        "previewSource" : "CONFIGURED_SOURCE",
        "batchSize" : "10",
        "timeout" : "60000",
        "writeToDestinations" : false,
        "executeLifecycleEvents" : false,
        "showHeader" : true,
        "showFieldType" : true,
        "rememberMe" : false
      }
    },
    "fragments" : [ ],
    "stages" : [ {
      "instanceName" : "JDBCMultitableConsumer_01",
      "library" : "streamsets-datacollector-jdbc-lib",
      "stageName" : "com_streamsets_pipeline_stage_origin_jdbc_table_TableJdbcDSource",
      "stageVersion" : "9",
      "configuration" : [ {
        "name" : "tableJdbcConfigBean.tableConfigs",
        "value" : [ {
          "isTablePatternListProvided" : true,
          "tablePattern" : "%",
          "tablePatternList" : [ "${AdhocTableName}" ],
          "overrideDefaultOffsetColumns" : false,
          "offsetColumns" : [ "" ],
          "offsetColumnToInitialOffsetValue" : [ ],
          "enableNonIncremental" : true,
          "partitioningMode" : "DISABLED",
          "partitionSize" : "1000000",
          "maxNumActivePartitions" : -1,
          "schema" : "${AdhocTableSchema}"
        } ]
      }, {
        "name" : "tableJdbcConfigBean.numberOfThreads",
        "value" : 1
      }, {
        "name" : "tableJdbcConfigBean.batchTableStrategy",
        "value" : "SWITCH_TABLES"
      }, {
        "name" : "tableJdbcConfigBean.numberOfBatchesFromRs",
        "value" : -1
      }, {
        "name" : "tableJdbcConfigBean.resultCacheSize",
        "value" : -1
      }, {
        "name" : "tableJdbcConfigBean.timeZoneID",
        "value" : "UTC"
      }, {
        "name" : "tableJdbcConfigBean.quoteChar",
        "value" : "NONE"
      }, {
        "name" : "tableJdbcConfigBean.tableOrderStrategy",
        "value" : "NONE"
      }, {
        "name" : "tableJdbcConfigBean.createJDBCHeaders",
        "value" : true
      }, {
        "name" : "tableJdbcConfigBean.unknownTypeAction",
        "value" : "STOP_PIPELINE"
      }, {
        "name" : "tableJdbcConfigBean.fetchSize",
        "value" : 1000
      }, {
        "name" : "commonSourceConfigBean.queriesPerSecond",
        "value" : "10"
      }, {
        "name" : "commonSourceConfigBean.maxBatchSize",
        "value" : 1000
      }, {
        "name" : "commonSourceConfigBean.maxClobSize",
        "value" : 1000
      }, {
        "name" : "commonSourceConfigBean.maxBlobSize",
        "value" : 1000
      }, {
        "name" : "commonSourceConfigBean.numSQLErrorRetries",
        "value" : 0
      }, {
        "name" : "commonSourceConfigBean.newTableQueryInterval",
        "value" : "${10 * SECONDS}"
      }, {
        "name" : "commonSourceConfigBean.noMoreDataEventDelay",
        "value" : 0
      }, {
        "name" : "commonSourceConfigBean.convertTimestampToString",
        "value" : false
      }, {
        "name" : "hikariConfigBean.connectionString",
        "value" : "jdbc:sqlserver://UORADMMSQL01OHI.MAXCORP.MAXIMUS:1433;databaseName=OH_PNM_INT01"
      }, {
        "name" : "hikariConfigBean.useCredentials",
        "value" : true
      }, {
        "name" : "hikariConfigBean.username",
        "value" : ""
      }, {
        "name" : "hikariConfigBean.password",
        "value" : ""
      }, {
        "name" : "hikariConfigBean.driverProperties",
        "value" : [ ]
      }, {
        "name" : "hikariConfigBean.driverClassName",
        "value" : null
      }, {
        "name" : "hikariConfigBean.connectionTestQuery",
        "value" : null
      }, {
        "name" : "hikariConfigBean.maximumPoolSize",
        "value" : 1
      }, {
        "name" : "hikariConfigBean.minIdle",
        "value" : 1
      }, {
        "name" : "hikariConfigBean.connectionTimeout",
        "value" : "${30 * SECONDS}"
      }, {
        "name" : "hikariConfigBean.idleTimeout",
        "value" : "${10 * MINUTES}"
      }, {
        "name" : "hikariConfigBean.maxLifetime",
        "value" : "${30 * MINUTES}"
      }, {
        "name" : "hikariConfigBean.autoCommit",
        "value" : false
      }, {
        "name" : "hikariConfigBean.readOnly",
        "value" : true
      }, {
        "name" : "hikariConfigBean.initialQuery",
        "value" : ""
      }, {
        "name" : "hikariConfigBean.transactionIsolation",
        "value" : "DEFAULT"
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      } ],
      "uiInfo" : {
        "yPos" : 25,
        "stageType" : "SOURCE",
        "icon" : "rdbms_multithreaded.png",
        "description" : "",
        "label" : "Source - Full Table (Parameter based)",
        "xPos" : 507.4337893431216,
        "displayMode" : "ADVANCED"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ "JDBCMultitableConsumer_01OutputLane16082458492490" ],
      "eventLanes" : [ "JDBCMultitableConsumer_01_EventLane" ],
      "services" : [ ]
    }, {
      "instanceName" : "PipelineFinisherExecutor_01",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_executor_finishpipeline_PipelineFinisherDExecutor",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "config.resetOffset",
        "value" : false
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ "${record:eventType() == 'no-more-data'}" ]
      } ],
      "uiInfo" : {
        "yPos" : 132.2242431640625,
        "stageType" : "EXECUTOR",
        "icon" : "finisher.png",
        "description" : "",
        "label" : "Pipeline Finisher Executor",
        "xPos" : 729.1320925657778,
        "displayMode" : "ADVANCED"
      },
      "inputLanes" : [ "JDBCMultitableConsumer_01_EventLane" ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "FieldMapper_01",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_processor_mapper_FieldMapperDProcessor",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "fieldMapperConfig.operateOn",
        "value" : "FIELD_VALUES"
      }, {
        "name" : "fieldMapperConfig.conditionalExpression",
        "value" : "${f:type() == 'CHAR' || f:type() == 'STRING'}"
      }, {
        "name" : "fieldMapperConfig.mappingExpression",
        "value" : "${str:trim(str:substring(f:value(),0,499))}"
      }, {
        "name" : "fieldMapperConfig.aggregationExpression",
        "value" : "${fields}"
      }, {
        "name" : "fieldMapperConfig.structureChangeAllowed",
        "value" : true
      }, {
        "name" : "fieldMapperConfig.appendListValues",
        "value" : false
      }, {
        "name" : "fieldMapperConfig.maintainOriginalPaths",
        "value" : false
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "yPos" : 24,
        "stageType" : "PROCESSOR",
        "icon" : "iconfinder_thefreeforty_map_1243687.png",
        "description" : "",
        "label" : "String Fields - Left 500 characters only",
        "xPos" : 728.3820925657778,
        "displayMode" : "BASIC"
      },
      "inputLanes" : [ "JDBCMultitableConsumer_01OutputLane16082458492490" ],
      "outputLanes" : [ "FieldMapper_01OutputLane16153586968630" ],
      "eventLanes" : [ ],
      "services" : [ ]
    }, {
      "instanceName" : "Snowflake_01",
      "library" : "streamsets-datacollector-snowflake-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_snowflake_SnowflakeDTarget",
      "stageVersion" : "5",
      "configuration" : [ {
        "name" : "config.data.upperCaseSchema",
        "value" : true
      }, {
        "name" : "config.data.rowFieldPath",
        "value" : "/"
      }, {
        "name" : "config.data.ignoreFields",
        "value" : ""
      }, {
        "name" : "config.data.nullValue",
        "value" : "\\N"
      }, {
        "name" : "config.data.dataDriftEnabled",
        "value" : true
      }, {
        "name" : "config.data.alwaysCreateVarcharColumns",
        "value" : false
      }, {
        "name" : "config.data.replicateDecimalColumns",
        "value" : true
      }, {
        "name" : "config.data.cdcData",
        "value" : false
      }, {
        "name" : "config.data.getPKInformationFromSnowflake",
        "value" : false
      }, {
        "name" : "config.data.tableKeyBeans",
        "value" : [ ]
      }, {
        "name" : "config.data.replaceNewLines",
        "value" : false
      }, {
        "name" : "config.data.newLineReplacement",
        "value" : "|"
      }, {
        "name" : "config.data.ignoreMissingFields",
        "value" : false
      }, {
        "name" : "config.data.ignoreFieldsWithInvalidTypes",
        "value" : false
      }, {
        "name" : "config.data.booleanDefault",
        "value" : "\\N"
      }, {
        "name" : "config.data.charDefault",
        "value" : "\\N"
      }, {
        "name" : "config.data.numberDefault",
        "value" : "\\N"
      }, {
        "name" : "config.data.doubleDefault",
        "value" : "\\N"
      }, {
        "name" : "config.data.dateDefault",
        "value" : "\\N"
      }, {
        "name" : "config.data.timestampNtzDefault",
        "value" : "\\N"
      }, {
        "name" : "config.data.timestampTzDefault",
        "value" : "\\N"
      }, {
        "name" : "config.data.timeDefault",
        "value" : "\\N"
      }, {
        "name" : "config.data.varcharDefault",
        "value" : "\\N"
      }, {
        "name" : "config.data.binaryDefault",
        "value" : "\\N"
      }, {
        "name" : "config.data.variantDefault",
        "value" : "\\N"
      }, {
        "name" : "config.data.columnSeparator",
        "value" : ","
      }, {
        "name" : "config.data.quotingMode",
        "value" : "QUOTED"
      }, {
        "name" : "config.data.quoteChar",
        "value" : "'"
      }, {
        "name" : "config.data.escapeChar",
        "value" : "\\"
      }, {
        "name" : "config.data.trimSpaces",
        "value" : true
      }, {
        "name" : "config.snowflake.snowflakeRegion",
        "value" : "US_EAST_1"
      }, {
        "name" : "config.snowflake.customSnowflakeRegion",
        "value" : null
      }, {
        "name" : "config.snowflake.customUrl",
        "value" : ""
      }, {
        "name" : "config.snowflake.account",
        "value" : ""
      }, {
        "name" : "config.snowflake.user",
        "value" : ""
      }, {
        "name" : "config.snowflake.password",
        "value" : ""
      }, {
        "name" : "config.snowflake.warehouse",
        "value" : "OHIO_PROVIDER_DP4BI_DEV_WH"
      }, {
        "name" : "config.snowflake.database",
        "value" : "OHIO_PROVIDER_DP4BI_DEV_DB"
      }, {
        "name" : "config.snowflake.schema",
        "value" : "OHPNM_DP4BI_DEV_ADHOC"
      }, {
        "name" : "config.snowflake.table",
        "value" : "${record:attribute('jdbc.tables')}"
      }, {
        "name" : "config.snowflake.usePipe",
        "value" : false
      }, {
        "name" : "config.snowflake.tableAutoCreate",
        "value" : true
      }, {
        "name" : "config.snowflake.connectionPoolSize",
        "value" : 0
      }, {
        "name" : "config.snowflake.connectionProperties",
        "value" : [ { } ]
      }, {
        "name" : "config.snowflake.fileFormat",
        "value" : null
      }, {
        "name" : "config.snowflake.stageDatabase",
        "value" : "OHIO_PROVIDER_DP4BI_DEV_DB"
      }, {
        "name" : "config.snowflake.stageSchema",
        "value" : "OHPNM_DP4BI_DEV"
      }, {
        "name" : "config.snowflake.stage",
        "value" : "OHPNM_DP4BI_DEV_S3_SSDB_CDC"
      }, {
        "name" : "config.snowflake.purgeDataFile",
        "value" : true
      }, {
        "name" : "config.snowflake.pipe",
        "value" : null
      }, {
        "name" : "config.snowflake.privateKeyPem",
        "value" : null
      }, {
        "name" : "config.snowflake.privateKeyPassword",
        "value" : null
      }, {
        "name" : "config.snowflake.publicKeyPem",
        "value" : null
      }, {
        "name" : "config.snowflake.useCustomSnowflakeEndpoint",
        "value" : false
      }, {
        "name" : "config.snowflake.customSnowflakeScheme",
        "value" : "HTTPS"
      }, {
        "name" : "config.snowflake.customSnowflakeHost",
        "value" : "[SNOWFLAKE ACCOUNT].snowflakecomputing.com"
      }, {
        "name" : "config.snowflake.customSnowflakePort",
        "value" : 443
      }, {
        "name" : "config.stageLocation",
        "value" : "AWS_S3"
      }, {
        "name" : "config.s3Stage.filePrefix",
        "value" : "sdc"
      }, {
        "name" : "config.s3Stage.compressed",
        "value" : true
      }, {
        "name" : "config.s3Stage.useIAMRoles",
        "value" : false
      }, {
        "name" : "config.s3Stage.accessKey",
        "value" : ""
      }, {
        "name" : "config.s3Stage.secretKey",
        "value" : ""
      }, {
        "name" : "config.s3Stage.connectionTimeoutSecs",
        "value" : 10
      }, {
        "name" : "config.s3Stage.socketTimeoutSecs",
        "value" : 50
      }, {
        "name" : "config.s3Stage.maxRetryCount",
        "value" : 3
      }, {
        "name" : "config.s3Stage.threads",
        "value" : 3
      }, {
        "name" : "config.s3Stage.minimumUploadPartSize",
        "value" : 1
      }, {
        "name" : "config.s3Stage.multipartUploadThreshold",
        "value" : 1
      }, {
        "name" : "config.s3Stage.proxyEnabled",
        "value" : false
      }, {
        "name" : "config.s3Stage.proxyHost",
        "value" : null
      }, {
        "name" : "config.s3Stage.proxyPort",
        "value" : 8080
      }, {
        "name" : "config.s3Stage.proxyAuthenticationEnabled",
        "value" : false
      }, {
        "name" : "config.s3Stage.proxyUser",
        "value" : null
      }, {
        "name" : "config.s3Stage.proxyPassword",
        "value" : null
      }, {
        "name" : "config.s3Stage.ssEncryption",
        "value" : "NONE"
      }, {
        "name" : "config.s3Stage.kmsKeyId",
        "value" : null
      }, {
        "name" : "config.s3Stage.encryptionContext",
        "value" : [ { } ]
      }, {
        "name" : "config.azureStage.filePrefix",
        "value" : "sdc"
      }, {
        "name" : "config.azureStage.compressed",
        "value" : true
      }, {
        "name" : "config.azureStage.authenticationType",
        "value" : "ACCOUNT_NAME_KEY"
      }, {
        "name" : "config.azureStage.accountName",
        "value" : null
      }, {
        "name" : "config.azureStage.accountKey",
        "value" : null
      }, {
        "name" : "config.azureStage.sasToken",
        "value" : null
      }, {
        "name" : "config.azureStage.useCustomBlobServiceUrl",
        "value" : false
      }, {
        "name" : "config.azureStage.blobServiceUrl",
        "value" : "https://[AZURE STORAGE ACCOUNT].blob.core.windows.net"
      }, {
        "name" : "config.azureStage.encryption",
        "value" : "DEFAULT"
      }, {
        "name" : "config.snowflakeInternalStage.filePrefix",
        "value" : "sdc"
      }, {
        "name" : "config.snowflakeInternalStage.compressed",
        "value" : true
      }, {
        "name" : "config.snowflakeInternalStage.parallelUploads",
        "value" : 1
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      }, {
        "name" : "stageRequiredFields",
        "value" : [ ]
      }, {
        "name" : "stageRecordPreconditions",
        "value" : [ ]
      } ],
      "uiInfo" : {
        "yPos" : 24.792430877685547,
        "stageType" : "TARGET",
        "icon" : "snowflake.png",
        "description" : "",
        "label" : "into Snowflake ADHOC schema",
        "xPos" : 942.0398684446841,
        "displayMode" : "ADVANCED"
      },
      "inputLanes" : [ "FieldMapper_01OutputLane16153586968630" ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    } ],
    "errorStage" : {
      "instanceName" : "WritetoFile_ErrorStage",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_recordstolocalfilesystem_ToErrorLocalFSDTarget",
      "stageVersion" : "1",
      "configuration" : [ {
        "name" : "directory",
        "value" : "/home/streamsets/marsdb/err/"
      }, {
        "name" : "uniquePrefix",
        "value" : "err"
      }, {
        "name" : "rotationIntervalSecs",
        "value" : "10"
      }, {
        "name" : "maxFileSizeMbs",
        "value" : 512
      } ],
      "uiInfo" : {
        "yPos" : 50,
        "stageType" : "TARGET",
        "icon" : "",
        "description" : "",
        "label" : "Error Records - Write to File",
        "xPos" : 2388.3853884642153
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    },
    "info" : {
      "pipelineId" : "DP4BIDEV6a664995-c129-437a-ba78-22d50cbb0109",
      "title" : "DP4BI_DEV_OHPNM_CDC_ADHOC_TABLE_LOAD",
      "description" : "This pipeline extracts the specified tables in full.",
      "created" : 1612129722000,
      "lastModified" : 1616038566812,
      "creator" : "sitasathiraju@maximus.com",
      "lastModifier" : "sitasathiraju@maximus.com",
      "lastRev" : "0",
      "uuid" : "0c400acb-900f-456d-9632-10c11345062c",
      "valid" : true,
      "metadata" : {
        "labels" : [ "OH_PNM_INT01" ]
      },
      "name" : "DP4BIDEV6a664995-c129-437a-ba78-22d50cbb0109",
      "sdcVersion" : "3.18.1",
      "sdcId" : "33833568-5ee5-11ea-b556-5134938488f9"
    },
    "metadata" : {
      "labels" : [ "OH_PNM_INT01" ]
    },
    "statsAggregatorStage" : {
      "instanceName" : "statsAggregatorStageInstance",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_StatsDpmDirectlyDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "stageType" : "TARGET",
        "label" : "Stats Aggregator -Write Directly to Control Hub - statistics are not aggregated across Data Collectors"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    },
    "startEventStages" : [ {
      "instanceName" : "Discard_StartEventStage",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "yPos" : 50,
        "stageType" : "TARGET",
        "icon" : "",
        "description" : "",
        "label" : "Start Event - Discard",
        "xPos" : 280
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    } ],
    "stopEventStages" : [ {
      "instanceName" : "Discard_StopEventStage",
      "library" : "streamsets-datacollector-basic-lib",
      "stageName" : "com_streamsets_pipeline_stage_destination_devnull_ToErrorNullDTarget",
      "stageVersion" : "1",
      "configuration" : [ ],
      "uiInfo" : {
        "yPos" : 50,
        "stageType" : "TARGET",
        "icon" : "",
        "description" : "",
        "label" : "Stop Event - Discard",
        "xPos" : 280
      },
      "inputLanes" : [ ],
      "outputLanes" : [ ],
      "eventLanes" : [ ],
      "services" : [ ]
    } ],
    "testOriginStage" : {
      "instanceName" : "com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource_TestOriginStage",
      "library" : "streamsets-datacollector-dev-lib",
      "stageName" : "com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource",
      "stageVersion" : "3",
      "configuration" : [ {
        "name" : "rawData",
        "value" : "{\n  \"f1\": \"abc\",\n  \"f2\": \"xyz\",\n  \"f3\": \"lmn\"\n}"
      }, {
        "name" : "stopAfterFirstBatch",
        "value" : false
      }, {
        "name" : "eventData",
        "value" : null
      }, {
        "name" : "stageOnRecordError",
        "value" : "TO_ERROR"
      } ],
      "uiInfo" : {
        "stageType" : "SOURCE",
        "label" : "Test Origin - Dev Raw Data Source"
      },
      "inputLanes" : [ ],
      "outputLanes" : [ "com_streamsets_pipeline_stage_devtest_rawdata_RawDataDSource_TestOriginStageOutputLane1" ],
      "eventLanes" : [ ],
      "services" : [ {
        "service" : "com.streamsets.pipeline.api.service.dataformats.DataFormatParserService",
        "serviceVersion" : 2,
        "configuration" : [ {
          "name" : "displayFormats",
          "value" : "DELIMITED,JSON,LOG,SDC_JSON,TEXT,XML"
        }, {
          "name" : "dataFormat",
          "value" : "JSON"
        }, {
          "name" : "dataFormatConfig.compression",
          "value" : "NONE"
        }, {
          "name" : "dataFormatConfig.filePatternInArchive",
          "value" : "*"
        }, {
          "name" : "dataFormatConfig.charset",
          "value" : "UTF-8"
        }, {
          "name" : "dataFormatConfig.removeCtrlChars",
          "value" : false
        }, {
          "name" : "dataFormatConfig.textMaxLineLen",
          "value" : 1024
        }, {
          "name" : "dataFormatConfig.useCustomDelimiter",
          "value" : false
        }, {
          "name" : "dataFormatConfig.customDelimiter",
          "value" : "\\r\\n"
        }, {
          "name" : "dataFormatConfig.includeCustomDelimiterInTheText",
          "value" : false
        }, {
          "name" : "dataFormatConfig.jsonContent",
          "value" : "MULTIPLE_OBJECTS"
        }, {
          "name" : "dataFormatConfig.jsonMaxObjectLen",
          "value" : 4096
        }, {
          "name" : "dataFormatConfig.csvFileFormat",
          "value" : "CSV"
        }, {
          "name" : "dataFormatConfig.csvHeader",
          "value" : "NO_HEADER"
        }, {
          "name" : "dataFormatConfig.csvAllowExtraColumns",
          "value" : false
        }, {
          "name" : "dataFormatConfig.csvExtraColumnPrefix",
          "value" : "_extra_"
        }, {
          "name" : "dataFormatConfig.csvMaxObjectLen",
          "value" : 1024
        }, {
          "name" : "dataFormatConfig.csvCustomDelimiter",
          "value" : "|"
        }, {
          "name" : "dataFormatConfig.multiCharacterFieldDelimiter",
          "value" : "||"
        }, {
          "name" : "dataFormatConfig.multiCharacterLineDelimiter",
          "value" : "${str:unescapeJava('\\\\n')}"
        }, {
          "name" : "dataFormatConfig.csvCustomEscape",
          "value" : "\\"
        }, {
          "name" : "dataFormatConfig.csvCustomQuote",
          "value" : "\""
        }, {
          "name" : "dataFormatConfig.csvEnableComments",
          "value" : false
        }, {
          "name" : "dataFormatConfig.csvCommentMarker",
          "value" : "#"
        }, {
          "name" : "dataFormatConfig.csvIgnoreEmptyLines",
          "value" : false
        }, {
          "name" : "dataFormatConfig.csvRecordType",
          "value" : "LIST_MAP"
        }, {
          "name" : "dataFormatConfig.csvSkipStartLines",
          "value" : 0
        }, {
          "name" : "dataFormatConfig.parseNull",
          "value" : false
        }, {
          "name" : "dataFormatConfig.nullConstant",
          "value" : "\\\\N"
        }, {
          "name" : "dataFormatConfig.xmlRecordElement",
          "value" : null
        }, {
          "name" : "dataFormatConfig.includeFieldXpathAttributes",
          "value" : false
        }, {
          "name" : "dataFormatConfig.xPathNamespaceContext",
          "value" : [ ]
        }, {
          "name" : "dataFormatConfig.outputFieldAttributes",
          "value" : false
        }, {
          "name" : "dataFormatConfig.xmlMaxObjectLen",
          "value" : 4096
        }, {
          "name" : "dataFormatConfig.logMode",
          "value" : "COMMON_LOG_FORMAT"
        }, {
          "name" : "dataFormatConfig.logMaxObjectLen",
          "value" : 1024
        }, {
          "name" : "dataFormatConfig.retainOriginalLine",
          "value" : false
        }, {
          "name" : "dataFormatConfig.customLogFormat",
          "value" : "%h %l %u %t \"%r\" %>s %b"
        }, {
          "name" : "dataFormatConfig.regex",
          "value" : "^(\\S+) (\\S+) (\\S+) \\[([\\w:/]+\\s[+\\-]\\d{4})\\] \"(\\S+) (\\S+) (\\S+)\" (\\d{3}) (\\d+)"
        }, {
          "name" : "dataFormatConfig.fieldPathsToGroupName",
          "value" : [ {
            "fieldPath" : "/",
            "group" : 1
          } ]
        }, {
          "name" : "dataFormatConfig.grokPatternDefinition",
          "value" : null
        }, {
          "name" : "dataFormatConfig.grokPattern",
          "value" : "%{COMMONAPACHELOG}"
        }, {
          "name" : "dataFormatConfig.onParseError",
          "value" : "ERROR"
        }, {
          "name" : "dataFormatConfig.maxStackTraceLines",
          "value" : 50
        }, {
          "name" : "dataFormatConfig.enableLog4jCustomLogFormat",
          "value" : false
        }, {
          "name" : "dataFormatConfig.log4jCustomLogFormat",
          "value" : "%r [%t] %-5p %c %x - %m%n"
        }, {
          "name" : "dataFormatConfig.avroSchemaSource",
          "value" : null
        }, {
          "name" : "dataFormatConfig.avroSchema",
          "value" : null
        }, {
          "name" : "dataFormatConfig.schemaRegistryUrls",
          "value" : [ ]
        }, {
          "name" : "dataFormatConfig.basicAuth",
          "value" : null
        }, {
          "name" : "dataFormatConfig.schemaLookupMode",
          "value" : "SUBJECT"
        }, {
          "name" : "dataFormatConfig.subject",
          "value" : null
        }, {
          "name" : "dataFormatConfig.schemaId",
          "value" : null
        }, {
          "name" : "dataFormatConfig.avroSkipUnionIndex",
          "value" : false
        }, {
          "name" : "dataFormatConfig.protoDescriptorFile",
          "value" : null
        }, {
          "name" : "dataFormatConfig.messageType",
          "value" : null
        }, {
          "name" : "dataFormatConfig.isDelimited",
          "value" : false
        }, {
          "name" : "dataFormatConfig.binaryMaxObjectLen",
          "value" : 1024
        }, {
          "name" : "dataFormatConfig.datagramMode",
          "value" : "SYSLOG"
        }, {
          "name" : "dataFormatConfig.typesDbPath",
          "value" : null
        }, {
          "name" : "dataFormatConfig.convertTime",
          "value" : false
        }, {
          "name" : "dataFormatConfig.excludeInterval",
          "value" : false
        }, {
          "name" : "dataFormatConfig.authFilePath",
          "value" : null
        }, {
          "name" : "dataFormatConfig.netflowOutputValuesMode",
          "value" : "RAW_AND_INTERPRETED"
        }, {
          "name" : "dataFormatConfig.maxTemplateCacheSize",
          "value" : -1
        }, {
          "name" : "dataFormatConfig.templateCacheTimeoutMs",
          "value" : -1
        }, {
          "name" : "dataFormatConfig.netflowOutputValuesModeDatagram",
          "value" : "RAW_AND_INTERPRETED"
        }, {
          "name" : "dataFormatConfig.maxTemplateCacheSizeDatagram",
          "value" : -1
        }, {
          "name" : "dataFormatConfig.templateCacheTimeoutMsDatagram",
          "value" : -1
        }, {
          "name" : "dataFormatConfig.wholeFileMaxObjectLen",
          "value" : 8192
        }, {
          "name" : "dataFormatConfig.rateLimit",
          "value" : "-1"
        }, {
          "name" : "dataFormatConfig.verifyChecksum",
          "value" : false
        }, {
          "name" : "dataFormatConfig.excelHeader",
          "value" : null
        }, {
          "name" : "dataFormatConfig.excelSkipCellsWithNoHeader",
          "value" : false
        }, {
          "name" : "dataFormatConfig.excelReadAllSheets",
          "value" : false
        }, {
          "name" : "dataFormatConfig.excelSheetNames",
          "value" : [ ]
        }, {
          "name" : "dataFormatConfig.preserveRootElement",
          "value" : false
        } ]
      } ]
    },
    "valid" : true,
    "issues" : {
      "pipelineIssues" : [ ],
      "stageIssues" : { },
      "issueCount" : 0
    },
    "previewable" : true
  },
  "pipelineRules" : {
    "schemaVersion" : 3,
    "version" : 2,
    "metricsRuleDefinitions" : [ {
      "id" : "badRecordsAlertID",
      "alertText" : "High incidence of Error Records",
      "metricId" : "pipeline.batchErrorRecords.counter",
      "metricType" : "COUNTER",
      "metricElement" : "COUNTER_COUNT",
      "condition" : "${value() > 100}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1593008857755,
      "valid" : true
    }, {
      "id" : "stageErrorAlertID",
      "alertText" : "High incidence of Stage Errors",
      "metricId" : "pipeline.batchErrorMessages.counter",
      "metricType" : "COUNTER",
      "metricElement" : "COUNTER_COUNT",
      "condition" : "${value() > 100}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1593008857755,
      "valid" : true
    }, {
      "id" : "idleGaugeID",
      "alertText" : "Pipeline is Idle",
      "metricId" : "RuntimeStatsGauge.gauge",
      "metricType" : "GAUGE",
      "metricElement" : "TIME_OF_LAST_RECEIVED_RECORD",
      "condition" : "${time:now() - value() > 120000}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1593008857755,
      "valid" : true
    }, {
      "id" : "batchTimeAlertID",
      "alertText" : "Batch taking more time to process",
      "metricId" : "RuntimeStatsGauge.gauge",
      "metricType" : "GAUGE",
      "metricElement" : "CURRENT_BATCH_AGE",
      "condition" : "${value() > 200}",
      "sendEmail" : false,
      "enabled" : false,
      "timestamp" : 1593008857755,
      "valid" : true
    } ],
    "dataRuleDefinitions" : [ ],
    "driftRuleDefinitions" : [ ],
    "uuid" : "f512b837-80e7-49c2-a4d6-b8b8b6d5fce9",
    "configuration" : [ {
      "name" : "emailIDs",
      "value" : [ ]
    }, {
      "name" : "webhookConfigs",
      "value" : [ ]
    } ],
    "ruleIssues" : [ ],
    "configIssues" : [ ]
  },
  "libraryDefinitions" : null
}