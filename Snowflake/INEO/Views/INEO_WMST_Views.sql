CREATE OR REPLACE VIEW ineo_d_wmst_qa_by_region_history_sv AS
SELECT *
FROM ineo_wmst_qa_by_region_history;

CREATE OR REPLACE VIEW ineo_d_wmst_qa_by_region_sv AS
SELECT d.*
FROM ineo_wmst_qa_by_region_history d
  JOIN file_load_log l ON UPPER(d.filename) = UPPER(l.filename)
QUALIFY ROW_NUMBER() OVER(PARTITION BY region_name,year ORDER BY l.file_date DESC,wmst_qa_by_region_id DESC) = 1;

CREATE OR REPLACE VIEW ineo_d_wmst_metric_details_history_sv AS
SELECT * 
FROM ineo_wmst_metric_details_history;

CREATE OR REPLACE VIEW ineo_d_wmst_metric_details_sv AS
SELECT d.* 
FROM ineo_wmst_metric_details_history d
  JOIN file_load_log l ON UPPER(d.filename) = UPPER(l.filename)
QUALIFY ROW_NUMBER() OVER(PARTITION BY record_id ORDER BY l.file_date DESC,wmstmetricdetails_id DESC) = 1;

CREATE OR REPLACE VIEW ineo_d_wmst_user_cumulative_reviews_history_sv AS
SELECT * 
FROM ineo_wmst_user_cumulative_reviews_history;

CREATE OR REPLACE VIEW ineo_d_wmst_user_qa_scores_history_sv AS
SELECT *
FROM ineo_wmst_user_qa_scores_history;

CREATE OR REPLACE VIEW ineo_d_wmst_user_qa_scores_sv AS
SELECT d.*
FROM ineo_wmst_user_qa_scores_history  d
  JOIN file_load_log l ON UPPER(d.filename) = UPPER(l.filename)
QUALIFY ROW_NUMBER() OVER(PARTITION BY record_id ORDER BY l.file_date DESC,wmst_user_qa_scores_id DESC) = 1;

CREATE OR REPLACE VIEW ineo_d_wmst_monthly_metric_totals_history_sv AS
SELECT *
FROM ineo_wmst_monthly_metric_totals_history;


create or replace view INEO.INEO_D_WMST_USER_QA_SCORES_HISTORY_UNIQUE_SV(
	WMST_USER_QA_SCORES_ID,
	METRIC,
	FILENAME,
	FILE_DATE,
	RECORD_ID,
	TASK_NAME,
	REVIEW_COMPLETION_DATE,
	TOTAL_POSSIBLE_EARNED,
	MAXIMUM_POSSIBLE_POINTS,
	TOTAL_PERCENTAGE_SCORE,
	E2E_DEDUCTION,
	FINAL_PERCENTAGE_SCORE,    
	SF_CREATE_TS,
	SF_UPDATE_TS,
    FOR_MONTH_OF
) COPY GRANTS as
SELECT H.WMST_USER_QA_SCORES_ID AS WMST_USER_QA_SCORES_ID,
METRIC AS METRIC,
FILENAME AS FILENAME,
TO_DATE(SUBSTR(REPLACE("FILENAME",'WMST0114_User_QA_Scores_',''),1,8),'MMDDYYYY') AS FILE_DATE,
H.RECORD_ID AS RECORD_ID,
TASK_NAME AS TASK_NAME,
H.REVIEW_COMPLETION_DATE AS REVIEW_COMPLETION_DATE,
TOTAL_POSSIBLE_EARNED AS TOTAL_POSSIBLE_EARNED,
MAXIMUM_POSSIBLE_POINTS AS MAXIMUM_POSSIBLE_POINTS,
TOTAL_PERCENTAGE_SCORE AS TOTAL_PERCENTAGE_SCORE,
E2E_DEDUCTION AS E2E_DEDUCTION,
H.FINAL_PERCENTAGE_SCORE AS FINAL_PERCENTAGE_SCORE,
SF_CREATE_TS AS SF_CREATE_TS,
SF_UPDATE_TS AS SF_UPDATE_TS,
FOR_MONTH_OF
FROM  INEO.INEO_WMST_USER_QA_SCORES_HISTORY H
JOIN (SELECT WMST_USER_QA_SCORES_ID,
TO_DATE(SUBSTR(REPLACE("FILENAME",'WMST0114_User_QA_Scores_',''),1,8),'MMDDYYYY') AS FILE_DATE,
RECORD_ID,
METRIC
REVIEW_COMPLETION_DATE,
FINAL_PERCENTAGE_SCORE,
DATE_FROM_PARTS( 2023, 01, 01 ),
RANK() OVER  (PARTITION BY RECORD_ID ORDER BY TO_DATE(SUBSTR(REPLACE("FILENAME",'WMST0114_User_QA_Scores_',''),1,8),'MMDDYYYY')  DESC)  AS RANK_ROW
FROM   INEO.INEO_WMST_USER_QA_SCORES_HISTORY H
WHERE H.FINAL_PERCENTAGE_SCORE IS NOT NULL and REVIEW_COMPLETION_DATE IS NOT NULL
AND REVIEW_COMPLETION_DATE>=DATE_FROM_PARTS( 2023, 01, 01 )
) R
ON H.RECORD_ID=R.RECORD_ID
AND H.WMST_USER_QA_SCORES_ID=R.WMST_USER_QA_SCORES_ID
AND RANK_ROW=1
WHERE H.FINAL_PERCENTAGE_SCORE IS NOT NULL
AND H.REVIEW_COMPLETION_DATE>=DATE_FROM_PARTS( YEAR(Current_date()), 01, 01 );
