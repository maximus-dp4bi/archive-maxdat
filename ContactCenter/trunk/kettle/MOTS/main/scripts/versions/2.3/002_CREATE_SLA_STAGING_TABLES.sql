

CREATE TABLE S_SLA_DEFINITION 
    ( 
     S_SLA_DEFINITION_ID NUMBER (19)  NOT NULL , 
     SLA_NAME VARCHAR2 (50) , 
     SLA_LABEL VARCHAR2 (100) , 
     CATEGORY VARCHAR2 (50) , 
     FUNCTIONAL_AREA VARCHAR2 (50) , 
     REFERENCE_VALUE_DISPLAY_FORMAT VARCHAR2 (50) , 
     RECORD_EFF_DT DATE , 
     RECORD_END_DT DATE , 
     CREATE_DATE DATE , 
     LAST_MODIFIED_DATE DATE 
    ) 
    LOGGING 
;



ALTER TABLE S_SLA_DEFINITION 
    ADD CONSTRAINT S_SLA_DEFINITION_PK PRIMARY KEY ( S_SLA_DEFINITION_ID ) ;



CREATE TABLE S_SLA_PROJECT 
    ( 
     S_SLA_PROJECT_ID NUMBER (19)  NOT NULL , 
     PROJECT_NAME VARCHAR2 (100)  NOT NULL , 
     PROGRAM_NAME VARCHAR2 (100)  NOT NULL , 
     GEOGRAPHY_NAME VARCHAR2 (100)  NOT NULL , 
     SLA_NAME VARCHAR2 (100)  NOT NULL , 
     FREQUENCY VARCHAR2 (50) , 
     PROJECT_SLA_LABEL VARCHAR2 (255) , 
     REFERENCE_VALUE_CALC_DESC VARCHAR2 (255) , 
     REFERENCE_VALUE_DESC VARCHAR2 (255) , 
     PRIMARY_METRIC_NAME VARCHAR2 (50) , 
     PRIMARY_METRIC_THRESHOLD_LOW NUMBER (19,6) , 
     PRIMARY_METRIC_THRESHOLD_HIGH NUMBER (19,6) , 
     SECONDARY_METRIC_NAME VARCHAR2 (50) , 
     SECONDRY_METRIC_THRESHOLD_LOW NUMBER (19,6) , 
     SECONDRY_METRIC_THRESHOLD_HIGH NUMBER (19,6) , 
     SORT_ORDER NUMBER (6) , 
     SORT_ID VARCHAR2 (50) , 
     START_DATE DATE , 
     END_DATE DATE , 
     CREATE_DATE DATE , 
     LAST_MODIFIED_DATE DATE 
    ) 
    LOGGING 
;



ALTER TABLE S_SLA_PROJECT 
    ADD CONSTRAINT S_SLA_PROJECT_PK PRIMARY KEY ( S_SLA_PROJECT_ID ) ;

CREATE TABLE S_SLA_TEMPLATE 
    ( 
     S_SLA_TEMPLATE_ID NUMBER (19)  NOT NULL , 
     FILE_NAME VARCHAR2 (255) , 
     CREATE_DATE DATE , 
     PROGRAM_NAME VARCHAR2 (50) , 
     PROJECT_NAME VARCHAR2 (50) , 
     GEOGRAPHY_NAME VARCHAR2 (100) , 
     REPORTING_PERIOD DATE , 
     PROJECT_SLA_LABEL VARCHAR2 (255) , 
     REFERENCE_VALUE NUMBER (19,2) , 
     COMPLIANCE_RESULT VARCHAR2 (50) , 
     SLA_COMPLIANCE_COMMENTS VARCHAR2 (4000) , 
     IS_PROCESSED NVARCHAR2 (1) 
    ) 
    LOGGING 
;



ALTER TABLE S_SLA_TEMPLATE 
    ADD CONSTRAINT S_SLA_TEMPLATE_PK PRIMARY KEY ( S_SLA_TEMPLATE_ID ) ;

ALTER TABLE S_SLA_PROJECT 
    ADD CONSTRAINT S_SLA_PROJECT__UN UNIQUE ( PROJECT_NAME , PROGRAM_NAME , GEOGRAPHY_NAME , SORT_ID ) ;



CREATE SEQUENCE SEQ_S_SLA_DEFINITION 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_S_SLA_PROJECT 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_S_SLA_TEMPLATE 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999 
    MINVALUE 1 
    CACHE 20 
;


CREATE OR REPLACE TRIGGER BIU_S_SLA_DEFINITION 
    BEFORE INSERT OR UPDATE ON S_SLA_DEFINITION 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.S_SLA_DEFINITION_ID IS NULL THEN 
	SELECT SEQ_S_SLA_DEFINITION.NEXTVAL INTO :NEW.S_SLA_DEFINITION_ID FROM DUAL;
	SELECT SYSDATE INTO :NEW.CREATE_DATE FROM DUAL;
END IF;

SELECT SYSDATE INTO :NEW.LAST_MODIFIED_DATE FROM DUAL;

END; 
/


ALTER TRIGGER BIU_S_SLA_DEFINITION ENABLE ;


CREATE OR REPLACE TRIGGER BIU_S_SLA_PROJECT 
    BEFORE INSERT OR UPDATE ON S_SLA_PROJECT 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.S_SLA_PROJECT_ID IS NULL THEN 
	SELECT SEQ_S_SLA_PROJECT.NEXTVAL INTO :NEW.S_SLA_PROJECT_ID FROM DUAL;
	SELECT SYSDATE INTO :NEW.CREATE_DATE FROM DUAL;
END IF;

SELECT SYSDATE INTO :NEW.LAST_MODIFIED_DATE FROM DUAL;

END; 
/

ALTER TRIGGER BIU_S_SLA_PROJECT ENABLE; 


CREATE OR REPLACE TRIGGER BIU_S_SLA_TEMPLATE 
    BEFORE INSERT OR UPDATE ON S_SLA_TEMPLATE 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.S_SLA_TEMPLATE_ID IS NULL THEN 
          SELECT SEQ_S_SLA_TEMPLATE.NEXTVAL INTO :NEW.S_SLA_TEMPLATE_ID FROM DUAL;
END IF;
END; 
/

ALTER TRIGGER BIU_S_SLA_TEMPLATE ENABLE; 



INSERT INTO CC_L_PATCH_LOG ( PATCH_VERSION , SCRIPT_SEQUENCE , SCRIPT_NAME) 
VALUES ('2.3','002','002_CREATE_SLA_STAGING_TABLES');

COMMIT;