-- Generated by Oracle SQL Developer Data Modeler 3.1.4.710
--   at:        2013-12-31 14:17:19 EST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE TABLE CC_D_ACTIVITY_TYPE 
    ( 
     D_ACTIVITY_TYPE_ID NUMBER (19)  NOT NULL , 
     D_PROJECT_ID NUMBER (19)  NOT NULL , 
     ACTIVITY_TYPE_NAME VARCHAR2 (40)  NOT NULL , 
     ACTIVITY_TYPE_DESC VARCHAR2 (255)  NOT NULL , 
     ACTIVITY_TYPE_CATEGORY VARCHAR2 (50) DEFAULT 'Unknown'  NOT NULL , 
     IS_PAID_FLAG CHAR (1)  NOT NULL , 
     IS_AVAILABLE_FLAG CHAR (1) , 
     IS_READY_FLAG CHAR (1) , 
     IS_ABSENCE_FLAG CHAR (1) , 
     VERSION NUMBER (10)  NOT NULL , 
     RECORD_EFF_DT DATE  NOT NULL , 
     RECORD_END_DT DATE  NOT NULL 
    ) 
    LOGGING 
;


CREATE UNIQUE INDEX CC_D_AVAILABILITY_TYPE__IDX ON CC_D_ACTIVITY_TYPE 
    ( 
     D_ACTIVITY_TYPE_ID ASC 
    ) 
    LOGGING 
;

ALTER TABLE CC_D_ACTIVITY_TYPE 
    ADD CONSTRAINT CC_D_AVAILABILITY_TYPE_PK PRIMARY KEY ( D_ACTIVITY_TYPE_ID ) ;


ALTER TABLE CC_D_ACTIVITY_TYPE 
    ADD CONSTRAINT CC_D_ACTIVITY_TYPE__UN UNIQUE ( ACTIVITY_TYPE_NAME , RECORD_EFF_DT , D_PROJECT_ID ) ;



CREATE TABLE CC_D_AGENT 
    ( 
     D_AGENT_ID NUMBER (19)  NOT NULL , 
     D_PROJECT_ID NUMBER (19)  NOT NULL , 
     LOGIN_ID NVARCHAR2 (100)  NOT NULL , 
     FIRST_NAME VARCHAR2 (50)  NOT NULL , 
     MIDDLE_INITIAL VARCHAR2 (20) , 
     LAST_NAME VARCHAR2 (50)  NOT NULL , 
     JOB_TITLE VARCHAR2 (50)  NOT NULL , 
     LANGUAGE VARCHAR2 (50)  NOT NULL , 
     SITE_NAME VARCHAR2 (50)  NOT NULL , 
     HOURLY_RATE NUMBER (5,2)  NOT NULL , 
     RATE_CURRENCY VARCHAR2 (3)  NOT NULL , 
     VERSION NUMBER (10)  NOT NULL , 
     RECORD_EFF_DT DATE  NOT NULL , 
     RECORD_END_DT DATE  NOT NULL 
    ) 
    LOGGING 
;



ALTER TABLE CC_D_AGENT 
    ADD CONSTRAINT CC_D_AGENT_REC_DATE_CK 
    CHECK (RECORD_EFF_DT <= RECORD_END_DT)
;

CREATE UNIQUE INDEX CC_D_AGENT__IDX ON CC_D_AGENT 
    ( 
     D_AGENT_ID ASC 
    ) 
    LOGGING 
;

ALTER TABLE CC_D_AGENT 
    ADD CONSTRAINT CC_D_AGENT_PK PRIMARY KEY ( D_AGENT_ID ) ;


ALTER TABLE CC_D_AGENT 
    ADD CONSTRAINT CC_D_AGENT__UN UNIQUE ( LOGIN_ID , RECORD_EFF_DT , D_PROJECT_ID ) ;



CREATE TABLE CC_D_CONTACT_QUEUE 
    ( 
     D_CONTACT_QUEUE_ID NUMBER (19)  NOT NULL , 
     D_PROJECT_ID NUMBER (19)  NOT NULL , 
     QUEUE_NUMBER NUMBER (19)  NOT NULL , 
     QUEUE_NAME VARCHAR2 (50)  NOT NULL , 
     SOURCE_QUEUE NUMBER (19)  NOT NULL , 
     QUEUE_TYPE VARCHAR2 (50)  NOT NULL , 
     SERVICE_PERCENT NUMBER (3) DEFAULT 0  NOT NULL , 
     SERVICE_SECONDS NUMBER (5) DEFAULT 0  NOT NULL , 
     QUEUE_GROUP NUMBER (4)  NOT NULL , 
     INTERVAL_MINUTES NUMBER (2) DEFAULT 0  NOT NULL , 
     SPEED_ANSWER_PERIOD_1_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( SPEED_ANSWER_PERIOD_1_BOUND >= 0) , 
     SPEED_ANSWER_PERIOD_2_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( SPEED_ANSWER_PERIOD_2_BOUND >= 0) , 
     SPEED_ANSWER_PERIOD_3_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( SPEED_ANSWER_PERIOD_3_BOUND >= 0) , 
     SPEED_ANSWER_PERIOD_4_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( SPEED_ANSWER_PERIOD_4_BOUND >= 0) , 
     SPEED_ANSWER_PERIOD_5_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( SPEED_ANSWER_PERIOD_5_BOUND >= 0) , 
     SPEED_ANSWER_PERIOD_6_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( SPEED_ANSWER_PERIOD_6_BOUND >= 0) , 
     SPEED_ANSWER_PERIOD_7_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( SPEED_ANSWER_PERIOD_7_BOUND >= 0) , 
     SPEED_ANSWER_PERIOD_8_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( SPEED_ANSWER_PERIOD_8_BOUND >= 0) , 
     SPEED_ANSWER_PERIOD_9_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( SPEED_ANSWER_PERIOD_9_BOUND >= 0) , 
     SPEED_ANSWER_PERIOD_10_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( SPEED_ANSWER_PERIOD_10_BOUND >= 0) , 
     CALLS_ABNDONED_PERIOD_1_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( CALLS_ABNDONED_PERIOD_1_BOUND >= 0) , 
     CALLS_ABNDONED_PERIOD_2_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( CALLS_ABNDONED_PERIOD_2_BOUND >= 0) , 
     CALLS_ABNDONED_PERIOD_3_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( CALLS_ABNDONED_PERIOD_3_BOUND >= 0) , 
     CALLS_ABNDONED_PERIOD_4_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( CALLS_ABNDONED_PERIOD_4_BOUND >= 0) , 
     CALLS_ABNDONED_PERIOD_5_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( CALLS_ABNDONED_PERIOD_5_BOUND >= 0) , 
     CALLS_ABNDONED_PERIOD_6_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( CALLS_ABNDONED_PERIOD_6_BOUND >= 0) , 
     CALLS_ABNDONED_PERIOD_7_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( CALLS_ABNDONED_PERIOD_7_BOUND >= 0) , 
     CALLS_ABNDONED_PERIOD_8_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( CALLS_ABNDONED_PERIOD_8_BOUND >= 0) , 
     CALLS_ABNDONED_PERIOD_9_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( CALLS_ABNDONED_PERIOD_9_BOUND >= 0) , 
     CALLS_ABNDONED_PERIOD_10_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( CALLS_ABNDONED_PERIOD_10_BOUND >= 0) , 
     VERSION NUMBER (10)  NOT NULL , 
     RECORD_EFF_DT DATE DEFAULT to_date('1900/01/01', 'yyyy/mm/dd')  NOT NULL , 
     RECORD_END_DT DATE DEFAULT to_date('2999/12/31', 'yyyy/mm/dd')  NOT NULL 
    ) 
    LOGGING 
;



ALTER TABLE CC_D_CONTACT_QUEUE 
    ADD CONSTRAINT CC_D_CONTACT_QUEUE_PK PRIMARY KEY ( D_CONTACT_QUEUE_ID ) ;


ALTER TABLE CC_D_CONTACT_QUEUE 
    ADD CONSTRAINT CC_D_CONTACT_QUEUE__UN UNIQUE ( QUEUE_NUMBER , RECORD_EFF_DT , D_PROJECT_ID ) ;



CREATE TABLE CC_D_COUNTRY 
    ( 
     COUNTRY_ID NUMBER  NOT NULL , 
     COUNTRY_NAME VARCHAR2 (50) 
    ) 
    LOGGING 
;



ALTER TABLE CC_D_COUNTRY 
    ADD CONSTRAINT CC_D_COUNTRY_PK PRIMARY KEY ( COUNTRY_ID ) ;


ALTER TABLE CC_D_COUNTRY 
    ADD CONSTRAINT CC_D_COUNTRY_NAME_UN UNIQUE ( COUNTRY_NAME ) ;



CREATE TABLE CC_D_DATES 
    ( 
     D_DATE_ID NUMBER (19)  NOT NULL , 
     D_DATE DATE  NOT NULL , 
     D_MONTH VARCHAR2 (3)  NOT NULL , 
     D_MONTH_NAME VARCHAR2 (9)  NOT NULL , 
     D_DAY VARCHAR2 (3)  NOT NULL , 
     D_DAY_NAME VARCHAR2 (9)  NOT NULL , 
     D_DAY_OF_WEEK VARCHAR2 (1)  NOT NULL , 
     D_DAY_OF_MONTH VARCHAR2 (2)  NOT NULL , 
     D_DAY_OF_YEAR VARCHAR2 (3)  NOT NULL , 
     D_YEAR VARCHAR2 (4)  NOT NULL , 
     D_MONTH_NUM VARCHAR2 (2)  NOT NULL , 
     D_WEEK_OF_YEAR VARCHAR2 (2)  NOT NULL , 
     D_WEEK_OF_MONTH VARCHAR2 (1)  NOT NULL , 
     WEEKEND_FLAG CHAR (1)  NOT NULL 
    ) 
    LOGGING 
;


CREATE INDEX CC_D_DATES_MONTH_NAME_IX ON CC_D_DATES 
    ( 
     D_MONTH_NAME ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_D_DATES_D_WEEK_OF_MONTH_IX ON CC_D_DATES 
    ( 
     D_WEEK_OF_MONTH ASC 
    ) 
    LOGGING 
;
CREATE UNIQUE INDEX CC_D_DATES_D_DATE_UIX ON CC_D_DATES 
    ( 
     D_DATE ASC 
    ) 
    LOGGING 
;

ALTER TABLE CC_D_DATES 
    ADD CONSTRAINT CC_D_DATES_PK PRIMARY KEY ( D_DATE_ID ) ;


ALTER TABLE CC_D_DATES 
    ADD CONSTRAINT CC_D_DATES__UN UNIQUE ( D_YEAR , D_DAY_OF_YEAR ) ;


ALTER TABLE CC_D_DATES 
    ADD CONSTRAINT CC_D_DATES__UNv2 UNIQUE ( D_MONTH , D_DAY_OF_MONTH , D_YEAR ) ;



CREATE TABLE CC_D_DISTRICT 
    ( 
     DISTRICT_ID NUMBER  NOT NULL , 
     DISTRICT_NAME VARCHAR2 (50) 
    ) 
    LOGGING 
;



ALTER TABLE CC_D_DISTRICT 
    ADD CONSTRAINT CC_D_DISTRICT_PK PRIMARY KEY ( DISTRICT_ID ) ;


ALTER TABLE CC_D_DISTRICT 
    ADD CONSTRAINT CC_D_DISTRICT_NAME_UN UNIQUE ( DISTRICT_NAME ) ;



CREATE TABLE CC_D_FORECAST_NOTES 
    ( 
     D_FORECAST_NOTES_ID NUMBER (19)  NOT NULL , 
     PRODUCTION_PLAN_HORIZON_ID NUMBER  NOT NULL , 
     NOTE_TYPE VARCHAR2 (35)  NOT NULL , 
     NOTE_TEXT VARCHAR2 (4000)  NOT NULL , 
     CREATE_DATE DATE  NOT NULL , 
     CREATE_BY VARCHAR2 (100)  NOT NULL , 
     LAST_UPDATE_DATE DATE  NOT NULL , 
     LAST_UPDATE_BY VARCHAR2 (100)  NOT NULL 
    ) 
    LOGGING 
;



ALTER TABLE CC_D_FORECAST_NOTES 
    ADD CONSTRAINT CC_D_FORECAST_NOTES_PK PRIMARY KEY ( D_FORECAST_NOTES_ID ) ;



CREATE TABLE CC_D_GROUP 
    ( 
     D_GROUP_ID NUMBER (19)  NOT NULL , 
     D_PROJECT_ID NUMBER (19)  NOT NULL , 
     GROUP_NAME VARCHAR2 (50)  NOT NULL , 
     GROUP_DESCRIPTION VARCHAR2 (255) , 
     VERSION NUMBER (10)  NOT NULL , 
     RECORD_EFF_DT DATE  NOT NULL , 
     RECORD_END_DT DATE  NOT NULL 
    ) 
    LOGGING 
;



ALTER TABLE CC_D_GROUP 
    ADD CONSTRAINT CC_D_GROUP_REC_DATE_CK 
    CHECK (RECORD_EFF_DT <= RECORD_END_DT)
;

CREATE UNIQUE INDEX CC_D_GROUP__IDX ON CC_D_GROUP 
    ( 
     D_GROUP_ID ASC 
    ) 
    LOGGING 
;

ALTER TABLE CC_D_GROUP 
    ADD CONSTRAINT CC_D_GROUP_PK PRIMARY KEY ( D_GROUP_ID ) ;


ALTER TABLE CC_D_GROUP 
    ADD CONSTRAINT CC_D_GROUP__UN UNIQUE ( GROUP_NAME , RECORD_EFF_DT , D_PROJECT_ID ) ;



CREATE TABLE CC_D_INTERVAL 
    ( 
     D_INTERVAL_ID NUMBER (19)  NOT NULL , 
     INTERVAL_START_DATE DATE  NOT NULL , 
     INTERVAL_END_DATE DATE  NOT NULL , 
     AM_PM VARCHAR2 (2)  NOT NULL , 
     INTERVAL_START_HOUR NUMBER (2)  NOT NULL , 
     INTERVAL_START_MINUTE NUMBER (2)  NOT NULL , 
     INTERVAL_END_HOUR NUMBER (2)  NOT NULL , 
     INTERVAL_END_MINUTE NUMBER (2)  NOT NULL , 
     INTERVAL_SECONDS NUMBER (4) DEFAULT 30  NOT NULL , 
     INTERVAL_START_TIME_OF_DAY12 VARCHAR2 (5)  NOT NULL , 
     INTERVAL_START_TIME_OF_DAY24 VARCHAR2 (5)  NOT NULL , 
     INTERVAL_END_TIME_OF_DAY12 VARCHAR2 (5)  NOT NULL , 
     INTERVAL_END_TIME_OF_DAY24 VARCHAR2 (5)  NOT NULL , 
     RECORD_EFF_DT DATE DEFAULT to_date('1900/01/01', 'yyyy/mm/dd')  NOT NULL , 
     RECORD_END_DT DATE DEFAULT to_date('2999/12/31', 'yyyy/mm/dd')  NOT NULL , 
     VERSION NUMBER (10)  NOT NULL 
    ) 
    LOGGING 
;


CREATE INDEX CC_D_INTERVAL__IDXv2 ON CC_D_INTERVAL 
    ( 
     INTERVAL_START_DATE ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_D_INTERVAL__IDXv3 ON CC_D_INTERVAL 
    ( 
     INTERVAL_END_DATE ASC 
    ) 
    LOGGING 
;

ALTER TABLE CC_D_INTERVAL 
    ADD CONSTRAINT CC_D_INTERVAL_PK PRIMARY KEY ( D_INTERVAL_ID ) ;


ALTER TABLE CC_D_INTERVAL 
    ADD CONSTRAINT CC_D_INTERVAL__UN UNIQUE ( INTERVAL_START_DATE , INTERVAL_END_DATE ) ;



CREATE TABLE CC_D_IVR_SELF_SERVICE_PATH 
    ( 
     D_IVR_SELF_SERVICE_PATH_ID NUMBER (19)  NOT NULL , 
     D_PROJECT_ID NUMBER (19)  NOT NULL , 
     CODE VARCHAR2 (30)  NOT NULL , 
     DESCRIPTION VARCHAR2 (255)  NOT NULL , 
     BEGIN_NODE VARCHAR2 (30)  NOT NULL , 
     END_NODE VARCHAR2 (30)  NOT NULL , 
     VERSION NUMBER (10)  NOT NULL , 
     RECORD_EFF_DT DATE  NOT NULL , 
     RECORD_END_DT DATE  NOT NULL 
    ) 
    LOGGING 
;



ALTER TABLE CC_D_IVR_SELF_SERVICE_PATH 
    ADD CONSTRAINT CC_D_SELF_SERVICE_PATH_PK PRIMARY KEY ( D_IVR_SELF_SERVICE_PATH_ID ) ;


ALTER TABLE CC_D_IVR_SELF_SERVICE_PATH 
    ADD CONSTRAINT CC_D_SELF_SERVICE_PATH__UN UNIQUE ( BEGIN_NODE , END_NODE , RECORD_EFF_DT , D_PROJECT_ID ) ;



CREATE TABLE CC_D_PRODUCTION_PLAN 
    ( 
     PRODUCTION_PLAN_ID NUMBER (19)  NOT NULL , 
     PLAN_TYPE VARCHAR2 (50) , 
     PRODUCTION_PLAN_NAME VARCHAR2 (50)  NOT NULL , 
     PRODUCTION_PLAN_DESCRIPTION VARCHAR2 (1000)  NOT NULL , 
     PROJECT_ID NUMBER (19)  NOT NULL , 
     PROGRAM_ID NUMBER (19)  NOT NULL , 
     GEOGRAPHY_MASTER_ID NUMBER (19)  NOT NULL , 
     EFFECTIVE_DATE DATE DEFAULT SYSDATE  NOT NULL , 
     END_DATE DATE DEFAULT SYSDATE , 
     CREATE_DATE DATE DEFAULT sysdate  NOT NULL , 
     LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL 
    ) 
    LOGGING 
;


CREATE INDEX CC_D_PROD_PLAN_D_PRJ_ID_IDX ON CC_D_PRODUCTION_PLAN 
    ( 
     PROJECT_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_D_PROD_PLAN_D_PRG_ID_IDX ON CC_D_PRODUCTION_PLAN 
    ( 
     PROGRAM_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_D_PROD_PLAN_D_GEO_ID_IDX ON CC_D_PRODUCTION_PLAN 
    ( 
     GEOGRAPHY_MASTER_ID ASC 
    ) 
    LOGGING 
;

ALTER TABLE CC_D_PRODUCTION_PLAN 
    ADD CONSTRAINT CC_D_PRODUCTION_PLAN_PK PRIMARY KEY ( PRODUCTION_PLAN_ID ) ;


ALTER TABLE CC_D_PRODUCTION_PLAN 
    ADD CONSTRAINT CC_D_PRODUCTION_PLAN__UN UNIQUE ( PRODUCTION_PLAN_NAME , EFFECTIVE_DATE , PROJECT_ID , PROGRAM_ID , GEOGRAPHY_MASTER_ID ) ;



CREATE TABLE CC_D_PRODUCTION_PLAN_HORIZON 
    ( 
     PRODUCTION_PLAN_HRZN_ID NUMBER  NOT NULL , 
     PRODUCTION_PLAN_ID NUMBER (19)  NOT NULL , 
     HORIZON_START_DATE DATE  NOT NULL , 
     HORIZON_START_HOUR NUMBER (2) DEFAULT 0  NOT NULL , 
     HORIZON_END_DATE DATE  NOT NULL , 
     HORIZON_END_HOUR NUMBER (2) DEFAULT 0  NOT NULL , 
     INITIAL_VERSION NUMBER (4) DEFAULT 1  NOT NULL , 
     FINAL_VERSION NUMBER (4) DEFAULT 1  NOT NULL , 
     FORECAST_LAST_MODIFIED_DATE DATE DEFAULT sysdate  NOT NULL , 
     CREATE_DATE DATE DEFAULT sysdate  NOT NULL , 
     LAST_UPDATE_DATE DATE DEFAULT sysdate  NOT NULL 
    ) 
    LOGGING 
;


CREATE INDEX CC_D_PP_HRZN_D_PP_ID_IDX ON CC_D_PRODUCTION_PLAN_HORIZON 
    ( 
     PRODUCTION_PLAN_ID ASC 
    ) 
    LOGGING 
;

ALTER TABLE CC_D_PRODUCTION_PLAN_HORIZON 
    ADD CONSTRAINT CC_D_PRODUCTION_PLAN_HRZN_PK PRIMARY KEY ( PRODUCTION_PLAN_HRZN_ID ) ;


ALTER TABLE CC_D_PRODUCTION_PLAN_HORIZON 
    ADD CONSTRAINT CC_D_PRODUCTION_PLAN_HRZN__UN UNIQUE ( PRODUCTION_PLAN_ID , HORIZON_START_DATE , HORIZON_START_HOUR , HORIZON_END_DATE , HORIZON_END_HOUR ) ;



CREATE TABLE CC_D_PROD_PLANNING_TARGET 
    ( 
     D_PROD_PLANNING_TARGET_ID NUMBER (19)  NOT NULL , 
     D_PROJECT_ID NUMBER (19)  NOT NULL , 
     D_TARGET_ID NUMBER (19)  NOT NULL , 
     TARGET_VALUE NUMBER (7,2)  NOT NULL , 
     RECORD_EFF_DT DATE DEFAULT to_date('1900/01/01', 'yyyy/mm/dd')  NOT NULL , 
     RECORD_END_DT DATE DEFAULT to_date('2999/12/31', 'yyyy/mm/dd')  NOT NULL , 
     VERSION NUMBER (10)  NOT NULL 
    ) 
    LOGGING 
;



ALTER TABLE CC_D_PROD_PLANNING_TARGET 
    ADD CONSTRAINT CC_D_PROD_PLANNING_TARGET_PK PRIMARY KEY ( D_PROD_PLANNING_TARGET_ID ) ;


ALTER TABLE CC_D_PROD_PLANNING_TARGET 
    ADD CONSTRAINT CC_D_PROD_PLANNING_TARGET__UN UNIQUE ( D_PROJECT_ID , D_TARGET_ID , RECORD_EFF_DT ) ;



CREATE TABLE CC_D_PROJECT_TARGETS 
    ( 
     D_PROJECT_TARGETS_ID NUMBER (19)  NOT NULL , 
     PROJECT_ID NUMBER (19)  NOT NULL , 
     VERSION NUMBER (10)  NOT NULL , 
     AVERAGE_HANDLE_TIME_TARGET NUMBER (5,2) DEFAULT 0  NOT NULL , 
     UTILIZATION_TARGET NUMBER (5,2) DEFAULT 0  NOT NULL , 
     COST_PER_CALL_TARGET NUMBER (5,2) DEFAULT 0  NOT NULL , 
     OCCUPANCY_TARGET NUMBER (5,2) DEFAULT 0  NOT NULL , 
     LABOR_COST_PER_CALL_TARGET NUMBER (5,2) DEFAULT 0  NOT NULL , 
     RECORD_EFF_DT DATE  NOT NULL , 
     RECORD_END_DT DATE  NOT NULL 
    ) 
    LOGGING 
;



ALTER TABLE CC_D_PROJECT_TARGETS 
    ADD CONSTRAINT D_PROJECT_REC_DATE_CK 
    CHECK (RECORD_EFF_DT <= RECORD_END_DT)
;

CREATE UNIQUE INDEX CC_D_PROJECT__IDXv1 ON CC_D_PROJECT_TARGETS 
    ( 
     PROJECT_ID ASC 
    ) 
    LOGGING 
;

ALTER TABLE CC_D_PROJECT_TARGETS 
    ADD CONSTRAINT CC_D_PROJECT_TARGETS_PK PRIMARY KEY ( D_PROJECT_TARGETS_ID ) ;


ALTER TABLE CC_D_PROJECT_TARGETS 
    ADD CONSTRAINT CC_D_PROJECT_TARGETS__UN UNIQUE ( PROJECT_ID , RECORD_EFF_DT ) ;



CREATE TABLE CC_D_PROVINCE 
    ( 
     PROVINCE_ID NUMBER  NOT NULL , 
     PROVINCE_NAME VARCHAR2 (50) 
    ) 
    LOGGING 
;



ALTER TABLE CC_D_PROVINCE 
    ADD CONSTRAINT CC_D_PROVINCE_PK PRIMARY KEY ( PROVINCE_ID ) ;


ALTER TABLE CC_D_PROVINCE 
    ADD CONSTRAINT CC_D_PROVINCE_NAME_uk UNIQUE ( PROVINCE_NAME ) ;



CREATE TABLE CC_D_REGION 
    ( 
     REGION_ID NUMBER  NOT NULL , 
     REGION_NAME VARCHAR2 (50) 
    ) 
    LOGGING 
;



COMMENT ON TABLE CC_D_REGION IS 'List of Regions in MAXIMUS'
;


ALTER TABLE CC_D_REGION 
    ADD CONSTRAINT CC_D_REGION_PK PRIMARY KEY ( REGION_ID ) ;


ALTER TABLE CC_D_REGION 
    ADD CONSTRAINT CC_D_REGION_UNK UNIQUE ( REGION_NAME ) ;



CREATE TABLE CC_D_SITE 
    ( 
     D_SITE_ID NUMBER (19)  NOT NULL , 
     SITE_NAME VARCHAR2 (50)  NOT NULL , 
     SITE_DESCRIPTION VARCHAR2 (255) , 
     VERSION NUMBER (10)  NOT NULL , 
     RECORD_EFF_DT DATE  NOT NULL , 
     RECORD_END_DT DATE  NOT NULL 
    ) 
    LOGGING 
;



ALTER TABLE CC_D_SITE 
    ADD CONSTRAINT CC_D_SITE_REC_DATE_CK 
    CHECK (RECORD_EFF_DT <= RECORD_END_DT)
;

CREATE UNIQUE INDEX CC_D_SITE__IDX ON CC_D_SITE 
    ( 
     D_SITE_ID ASC 
    ) 
    LOGGING 
;

ALTER TABLE CC_D_SITE 
    ADD CONSTRAINT CC_D_SITE_PK PRIMARY KEY ( D_SITE_ID ) ;


ALTER TABLE CC_D_SITE 
    ADD CONSTRAINT CC_D_SITE__UN UNIQUE ( SITE_NAME ) ;



CREATE TABLE CC_D_STATE 
    ( 
     STATE_ID NUMBER  NOT NULL , 
     STATE_NAME VARCHAR2 (50) 
    ) 
    LOGGING 
;



ALTER TABLE CC_D_STATE 
    ADD CONSTRAINT CC_D_STATE_PK PRIMARY KEY ( STATE_ID ) ;


ALTER TABLE CC_D_STATE 
    ADD CONSTRAINT CC_D_STATE__UN UNIQUE ( STATE_NAME ) ;



CREATE TABLE CC_D_TARGET 
    ( 
     D_TARGET_ID NUMBER (19)  NOT NULL , 
     TARGET_NAME VARCHAR2 (50)  NOT NULL , 
     TARGET_DESCRIPTION VARCHAR2 (1000) 
    ) 
    LOGGING 
;



ALTER TABLE CC_D_TARGET 
    ADD CONSTRAINT CC_D_TARGET_PK PRIMARY KEY ( D_TARGET_ID ) ;



CREATE TABLE CC_D_UNIT_OF_WORK 
    ( 
     UOW_ID NUMBER (19)  NOT NULL , 
     D_PROJECT_ID NUMBER (19)  NOT NULL , 
     UNIT_OF_WORK_NAME VARCHAR2 (50)  NOT NULL , 
     PRODUCTION_PLAN_ID NUMBER (19)  NOT NULL , 
     HOURLY_FLAG VARCHAR2 (1) DEFAULT 'N'  NOT NULL CHECK ( HOURLY_FLAG IN ('N', 'Y')) , 
     HANDLE_TIME_UNIT VARCHAR2 (7) CHECK ( HANDLE_TIME_UNIT IN ('Days', 'Hours', 'Minutes', 'Seconds')) 
    ) 
    LOGGING 
;



ALTER TABLE CC_D_UNIT_OF_WORK 
    ADD CONSTRAINT CC_D_UNIT_OF_WORK_PK PRIMARY KEY ( UOW_ID ) ;


ALTER TABLE CC_D_UNIT_OF_WORK 
    ADD CONSTRAINT CC_D_UNIT_OF_WORK_UK1 UNIQUE ( UNIT_OF_WORK_NAME , D_PROJECT_ID ) ;



CREATE TABLE CC_F_ACTUALS_IVR_INTERVAL 
    ( 
     F_ACTUALS_IVR_INTERVAL_ID NUMBER (19)  NOT NULL , 
     D_PROJECT_ID NUMBER (19)  NOT NULL , 
     D_PROGRAM_ID NUMBER (19)  NOT NULL , 
     D_GEOGRAPHY_MASTER_ID NUMBER (19)  NOT NULL , 
     D_UNIT_OF_WORK_ID NUMBER (19)  NOT NULL , 
     D_INTERVAL_ID NUMBER (19)  NOT NULL , 
     D_DATE_ID NUMBER (19)  NOT NULL , 
     CONTACTS_CREATED NUMBER (7) DEFAULT 0  NOT NULL , 
     CONTACTS_OFFERED_TO_ACD NUMBER (7) DEFAULT 0  NOT NULL , 
     CONTACTS_CONTAINED_IN_IVR NUMBER (7) DEFAULT 0  NOT NULL , 
     MIN_TIME_IN_THE_IVR NUMBER (7,2) DEFAULT 0  NOT NULL , 
     MAX_TIME_IN_THE_IVR NUMBER (7,2) DEFAULT 0  NOT NULL , 
     MEAN_TIME_IN_THE_IVR NUMBER (7,2) DEFAULT 0  NOT NULL , 
     MEDIAN_TIME_IN_THE_IVR NUMBER (7,2) DEFAULT 0  NOT NULL , 
     STDDEV_TIME_IN_THE_IVR NUMBER (7,2) DEFAULT 0  NOT NULL , 
     CREATE_DATE DATE DEFAULT SYSDATE  NOT NULL , 
     LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NOT NULL 
    ) 
    LOGGING 
;


CREATE INDEX CC_F_ACTUALS_IVR_INTERVAL_IDX2 ON CC_F_ACTUALS_IVR_INTERVAL 
    ( 
     D_PROJECT_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_ACTUALS_IVR_INTERVAL_IDX3 ON CC_F_ACTUALS_IVR_INTERVAL 
    ( 
     D_PROGRAM_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_ACTUALS_IVR_INTERVAL_IDX4 ON CC_F_ACTUALS_IVR_INTERVAL 
    ( 
     D_GEOGRAPHY_MASTER_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_ACTUALS_IVR_INTERVAL_IDX5 ON CC_F_ACTUALS_IVR_INTERVAL 
    ( 
     D_UNIT_OF_WORK_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_ACTUALS_IVR_INTERVAL_IDX6 ON CC_F_ACTUALS_IVR_INTERVAL 
    ( 
     D_INTERVAL_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_ACTUALS_IVR_INTERVAL_IDX7 ON CC_F_ACTUALS_IVR_INTERVAL 
    ( 
     D_DATE_ID ASC 
    ) 
    LOGGING 
;

ALTER TABLE CC_F_ACTUALS_IVR_INTERVAL 
    ADD CONSTRAINT CC_F_ACTUALS_IVR_INTERVAL_PK PRIMARY KEY ( F_ACTUALS_IVR_INTERVAL_ID ) ;


ALTER TABLE CC_F_ACTUALS_IVR_INTERVAL 
    ADD CONSTRAINT CC_F_ACTUALS_IVR_INTERVAL__UN UNIQUE ( D_DATE_ID , D_PROJECT_ID , D_PROGRAM_ID , D_GEOGRAPHY_MASTER_ID , D_UNIT_OF_WORK_ID , D_INTERVAL_ID ) ;



CREATE TABLE CC_F_ACTUALS_QUEUE_INTERVAL 
    ( 
     F_CALL_CENTER_ACTLS_INTRVL_ID NUMBER (19)  NOT NULL , 
     D_DATE_ID NUMBER (19)  NOT NULL , 
     D_PROJECT_ID NUMBER (19)  NOT NULL , 
     D_PROGRAM_ID NUMBER (19)  NOT NULL , 
     D_GEOGRAPHY_MASTER_ID NUMBER (19)  NOT NULL , 
     D_UNIT_OF_WORK_ID NUMBER (19)  NOT NULL , 
     D_CONTACT_QUEUE_ID NUMBER (19)  NOT NULL , 
     D_INTERVAL_ID NUMBER (19)  NOT NULL , 
     D_AGENT_ID NUMBER (19)  NOT NULL , 
     CONTACTS_RECEIVED_FROM_IVR NUMBER (7) DEFAULT 0  NOT NULL , 
     CONTACTS_OFFERED NUMBER (7) DEFAULT 0  NOT NULL , 
     CONTACTS_HANDLED NUMBER (7) DEFAULT 0  NOT NULL , 
     CONTACTS_ABANDONED NUMBER (7) DEFAULT 0  NOT NULL , 
     MIN_HANDLE_TIME NUMBER (7,2) DEFAULT 0  NOT NULL , 
     MAX_HANDLE_TIME NUMBER (7,2) DEFAULT 0  NOT NULL , 
     MEAN_HANDLE_TIME NUMBER (7,2) DEFAULT 0  NOT NULL , 
     MEDIAN_HANDLE_TIME NUMBER (7,2) DEFAULT 0  NOT NULL , 
     STDDEV_HANDLE_TIME NUMBER (7,2) DEFAULT 0  NOT NULL , 
     MIN_SPEED_TO_HANDLE NUMBER (7,2) DEFAULT 0  NOT NULL , 
     MAX_SPEED_TO_HANDLE NUMBER (7,2) DEFAULT 0  NOT NULL , 
     MEAN_SPEED_TO_HANDLE NUMBER (7,2) DEFAULT 0  NOT NULL , 
     MEDIAN_SPEED_TO_HANDLE NUMBER (7,2) DEFAULT 0  NOT NULL , 
     STDDEV_SPEED_TO_HANDLE NUMBER (7,2) DEFAULT 0  NOT NULL , 
     MIN_SPEED_OF_ANSWER NUMBER (7,2) DEFAULT 0  NOT NULL , 
     MAX_SPEED_OF_ANSWER NUMBER (7,2) DEFAULT 0  NOT NULL , 
     MEAN_SPEED_OF_ANSWER NUMBER (7,2) DEFAULT 0  NOT NULL , 
     MEDIAN_SPEED_OF_ANSWER NUMBER (7,2) DEFAULT 0  NOT NULL , 
     STDDEV_SPEED_OF_ANSWER NUMBER (7,2) DEFAULT 0  NOT NULL , 
     SPEED_OF_ANSWER_PERIOD_1 NUMBER (7) DEFAULT 0  NOT NULL , 
     SPEED_OF_ANSWER_PERIOD_2 NUMBER (7) DEFAULT 0  NOT NULL , 
     SPEED_OF_ANSWER_PERIOD_3 NUMBER (7) DEFAULT 0  NOT NULL , 
     SPEED_OF_ANSWER_PERIOD_4 NUMBER (7) DEFAULT 0  NOT NULL , 
     SPEED_OF_ANSWER_PERIOD_5 NUMBER (7) DEFAULT 0  NOT NULL , 
     SPEED_OF_ANSWER_PERIOD_6 NUMBER (7) DEFAULT 0  NOT NULL , 
     SPEED_OF_ANSWER_PERIOD_7 NUMBER (7) DEFAULT 0  NOT NULL , 
     SPEED_OF_ANSWER_PERIOD_8 NUMBER (7) DEFAULT 0  NOT NULL , 
     SPEED_OF_ANSWER_PERIOD_9 NUMBER (7) DEFAULT 0  NOT NULL , 
     SPEED_OF_ANSWER_PERIOD_10 NUMBER (7) DEFAULT 0  NOT NULL , 
     CALLS_ABANDONED_PERIOD_1 NUMBER (7) DEFAULT 0  NOT NULL , 
     CALLS_ABANDONED_PERIOD_2 NUMBER (7) DEFAULT 0  NOT NULL , 
     CALLS_ABANDONED_PERIOD_3 NUMBER (7) DEFAULT 0  NOT NULL , 
     CALLS_ABANDONED_PERIOD_4 NUMBER (7) DEFAULT 0  NOT NULL , 
     CALLS_ABANDONED_PERIOD_5 NUMBER (7) DEFAULT 0  NOT NULL , 
     CALLS_ABANDONED_PERIOD_6 NUMBER (7) DEFAULT 0  NOT NULL , 
     CALLS_ABANDONED_PERIOD_7 NUMBER (7) DEFAULT 0  NOT NULL , 
     CALLS_ABANDONED_PERIOD_8 NUMBER (7) DEFAULT 0  NOT NULL , 
     CALLS_ABANDONED_PERIOD_9 NUMBER (7) DEFAULT 0  NOT NULL , 
     CALLS_ABANDONED_PERIOD_10 NUMBER (7) DEFAULT 0  NOT NULL , 
     LABOR_MINUTES_TOTAL NUMBER (10,2) DEFAULT 0  NOT NULL , 
     LABOR_MINUTES_AVAILABLE NUMBER (9,2) DEFAULT 0  NOT NULL , 
     LABOR_MINUTES_WAITING NUMBER (10,2) DEFAULT 0  NOT NULL , 
     HEADCOUNT_TOTAL NUMBER (7,2) DEFAULT 0  NOT NULL , 
     HEADCOUNT_AVAILABLE NUMBER (7,2) DEFAULT 0  NOT NULL , 
     HEADCOUNT_UNAVAILABLE NUMBER (7,2) DEFAULT 0  NOT NULL , 
     CONTACT_INVENTORY NUMBER (7) DEFAULT 0  NOT NULL , 
     CONTACT_INVENTORY_JEOPARDY NUMBER (7) DEFAULT 0  NOT NULL , 
     MIN_CONTACT_INVENTORY_AGE NUMBER (5,2) DEFAULT 0  NOT NULL , 
     MAX_CONTACT_INVENTORY_AGE NUMBER (5,2) DEFAULT 0  NOT NULL , 
     MEAN_CONTACT_INVENTORY_AGE NUMBER (5,2) DEFAULT 0  NOT NULL , 
     MEDIAN_CONTACT_INVENTORY_AGE NUMBER (5,2) DEFAULT 0  NOT NULL , 
     STDDEV_CONTACT_INVENTORY_AGE NUMBER (5,2) DEFAULT 0  NOT NULL , 
     CONTACTS_TRANSFERRED NUMBER (7) DEFAULT 0  NOT NULL , 
     OUTFLOW_CONTACTS NUMBER (7) DEFAULT 0  NOT NULL , 
     ANSWER_WAIT_TIME_TOTAL NUMBER (12,2) DEFAULT 0  NOT NULL , 
     ABANDON_TIME_TOTAL NUMBER (12,2) DEFAULT 0  NOT NULL , 
     TALK_TIME_TOTAL NUMBER (12,2) DEFAULT 0  NOT NULL , 
     AFTER_CALL_WORK_TIME_TOTAL NUMBER (12,2) DEFAULT 0  NOT NULL , 
     SERVICE_LEVEL_ANSWERED_PERCENT NUMBER (5,2) DEFAULT 0  NOT NULL , 
     SERVICE_LEVEL_ANSWERED_COUNT NUMBER (7) DEFAULT 0  NOT NULL , 
     SERVICE_LEVEL_ABANDONED NUMBER (5,2) DEFAULT 0 , 
     CALLS_ON_HOLD NUMBER (7) DEFAULT 0  NOT NULL , 
     HOLD_TIME_TOTAL NUMBER (12,2) DEFAULT 0  NOT NULL , 
     SHORT_ABANDONS NUMBER (7) DEFAULT 0  NOT NULL , 
     CONTACTS_BLOCKED NUMBER (7) DEFAULT 0  NOT NULL , 
     CREATE_DATE DATE DEFAULT SYSDATE  NOT NULL , 
     LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NOT NULL 
    ) 
    LOGGING 
;


CREATE INDEX CC_F_ACTUALS_Q_INTERVAL_IDX2 ON CC_F_ACTUALS_QUEUE_INTERVAL 
    ( 
     D_DATE_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_ACTUALS_Q_INTERVAL_IDX3 ON CC_F_ACTUALS_QUEUE_INTERVAL 
    ( 
     D_PROJECT_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_ACTUALS_Q_INTERVAL_IDX4 ON CC_F_ACTUALS_QUEUE_INTERVAL 
    ( 
     D_PROGRAM_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_ACTUALS_Q_INTERVAL_IDX5 ON CC_F_ACTUALS_QUEUE_INTERVAL 
    ( 
     D_GEOGRAPHY_MASTER_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_ACTUALS_Q_INTERVAL_IDX6 ON CC_F_ACTUALS_QUEUE_INTERVAL 
    ( 
     D_UNIT_OF_WORK_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_ACTUALS_Q_INTERVAL_IDX7 ON CC_F_ACTUALS_QUEUE_INTERVAL 
    ( 
     D_CONTACT_QUEUE_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_ACTUALS_Q_INTERVAL_IDX8 ON CC_F_ACTUALS_QUEUE_INTERVAL 
    ( 
     D_INTERVAL_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_ACTUALS_Q_INTERVAL_IDX9 ON CC_F_ACTUALS_QUEUE_INTERVAL 
    ( 
     D_AGENT_ID ASC 
    ) 
    LOGGING 
;

ALTER TABLE CC_F_ACTUALS_QUEUE_INTERVAL 
    ADD CONSTRAINT CC_F_ACTUALS_QUEUE_INTERVAL_PK PRIMARY KEY ( F_CALL_CENTER_ACTLS_INTRVL_ID ) ;


ALTER TABLE CC_F_ACTUALS_QUEUE_INTERVAL 
    ADD CONSTRAINT CC_F_ACTUALS_Q_INTERVAL__UN UNIQUE ( D_DATE_ID , D_PROJECT_ID , D_PROGRAM_ID , D_GEOGRAPHY_MASTER_ID , D_UNIT_OF_WORK_ID , D_INTERVAL_ID , D_CONTACT_QUEUE_ID , D_AGENT_ID ) ;



CREATE TABLE CC_F_AGENT_ACTIVITY_BY_DATE 
    ( 
     F_AGENT_ACTIVITY_BY_DATE_ID NUMBER (19)  NOT NULL , 
     D_DATE_ID NUMBER (19)  NOT NULL , 
     D_AGENT_ID NUMBER (19)  NOT NULL , 
     D_ACTIVITY_TYPE_ID NUMBER (19)  NOT NULL , 
     D_PROGRAM_ID NUMBER (19)  NOT NULL , 
     D_GEOGRAPHY_MASTER_ID NUMBER (19)  NOT NULL , 
     D_GROUP_ID NUMBER (19)  NOT NULL , 
     D_PROJECT_ID NUMBER (19)  NOT NULL , 
     D_SITE_ID NUMBER (19)  NOT NULL , 
     ACTIVITY_MINUTES NUMBER (6,2) , 
     CREATE_DATE DATE DEFAULT SYSDATE  NOT NULL , 
     LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NOT NULL 
    ) 
    LOGGING 
;


CREATE UNIQUE INDEX CC_F_AGNT_AVL_DT_D_DT_IDX ON CC_F_AGENT_ACTIVITY_BY_DATE 
    ( 
     F_AGENT_ACTIVITY_BY_DATE_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_AGNT_AVL_DT_D_AGNT_IDX ON CC_F_AGENT_ACTIVITY_BY_DATE 
    ( 
     D_AGENT_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_AGNT_AVL_DT_D_ACT_TYP_IDX ON CC_F_AGENT_ACTIVITY_BY_DATE 
    ( 
     D_ACTIVITY_TYPE_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_AGNT_AVL_DT_D_PRG_IDX ON CC_F_AGENT_ACTIVITY_BY_DATE 
    ( 
     D_PROGRAM_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_AGNT_AVL_DT_D_GEO_IDX ON CC_F_AGENT_ACTIVITY_BY_DATE 
    ( 
     D_GEOGRAPHY_MASTER_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_AGNT_AVL_DT_D_GRP_IDX ON CC_F_AGENT_ACTIVITY_BY_DATE 
    ( 
     D_GROUP_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_AGNT_AVL_DT_D_PRJ_IDX ON CC_F_AGENT_ACTIVITY_BY_DATE 
    ( 
     D_PROJECT_ID ASC 
    ) 
    LOGGING 
;

ALTER TABLE CC_F_AGENT_ACTIVITY_BY_DATE 
    ADD CONSTRAINT CC_F_AGENT_ACTVTY_BY_DATE_PK PRIMARY KEY ( F_AGENT_ACTIVITY_BY_DATE_ID ) ;


ALTER TABLE CC_F_AGENT_ACTIVITY_BY_DATE 
    ADD CONSTRAINT F_AGENT_ACT_BY_DATE__UN UNIQUE ( D_DATE_ID , D_AGENT_ID , D_ACTIVITY_TYPE_ID , D_PROGRAM_ID , D_GEOGRAPHY_MASTER_ID , D_GROUP_ID , D_PROJECT_ID ) ;



CREATE TABLE CC_F_AGENT_BY_DATE 
    ( 
     F_AGENT_BY_DATE_ID NUMBER (19)  NOT NULL , 
     D_DATE_ID NUMBER (19)  NOT NULL , 
     D_AGENT_ID NUMBER (19)  NOT NULL , 
     SUPERVISOR_D_AGENT_ID NUMBER (19)  NOT NULL , 
     MANAGER_D_AGENT_ID NUMBER (19)  NOT NULL , 
     D_PROJECT_TARGETS_ID NUMBER (19)  NOT NULL , 
     D_PROGRAM_ID NUMBER (19)  NOT NULL , 
     D_GEOGRAPHY_MASTER_ID NUMBER (19)  NOT NULL , 
     D_GROUP_ID NUMBER (19)  NOT NULL , 
     D_SITE_ID NUMBER (19)  NOT NULL , 
     HANDLE_CALLS_COUNT NUMBER (10)  NOT NULL , 
     HANDLE_TIME_SECONDS NUMBER (10,2)  NOT NULL , 
     INTERNAL_CALLS_COUNT NUMBER (10)  NOT NULL , 
     INTERNAL_SECONDS NUMBER (10,2)  NOT NULL , 
     EXTERNAL_CALLS_COUNT NUMBER (10)  NOT NULL , 
     EXTERNAL_SECONDS NUMBER (10,2)  NOT NULL , 
     HOLD_SECONDS NUMBER (10,2)  NOT NULL , 
     RING_SECONDS NUMBER (10,2)  NOT NULL , 
     TALK_SECONDS NUMBER (10,2)  NOT NULL , 
     WRAP_SECONDS NUMBER (10,2)  NOT NULL , 
     FIRST_LOGIN DATE , 
     LAST_LOGOUT DATE , 
     LOGIN_SECONDS NUMBER (10,2) DEFAULT 0  NOT NULL , 
     SCHEDULED_SHIFT_MINUTES NUMBER (10,2) , 
     ACTUAL_SHIFT_MINUTES NUMBER (10,2) , 
     ACTUAL_OVERTIME_MINUTES NUMBER (10,2) , 
     IDLE_SECONDS NUMBER (10,2) DEFAULT 0  NOT NULL , 
     NOT_READY_SECONDS NUMBER DEFAULT 0  NOT NULL , 
     TALK_RESERVE_SECONDS NUMBER (10,2) , 
     PREDICTIVE_TALK_SECONDS NUMBER (10,2) , 
     PREVIEW_TALK_SECONDS NUMBER (10,2) , 
     PREDICTIVE_CALLS_COUNT NUMBER (10) , 
     PREVIEW_CALLS_COUNT NUMBER (10) , 
     CREATE_DATE DATE DEFAULT SYSDATE  NOT NULL , 
     LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NOT NULL 
    ) 
    LOGGING 
;


CREATE UNIQUE INDEX CC_F_AGNT_BY_DT_D_DT_ID_IDX ON CC_F_AGENT_BY_DATE 
    ( 
     F_AGENT_BY_DATE_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_AGNT_BY_DT_D_AGNT_ID_IDX ON CC_F_AGENT_BY_DATE 
    ( 
     D_AGENT_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_AGNT_BY_DT_SPRVSR_ID_IDX ON CC_F_AGENT_BY_DATE 
    ( 
     SUPERVISOR_D_AGENT_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_AGNT_BY_DT_MNGR_ID_IDX ON CC_F_AGENT_BY_DATE 
    ( 
     MANAGER_D_AGENT_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_AGNT_BY_DT_PRJ_TRG_ID_IDX ON CC_F_AGENT_BY_DATE 
    ( 
     D_PROJECT_TARGETS_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_AGNT_BY_DT_D_PRG_ID_IDX ON CC_F_AGENT_BY_DATE 
    ( 
     D_PROGRAM_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_AGNT_BY_DT_D_GEO_ID_IDX ON CC_F_AGENT_BY_DATE 
    ( 
     D_GEOGRAPHY_MASTER_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_AGNT_BY_DT_D_GRP_ID_IDX ON CC_F_AGENT_BY_DATE 
    ( 
     D_GROUP_ID ASC 
    ) 
    LOGGING 
;

ALTER TABLE CC_F_AGENT_BY_DATE 
    ADD CONSTRAINT CC_F_AGENT_CALLS_BY_DATE_PK PRIMARY KEY ( F_AGENT_BY_DATE_ID ) ;


ALTER TABLE CC_F_AGENT_BY_DATE 
    ADD CONSTRAINT CC_F_AGENT_BY_DATE__UN UNIQUE ( D_DATE_ID , D_AGENT_ID , SUPERVISOR_D_AGENT_ID , MANAGER_D_AGENT_ID , D_PROJECT_TARGETS_ID , D_PROGRAM_ID , D_GEOGRAPHY_MASTER_ID , D_GROUP_ID ) ;



CREATE TABLE CC_F_FORECAST_INTERVAL 
    ( 
     F_FORECAST_INTERVAL_ID NUMBER (19)  NOT NULL , 
     D_PRODUCTION_PLAN_HORIZON_ID NUMBER  NOT NULL , 
     D_UNIT_OF_WORK_ID NUMBER (19)  NOT NULL , 
     D_DATE_ID NUMBER (19)  NOT NULL , 
     D_INTERVAL_ID NUMBER (19)  NOT NULL , 
     FORECAST_VERSION NUMBER (5) DEFAULT 0  NOT NULL , 
     CONTACTS_CREATED NUMBER (7) DEFAULT 0 , 
     CONTACTS_OFFERED NUMBER (7) DEFAULT 0 , 
     CONTACTS_HANDLED NUMBER (7) DEFAULT 0 , 
     MIN_SPEED_TO_HANDLE NUMBER (7,2) DEFAULT 0 , 
     MAX_SPEED_TO_HANDLE NUMBER (7,2) DEFAULT 0 , 
     MEAN_SPEED_TO_HANDLE NUMBER (7,2) DEFAULT 0 , 
     MEDIAN_SPEED_TO_HANDLE NUMBER (7,2) DEFAULT 0 , 
     STDDEV_SPEED_TO_HANDLE NUMBER (7,2) DEFAULT 0 , 
     MIN_SPEED_OF_ANSWER NUMBER (7,2) DEFAULT 0 , 
     MAX_SPEED_OF_ANSWER NUMBER (7,2) DEFAULT 0 , 
     MEAN_SPEED_OF_ANSWER NUMBER (7,2) DEFAULT 0 , 
     MEDIAN_SPEED_OF_ANSWER NUMBER (7,2) DEFAULT 0 , 
     STDDEV_SPEED_OF_ANSWER NUMBER (7,2) DEFAULT 0 , 
     CONTACTS_ABANDONED NUMBER (7) DEFAULT 0 , 
     CONTACT_INVENTORY NUMBER (7) DEFAULT 0 , 
     MIN_CONTACT_INVENTORY_AGE NUMBER (5,2) DEFAULT 0 , 
     MAX_CONTACT_INVENTORY_AGE NUMBER (5,2) DEFAULT 0 , 
     MEAN_CONTACT_INVENTORY_AGE NUMBER (5,2) DEFAULT 0 , 
     MEDIAN_CONTACT_INVENTORY_AGE NUMBER (5,2) DEFAULT 0 , 
     STDDEV_CONTACT_INVENTORY_AGE NUMBER (5,2) DEFAULT 0 , 
     MIN_HANDLE_TIME NUMBER (7,2) DEFAULT 0 , 
     MAX_HANDLE_TIME NUMBER (7,2) DEFAULT 0 , 
     MEAN_HANDLE_TIME NUMBER (7,2) DEFAULT 0 , 
     MEDIAN_HANDLE_TIME NUMBER (7,2) DEFAULT 0 , 
     CONTACT_INVENTORY_JEOPARDY NUMBER (7) DEFAULT 0 , 
     STDDEV_HANDLE_TIME NUMBER (7,2) DEFAULT 0 , 
     LABOR_MINUTES_TOTAL NUMBER (10,2) DEFAULT 0 , 
     LABOR_MINUTES_AVAILABLE NUMBER (9,2) DEFAULT 0 , 
     LABOR_MINUTES_WAITING NUMBER (10,2) DEFAULT 0 , 
     HEADCOUNT_TOTAL NUMBER (7,2) DEFAULT 0 , 
     HEADCOUNT_AVAILABLE NUMBER (7,2) DEFAULT 0 , 
     HEADCOUNT_UNAVAILABLE NUMBER (7,2) DEFAULT 0 , 
     SRVC_LEVEL_ANSWERED_PERCENT NUMBER (5,2) DEFAULT 0  NOT NULL , 
     SRVC_LEVEL_ANSWERED_PERCENT_2 NUMBER (5,2) DEFAULT 0  NOT NULL , 
     CREATE_DATE DATE DEFAULT SYSDATE  NOT NULL , 
     LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NOT NULL 
    ) 
    LOGGING 
;


CREATE INDEX CC_F_FORECAST_INTERVAL__IDXv2 ON CC_F_FORECAST_INTERVAL 
    ( 
     D_UNIT_OF_WORK_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_FORECAST_INTERVAL__IDXv3 ON CC_F_FORECAST_INTERVAL 
    ( 
     D_INTERVAL_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_FORECAST_INTERVAL__IDXv4 ON CC_F_FORECAST_INTERVAL 
    ( 
     D_DATE_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_FORECAST_INTERVAL__IDXv5 ON CC_F_FORECAST_INTERVAL 
    ( 
     D_PRODUCTION_PLAN_HORIZON_ID ASC 
    ) 
    LOGGING 
;

ALTER TABLE CC_F_FORECAST_INTERVAL 
    ADD CONSTRAINT CC_F_FORECAST_INTERVAL_PK PRIMARY KEY ( F_FORECAST_INTERVAL_ID ) ;


ALTER TABLE CC_F_FORECAST_INTERVAL 
    ADD CONSTRAINT CC_F_FCST_INTERVAL__UN UNIQUE ( D_PRODUCTION_PLAN_HORIZON_ID , D_DATE_ID , D_UNIT_OF_WORK_ID , D_INTERVAL_ID , FORECAST_VERSION ) ;



CREATE TABLE CC_F_IVR_SELF_SERVICE_USAGE 
    ( 
     IVR_SELF_SERVICE_USAGE_ID NUMBER (19)  NOT NULL , 
     D_PROJECT_ID NUMBER (19)  NOT NULL , 
     D_PROGRAM_ID NUMBER (19)  NOT NULL , 
     D_GEOGRAPHY_MASTER_ID NUMBER (19)  NOT NULL , 
     D_UNIT_OF_WORK_ID NUMBER (19)  NOT NULL , 
     D_INTERVAL_ID NUMBER (19)  NOT NULL , 
     D_DATE_ID NUMBER (19)  NOT NULL , 
     D_IVR_SELF_SERVICE_PATH_ID NUMBER (19)  NOT NULL , 
     CONTACTS_ENTERING NUMBER (10) DEFAULT 0  NOT NULL , 
     CONTACTS_TRANSFERRED NUMBER (10)  NOT NULL , 
     CONTACTS_COMPLETED NUMBER (10)  NOT NULL , 
     MINUTES_IN_IVR_TRANSFERRED NUMBER (12,2)  NOT NULL , 
     MINUTES_IN_IVR_COMPLETED NUMBER (12,2)  NOT NULL , 
     CREATE_DATE DATE DEFAULT SYSDATE  NOT NULL , 
     LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NOT NULL 
    ) 
    LOGGING 
;


CREATE INDEX CC_F_IVR_SLF_SVC_D_PTH_ID_IDX ON CC_F_IVR_SELF_SERVICE_USAGE 
    ( 
     D_IVR_SELF_SERVICE_PATH_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_IVR_SLF_SVC_D_PRJ_ID_IDX ON CC_F_IVR_SELF_SERVICE_USAGE 
    ( 
     D_PROJECT_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_IVR_SLF_SVC_D_PRG_ID_IDX ON CC_F_IVR_SELF_SERVICE_USAGE 
    ( 
     D_PROGRAM_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_IVR_SLF_SVC_D_GEO_ID_IDX ON CC_F_IVR_SELF_SERVICE_USAGE 
    ( 
     D_GEOGRAPHY_MASTER_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_IVR_SLF_SVC_D_UOW_ID_IDX ON CC_F_IVR_SELF_SERVICE_USAGE 
    ( 
     D_UNIT_OF_WORK_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_IVR_SLF_SVC_D_INT_ID_IDX ON CC_F_IVR_SELF_SERVICE_USAGE 
    ( 
     D_INTERVAL_ID ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_F_IVR_SLF_SVC_D_DT_ID_IDX ON CC_F_IVR_SELF_SERVICE_USAGE 
    ( 
     D_DATE_ID ASC 
    ) 
    LOGGING 
;

ALTER TABLE CC_F_IVR_SELF_SERVICE_USAGE 
    ADD CONSTRAINT CC_F_IVR_SELF_SERVICE_USAGE_PK PRIMARY KEY ( IVR_SELF_SERVICE_USAGE_ID ) ;


ALTER TABLE CC_F_IVR_SELF_SERVICE_USAGE 
    ADD CONSTRAINT CC_F_IVR_SELF_SVC_USAGE__UN UNIQUE ( D_IVR_SELF_SERVICE_PATH_ID , D_PROJECT_ID , D_PROGRAM_ID , D_GEOGRAPHY_MASTER_ID , D_UNIT_OF_WORK_ID , D_INTERVAL_ID , D_DATE_ID ) ;



CREATE TABLE CC_F_PROJECT_BY_DATE 
    ( 
     F_PROJECT_BY_DATE_ID NUMBER (19)  NOT NULL , 
     D_DATE_ID NUMBER (19)  NOT NULL , 
     D_PROJECT_TARGETS_ID NUMBER (19)  NOT NULL , 
     D_PROGRAM_ID NUMBER (19)  NOT NULL , 
     D_GEOGRAPHY_MASTER_ID NUMBER (19)  NOT NULL , 
     HANDLE_CALLS_COUNT NUMBER (10)  NOT NULL , 
     HANDLE_TIME_SECONDS NUMBER (10,2)  NOT NULL , 
     INTERNAL_CALLS_COUNT NUMBER (10)  NOT NULL , 
     INTERNAL_SECONDS NUMBER (10,2)  NOT NULL , 
     EXTERNAL_CALLS_COUNT NUMBER (10)  NOT NULL , 
     EXTERNAL_SECONDS NUMBER (10,2)  NOT NULL , 
     HOLD_SECONDS NUMBER (10,2)  NOT NULL , 
     RING_SECONDS NUMBER  NOT NULL , 
     TALK_SECONDS NUMBER (10,2)  NOT NULL , 
     WRAP_SECONDS NUMBER (10,2)  NOT NULL , 
     LOGIN_SECONDS NUMBER (10,2)  NOT NULL , 
     SCHEDULED_SHIFT_MINUTES NUMBER (10,2) , 
     ACTUAL_SHIFT_MINUTES NUMBER (10,2) , 
     ACTUAL_OVERTIME_MINUTES NUMBER (10,2) , 
     IDLE_SECONDS NUMBER (10,2)  NOT NULL , 
     NOT_READY_SECONDS NUMBER (10,2)  NOT NULL , 
     TALK_RESERVE_SECONDS NUMBER (10,2) , 
     PREDICTIVE_TALK_SECONDS NUMBER (10,2) , 
     PREVIEW_TALK_SECONDS NUMBER (10,2) , 
     PREDICTIVE_CALLS_COUNT NUMBER (10) , 
     PREVIEW_CALLS_COUNT NUMBER (10) , 
     CREATE_DATE DATE DEFAULT SYSDATE  NOT NULL , 
     LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NOT NULL 
    ) 
    LOGGING 
;


CREATE UNIQUE INDEX CC_F_PROJECT_BY_DATE__IDX ON CC_F_PROJECT_BY_DATE 
    ( 
     F_PROJECT_BY_DATE_ID ASC 
    ) 
    LOGGING 
;
CREATE UNIQUE INDEX CC_F_PROJECT_BY_DATE__IDX2 ON CC_F_PROJECT_BY_DATE 
    ( 
     D_DATE_ID ASC , 
     D_PROJECT_TARGETS_ID ASC , 
     D_PROGRAM_ID ASC , 
     D_GEOGRAPHY_MASTER_ID ASC 
    ) 
    LOGGING 
;

ALTER TABLE CC_F_PROJECT_BY_DATE 
    ADD CONSTRAINT CC_F_PROJECT_BY_DATE_PK PRIMARY KEY ( F_PROJECT_BY_DATE_ID ) ;


ALTER TABLE CC_F_PROJECT_BY_DATE 
    ADD CONSTRAINT CC_F_PROJECT_BY_DATE__UN UNIQUE ( D_DATE_ID , D_PROJECT_TARGETS_ID , D_PROGRAM_ID , D_GEOGRAPHY_MASTER_ID ) ;



CREATE TABLE CC_L_ERROR 
    ( 
     ID NUMBER (19)  NOT NULL , 
     MESSAGE VARCHAR2 (255 BYTE) , 
     ERROR_FILE_PATH VARCHAR2 (255 BYTE) , 
     ERROR_DATE DATE , 
     JOB_NAME VARCHAR2 (255 BYTE) , 
     TRANSFORM_NAME VARCHAR2 (255 BYTE) 
    ) 
    LOGGING 
;



ALTER TABLE CC_L_ERROR 
    ADD CONSTRAINT CC_L_ERROR_PK PRIMARY KEY ( ID ) ;



CREATE TABLE CC_L_PATCH_LOG 
    ( 
     PATCH_LOG_ID NUMBER (19)  NOT NULL , 
     PATCH_VERSION VARCHAR2 (30)  NOT NULL , 
     SCRIPT_SEQUENCE NUMBER (7)  NOT NULL , 
     SCRIPT_NAME VARCHAR2 (255)  NOT NULL , 
     SCRIPT_RUN_DATE DATE DEFAULT SYSDATE  NOT NULL 
    ) 
    LOGGING 
;



ALTER TABLE CC_L_PATCH_LOG 
    ADD CONSTRAINT CC_L_PATCH_LOG_PK PRIMARY KEY ( PATCH_LOG_ID ) ;


ALTER TABLE CC_L_PATCH_LOG 
    ADD CONSTRAINT CC_L_PATCH_LOG__UN UNIQUE ( PATCH_VERSION , SCRIPT_NAME ) ;


ALTER TABLE CC_L_PATCH_LOG 
    ADD CONSTRAINT CC_L_PATCH_LOG__UNv1 UNIQUE ( PATCH_VERSION , SCRIPT_SEQUENCE ) ;



CREATE TABLE CC_L_TRANSFORMATION 
    ( 
     ID_BATCH NUMBER (19)  NOT NULL , 
     CHANNEL_ID VARCHAR2 (255 BYTE) , 
     TRANSNAME VARCHAR2 (255 BYTE) , 
     STATUS VARCHAR2 (15 BYTE) , 
     LINES_READ NUMBER (19) , 
     LINES_WRITTEN NUMBER (19) , 
     LINES_UPDATED NUMBER (19) , 
     LINES_INPUT NUMBER (19) , 
     LINES_OUTPUT NUMBER (19) , 
     LINES_REJECTED NUMBER (19) , 
     ERRORS NUMBER (19) , 
     STARTDATE DATE , 
     ENDDATE DATE , 
     LOGDATE DATE , 
     DEPDATE DATE , 
     REPLAYDATE DATE , 
     LOG_FIELD CLOB 
    ) 
    LOGGING 
;


CREATE UNIQUE INDEX CC_L_TRANSFORMATION_IDX1 ON CC_L_TRANSFORMATION 
    ( 
     ID_BATCH ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_L_TRANSFORMATION_IDX2 ON CC_L_TRANSFORMATION 
    ( 
     ERRORS ASC , 
     STATUS ASC , 
     TRANSNAME ASC 
    ) 
    LOGGING 
;

ALTER TABLE CC_L_TRANSFORMATION 
    ADD CONSTRAINT CC_L_TRANSFORMATION_PK PRIMARY KEY ( ID_BATCH ) ;



CREATE TABLE D_DATA_TYPE 
    ( 
     D_DATA_TYPE_ID NUMBER (19)  NOT NULL , 
     NAME VARCHAR2 (50) , 
     VALUE_TABLE VARCHAR2 (50) , 
     CREATE_DATE DATE  NOT NULL , 
     CREATED_BY VARCHAR2 (50) , 
     LAST_MODIFIED_DATE DATE , 
     UPDATED_BY VARCHAR2 (50) 
    ) 
    LOGGING 
;



ALTER TABLE D_DATA_TYPE 
    ADD CONSTRAINT D_DATA_TYPE_PK PRIMARY KEY ( D_DATA_TYPE_ID ) ;



CREATE TABLE D_DIVISION 
    ( 
     D_DIVISION_ID NUMBER  NOT NULL , 
     DIVISION_NAME VARCHAR2 (100) , 
     D_SEGMENT_ID NUMBER  NOT NULL , 
     CREATE_DATE DATE , 
     LAST_MODIFIED_DATE DATE 
    ) 
    LOGGING 
;



ALTER TABLE D_DIVISION 
    ADD CONSTRAINT D_DIVISION_PK PRIMARY KEY ( D_DIVISION_ID ) ;



CREATE TABLE D_GEOGRAPHY_MASTER 
    ( 
     D_GEOGRAPHY_MASTER_ID NUMBER (19)  NOT NULL , 
     GEOGRAPHY_NAME VARCHAR2 (250)  NOT NULL , 
     COUNTRY_ID NUMBER  NOT NULL , 
     STATE_ID NUMBER  NOT NULL , 
     PROVINCE_ID NUMBER  NOT NULL , 
     DISTRICT_ID NUMBER  NOT NULL , 
     REGION_ID NUMBER  NOT NULL , 
     CREATE_DATE DATE , 
     LAST_MODIFIED_DATE DATE 
    ) 
    LOGGING 
;



ALTER TABLE D_GEOGRAPHY_MASTER 
    ADD CONSTRAINT D_GEOGRAPHY_MASTER_PK PRIMARY KEY ( D_GEOGRAPHY_MASTER_ID ) ;


ALTER TABLE D_GEOGRAPHY_MASTER 
    ADD CONSTRAINT D_GEOGRAPHY_LKUP_NAME_UN UNIQUE ( GEOGRAPHY_NAME ) ;


ALTER TABLE D_GEOGRAPHY_MASTER 
    ADD CONSTRAINT D_GEOGRAPHY_MASTER__UN UNIQUE ( COUNTRY_ID , STATE_ID , PROVINCE_ID , DISTRICT_ID , REGION_ID ) ;



CREATE TABLE D_METRIC_DEFINITION 
    ( 
     D_METRIC_DEFINITION_ID NUMBER  NOT NULL , 
     D_DATA_TYPE_ID NUMBER (19)  NOT NULL , 
     NAME VARCHAR2 (50) , 
     LABEL VARCHAR2 (50) , 
     TYPE VARCHAR2 (50) , 
     CATEGORY VARCHAR2 (50) , 
     VALUE_TYPE VARCHAR2 (50) , 
     STATUS VARCHAR2 (50) , 
     HAS_TARGET VARCHAR2 (50) , 
     HAS_FORECAST VARCHAR2 (50) , 
     IS_CALCULATED VARCHAR2 (50) , 
     FUNCTIONAL_AREA VARCHAR2 (50) , 
     RECORD_EFF_DT DATE , 
     RECORD_END_DT DATE , 
     CREATE_DATE DATE , 
     CREATED_BY VARCHAR2 (50) , 
     LAST_MODIFIED_DATE DATE , 
     UPDATED_BY VARCHAR2 (50) 
    ) 
    LOGGING 
;



ALTER TABLE D_METRIC_DEFINITION 
    ADD CONSTRAINT M_DEF_HAS_TARGET_CK 
    CHECK (HAS_TARGET IN ('Y', 'N'))
;


ALTER TABLE D_METRIC_DEFINITION 
    ADD CONSTRAINT M_DEF_HAS_FORECAST_CK 
    CHECK (HAS_FORECAST IN ('Y', 'N'))
;


ALTER TABLE D_METRIC_DEFINITION 
    ADD CONSTRAINT M_DEF_IS_CALCULATED_CK 
    CHECK (IS_CALCULATED IN ('Y', 'N'))
;


ALTER TABLE D_METRIC_DEFINITION 
    ADD CONSTRAINT D_METRIC_DEFINITION_PK PRIMARY KEY ( D_METRIC_DEFINITION_ID ) ;



CREATE TABLE D_METRIC_PROJECT 
    ( 
     D_METRIC_PROJECT_ID NUMBER (19)  NOT NULL , 
     D_PROJECT_ID NUMBER (19)  NOT NULL , 
     D_PROGRAM_ID NUMBER (19)  NOT NULL , 
     D_GEOGRAPHY_MASTER_ID NUMBER (19)  NOT NULL , 
     D_METRIC_DEFINITION_ID NUMBER  NOT NULL , 
     SUPPLY_FORECAST VARCHAR2 (50) , 
     SUPPLY_TARGET VARCHAR2 (50) , 
     IS_SLA VARCHAR2 (50) , 
     SLA_TYPE VARCHAR2 (50) , 
     SLA_THRESHOLD VARCHAR2 (50) , 
     RECORD_EFF_DT DATE , 
     RECORD_END_DT DATE , 
     CREATE_DATE DATE , 
     CREATED_BY VARCHAR2 (50) , 
     LAST_MODIFIED_DATE DATE , 
     UPDATED_BY VARCHAR2 (50) 
    ) 
    LOGGING 
;



ALTER TABLE D_METRIC_PROJECT 
    ADD CONSTRAINT M_PROJ_IS_SLA_CK 
    CHECK (IS_SLA IN ('Y', 'N'))
;


ALTER TABLE D_METRIC_PROJECT 
    ADD CONSTRAINT M_PROJ_SUPPLY_FORECAST_CK 
    CHECK (SUPPLY_FORECAST IN ('Y', 'N'))
;


ALTER TABLE D_METRIC_PROJECT 
    ADD CONSTRAINT M_PROJ_SUPPLY_TARGET_CK 
    CHECK (SUPPLY_TARGET IN ('Y', 'N'))
;


ALTER TABLE D_METRIC_PROJECT 
    ADD CONSTRAINT D_METRIC_PROJECT_PK PRIMARY KEY ( D_METRIC_PROJECT_ID ) ;



CREATE TABLE D_PROGRAM 
    ( 
     D_PROGRAM_ID NUMBER (19)  NOT NULL , 
     PROGRAM_NAME VARCHAR2 (50)  NOT NULL , 
     CREATE_DATE DATE , 
     LAST_MODIFIED_DATE DATE 
    ) 
    LOGGING 
;



ALTER TABLE D_PROGRAM 
    ADD CONSTRAINT D_PROGRAM_PK PRIMARY KEY ( D_PROGRAM_ID ) ;


ALTER TABLE D_PROGRAM 
    ADD CONSTRAINT D_PROGRAM_UNK UNIQUE ( PROGRAM_NAME ) ;



CREATE TABLE D_PROJECT 
    ( 
     D_PROJECT_ID NUMBER (19)  NOT NULL , 
     PROJECT_NAME VARCHAR2 (50)  NOT NULL , 
     D_DIVISION_ID NUMBER  NOT NULL , 
     CREATE_DATE DATE , 
     LAST_MODIFIED_DATE DATE 
    ) 
    LOGGING 
;



ALTER TABLE D_PROJECT 
    ADD CONSTRAINT D_PROJECT_PK PRIMARY KEY ( D_PROJECT_ID ) ;


ALTER TABLE D_PROJECT 
    ADD CONSTRAINT D_PROJECT_UNK UNIQUE ( PROJECT_NAME ) ;



CREATE TABLE D_REPORTING_PERIOD 
    ( 
     D_REPORTING_PERIOD_ID NUMBER (19)  NOT NULL , 
     TYPE VARCHAR2 (50) , 
     START_DATE DATE , 
     END_DATE DATE , 
     MONTH VARCHAR2 (50) , 
     YEAR NUMBER (19) , 
     CREATE_DATE DATE , 
     CREATED_BY VARCHAR2 (50) , 
     LAST_MODIFIED_DATE DATE , 
     UPDATED_BY VARCHAR2 (50) 
    ) 
    LOGGING 
;



ALTER TABLE D_REPORTING_PERIOD 
    ADD CONSTRAINT D_REPORTING_PERIOD_PK PRIMARY KEY ( D_REPORTING_PERIOD_ID ) ;



CREATE TABLE D_SEGMENT 
    ( 
     D_SEGMENT_ID NUMBER  NOT NULL , 
     SEGMENT_NAME VARCHAR2 (100) , 
     CREATE_DATE DATE , 
     LAST_MODIFIED_DATE DATE 
    ) 
    LOGGING 
;



ALTER TABLE D_SEGMENT 
    ADD CONSTRAINT D_SEGMENT_PK PRIMARY KEY ( D_SEGMENT_ID ) ;



CREATE TABLE F_METRIC 
    ( 
     F_METRIC_ID NUMBER (19)  NOT NULL , 
     D_METRIC_PROJECT_ID NUMBER (19)  NOT NULL , 
     D_REPORTING_PERIOD_ID NUMBER (19)  NOT NULL , 
     APPROVED VARCHAR2 (50) , 
     APPROVED_DATE DATE , 
     ACTUAL_VALUE NUMBER (19,6) , 
     ACTUAL_RECEIVED_DATE DATE , 
     FORECAST_VALUE NUMBER (19,6) , 
     FORECAST_RECEIVED_DATE DATE , 
     TARGET_VALUE NUMBER (19,6) , 
     TARGET_RECEIVED_DATE DATE , 
     COMMENTS VARCHAR2 (4000) , 
     CREATE_DATE DATE , 
     CREATED_BY VARCHAR2 (50) , 
     LAST_MODIFIED_DATE DATE , 
     UPDATED_BY VARCHAR2 (50) 
    ) 
    LOGGING 
;



ALTER TABLE F_METRIC 
    ADD CONSTRAINT F_METRIC_PK PRIMARY KEY ( F_METRIC_ID ) ;




ALTER TABLE CC_D_FORECAST_NOTES 
    ADD CONSTRAINT CC_D_FCST_NTES_PRD_PLN_HRZN_FK FOREIGN KEY 
    ( 
     PRODUCTION_PLAN_HORIZON_ID
    ) 
    REFERENCES CC_D_PRODUCTION_PLAN_HORIZON 
    ( 
     PRODUCTION_PLAN_HRZN_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_D_PROD_PLANNING_TARGET 
    ADD CONSTRAINT CC_D_PRD_PLN_TRGT_CC_D_PRJ_FK FOREIGN KEY 
    ( 
     D_PROJECT_ID
    ) 
    REFERENCES D_PROJECT 
    ( 
     D_PROJECT_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_D_PROD_PLANNING_TARGET 
    ADD CONSTRAINT CC_D_PRD_PLN_TRGT_CC_D_TRGT_FK FOREIGN KEY 
    ( 
     D_TARGET_ID
    ) 
    REFERENCES CC_D_TARGET 
    ( 
     D_TARGET_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_D_PROJECT_TARGETS 
    ADD CONSTRAINT CC_D_PRJ_TARGETS_D_PRJ_FK FOREIGN KEY 
    ( 
     PROJECT_ID
    ) 
    REFERENCES D_PROJECT 
    ( 
     D_PROJECT_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_D_PRODUCTION_PLAN 
    ADD CONSTRAINT CC_D_PROD_PLAN_D_GEO_FK FOREIGN KEY 
    ( 
     GEOGRAPHY_MASTER_ID
    ) 
    REFERENCES D_GEOGRAPHY_MASTER 
    ( 
     D_GEOGRAPHY_MASTER_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_D_PRODUCTION_PLAN 
    ADD CONSTRAINT CC_D_PROD_PLAN_D_PRG_FK FOREIGN KEY 
    ( 
     PROGRAM_ID
    ) 
    REFERENCES D_PROGRAM 
    ( 
     D_PROGRAM_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_D_PRODUCTION_PLAN 
    ADD CONSTRAINT CC_D_PROD_PLAN_D_PRJ_FK FOREIGN KEY 
    ( 
     PROJECT_ID
    ) 
    REFERENCES D_PROJECT 
    ( 
     D_PROJECT_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_AGENT_BY_DATE 
    ADD CONSTRAINT CC_F_AGENT_DATE_D_AGENT_FK FOREIGN KEY 
    ( 
     D_AGENT_ID
    ) 
    REFERENCES CC_D_AGENT 
    ( 
     D_AGENT_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_AGENT_BY_DATE 
    ADD CONSTRAINT CC_F_AGENT_DATE_D_AGENT_MGR_FK FOREIGN KEY 
    ( 
     MANAGER_D_AGENT_ID
    ) 
    REFERENCES CC_D_AGENT 
    ( 
     D_AGENT_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_AGENT_BY_DATE 
    ADD CONSTRAINT CC_F_AGENT_DATE_D_AGENT_SUP_FK FOREIGN KEY 
    ( 
     SUPERVISOR_D_AGENT_ID
    ) 
    REFERENCES CC_D_AGENT 
    ( 
     D_AGENT_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_AGENT_BY_DATE 
    ADD CONSTRAINT CC_F_AGENT_DATE_D_DATES_FK FOREIGN KEY 
    ( 
     D_DATE_ID
    ) 
    REFERENCES CC_D_DATES 
    ( 
     D_DATE_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_AGENT_BY_DATE 
    ADD CONSTRAINT CC_F_AGENT_DATE_D_GEO_FK FOREIGN KEY 
    ( 
     D_GEOGRAPHY_MASTER_ID
    ) 
    REFERENCES D_GEOGRAPHY_MASTER 
    ( 
     D_GEOGRAPHY_MASTER_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_AGENT_BY_DATE 
    ADD CONSTRAINT CC_F_AGENT_DATE_D_GROUP_FK FOREIGN KEY 
    ( 
     D_GROUP_ID
    ) 
    REFERENCES CC_D_GROUP 
    ( 
     D_GROUP_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_AGENT_BY_DATE 
    ADD CONSTRAINT CC_F_AGENT_DATE_D_PRJ_FK FOREIGN KEY 
    ( 
     D_PROJECT_TARGETS_ID
    ) 
    REFERENCES CC_D_PROJECT_TARGETS 
    ( 
     D_PROJECT_TARGETS_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_AGENT_BY_DATE 
    ADD CONSTRAINT CC_F_AGENT_DATE_D_PROGRAM_FK FOREIGN KEY 
    ( 
     D_PROGRAM_ID
    ) 
    REFERENCES D_PROGRAM 
    ( 
     D_PROGRAM_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_AGENT_BY_DATE 
    ADD CONSTRAINT CC_F_AGENT_DATE_D_SITE_FK FOREIGN KEY 
    ( 
     D_SITE_ID
    ) 
    REFERENCES CC_D_SITE 
    ( 
     D_SITE_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_AGENT_ACTIVITY_BY_DATE 
    ADD CONSTRAINT CC_F_AGNT_ACT_D_ACT_TYPE_FK FOREIGN KEY 
    ( 
     D_ACTIVITY_TYPE_ID
    ) 
    REFERENCES CC_D_ACTIVITY_TYPE 
    ( 
     D_ACTIVITY_TYPE_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_AGENT_ACTIVITY_BY_DATE 
    ADD CONSTRAINT CC_F_AGNT_ACT_D_DATES_FK FOREIGN KEY 
    ( 
     D_DATE_ID
    ) 
    REFERENCES CC_D_DATES 
    ( 
     D_DATE_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_AGENT_ACTIVITY_BY_DATE 
    ADD CONSTRAINT CC_F_AGNT_ACT_D_D_AGENT_FK FOREIGN KEY 
    ( 
     D_AGENT_ID
    ) 
    REFERENCES CC_D_AGENT 
    ( 
     D_AGENT_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_AGENT_ACTIVITY_BY_DATE 
    ADD CONSTRAINT CC_F_AGNT_ACT_D_GEO_MSTR_FK FOREIGN KEY 
    ( 
     D_GEOGRAPHY_MASTER_ID
    ) 
    REFERENCES D_GEOGRAPHY_MASTER 
    ( 
     D_GEOGRAPHY_MASTER_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_AGENT_ACTIVITY_BY_DATE 
    ADD CONSTRAINT CC_F_AGNT_ACT_D_GROUP_FK FOREIGN KEY 
    ( 
     D_GROUP_ID
    ) 
    REFERENCES CC_D_GROUP 
    ( 
     D_GROUP_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_AGENT_ACTIVITY_BY_DATE 
    ADD CONSTRAINT CC_F_AGNT_ACT_D_PROGRAM_FK FOREIGN KEY 
    ( 
     D_PROGRAM_ID
    ) 
    REFERENCES D_PROGRAM 
    ( 
     D_PROGRAM_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_AGENT_ACTIVITY_BY_DATE 
    ADD CONSTRAINT CC_F_AGNT_ACT_D_PROJECT_FK FOREIGN KEY 
    ( 
     D_PROJECT_ID
    ) 
    REFERENCES D_PROJECT 
    ( 
     D_PROJECT_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_AGENT_ACTIVITY_BY_DATE 
    ADD CONSTRAINT CC_F_AGNT_ACT_D_SITE_FK FOREIGN KEY 
    ( 
     D_SITE_ID
    ) 
    REFERENCES CC_D_SITE 
    ( 
     D_SITE_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_PROJECT_BY_DATE 
    ADD CONSTRAINT CC_F_PRJ_BY_DT_CC_D_DT_FK FOREIGN KEY 
    ( 
     D_DATE_ID
    ) 
    REFERENCES CC_D_DATES 
    ( 
     D_DATE_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_PROJECT_BY_DATE 
    ADD CONSTRAINT CC_F_PRJ_BY_DT_CC_D_GEO_M_FK FOREIGN KEY 
    ( 
     D_GEOGRAPHY_MASTER_ID
    ) 
    REFERENCES D_GEOGRAPHY_MASTER 
    ( 
     D_GEOGRAPHY_MASTER_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_PROJECT_BY_DATE 
    ADD CONSTRAINT CC_F_PRJ_BY_DT_CC_D_PRGM_FK FOREIGN KEY 
    ( 
     D_PROGRAM_ID
    ) 
    REFERENCES D_PROGRAM 
    ( 
     D_PROGRAM_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_PROJECT_BY_DATE 
    ADD CONSTRAINT CC_F_PRJ_BY_DT_CC_D_PRJ_TG_FK FOREIGN KEY 
    ( 
     D_PROJECT_TARGETS_ID
    ) 
    REFERENCES CC_D_PROJECT_TARGETS 
    ( 
     D_PROJECT_TARGETS_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE D_DIVISION 
    ADD CONSTRAINT D_DIVISION_SEGMENT_FK FOREIGN KEY 
    ( 
     D_SEGMENT_ID
    ) 
    REFERENCES D_SEGMENT 
    ( 
     D_SEGMENT_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE D_GEOGRAPHY_MASTER 
    ADD CONSTRAINT D_GM_CC_D_COUNTRY_FK FOREIGN KEY 
    ( 
     COUNTRY_ID
    ) 
    REFERENCES CC_D_COUNTRY 
    ( 
     COUNTRY_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE D_GEOGRAPHY_MASTER 
    ADD CONSTRAINT D_GM_CC_D_DISTRICT_FK FOREIGN KEY 
    ( 
     DISTRICT_ID
    ) 
    REFERENCES CC_D_DISTRICT 
    ( 
     DISTRICT_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE D_GEOGRAPHY_MASTER 
    ADD CONSTRAINT D_GM_CC_D_PROVINCE_FK FOREIGN KEY 
    ( 
     PROVINCE_ID
    ) 
    REFERENCES CC_D_PROVINCE 
    ( 
     PROVINCE_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE D_GEOGRAPHY_MASTER 
    ADD CONSTRAINT D_GM_CC_D_REGION_FK FOREIGN KEY 
    ( 
     REGION_ID
    ) 
    REFERENCES CC_D_REGION 
    ( 
     REGION_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE D_GEOGRAPHY_MASTER 
    ADD CONSTRAINT D_GM_CC_D_STATE_FK FOREIGN KEY 
    ( 
     STATE_ID
    ) 
    REFERENCES CC_D_STATE 
    ( 
     STATE_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_D_PRODUCTION_PLAN_HORIZON 
    ADD CONSTRAINT D_PRD_PLAN_HRZN_D_PRD_PLAN_FK FOREIGN KEY 
    ( 
     PRODUCTION_PLAN_ID
    ) 
    REFERENCES CC_D_PRODUCTION_PLAN 
    ( 
     PRODUCTION_PLAN_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE D_PROJECT 
    ADD CONSTRAINT D_PROJECT_D_DIVISION_FK FOREIGN KEY 
    ( 
     D_DIVISION_ID
    ) 
    REFERENCES D_DIVISION 
    ( 
     D_DIVISION_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_ACTUALS_IVR_INTERVAL 
    ADD CONSTRAINT F_ACTLS_IVR_INTRVL_D_DATES_FK FOREIGN KEY 
    ( 
     D_DATE_ID
    ) 
    REFERENCES CC_D_DATES 
    ( 
     D_DATE_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_ACTUALS_IVR_INTERVAL 
    ADD CONSTRAINT F_ACTLS_IVR_INTRVL_D_GEO_FK FOREIGN KEY 
    ( 
     D_GEOGRAPHY_MASTER_ID
    ) 
    REFERENCES D_GEOGRAPHY_MASTER 
    ( 
     D_GEOGRAPHY_MASTER_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_ACTUALS_IVR_INTERVAL 
    ADD CONSTRAINT F_ACTLS_IVR_INTRVL_D_INTRVL_FK FOREIGN KEY 
    ( 
     D_INTERVAL_ID
    ) 
    REFERENCES CC_D_INTERVAL 
    ( 
     D_INTERVAL_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_ACTUALS_IVR_INTERVAL 
    ADD CONSTRAINT F_ACTLS_IVR_INTRVL_D_PRG_FK FOREIGN KEY 
    ( 
     D_PROGRAM_ID
    ) 
    REFERENCES D_PROGRAM 
    ( 
     D_PROGRAM_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_ACTUALS_IVR_INTERVAL 
    ADD CONSTRAINT F_ACTLS_IVR_INTRVL_D_PRJ_FK FOREIGN KEY 
    ( 
     D_PROJECT_ID
    ) 
    REFERENCES D_PROJECT 
    ( 
     D_PROJECT_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_ACTUALS_IVR_INTERVAL 
    ADD CONSTRAINT F_ACTLS_IVR_INTRVL_D_UOW_FK FOREIGN KEY 
    ( 
     D_UNIT_OF_WORK_ID
    ) 
    REFERENCES CC_D_UNIT_OF_WORK 
    ( 
     UOW_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_ACTUALS_QUEUE_INTERVAL 
    ADD CONSTRAINT F_ACTLS_Q_INTRVL_D_AGENT_FK FOREIGN KEY 
    ( 
     D_AGENT_ID
    ) 
    REFERENCES CC_D_AGENT 
    ( 
     D_AGENT_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_ACTUALS_QUEUE_INTERVAL 
    ADD CONSTRAINT F_ACTLS_Q_INTRVL_D_CNTCT_Q_FK FOREIGN KEY 
    ( 
     D_CONTACT_QUEUE_ID
    ) 
    REFERENCES CC_D_CONTACT_QUEUE 
    ( 
     D_CONTACT_QUEUE_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_ACTUALS_QUEUE_INTERVAL 
    ADD CONSTRAINT F_ACTLS_Q_INTRVL_D_DATES_FK FOREIGN KEY 
    ( 
     D_DATE_ID
    ) 
    REFERENCES CC_D_DATES 
    ( 
     D_DATE_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_ACTUALS_QUEUE_INTERVAL 
    ADD CONSTRAINT F_ACTLS_Q_INTRVL_D_GEO_FK FOREIGN KEY 
    ( 
     D_GEOGRAPHY_MASTER_ID
    ) 
    REFERENCES D_GEOGRAPHY_MASTER 
    ( 
     D_GEOGRAPHY_MASTER_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_ACTUALS_QUEUE_INTERVAL 
    ADD CONSTRAINT F_ACTLS_Q_INTRVL_D_INT_FK FOREIGN KEY 
    ( 
     D_INTERVAL_ID
    ) 
    REFERENCES CC_D_INTERVAL 
    ( 
     D_INTERVAL_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_ACTUALS_QUEUE_INTERVAL 
    ADD CONSTRAINT F_ACTLS_Q_INTRVL_D_PRG_FK FOREIGN KEY 
    ( 
     D_PROGRAM_ID
    ) 
    REFERENCES D_PROGRAM 
    ( 
     D_PROGRAM_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_ACTUALS_QUEUE_INTERVAL 
    ADD CONSTRAINT F_ACTLS_Q_INTRVL_D_PRJ_FK FOREIGN KEY 
    ( 
     D_PROJECT_ID
    ) 
    REFERENCES D_PROJECT 
    ( 
     D_PROJECT_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_ACTUALS_QUEUE_INTERVAL 
    ADD CONSTRAINT F_ACTLS_Q_INTRVL_D_UOW_FK FOREIGN KEY 
    ( 
     D_UNIT_OF_WORK_ID
    ) 
    REFERENCES CC_D_UNIT_OF_WORK 
    ( 
     UOW_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_FORECAST_INTERVAL 
    ADD CONSTRAINT F_FORECAST_INT_D_DATES_FK FOREIGN KEY 
    ( 
     D_DATE_ID
    ) 
    REFERENCES CC_D_DATES 
    ( 
     D_DATE_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_FORECAST_INTERVAL 
    ADD CONSTRAINT F_FORECAST_INT_D_INT_FK FOREIGN KEY 
    ( 
     D_INTERVAL_ID
    ) 
    REFERENCES CC_D_INTERVAL 
    ( 
     D_INTERVAL_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_FORECAST_INTERVAL 
    ADD CONSTRAINT F_FORECAST_INT_D_PPH_FK FOREIGN KEY 
    ( 
     D_PRODUCTION_PLAN_HORIZON_ID
    ) 
    REFERENCES CC_D_PRODUCTION_PLAN_HORIZON 
    ( 
     PRODUCTION_PLAN_HRZN_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_FORECAST_INTERVAL 
    ADD CONSTRAINT F_FORECAST_INT_D_UOW_FK FOREIGN KEY 
    ( 
     D_UNIT_OF_WORK_ID
    ) 
    REFERENCES CC_D_UNIT_OF_WORK 
    ( 
     UOW_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_IVR_SELF_SERVICE_USAGE 
    ADD CONSTRAINT F_IVR_SELF_SVC_D_DATE_FK FOREIGN KEY 
    ( 
     D_DATE_ID
    ) 
    REFERENCES CC_D_DATES 
    ( 
     D_DATE_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_IVR_SELF_SERVICE_USAGE 
    ADD CONSTRAINT F_IVR_SELF_SVC_D_GEO_FK FOREIGN KEY 
    ( 
     D_GEOGRAPHY_MASTER_ID
    ) 
    REFERENCES D_GEOGRAPHY_MASTER 
    ( 
     D_GEOGRAPHY_MASTER_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_IVR_SELF_SERVICE_USAGE 
    ADD CONSTRAINT F_IVR_SELF_SVC_D_INT_FK FOREIGN KEY 
    ( 
     D_INTERVAL_ID
    ) 
    REFERENCES CC_D_INTERVAL 
    ( 
     D_INTERVAL_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_IVR_SELF_SERVICE_USAGE 
    ADD CONSTRAINT F_IVR_SELF_SVC_D_PRG_FK FOREIGN KEY 
    ( 
     D_PROGRAM_ID
    ) 
    REFERENCES D_PROGRAM 
    ( 
     D_PROGRAM_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_IVR_SELF_SERVICE_USAGE 
    ADD CONSTRAINT F_IVR_SELF_SVC_D_PRJ_FK FOREIGN KEY 
    ( 
     D_PROJECT_ID
    ) 
    REFERENCES D_PROJECT 
    ( 
     D_PROJECT_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_IVR_SELF_SERVICE_USAGE 
    ADD CONSTRAINT F_IVR_SELF_SVC_D_UOW_FK FOREIGN KEY 
    ( 
     D_UNIT_OF_WORK_ID
    ) 
    REFERENCES CC_D_UNIT_OF_WORK 
    ( 
     UOW_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_F_IVR_SELF_SERVICE_USAGE 
    ADD CONSTRAINT F_IVR_SLF_SVC_USG_SLF_SVC_FK FOREIGN KEY 
    ( 
     D_IVR_SELF_SERVICE_PATH_ID
    ) 
    REFERENCES CC_D_IVR_SELF_SERVICE_PATH 
    ( 
     D_IVR_SELF_SERVICE_PATH_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE F_METRIC 
    ADD CONSTRAINT F_METRIC__METRIC_PROJ_FK FOREIGN KEY 
    ( 
     D_METRIC_PROJECT_ID
    ) 
    REFERENCES D_METRIC_PROJECT 
    ( 
     D_METRIC_PROJECT_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE F_METRIC 
    ADD CONSTRAINT F_METRIC__RPT_PERIOD_FK FOREIGN KEY 
    ( 
     D_REPORTING_PERIOD_ID
    ) 
    REFERENCES D_REPORTING_PERIOD 
    ( 
     D_REPORTING_PERIOD_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE D_METRIC_DEFINITION 
    ADD CONSTRAINT METRIC_DEF__DATA_TYPE_FK FOREIGN KEY 
    ( 
     D_DATA_TYPE_ID
    ) 
    REFERENCES D_DATA_TYPE 
    ( 
     D_DATA_TYPE_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE D_METRIC_PROJECT 
    ADD CONSTRAINT METRIC_PROJ__GEO_FK FOREIGN KEY 
    ( 
     D_GEOGRAPHY_MASTER_ID
    ) 
    REFERENCES D_GEOGRAPHY_MASTER 
    ( 
     D_GEOGRAPHY_MASTER_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE D_METRIC_PROJECT 
    ADD CONSTRAINT METRIC_PROJ__METRIC_DEF_FK FOREIGN KEY 
    ( 
     D_METRIC_DEFINITION_ID
    ) 
    REFERENCES D_METRIC_DEFINITION 
    ( 
     D_METRIC_DEFINITION_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE D_METRIC_PROJECT 
    ADD CONSTRAINT METRIC_PROJ__PROGRAM_FK FOREIGN KEY 
    ( 
     D_PROGRAM_ID
    ) 
    REFERENCES D_PROGRAM 
    ( 
     D_PROGRAM_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE D_METRIC_PROJECT 
    ADD CONSTRAINT METRIC_PROJ__PROJECT_FK FOREIGN KEY 
    ( 
     D_PROJECT_ID
    ) 
    REFERENCES D_PROJECT 
    ( 
     D_PROJECT_ID
    ) 
    NOT DEFERRABLE 
;

CREATE OR REPLACE VIEW CC_D_ACTIVITY_TYPE_SV AS
SELECT CC_D_ACTIVITY_TYPE.* FROM CC_D_ACTIVITY_TYPE ;



CREATE OR REPLACE VIEW CC_D_AGENT_SV AS
SELECT CC_D_AGENT.* FROM CC_D_AGENT ;



CREATE OR REPLACE VIEW CC_D_CONTACT_QUEUE_SV AS
SELECT CC_D_CONTACT_QUEUE.* FROM CC_D_CONTACT_QUEUE ;



CREATE OR REPLACE VIEW CC_D_DATES_SV AS
SELECT CC_D_DATES.* FROM CC_D_DATES ;



CREATE OR REPLACE VIEW CC_D_FORECAST_NOTES_SV AS
SELECT CC_D_FORECAST_NOTES.* FROM CC_D_FORECAST_NOTES ;



CREATE OR REPLACE VIEW CC_D_GROUP_SV AS
SELECT CC_D_GROUP.* FROM CC_D_GROUP ;



CREATE OR REPLACE VIEW CC_D_INTERVAL_SV AS
SELECT CC_D_INTERVAL.* FROM CC_D_INTERVAL ;



CREATE OR REPLACE VIEW CC_D_IVR_SELF_SERVICE_PATH_SV AS
SELECT CC_D_IVR_SELF_SERVICE_PATH.* FROM CC_D_IVR_SELF_SERVICE_PATH ;



CREATE OR REPLACE VIEW CC_D_MANAGER_SV AS
SELECT CC_D_AGENT.* FROM CC_D_AGENT ;



CREATE OR REPLACE VIEW CC_D_PRODUCTION_PLAN_HORIZN_SV AS
SELECT CC_D_PRODUCTION_PLAN_HORIZON.* FROM CC_D_PRODUCTION_PLAN_HORIZON ;



CREATE OR REPLACE VIEW CC_D_PRODUCTION_PLAN_SV AS
SELECT CC_D_PRODUCTION_PLAN.* FROM CC_D_PRODUCTION_PLAN ;



CREATE OR REPLACE VIEW CC_D_PROJECT_TARGETS_SV AS
SELECT CC_D_PROJECT_TARGETS.* FROM CC_D_PROJECT_TARGETS ;



CREATE OR REPLACE VIEW CC_D_SITE_SV AS
SELECT CC_D_SITE.* FROM CC_D_SITE ;



CREATE OR REPLACE VIEW CC_D_SUPERVISOR_SV AS
SELECT CC_D_AGENT.* FROM CC_D_AGENT ;



CREATE OR REPLACE VIEW CC_D_UNIT_OF_WORK_SV AS
SELECT CC_D_UNIT_OF_WORK.* FROM CC_D_UNIT_OF_WORK ;



CREATE OR REPLACE VIEW CC_F_ACTUALS_IVR_INTERVAL_SV AS
SELECT CC_F_ACTUALS_IVR_INTERVAL.* FROM CC_F_ACTUALS_IVR_INTERVAL ;



CREATE OR REPLACE VIEW CC_F_ACTUALS_QUEUE_INTERVAL_SV AS
SELECT CC_F_ACTUALS_QUEUE_INTERVAL.* FROM CC_F_ACTUALS_QUEUE_INTERVAL ;



CREATE OR REPLACE VIEW CC_F_AGENT_ACTIVITY_BY_DATE_SV AS
SELECT CC_F_AGENT_ACTIVITY_BY_DATE.* FROM CC_F_AGENT_ACTIVITY_BY_DATE ;



CREATE OR REPLACE VIEW CC_F_AGENT_BY_DATE_SV AS
SELECT CC_F_AGENT_BY_DATE.* FROM CC_F_AGENT_BY_DATE ;



CREATE OR REPLACE VIEW CC_F_FORECAST_INTERVAL_SV AS
SELECT CC_F_FORECAST_INTERVAL.* FROM CC_F_FORECAST_INTERVAL ;



CREATE OR REPLACE VIEW CC_F_IVR_SELF_SERVICE_USAGE_SV AS
SELECT CC_F_IVR_SELF_SERVICE_USAGE.* FROM CC_F_IVR_SELF_SERVICE_USAGE ;



CREATE OR REPLACE VIEW D_DATA_TYPE_SV AS
SELECT D_DATA_TYPE.* FROM D_DATA_TYPE ;



CREATE OR REPLACE VIEW D_GEOGRAPHY_MASTER_SV AS
SELECT D_GEOGRAPHY_MASTER.* FROM D_GEOGRAPHY_MASTER ;



CREATE OR REPLACE VIEW D_METRIC_DEFINITION_SV AS
SELECT D_METRIC_DEFINITION.* FROM D_METRIC_DEFINITION ;



CREATE OR REPLACE VIEW D_METRIC_PROJECT_SV AS
SELECT D_METRIC_PROJECT.* FROM D_METRIC_PROJECT ;



CREATE OR REPLACE VIEW D_PROGRAM_SV AS
SELECT D_PROGRAM.* FROM D_PROGRAM ;



CREATE OR REPLACE VIEW D_PROJECT_SV AS
SELECT D_PROJECT.* FROM D_PROJECT ;



CREATE OR REPLACE VIEW D_REPORTING_PERIOD_SV AS
SELECT D_REPORTING_PERIOD.* FROM D_REPORTING_PERIOD ;



CREATE OR REPLACE VIEW F_METRIC_SV AS
SELECT F_METRIC.* FROM F_METRIC ;



CREATE SEQUENCE SEQ_CC_D_ACTIVITY_TYPE 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_D_AGENT 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_D_CONTACT_QUEUE 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_D_COUNTRY 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_D_DATES 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_D_DISTRICT 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_D_FORECAST_NOTES 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_D_GROUP 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_D_INTERVAL 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_D_IVR_SELF_SERVICE_PATH 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_D_PRODUCTION_PLAN 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_D_PROD_PLANNING_TARGET 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_D_PROD_PLAN_HORIZON 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_D_PROJECT_TARGETS 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_D_PROVINCE 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_D_REGION 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_D_SITE 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_D_STATE 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_D_TARGET 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_D_UNIT_OF_WORK 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_F_ACTUALS_IVR_INTERVAL 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_F_ACTUALS_Q_INTERVAL 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_F_AGENT_ACTVTY_BY_DATE 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_F_AGENT_BY_DATE 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_F_FORECAST_INTERVAL 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_F_IVR_SELF_SVC_USAGE 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_F_PROJECT_BY_DATE 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_L_ERROR 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_L_PATCH_LOG 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_D_DATA_TYPE 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_D_DIVISION 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 99999999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_D_GEO_MASTER 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_D_METRIC_DEFINITION 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_D_METRIC_PROJECT 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_D_PROGRAM 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_D_PROJECT 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_D_REPORTING_PERIOD 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_D_SEGMENT 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_F_METRIC 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE PUBLIC SYNONYM CC_D_ACTIVITY_TYPE_SV 
FOR CC_D_ACTIVITY_TYPE_SV
;
CREATE PUBLIC SYNONYM CC_D_AGENT_SV 
FOR CC_D_AGENT_SV
;
CREATE PUBLIC SYNONYM CC_D_CONTACT_QUEUE_SV 
FOR CC_D_CONTACT_QUEUE_SV
;
CREATE PUBLIC SYNONYM CC_D_DATES_SV 
FOR CC_D_DATES_SV
;
CREATE PUBLIC SYNONYM CC_D_GEOGRAPHY_MASTER_SV 
FOR CC_D_GEOGRAPHY_MASTER_SV
;
CREATE PUBLIC SYNONYM CC_D_INTERVAL_SV 
FOR CC_D_INTERVAL_SV
;
CREATE PUBLIC SYNONYM CC_D_IVR_SELF_SERVICE_PATH_SV 
FOR CC_D_IVR_SELF_SERVICE_PATH_SV
;
CREATE PUBLIC SYNONYM CC_D_MANAGER_SV 
FOR CC_D_MANAGER_SV
;
CREATE PUBLIC SYNONYM CC_D_PRODUCTION_PLAN_HORIZON_SV 
FOR CC_D_PRODUCTION_PLAN_HORIZON_SV
;
CREATE PUBLIC SYNONYM CC_D_PRODUCTION_PLAN_SV 
FOR CC_D_PRODUCTION_PLAN_SV
;
CREATE PUBLIC SYNONYM CC_D_PROGRAM_SV 
FOR CC_D_PROGRAM_SV
;
CREATE PUBLIC SYNONYM CC_D_PROJECT_SV 
FOR CC_D_PROJECT_SV
;
CREATE PUBLIC SYNONYM CC_D_PROJECT_TARGETS_SV 
FOR CC_D_PROJECT_TARGETS_SV
;
CREATE PUBLIC SYNONYM CC_D_SITE_SV 
FOR CC_D_SITE_SV
;
CREATE PUBLIC SYNONYM CC_D_SUPERVISOR_SV 
FOR CC_D_SUPERVISOR_SV
;
CREATE PUBLIC SYNONYM CC_D_UNIT_OF_WORK_SV 
FOR CC_D_UNIT_OF_WORK_SV
;
CREATE PUBLIC SYNONYM CC_F_ACTUALS_IVR_INTERVAL_SV 
FOR CC_F_ACTUALS_IVR_INTERVAL_SV
;
CREATE PUBLIC SYNONYM CC_F_ACTUALS_QUEUE_INTERVAL_SV 
FOR CC_F_ACTUALS_QUEUE_INTERVAL_SV
;
CREATE PUBLIC SYNONYM CC_F_AGENT_ACTIVITY_BY_DATE_SV 
FOR CC_F_AGENT_ACTIVITY_BY_DATE_SV
;
CREATE PUBLIC SYNONYM CC_F_AGENT_BY_DATE_SV 
FOR CC_F_AGENT_BY_DATE_SV
;
CREATE PUBLIC SYNONYM CC_F_FORECAST_INTERVAL_SV 
FOR CC_F_FORECAST_INTERVAL_SV
;
CREATE PUBLIC SYNONYM CC_F_IVR_SELF_SERVICE_USAGE_SV 
FOR CC_F_IVR_SELF_SERVICE_USAGE_SV
;
CREATE OR REPLACE TRIGGER BIU_CC_D_PRODUCTION_PLAN_HRZN 
    BEFORE INSERT OR UPDATE ON CC_D_PRODUCTION_PLAN_HORIZON 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.PRODUCTION_PLAN_HRZN_ID IS NULL THEN 
          SELECT SEQ_CC_D_PROD_PLAN_HORIZON.NEXTVAL INTO :NEW.PRODUCTION_PLAN_HRZN_ID FROM DUAL;      
END IF;
IF INSERTING THEN
  :NEW.CREATE_DATE := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DATE := SYSDATE;
END;   
/

ALTER TRIGGER BIU_CC_D_PRODUCTION_PLAN_HRZN enable;


CREATE OR REPLACE TRIGGER BIU_CC_L_PATCH_LOG 
    BEFORE INSERT OR UPDATE ON CC_L_PATCH_LOG 
    FOR EACH ROW 
BEGIN
  IF INSERTING AND :NEW.PATCH_LOG_ID IS NULL THEN 
    SELECT SEQ_CC_L_PATCH_LOG.NEXTVAL INTO :NEW.PATCH_LOG_ID FROM DUAL;
  END IF;
END; 
/

ALTER TRIGGER BIU_CC_L_PATCH_LOG enable;


CREATE OR REPLACE TRIGGER BI_CC_D_ACTIVITY_TYPE 
    BEFORE INSERT ON CC_D_ACTIVITY_TYPE 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.D_ACTIVITY_TYPE_ID IS NULL THEN 
          SELECT SEQ_CC_D_ACTIVITY_TYPE.NEXTVAL INTO :NEW.D_ACTIVITY_TYPE_ID FROM DUAL;      
END IF;
END;  
/

ALTER TRIGGER BI_CC_D_ACTIVITY_TYPE enable;


CREATE OR REPLACE TRIGGER BI_CC_D_AGENT 
    BEFORE INSERT ON CC_D_AGENT 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.D_AGENT_ID IS NULL THEN 
          SELECT SEQ_CC_D_AGENT.NEXTVAL INTO :NEW.D_AGENT_ID FROM DUAL;      
END IF;
END;  
/

ALTER TRIGGER BI_CC_D_AGENT enable;


CREATE OR REPLACE TRIGGER BI_CC_D_CONTACT_QUEUE 
    BEFORE INSERT ON CC_D_CONTACT_QUEUE 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.D_CONTACT_QUEUE_ID IS NULL THEN 
          SELECT SEQ_CC_D_CONTACT_QUEUE.NEXTVAL INTO :NEW.D_CONTACT_QUEUE_ID FROM DUAL;      
END IF;
END;  
/

ALTER TRIGGER BI_CC_D_CONTACT_QUEUE enable;


CREATE OR REPLACE TRIGGER BI_CC_D_COUNTRY 
    BEFORE INSERT OR UPDATE ON CC_D_COUNTRY 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.COUNTRY_ID IS NULL THEN 
          SELECT SEQ_CC_D_COUNTRY.NEXTVAL INTO :NEW.COUNTRY_ID FROM DUAL;
END IF;
END;   
/

ALTER TRIGGER BI_CC_D_COUNTRY enable;


CREATE OR REPLACE TRIGGER BI_CC_D_DATES 
    BEFORE INSERT ON CC_D_DATES 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.D_DATE_ID IS NULL THEN 
          SELECT SEQ_CC_D_DATES.NEXTVAL INTO :NEW.D_DATE_ID FROM DUAL;      
END IF;
END;  
/

ALTER TRIGGER BI_CC_D_DATES enable;


CREATE OR REPLACE TRIGGER BI_CC_D_DISTRICT 
    BEFORE INSERT ON CC_D_DISTRICT 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.DISTRICT_ID IS NULL THEN 
          SELECT SEQ_CC_D_DISTRICT.NEXTVAL INTO :NEW.DISTRICT_ID FROM DUAL;
END IF;
END;   
/

ALTER TRIGGER BI_CC_D_DISTRICT enable;


CREATE OR REPLACE TRIGGER BI_CC_D_FORECAST_NOTES 
    BEFORE INSERT ON CC_D_FORECAST_NOTES 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.D_FORECAST_NOTES_ID IS NULL THEN 
          SELECT SEQ_CC_D_FORECAST_NOTES.NEXTVAL INTO :NEW.D_FORECAST_NOTES_ID FROM DUAL;      
END IF;
END;  
/

ALTER TRIGGER BI_CC_D_FORECAST_NOTES enable;


CREATE OR REPLACE TRIGGER BI_CC_D_GROUP 
    BEFORE INSERT ON CC_D_GROUP 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.D_GROUP_ID IS NULL THEN 
          SELECT SEQ_CC_D_GROUP.NEXTVAL INTO :NEW.D_GROUP_ID FROM DUAL;
END IF;
END;  
/

ALTER TRIGGER BI_CC_D_GROUP enable;


CREATE OR REPLACE TRIGGER BI_CC_D_INTERVAL 
    BEFORE INSERT ON CC_D_INTERVAL 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.D_INTERVAL_ID IS NULL THEN 
          SELECT SEQ_CC_D_INTERVAL.NEXTVAL INTO :NEW.D_INTERVAL_ID FROM DUAL;      
END IF;
END;  
/

ALTER TRIGGER BI_CC_D_INTERVAL enable;


CREATE OR REPLACE TRIGGER BI_CC_D_IVR_SELF_SVC_PATH 
    BEFORE INSERT ON CC_D_IVR_SELF_SERVICE_PATH 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.D_IVR_SELF_SERVICE_PATH_ID IS NULL THEN 
          SELECT SEQ_CC_D_IVR_SELF_SERVICE_PATH.NEXTVAL INTO :NEW.D_IVR_SELF_SERVICE_PATH_ID FROM DUAL;      
END IF;
END;  
/

ALTER TRIGGER BI_CC_D_IVR_SELF_SVC_PATH enable;


CREATE OR REPLACE TRIGGER BI_CC_D_PRODUCTION_PLAN 
    BEFORE INSERT ON CC_D_PRODUCTION_PLAN 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.PRODUCTION_PLAN_ID IS NULL THEN 
          SELECT SEQ_CC_D_PRODUCTION_PLAN.NEXTVAL INTO :NEW.PRODUCTION_PLAN_ID FROM DUAL;      
END IF;
END;  
/

ALTER TRIGGER BI_CC_D_PRODUCTION_PLAN enable;


CREATE OR REPLACE TRIGGER BI_CC_D_PROD_PLANNING_TARGET 
    BEFORE INSERT ON CC_D_PROD_PLANNING_TARGET 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.D_PROD_PLANNING_TARGET_ID IS NULL THEN 
          SELECT SEQ_CC_D_PROD_PLANNING_TARGET.NEXTVAL INTO :NEW.D_PROD_PLANNING_TARGET_ID FROM DUAL;
END IF;
END;   
/

ALTER TRIGGER BI_CC_D_PROD_PLANNING_TARGET enable;


CREATE OR REPLACE TRIGGER BI_CC_D_PROJECT_TARGETS 
    BEFORE INSERT ON CC_D_PROJECT_TARGETS 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.D_PROJECT_TARGETS_ID IS NULL THEN 
          SELECT SEQ_CC_D_PROJECT_TARGETS.NEXTVAL INTO :NEW.D_PROJECT_TARGETS_ID FROM DUAL;
END IF;
END;  
/

ALTER TRIGGER BI_CC_D_PROJECT_TARGETS enable;


CREATE OR REPLACE TRIGGER BI_CC_D_PROVINCE 
    BEFORE INSERT ON CC_D_PROVINCE 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.PROVINCE_ID IS NULL THEN 
          SELECT SEQ_CC_D_PROVINCE.NEXTVAL INTO :NEW.PROVINCE_ID FROM DUAL;
END IF;
END;  
/

ALTER TRIGGER BI_CC_D_PROVINCE enable;


CREATE OR REPLACE TRIGGER BI_CC_D_REGION 
    BEFORE INSERT ON CC_D_REGION 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.REGION_ID IS NULL THEN 
          SELECT SEQ_CC_D_REGION.NEXTVAL INTO :NEW.REGION_ID FROM DUAL;
END IF;
END;   
/

ALTER TRIGGER BI_CC_D_REGION enable;


CREATE OR REPLACE TRIGGER BI_CC_D_SITE 
    BEFORE INSERT ON CC_D_SITE 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.D_SITE_ID IS NULL THEN 
          SELECT SEQ_CC_D_SITE.NEXTVAL INTO :NEW.D_SITE_ID FROM DUAL;
END IF;
END;  
/

ALTER TRIGGER BI_CC_D_SITE enable;


CREATE OR REPLACE TRIGGER BI_CC_D_STATE 
    BEFORE INSERT ON CC_D_STATE 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.STATE_ID IS NULL THEN 
          SELECT SEQ_CC_D_STATE.NEXTVAL INTO :NEW.STATE_ID FROM DUAL;
END IF;
END;   
/

ALTER TRIGGER BI_CC_D_STATE enable;


CREATE OR REPLACE TRIGGER BI_CC_D_TARGET 
    BEFORE INSERT ON CC_D_TARGET 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.D_TARGET_ID IS NULL THEN 
          SELECT SEQ_CC_D_TARGET.NEXTVAL INTO :NEW.D_TARGET_ID FROM DUAL;
END IF;
END;   
/

ALTER TRIGGER BI_CC_D_TARGET enable;


CREATE OR REPLACE TRIGGER BI_CC_D_UNIT_OF_WORK 
    BEFORE INSERT ON CC_D_UNIT_OF_WORK 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.UOW_ID IS NULL THEN 
          SELECT SEQ_CC_D_UNIT_OF_WORK.NEXTVAL INTO :NEW.UOW_ID FROM DUAL;      
END IF;
END;  
/

ALTER TRIGGER BI_CC_D_UNIT_OF_WORK enable;


CREATE OR REPLACE TRIGGER BI_CC_F_ACTUALS_IVR_INTERVAL 
    BEFORE INSERT ON CC_F_ACTUALS_IVR_INTERVAL 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.F_ACTUALS_IVR_INTERVAL_ID IS NULL THEN 
          SELECT SEQ_CC_F_ACTUALS_IVR_INTERVAL.NEXTVAL INTO :NEW.F_ACTUALS_IVR_INTERVAL_ID FROM DUAL;      
END IF;
END;  
/

ALTER TRIGGER BI_CC_F_ACTUALS_IVR_INTERVAL enable;


CREATE OR REPLACE TRIGGER BI_CC_F_ACTUALS_Q_INTERVAL 
    BEFORE INSERT ON CC_F_ACTUALS_QUEUE_INTERVAL 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.F_CALL_CENTER_ACTLS_INTRVL_ID IS NULL THEN 
          SELECT SEQ_CC_F_ACTUALS_Q_INTERVAL.NEXTVAL INTO :NEW.F_CALL_CENTER_ACTLS_INTRVL_ID FROM DUAL;      
END IF;
END;  
/

ALTER TRIGGER BI_CC_F_ACTUALS_Q_INTERVAL enable;


CREATE OR REPLACE TRIGGER BI_CC_F_AGENT_ACTVTY_BY_DATE 
    BEFORE INSERT ON CC_F_AGENT_ACTIVITY_BY_DATE 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.F_AGENT_ACTIVITY_BY_DATE_ID IS NULL THEN 
          SELECT SEQ_CC_F_AGENT_ACTVTY_BY_DATE.NEXTVAL INTO :NEW.F_AGENT_ACTIVITY_BY_DATE_ID FROM DUAL;
END IF;
END;  
/

ALTER TRIGGER BI_CC_F_AGENT_ACTVTY_BY_DATE enable;


CREATE OR REPLACE TRIGGER BI_CC_F_AGENT_BY_DATE 
    BEFORE INSERT ON CC_F_AGENT_BY_DATE 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.F_AGENT_BY_DATE_ID IS NULL THEN 
          SELECT SEQ_CC_F_AGENT_BY_DATE.NEXTVAL INTO :NEW.F_AGENT_BY_DATE_ID FROM DUAL;
END IF;
END;  
/

ALTER TRIGGER BI_CC_F_AGENT_BY_DATE enable;


CREATE OR REPLACE TRIGGER BI_CC_F_FORECAST_INTERVAL 
    BEFORE INSERT ON CC_F_FORECAST_INTERVAL 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.F_FORECAST_INTERVAL_ID IS NULL THEN 
          SELECT SEQ_CC_F_FORECAST_INTERVAL.NEXTVAL INTO :NEW.F_FORECAST_INTERVAL_ID FROM DUAL;      
END IF;
END;  
/

ALTER TRIGGER BI_CC_F_FORECAST_INTERVAL enable;


CREATE OR REPLACE TRIGGER BI_CC_F_IVR_SELF_SVC_USAGE 
    BEFORE INSERT ON CC_F_IVR_SELF_SERVICE_USAGE 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.IVR_SELF_SERVICE_USAGE_ID IS NULL THEN 
          SELECT SEQ_CC_F_IVR_SELF_SVC_USAGE.NEXTVAL INTO :NEW.IVR_SELF_SERVICE_USAGE_ID FROM DUAL;      
END IF;
END;  
/

ALTER TRIGGER BI_CC_F_IVR_SELF_SVC_USAGE enable;


CREATE OR REPLACE TRIGGER BI_CC_F_PROJECT_BY_DATE 
    BEFORE INSERT ON CC_F_PROJECT_BY_DATE 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.F_PROJECT_BY_DATE_ID IS NULL THEN 
          SELECT SEQ_CC_F_PROJECT_BY_DATE.NEXTVAL INTO :NEW.F_PROJECT_BY_DATE_ID FROM DUAL;      
END IF;
END;  
/

ALTER TRIGGER BI_CC_F_PROJECT_BY_DATE enable;


CREATE OR REPLACE TRIGGER BI_CC_L_ERROR 
    BEFORE INSERT ON CC_L_ERROR 
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.ID IS NULL THEN 
          SELECT SEQ_CC_L_ERROR.NEXTVAL INTO :NEW.ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.ERROR_DATE := SYSDATE;
END IF;
END; 
/

ALTER TRIGGER BI_CC_L_ERROR enable;




CREATE OR REPLACE TRIGGER BIU_D_DATA_TYPE 
    BEFORE INSERT OR UPDATE ON D_DATA_TYPE 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.D_DATA_TYPE_ID IS NULL THEN 
          SELECT SEQ_D_DATA_TYPE.NEXTVAL INTO :NEW.D_DATA_TYPE_ID FROM DUAL;
	:NEW.CREATE_DATE := SYSDATE;
	:NEW.CREATED_BY := USER;
END IF;
:NEW.LAST_MODIFIED_DATE := SYSDATE;
:NEW.UPDATED_BY := USER;

END; 
/

ALTER TRIGGER BIU_D_DATA_TYPE ENABLE; 


CREATE OR REPLACE TRIGGER BIU_D_DIVISION 
    BEFORE INSERT OR UPDATE ON D_DIVISION 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.D_DIVISION_ID IS NULL THEN 
	SELECT SEQ_D_DIVISION.NEXTVAL INTO :NEW.D_DIVISION_ID FROM DUAL;
	:NEW.CREATE_DATE := SYSDATE;
END IF;
:NEW.LAST_MODIFIED_DATE := SYSDATE;
END;  
/

ALTER TRIGGER BIU_D_DIVISION ENABLE; 


CREATE OR REPLACE TRIGGER BIU_D_GEOGRAPHY_MASTER 
    BEFORE INSERT OR UPDATE ON D_GEOGRAPHY_MASTER 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.D_GEOGRAPHY_MASTER_ID IS NULL THEN 
          SELECT SEQ_D_GEO_MASTER.NEXTVAL INTO :NEW.D_GEOGRAPHY_MASTER_ID FROM DUAL;
	:NEW.CREATE_DATE := SYSDATE;
END IF;
:NEW.LAST_MODIFIED_DATE := SYSDATE;

END;  
/

ALTER TRIGGER BIU_D_GEOGRAPHY_MASTER ENABLE; 


CREATE OR REPLACE TRIGGER BIU_D_METRIC_DEFINITION 
    BEFORE INSERT OR UPDATE ON D_METRIC_DEFINITION 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.D_METRIC_DEFINITION_ID IS NULL THEN 
          SELECT SEQ_D_METRIC_DEFINITION.NEXTVAL INTO :NEW.D_METRIC_DEFINITION_ID FROM DUAL;
	:NEW.CREATE_DATE := SYSDATE;
	:NEW.CREATED_BY := USER;
END IF;
:NEW.LAST_MODIFIED_DATE := SYSDATE;
:NEW.UPDATED_BY := USER;

END; 
/

ALTER TRIGGER BIU_D_METRIC_DEFINITION ENABLE; 


CREATE OR REPLACE TRIGGER BIU_D_METRIC_PROJECT 
    BEFORE INSERT OR UPDATE ON D_METRIC_PROJECT 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.D_METRIC_PROJECT_ID IS NULL THEN 
          SELECT SEQ_D_METRIC_PROJECT.NEXTVAL INTO :NEW.D_METRIC_PROJECT_ID FROM DUAL;
	:NEW.CREATE_DATE := SYSDATE;
	:NEW.CREATED_BY := USER;
END IF;
:NEW.LAST_MODIFIED_DATE := SYSDATE;
:NEW.UPDATED_BY := USER;

END; 
/

ALTER TRIGGER BIU_D_METRIC_PROJECT ENABLE; 


CREATE OR REPLACE TRIGGER BIU_D_PROGRAM 
    BEFORE INSERT OR UPDATE ON D_PROGRAM 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.D_PROGRAM_ID IS NULL THEN 
          SELECT SEQ_D_PROGRAM.NEXTVAL INTO :NEW.D_PROGRAM_ID FROM DUAL;
	:NEW.CREATE_DATE := SYSDATE;
END IF;
:NEW.LAST_MODIFIED_DATE := SYSDATE;

END; 
 
/

ALTER TRIGGER BIU_D_PROGRAM ENABLE; 


CREATE OR REPLACE TRIGGER BIU_D_PROJECT 
    BEFORE INSERT OR UPDATE ON D_PROJECT 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.D_PROJECT_ID IS NULL THEN 
          SELECT SEQ_D_PROJECT.NEXTVAL INTO :NEW.D_PROJECT_ID FROM DUAL;
	:NEW.CREATE_DATE := SYSDATE;
END IF;
:NEW.LAST_MODIFIED_DATE := SYSDATE;
END;   
/

ALTER TRIGGER BIU_D_PROJECT ENABLE; 


CREATE OR REPLACE TRIGGER BIU_D_REPORTING_PERIOD 
    BEFORE INSERT OR UPDATE ON D_REPORTING_PERIOD 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.D_REPORTING_PERIOD_ID IS NULL THEN 
          SELECT SEQ_D_REPORTING_PERIOD.NEXTVAL INTO :NEW.D_REPORTING_PERIOD_ID FROM DUAL;      
	:NEW.CREATE_DATE := SYSDATE;
	:NEW.CREATED_BY := USER;
END IF;
:NEW.LAST_MODIFIED_DATE := SYSDATE;
:NEW.UPDATED_BY := USER;

END; 
/

ALTER TRIGGER BIU_D_REPORTING_PERIOD ENABLE; 


CREATE OR REPLACE TRIGGER BIU_D_SEGMENT 
    BEFORE INSERT OR UPDATE ON D_SEGMENT 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.D_SEGMENT_ID IS NULL THEN 
          SELECT SEQ_D_SEGMENT.NEXTVAL INTO :NEW.D_SEGMENT_ID FROM DUAL;
	:NEW.CREATE_DATE := SYSDATE;
END IF;
:NEW.LAST_MODIFIED_DATE := SYSDATE;
END;  
/

ALTER TRIGGER BIU_D_SEGMENT ENABLE; 


CREATE OR REPLACE TRIGGER BIU_F_METRIC 
    BEFORE INSERT OR UPDATE ON F_METRIC 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.F_METRIC_ID IS NULL THEN 
          SELECT SEQ_F_METRIC.NEXTVAL INTO :NEW.F_METRIC_ID FROM DUAL;
END IF;
IF INSERTING THEN
	:NEW.CREATE_DATE := SYSDATE;
	:NEW.CREATED_BY := USER;
END IF;
:NEW.LAST_MODIFIED_DATE := SYSDATE;
:NEW.UPDATED_BY := USER;
END;
 
/

ALTER TRIGGER BIU_F_METRIC ENABLE; 





-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            40
-- CREATE INDEX                            58
-- ALTER TABLE                            150
-- CREATE VIEW                             29
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          39
-- ALTER TRIGGER                           39
-- CREATE STRUCTURED TYPE                   0
-- CREATE COLLECTION TYPE                   0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         39
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                          22
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
