-- Generated by Oracle SQL Developer Data Modeler 3.1.4.710
--   at:        2014-09-11 15:44:33 EDT
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE TABLE CC_A_ADHOC_JOB 
    ( 
     ADHOC_JOB_ID NUMBER  NOT NULL , 
     ADHOC_JOB_TYPE VARCHAR2 (50)  NOT NULL , 
     START_DATETIME_PARAM VARCHAR2 (50)  NOT NULL , 
     END_DATETIME_PARAM VARCHAR2 (50)  NOT NULL , 
     CREATION_DATE DATE  NOT NULL , 
     IS_PENDING CHAR (1) DEFAULT '1'  NOT NULL , 
     IS_RUNNING CHAR (1) DEFAULT '0'  NOT NULL , 
     JOB_START_DATE DATE , 
     JOB_END_DATE DATE , 
     SUCCESS CHAR (1) DEFAULT '0' 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;



ALTER TABLE CC_A_ADHOC_JOB 
    ADD CONSTRAINT CC_A_ADHOC_JOB_PK PRIMARY KEY ( ADHOC_JOB_ID ) ;



CREATE TABLE CC_A_SCHEDULE 
    ( 
     SCHEDULE_ID NUMBER  NOT NULL , 
     JOB_TYPE VARCHAR2 (50)  NOT NULL , 
     EXECUTION_TIME VARCHAR2 (50)  NOT NULL 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;



ALTER TABLE CC_A_SCHEDULE 
    ADD CONSTRAINT REGEX_CHECK_EXECUTION_TIME 
    CHECK (REGEXP_LIKE(EXECUTION_TIME,'^([01][0-9]|2[0-3]):00:00$','i'))
;


ALTER TABLE CC_A_SCHEDULE 
    ADD CONSTRAINT CC_A_SCHEDULE_PK PRIMARY KEY ( SCHEDULE_ID ) ;


ALTER TABLE CC_A_SCHEDULE 
    ADD CONSTRAINT CC_A_SCHEDULE__UN UNIQUE ( EXECUTION_TIME ) ;



CREATE TABLE CC_A_SCHEDULED_JOB 
    ( 
     SCHEDULED_JOB_ID NUMBER  NOT NULL , 
     SCHEDULED_JOB_TYPE VARCHAR2 (50)  NOT NULL , 
     START_DATETIME_PARAM VARCHAR2 (50)  NOT NULL , 
     END_DATETIME_PARAM VARCHAR2 (50)  NOT NULL , 
     JOB_START_DATE DATE  NOT NULL , 
     JOB_END_DATE DATE , 
     IS_RUNNING CHAR (1) DEFAULT '0'  NOT NULL , 
     SUCCESS CHAR (1) DEFAULT '0' , 
     DATA_VALIDATION VARCHAR2 (50) DEFAULT 'NOT_TESTED' CHECK ( DATA_VALIDATION IN ('FAILURE', 'NOT_TESTED', 'SUCCESS')) 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;



ALTER TABLE CC_A_SCHEDULED_JOB 
    ADD CONSTRAINT CC_A_ADHOC_JOBv1_PK PRIMARY KEY ( SCHEDULED_JOB_ID ) ;


ALTER TABLE CC_A_SCHEDULED_JOB 
    ADD CONSTRAINT CC_A_SCHEDULED_JOB__UN UNIQUE ( JOB_START_DATE ) ;



CREATE TABLE CC_C_ACTIVITY_TYPE 
    ( 
     ACTIVITY_TYPE_ID NUMBER (19)  NOT NULL , 
     ACTIVITY_TYPE_NAME VARCHAR2 (100)  NOT NULL , 
     ACTIVITY_TYPE_DESCRIPTION VARCHAR2 (1000) , 
     ACTIVITY_TYPE_CATEGORY VARCHAR2 (50) , 
     IS_PAID_FLAG CHAR (1) , 
     IS_AVAILABLE_FLAG CHAR (1) , 
     IS_READY_FLAG CHAR (1) , 
     IS_ABSENCE_FLAG CHAR (1) , 
     EXTRACT_DT DATE  NOT NULL , 
     LAST_UPDATE_DT DATE  NOT NULL , 
     LAST_UPDATE_BY VARCHAR2 (30)  NOT NULL , 
     RECORD_EFF_DT DATE  NOT NULL , 
     RECORD_END_DT DATE  NOT NULL ,
     SCHEDULED_TO_WORK CHAR (1),
     IS_PRODUCTIVE CHAR (1)
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;



ALTER TABLE CC_C_ACTIVITY_TYPE 
    ADD CONSTRAINT CC_C_ACTIVITY_TYPE_PK PRIMARY KEY ( ACTIVITY_TYPE_ID ) ;


ALTER TABLE CC_C_ACTIVITY_TYPE 
    ADD CONSTRAINT CC_C_ACTIVITY_TYPE__UN UNIQUE ( ACTIVITY_TYPE_NAME ) ;



CREATE TABLE CC_C_CONTACT_QUEUE 
    ( 
     C_CONTACT_QUEUE_ID NUMBER (19)  NOT NULL , 
     QUEUE_NUMBER NUMBER (19)  NOT NULL , 
     QUEUE_NAME VARCHAR2 (100) , 
     QUEUE_TYPE VARCHAR2 (50) , 
     SERVICE_PERCENT NUMBER , 
     SERVICE_SECONDS NUMBER , 
     INTERVAL_MINUTES NUMBER , 
     UNIT_OF_WORK_NAME VARCHAR2 (50)  NOT NULL , 
     PROJECT_NAME VARCHAR2 (50)  NOT NULL , 
     PROGRAM_NAME VARCHAR2 (50)  NOT NULL , 
     REGION_NAME VARCHAR2 (50)  NOT NULL , 
     STATE_NAME VARCHAR2 (50)  NOT NULL , 
     PROVINCE_NAME VARCHAR2 (50)  NOT NULL , 
     DISTRICT_NAME VARCHAR2 (50)  NOT NULL , 
     COUNTRY_NAME VARCHAR2 (50)  NOT NULL , 
     RECORD_EFF_DT DATE DEFAULT to_date('1900/01/01', 'yyyy/mm/dd')  NOT NULL , 
     RECORD_END_DT DATE DEFAULT to_date('2999/12/31', 'yyyy/mm/dd')  NOT NULL 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;


CREATE INDEX CC_C_CONTACT_QUEUE__IDXv1 ON CC_C_CONTACT_QUEUE 
    ( 
     QUEUE_NUMBER ASC , 
     RECORD_EFF_DT DESC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;
CREATE INDEX CC_C_CONTACT_QUEUE__IDXv2 ON CC_C_CONTACT_QUEUE 
    ( 
     QUEUE_NUMBER ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;

ALTER TABLE CC_C_CONTACT_QUEUE 
    ADD CONSTRAINT CC_C_CONTACT_QUEUEv1_PK PRIMARY KEY ( C_CONTACT_QUEUE_ID ) ;



CREATE TABLE CC_C_FILTER 
    ( 
     FILTER_ID NUMBER (19)  NOT NULL , 
     FILTER_TYPE VARCHAR2 (40)  NOT NULL , 
     VALUE VARCHAR2 (50) 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;


CREATE INDEX CC_C_FILTER__IDXv1 ON CC_C_FILTER 
    ( 
     FILTER_TYPE ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;

ALTER TABLE CC_C_FILTER 
    ADD CONSTRAINT CC_C_FILTER_PK PRIMARY KEY ( FILTER_ID ) ;


ALTER TABLE CC_C_FILTER 
    ADD CONSTRAINT CC_C_FILTER__UN UNIQUE ( FILTER_TYPE , VALUE ) ;



CREATE TABLE CC_C_LOOKUP 
    ( 
     LOOKUP_ID NUMBER (19)  NOT NULL , 
     LOOKUP_TYPE VARCHAR2 (40)  NOT NULL , 
     LOOKUP_KEY VARCHAR2 (50)  NOT NULL , 
     LOOKUP_VALUE VARCHAR2 (50) 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;



ALTER TABLE CC_C_LOOKUP 
    ADD CONSTRAINT CC_C_LOOKUP_PK PRIMARY KEY ( LOOKUP_ID ) ;


ALTER TABLE CC_C_LOOKUP 
    ADD CONSTRAINT CC_C_LOOKUP__UN UNIQUE ( LOOKUP_TYPE , LOOKUP_KEY ) ;



CREATE TABLE CC_C_PROJECT_CONFIG 
    ( 
     PROJECT_CONFIG_ID NUMBER (19)  NOT NULL , 
     PROJECT_NAME VARCHAR2 (50)  NOT NULL , 
     PROGRAM_NAME VARCHAR2 (50)  NOT NULL , 
     REGION_NAME VARCHAR2 (50)  NOT NULL , 
     STATE_NAME VARCHAR2 (50)  NOT NULL , 
     PROVINCE_NAME VARCHAR2 (50)  NOT NULL , 
     DISTRICT_NAME VARCHAR2 (50)  NOT NULL , 
     COUNTRY_NAME VARCHAR2 (50)  NOT NULL , 
     RECORD_EFF_DT DATE DEFAULT to_date('1900/01/01', 'yyyy/mm/dd')  NOT NULL , 
     RECORD_END_DT DATE DEFAULT to_date('2999/12/31', 'yyyy/mm/dd')  NOT NULL 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;



ALTER TABLE CC_C_PROJECT_CONFIG 
    ADD CONSTRAINT CC_C_PROJECT_CONFIG_PK PRIMARY KEY ( PROJECT_CONFIG_ID ) ;


ALTER TABLE CC_C_PROJECT_CONFIG 
    ADD CONSTRAINT CC_S_PROJECT_SITE_CONFIG__UN UNIQUE ( PROJECT_NAME , PROGRAM_NAME , RECORD_EFF_DT ) ;



CREATE TABLE CC_C_UNIT_OF_WORK 
    ( 
     UNIT_OF_WORK_ID NUMBER (19)  NOT NULL , 
     UNIT_OF_WORK_NAME VARCHAR2 (50)  NOT NULL , 
     UNIT_OF_WORK_CATEGORY VARCHAR2 (50) , 
     RECORD_EFF_DT DATE DEFAULT to_date('1900/01/01', 'yyyy/mm/dd')  NOT NULL , 
     RECORD_END_DT DATE DEFAULT to_date('2999/12/31', 'yyyy/mm/dd')  NOT NULL 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;


CREATE INDEX CC_C_UNIT_OF_WORK__IDX ON CC_C_UNIT_OF_WORK 
    ( 
     UNIT_OF_WORK_NAME ASC , 
     RECORD_EFF_DT ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;

ALTER TABLE CC_C_UNIT_OF_WORK 
    ADD CONSTRAINT CC_C_UNIT_OF_WORK_PK PRIMARY KEY ( UNIT_OF_WORK_ID ) ;


ALTER TABLE CC_C_UNIT_OF_WORK 
    ADD CONSTRAINT CC_C_UNIT_OF_WORK__UN UNIQUE ( UNIT_OF_WORK_NAME , RECORD_EFF_DT ) ;



CREATE TABLE CC_L_ERROR 
    ( 
     ID NUMBER (19)  NOT NULL , 
     MESSAGE VARCHAR2 (4000) , 
     ERROR_FILE_PATH VARCHAR2 (255 BYTE) , 
     ERROR_DATE DATE , 
     JOB_NAME VARCHAR2 (255 BYTE) , 
     TRANSFORM_NAME VARCHAR2 (255 BYTE) 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;



ALTER TABLE CC_L_ERROR 
    ADD CONSTRAINT CC_L_ERROR_PK PRIMARY KEY ( ID ) ;



CREATE TABLE CC_L_PATCH_LOG 
    ( 
     PATCH_LOG_ID NUMBER (19)  NOT NULL , 
     PATCH_VERSION VARCHAR2 (30)  NOT NULL , 
     SCRIPT_SEQUENCE NUMBER (7)  NOT NULL , 
     SCRIPT_NAME VARCHAR2 (255)  NOT NULL , 
     SCRIPT_RUN_DATE DATE DEFAULT SYSDATE  NOT NULL 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;



ALTER TABLE CC_L_PATCH_LOG 
    ADD CONSTRAINT CC_L_PATCH_LOG_PK PRIMARY KEY ( PATCH_LOG_ID ) ;


ALTER TABLE CC_L_PATCH_LOG 
    ADD CONSTRAINT CC_L_PATCH_LOG__UN UNIQUE ( PATCH_VERSION , SCRIPT_NAME ) ;


ALTER TABLE CC_L_PATCH_LOG 
    ADD CONSTRAINT CC_L_PATCH_LOG__UNv1 UNIQUE ( PATCH_VERSION , SCRIPT_SEQUENCE ) ;



CREATE TABLE CC_L_TRANSFORMATION 
    ( 
     ID_BATCH NUMBER (19)  NOT NULL , 
     CHANNEL_ID VARCHAR2 (255 BYTE) , 
     TRANSNAME VARCHAR2 (255 BYTE) , 
     STATUS VARCHAR2 (15 BYTE) , 
     LINES_READ NUMBER (19) , 
     LINES_WRITTEN NUMBER (19) , 
     LINES_UPDATED NUMBER (19) , 
     LINES_INPUT NUMBER (19) , 
     LINES_OUTPUT NUMBER (19) , 
     LINES_REJECTED NUMBER (19) , 
     ERRORS NUMBER (19) , 
     STARTDATE DATE , 
     ENDDATE DATE , 
     LOGDATE DATE , 
     DEPDATE DATE , 
     REPLAYDATE DATE , 
     LOG_FIELD CLOB 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;


CREATE UNIQUE INDEX CC_L_TRANSFORMATION_IDX1 ON CC_L_TRANSFORMATION 
    ( 
     ID_BATCH ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;
CREATE INDEX CC_L_TRANSFORMATION_IDX2 ON CC_L_TRANSFORMATION 
    ( 
     ERRORS ASC , 
     STATUS ASC , 
     TRANSNAME ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;

ALTER TABLE CC_L_TRANSFORMATION 
    ADD CONSTRAINT CC_L_TRANSFORMATION_PK PRIMARY KEY ( ID_BATCH ) ;



CREATE TABLE CC_S_ACD_AGENT_ACTIVITY 
    ( 
     ACD_AGENT_ACTIVITY_ID NUMBER (19)  NOT NULL , 
     AGENT_CALLS_DT DATE  NOT NULL , 
     AGENT_ID NUMBER (19)  NOT NULL , 
     LOGIN_SECONDS NUMBER (10,2) DEFAULT 0  NOT NULL , 
     EXTERNAL_SECONDS NUMBER (10,2) DEFAULT 0  NOT NULL , 
     INTERNAL_SECONDS NUMBER (10,2) DEFAULT 0  NOT NULL , 
     IDLE_SECONDS NUMBER (10,2) DEFAULT 0  NOT NULL , 
     NOT_READY_SECONDS NUMBER (10,2) DEFAULT 0  NOT NULL , 
     ACD_TALK_SECONDS NUMBER (10,2)  NOT NULL , 
     HOLD_SECONDS NUMBER (10,2)  NOT NULL , 
     AFTER_CALL_WORK_SECONDS NUMBER (10,2)  NOT NULL , 
     TALK_RESERVE_SECONDS NUMBER (10,2) , 
     RING_SECONDS NUMBER (10,2)  NOT NULL , 
     PREDICTIVE_TALK_SECONDS NUMBER (10,2) , 
     PREVIEW_TALK_SECONDS NUMBER (10,2) , 
     ACD_CALLS_COUNT NUMBER (10) DEFAULT 0  NOT NULL , 
     EXTERNAL_CALLS_COUNT NUMBER (10) DEFAULT 0  NOT NULL , 
     INTERNAL_CALLS_COUNT NUMBER (10) DEFAULT 0  NOT NULL , 
     PREDICTIVE_CALLS_COUNT NUMBER (10) , 
     PREVIEW_CALLS_COUNT NUMBER (10) , 
     BREAK_TIME NUMBER (10,2) , 
     CONSULTATION_TIME NUMBER (10,2) , 
     WALKAWAY_TIME NUMBER (10,2) , 
     BUSYONDNTIME NUMBER (10,2) , 
     EXTRACT_DT DATE  NOT NULL , 
     LAST_UPDATE_DT DATE  NOT NULL , 
     LAST_UPDATE_BY VARCHAR2 (30)  NOT NULL 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;


CREATE UNIQUE INDEX CC_S_ACD_AGENT_ACTIVITY_IDX ON CC_S_ACD_AGENT_ACTIVITY 
    ( 
     ACD_AGENT_ACTIVITY_ID ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;
CREATE UNIQUE INDEX CC_S_ACD_AGENT_ACTIVITY_IDX2 ON CC_S_ACD_AGENT_ACTIVITY 
    ( 
     AGENT_ID ASC , 
     AGENT_CALLS_DT DESC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;

ALTER TABLE CC_S_ACD_AGENT_ACTIVITY 
    ADD CONSTRAINT CC_S_ACD_AGENT_ACTIVITY_PK PRIMARY KEY ( ACD_AGENT_ACTIVITY_ID ) ;


ALTER TABLE CC_S_ACD_AGENT_ACTIVITY 
    ADD CONSTRAINT CC_S_ACD_AGENT_ACTIVITY_UN UNIQUE ( AGENT_CALLS_DT , AGENT_ID ) ;



CREATE TABLE CC_S_ACD_INTERVAL 
    ( 
     ACD_INTERVAL_ID NUMBER (19)  NOT NULL , 
     INTERVAL_DATE DATE DEFAULT SYSDATE  NOT NULL , 
     CONTACT_QUEUE_ID NUMBER (19)  NOT NULL , 
     INTERVAL_ID NUMBER (19)  NOT NULL , 
     AGENT_ID NUMBER (19)  NOT NULL , 
     CONTACTS_RECEIVED_FROM_IVR NUMBER (12,0) DEFAULT 0  NOT NULL , 
     CONTACTS_OFFERED NUMBER (12,0) DEFAULT 0  NOT NULL , 
     CONTACTS_HANDLED NUMBER (12,0) DEFAULT 0  NOT NULL , 
     CONTACTS_ABANDONED NUMBER (12,0) DEFAULT 0  NOT NULL , 
     MIN_HANDLE_TIME NUMBER (11,2) DEFAULT 0  NOT NULL , 
     MAX_HANDLE_TIME NUMBER (11,2) DEFAULT 0  NOT NULL , 
     MEAN_HANDLE_TIME NUMBER (11,2) DEFAULT 0  NOT NULL , 
     MEDIAN_HANDLE_TIME NUMBER (11,2) DEFAULT 0  NOT NULL , 
     STDDEV_HANDLE_TIME NUMBER (11,2) DEFAULT 0  NOT NULL , 
     MIN_SPEED_TO_HANDLE NUMBER (11,2) DEFAULT 0  NOT NULL , 
     MAX_SPEED_TO_HANDLE NUMBER (11,2) DEFAULT 0  NOT NULL , 
     MEAN_SPEED_TO_HANDLE NUMBER (11,2) DEFAULT 0  NOT NULL , 
     MEDIAN_SPEED_TO_HANDLE NUMBER (11,2) DEFAULT 0  NOT NULL , 
     STDDEV_SPEED_TO_HANDLE NUMBER (11,2) DEFAULT 0  NOT NULL , 
     MIN_SPEED_OF_ANSWER NUMBER (11,2) DEFAULT 0  NOT NULL , 
     MAX_SPEED_OF_ANSWER NUMBER (11,2) DEFAULT 0  NOT NULL , 
     MEAN_SPEED_OF_ANSWER NUMBER (11,2) DEFAULT 0  NOT NULL , 
     MEDIAN_SPEED_OF_ANSWER NUMBER (11,2) DEFAULT 0  NOT NULL , 
     STDDEV_SPEED_OF_ANSWER NUMBER (11,2) DEFAULT 0  NOT NULL , 
     SPEED_OF_ANSWER_PERIOD_1 NUMBER (12,0) DEFAULT 0  NOT NULL , 
     SPEED_OF_ANSWER_PERIOD_2 NUMBER (12,0) DEFAULT 0  NOT NULL , 
     SPEED_OF_ANSWER_PERIOD_3 NUMBER (12,0) DEFAULT 0  NOT NULL , 
     SPEED_OF_ANSWER_PERIOD_4 NUMBER (12,0) DEFAULT 0  NOT NULL , 
     SPEED_OF_ANSWER_PERIOD_5 NUMBER (12,0) DEFAULT 0  NOT NULL , 
     SPEED_OF_ANSWER_PERIOD_6 NUMBER (12,0) DEFAULT 0  NOT NULL , 
     SPEED_OF_ANSWER_PERIOD_7 NUMBER (12,0) DEFAULT 0  NOT NULL , 
     SPEED_OF_ANSWER_PERIOD_8 NUMBER (12,0) DEFAULT 0  NOT NULL , 
     SPEED_OF_ANSWER_PERIOD_9 NUMBER (12,0) DEFAULT 0  NOT NULL , 
     SPEED_OF_ANSWER_PERIOD_10 NUMBER (12,0) DEFAULT 0  NOT NULL , 
     CALLS_ABANDONED_PERIOD_1 NUMBER (12,0) DEFAULT 0  NOT NULL , 
     CALLS_ABANDONED_PERIOD_2 NUMBER (12,0) DEFAULT 0  NOT NULL , 
     CALLS_ABANDONED_PERIOD_3 NUMBER (12,0) DEFAULT 0  NOT NULL , 
     CALLS_ABANDONED_PERIOD_4 NUMBER (12,0) DEFAULT 0  NOT NULL , 
     CALLS_ABANDONED_PERIOD_5 NUMBER (12,0) DEFAULT 0  NOT NULL , 
     CALLS_ABANDONED_PERIOD_6 NUMBER (12,0) DEFAULT 0  NOT NULL , 
     CALLS_ABANDONED_PERIOD_7 NUMBER (12,0) DEFAULT 0  NOT NULL , 
     CALLS_ABANDONED_PERIOD_8 NUMBER (12,0) DEFAULT 0  NOT NULL , 
     CALLS_ABANDONED_PERIOD_9 NUMBER (12,0) DEFAULT 0  NOT NULL , 
     CALLS_ABANDONED_PERIOD_10 NUMBER (12,0) DEFAULT 0  NOT NULL , 
     LABOR_MINUTES_TOTAL NUMBER (10,2) DEFAULT 0  NOT NULL , 
     LABOR_MINUTES_WAITING NUMBER (10,2) DEFAULT 0  NOT NULL , 
     HEADCOUNT_AVAILABLE NUMBER (7,2) DEFAULT 0  NOT NULL , 
     CONTACT_INVENTORY NUMBER (12,0) DEFAULT 0  NOT NULL , 
     CONTACT_INVENTORY_JEOPARDY NUMBER (12,0) DEFAULT 0  NOT NULL , 
     CONTACT_INVENTORY_AGE_TOTAL NUMBER (5,2) DEFAULT 0  NOT NULL , 
     MIN_CONTACT_INVENTORY_AGE NUMBER (5,2) DEFAULT 0  NOT NULL , 
     MAX_CONTACT_INVENTORY_AGE NUMBER (5,2) DEFAULT 0  NOT NULL , 
     MEAN_CONTACT_INVENTORY_AGE NUMBER (5,2) DEFAULT 0  NOT NULL , 
     MEDIAN_CONTACT_INVENTORY_AGE NUMBER (5,2) DEFAULT 0  NOT NULL , 
     STDDEV_CONTACT_INVENTORY_AGE NUMBER (5,2) DEFAULT 0  NOT NULL , 
     CONTACTS_TRANSFERRED NUMBER (12,0) DEFAULT 0  NOT NULL , 
     OUTFLOW_CONTACTS NUMBER (12,0) DEFAULT 0  NOT NULL , 
     ANSWER_WAIT_TIME_TOTAL NUMBER (12,2) DEFAULT 0  NOT NULL , 
     ABANDON_TIME_TOTAL NUMBER (12,2) DEFAULT 0  NOT NULL , 
     TALK_TIME_TOTAL NUMBER (12,2) DEFAULT 0  NOT NULL , 
     AFTER_CALL_WORK_TIME_TOTAL NUMBER (12,2) DEFAULT 0  NOT NULL , 
     SERVICE_LEVEL_ANSWERED_PERCENT NUMBER (5,2) DEFAULT 0  NOT NULL , 
     SERVICE_LEVEL_ANSWERED_COUNT NUMBER (12,0) DEFAULT 0  NOT NULL , 
     SERVICE_LEVEL_ABANDONED NUMBER (14,2) DEFAULT 0 , 
     CALLS_ON_HOLD NUMBER (12,0) DEFAULT 0  NOT NULL , 
     HOLD_TIME_TOTAL NUMBER (12,2) DEFAULT 0  NOT NULL , 
     IVR_TIME_TOTAL NUMBER (12,2) DEFAULT 0 , 
     SHORT_ABANDONS NUMBER (12,0) DEFAULT 0  NOT NULL , 
     CONTACTS_BLOCKED NUMBER (12,0) DEFAULT 0  NOT NULL , 
     ICR_DEFAULT_ROUTED NUMBER (12,0) DEFAULT 0  NOT NULL , 
     NETWORK_DEFAULT_ROUTED NUMBER (12,0) DEFAULT 0  NOT NULL , 
     RETURN_BUSY NUMBER (12,0) DEFAULT 0  NOT NULL , 
     CALLS_RONA NUMBER (12,0) DEFAULT 0  NOT NULL , 
     RETURN_RELEASE NUMBER (12,0) DEFAULT 0  NOT NULL , 
     CALLS_ROUTED_NON_AGENT NUMBER (12,0) DEFAULT 0  NOT NULL , 
     ERROR_COUNT NUMBER (12,0) DEFAULT 0  NOT NULL , 
     AGENT_ERROR_COUNT NUMBER (12,0) DEFAULT 0  NOT NULL , 
     RETURN_RING NUMBER (12,0) DEFAULT 0  NOT NULL , 
     INCOMPLETE_CALLS NUMBER (12,0) DEFAULT 0  NOT NULL , 
     CALLS_GIVEN_FORCE_DISCONNECT NUMBER (12,0) DEFAULT 0  NOT NULL , 
     CALLS_GIVEN_ROUTE_TO NUMBER (12,0) DEFAULT 0  NOT NULL , 
     CALL_TYPE VARCHAR2 (200) , 
     EXTRACT_DT DATE DEFAULT SYSDATE  NOT NULL , 
     LAST_UPDATE_DT DATE DEFAULT SYSDATE  NOT NULL , 
     LAST_UPDATE_BY VARCHAR2 (30)  NOT NULL ,
     MAX_ABANDON_TIME NUMBER DEFAULT 0  NOT NULL 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;


CREATE INDEX CC_S_ACD_INT_CC_S_CNTCT_Q_FK ON CC_S_ACD_INTERVAL 
    ( 
     CONTACT_QUEUE_ID ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;
CREATE INDEX CC_S_ACD_INT_CC_S_INTERVAL_FK ON CC_S_ACD_INTERVAL 
    ( 
     ACD_INTERVAL_ID ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;
CREATE INDEX CC_S_ACD_INT_CC_S_AGENT_FK ON CC_S_ACD_INTERVAL 
    ( 
     AGENT_ID ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;

ALTER TABLE CC_S_ACD_INTERVAL 
    ADD CONSTRAINT CC_S_ACD_INTERVAL_PK PRIMARY KEY ( ACD_INTERVAL_ID ) ;


ALTER TABLE CC_S_ACD_INTERVAL 
    ADD CONSTRAINT CC_S_ACD_INTERVAL__UN UNIQUE ( INTERVAL_DATE , CONTACT_QUEUE_ID , INTERVAL_ID , AGENT_ID ) ;



CREATE TABLE CC_S_ACD_INTERVAL_PERIOD 
    ( 
     ACD_INTERVAL_PERIOD_ID NUMBER (19)  NOT NULL , 
     PERIOD_TYPE VARCHAR2 (50)  NOT NULL CHECK ( PERIOD_TYPE IN ('CALLS_ABANDONED', 'SPEED_OF_ANSWER')) , 
     PERIOD_1_UPPER_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( PERIOD_1_UPPER_BOUND >= 0) , 
     PERIOD_2_UPPER_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( PERIOD_2_UPPER_BOUND >= 0) , 
     PERIOD_3_UPPER_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( PERIOD_3_UPPER_BOUND >= 0) , 
     PERIOD_4_UPPER_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( PERIOD_4_UPPER_BOUND >= 0) , 
     PERIOD_5_UPPER_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( PERIOD_5_UPPER_BOUND >= 0) , 
     PERIOD_6_UPPER_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( PERIOD_6_UPPER_BOUND >= 0) , 
     PERIOD_7_UPPER_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( PERIOD_7_UPPER_BOUND >= 0) , 
     PERIOD_8_UPPER_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( PERIOD_8_UPPER_BOUND >= 0) , 
     PERIOD_9_UPPER_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( PERIOD_9_UPPER_BOUND >= 0) , 
     PERIOD_10_UPPER_BOUND NUMBER (5) DEFAULT 0  NOT NULL CHECK ( PERIOD_10_UPPER_BOUND >= 0) , 
     EXTRACT_DT DATE  NOT NULL , 
     RECORD_EFF_DT DATE DEFAULT to_date('1900/01/01', 'yyyy/mm/dd')  NOT NULL , 
     RECORD_END_DT DATE DEFAULT to_date('2999/12/31', 'yyyy/mm/dd')  NOT NULL 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;



ALTER TABLE CC_S_ACD_INTERVAL_PERIOD 
    ADD CONSTRAINT CC_S_ACD_INTERVAL_PERIOD_PK PRIMARY KEY ( ACD_INTERVAL_PERIOD_ID ) ;


ALTER TABLE CC_S_ACD_INTERVAL_PERIOD 
    ADD CONSTRAINT CC_S_INTERVAL_PERIOD__UN UNIQUE ( PERIOD_TYPE , RECORD_EFF_DT , PERIOD_1_UPPER_BOUND , PERIOD_2_UPPER_BOUND , PERIOD_3_UPPER_BOUND , PERIOD_4_UPPER_BOUND , PERIOD_5_UPPER_BOUND , PERIOD_6_UPPER_BOUND , PERIOD_7_UPPER_BOUND , PERIOD_8_UPPER_BOUND , PERIOD_9_UPPER_BOUND , PERIOD_10_UPPER_BOUND ) ;



CREATE TABLE CC_S_AGENT 
    ( 
     AGENT_ID NUMBER (19)  NOT NULL , 
     LOGIN_ID NVARCHAR2 (100)  NOT NULL , 
     PROJECT_CONFIG_ID NUMBER (19)  NOT NULL , 
     FIRST_NAME VARCHAR2 (50)  NOT NULL , 
     LAST_NAME VARCHAR2 (50)  NOT NULL , 
     MIDDLE_INITIAL VARCHAR2 (20) , 
     JOB_TITLE VARCHAR2 (50)  NOT NULL , 
     LANGUAGE VARCHAR2 (50)  NOT NULL , 
     SITE_NAME VARCHAR2 (50)  NOT NULL , 
     HOURLY_RATE NUMBER (5,2) DEFAULT 0  NOT NULL , 
     RATE_CURRENCY VARCHAR2 (3)  NOT NULL , 
     AGENT_GROUP VARCHAR2 (50)  NOT NULL , 
     EXTRACT_DT DATE  NOT NULL , 
     HIRE_DATE DATE , 
     TERMINATION_DATE DATE , 
     LAST_UPDATE_DT DATE  NOT NULL , 
     LAST_UPDATE_BY VARCHAR2 (30)  NOT NULL , 
     RECORD_EFF_DT DATE , 
     RECORD_END_DT DATE 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;



ALTER TABLE CC_S_AGENT 
    ADD CONSTRAINT CC_S_AGENT_REC_DATE_CK 
    CHECK (RECORD_EFF_DT <= RECORD_END_DT)
;

CREATE UNIQUE INDEX CC_S_AGENT__IDX ON CC_S_AGENT 
    ( 
     AGENT_ID ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;
CREATE UNIQUE INDEX CC_S_AGENT__IDX2 ON CC_S_AGENT 
    ( 
     LOGIN_ID ASC , 
     RECORD_EFF_DT DESC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;
CREATE INDEX CC_S_AGENT__IDXv4 ON CC_S_AGENT 
    ( 
     PROJECT_CONFIG_ID ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;

ALTER TABLE CC_S_AGENT 
    ADD CONSTRAINT CC_S_AGENT_PK PRIMARY KEY ( AGENT_ID ) ;


ALTER TABLE CC_S_AGENT 
    ADD CONSTRAINT CC_S_AGENT_UN UNIQUE ( LOGIN_ID , RECORD_EFF_DT ) ;



CREATE TABLE CC_S_AGENT_ABSENCE 
    ( 
     AGENT_ABSENCE_ID NUMBER (19)  NOT NULL , 
     ABSENCE_DATE DATE  NOT NULL , 
     AGENT_ID NUMBER (19)  NOT NULL , 
     ACTIVITY_TYPE_ID NUMBER (19)  NOT NULL , 
     ABSENCE_MINUTES NUMBER (6,2) DEFAULT 0  NOT NULL , 
     ABSENCE_START_TIME DATE  NOT NULL , 
     ABSENCE_END_TIME DATE  NOT NULL , 
     IS_PLANNED_FLAG CHAR (1)  NOT NULL , 
     EXTRACT_DT DATE  NOT NULL , 
     LAST_UPDATE_DT DATE  NOT NULL , 
     LAST_UPDATE_BY VARCHAR2 (30)  NOT NULL 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;



ALTER TABLE CC_S_AGENT_ABSENCE 
    ADD CONSTRAINT CC_S_AGENT_ABSENCE_CK 
    CHECK (ABSENCE_START_TIME <= ABSENCE_END_TIME)
;

CREATE UNIQUE INDEX CC_S_AGENT_ABSENCE__IDX ON CC_S_AGENT_ABSENCE 
    ( 
     AGENT_ABSENCE_ID ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;
CREATE UNIQUE INDEX CC_S_AGENT_ABSENCE__IDX2 ON CC_S_AGENT_ABSENCE 
    ( 
     AGENT_ID ASC , 
     ABSENCE_END_TIME DESC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;

ALTER TABLE CC_S_AGENT_ABSENCE 
    ADD CONSTRAINT CC_S_AGENT_ABSENCE_PK PRIMARY KEY ( AGENT_ABSENCE_ID ) ;


ALTER TABLE CC_S_AGENT_ABSENCE 
    ADD CONSTRAINT CC_S_AGENT_ABSENCES__UN UNIQUE ( AGENT_ID , ABSENCE_END_TIME ) ;



CREATE TABLE CC_S_AGENT_SUPERVISOR 
    ( 
     AGENT_SUPERVISOR_ID NUMBER (19)  NOT NULL , 
     AGENT_ID NUMBER (19)  NOT NULL , 
     SUPERVISOR_AGENT_ID NUMBER (19)  NOT NULL , 
     EXTRACT_DT DATE  NOT NULL , 
     RECORD_EFF_DT DATE  NOT NULL , 
     RECORD_END_DT DATE  NOT NULL 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;



ALTER TABLE CC_S_AGENT_SUPERVISOR 
    ADD CONSTRAINT CC_S_AGENT_SPRVSR_REC_DT_CK 
    CHECK (RECORD_EFF_DT <= RECORD_END_DT)
;


COMMENT ON TABLE CC_S_AGENT_SUPERVISOR IS 'This staging table stores the different superiors of a given agent.  e.g. a record for the agent''s manager, a record for the agent''s supervisor, etc...'
;

CREATE UNIQUE INDEX CC_S_AGENT_SUPERVISOR__IDX ON CC_S_AGENT_SUPERVISOR 
    ( 
     AGENT_SUPERVISOR_ID ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;
CREATE UNIQUE INDEX CC_S_AGENT_SUPERVISOR__IDX2 ON CC_S_AGENT_SUPERVISOR 
    ( 
     AGENT_ID ASC , 
     SUPERVISOR_AGENT_ID ASC , 
     RECORD_EFF_DT DESC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;

ALTER TABLE CC_S_AGENT_SUPERVISOR 
    ADD CONSTRAINT CC_S_AGENT_SUPERVISOR_PK PRIMARY KEY ( AGENT_SUPERVISOR_ID ) ;


ALTER TABLE CC_S_AGENT_SUPERVISOR 
    ADD CONSTRAINT CC_S_AGENT_SUPERVISOR_UN UNIQUE ( AGENT_ID , SUPERVISOR_AGENT_ID , RECORD_EFF_DT ) ;



CREATE TABLE CC_S_AGENT_WORK_DAY 
    ( 
     AGENT_WORK_DAY_ID NUMBER (19)  NOT NULL , 
     AGENT_ID NUMBER (19)  NOT NULL , 
     WORK_DATE DATE  NOT NULL , 
     FIRST_LOGIN DATE  NOT NULL , 
     LAST_LOGOUT DATE  NOT NULL , 
     SCHEDULED_SHIFT_MINUTES NUMBER (14,2) DEFAULT 0 , 
     ACTUAL_SHIFT_MINUTES NUMBER (14,2) DEFAULT 0  NOT NULL , 
     ACTUAL_OVERTIME_MINUTES NUMBER (14,2) DEFAULT 0  NOT NULL , 
     EXTRACT_DT DATE  NOT NULL , 
     LAST_UPDATE_DT DATE  NOT NULL , 
     LAST_UPDATE_BY VARCHAR2 (30)  NOT NULL 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;


CREATE INDEX CC_S_AGENT_WORK_DAY__IDXv2 ON CC_S_AGENT_WORK_DAY 
    ( 
     AGENT_ID ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;

ALTER TABLE CC_S_AGENT_WORK_DAY 
    ADD CONSTRAINT CC_S_AGENT_WORK_DAY_PK PRIMARY KEY ( AGENT_WORK_DAY_ID ) ;


ALTER TABLE CC_S_AGENT_WORK_DAY 
    ADD CONSTRAINT CC_S_AGENT_WORK_DAY__UN UNIQUE ( AGENT_ID , WORK_DATE ) ;



CREATE TABLE CC_S_CALL_DETAIL 
    ( 
     CALL_DETAIL_ID NUMBER (19)  NOT NULL , 
     CALL_SEGMENT_ID VARCHAR2 (50) , 
     CALL_DATE DATE  NOT NULL , 
     CALL_TYPE VARCHAR2 (200) , 
     SOURCE_CALL_ID VARCHAR2 (40) , 
     AGENT_ID NUMBER (19)  NOT NULL , 
     DNIS VARCHAR2 (30) , 
     DISPOSITION VARCHAR2 (200) , 
     TRANSFER_TO VARCHAR2 (200) , 
     CALL_SEGMENT_END_DT DATE  NOT NULL , 
     QUEUE_NAME VARCHAR2 (50)  NOT NULL , 
     LANGUAGE VARCHAR2 (50)  NOT NULL , 
     ANI_PHONE_NUMBER VARCHAR2 (200 BYTE)  NOT NULL , 
     QUEUE_TIME_SECONDS NUMBER (11,2) DEFAULT 0  NOT NULL , 
     RING_TIME_SECONDS NUMBER (11,2) DEFAULT 0  NOT NULL , 
     HOLD_TIME_SECONDS NUMBER (11,2) DEFAULT 0  NOT NULL , 
     AFTER_CALL_WORK_SECONDS NUMBER (11,2) DEFAULT 0  NOT NULL , 
     TALK_TIME_SECONDS NUMBER (11,2) DEFAULT 0  NOT NULL , 
     IVR_TIME_SECONDS NUMBER (11,2) , 
     XFERRED_OUT_FLAG CHAR (1)  NOT NULL , 
     VOICEMAIL_FLAG VARCHAR2 (1) , 
     CALL_ABANDONED_FLAG NUMBER (1) , 
     EXTRACT_DT DATE DEFAULT SYSDATE  NOT NULL , 
     LAST_UPDATE_DT DATE DEFAULT SYSDATE  NOT NULL , 
     LAST_UPDATE_BY VARCHAR2 (30)  NOT NULL 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;


CREATE INDEX CC_S_CALL_DETAIL_AGENT_IDX ON CC_S_CALL_DETAIL 
    ( 
     AGENT_ID ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;

ALTER TABLE CC_S_CALL_DETAIL 
    ADD CONSTRAINT CC_S_CALL_DETAIL_PK PRIMARY KEY ( CALL_DETAIL_ID ) ;


ALTER TABLE CC_S_CALL_DETAIL 
    ADD CONSTRAINT CC_S_CALL_DETAIL__UN UNIQUE ( SOURCE_CALL_ID , CALL_SEGMENT_ID ) ;



CREATE TABLE CC_S_CONTACT_QUEUE 
    ( 
     CONTACT_QUEUE_ID NUMBER (19)  NOT NULL , 
     QUEUE_NUMBER NUMBER (19)  NOT NULL , 
     PROJECT_CONFIG_ID NUMBER (19)  NOT NULL , 
     QUEUE_NAME VARCHAR2 (50)  NOT NULL , 
     SOURCE_QUEUE NUMBER (19)  NOT NULL , 
     QUEUE_TYPE VARCHAR2 (50)  NOT NULL , 
     SERVICE_PERCENT NUMBER (3) DEFAULT 0  NOT NULL , 
     SERVICE_SECONDS NUMBER (5) DEFAULT 0  NOT NULL , 
     QUEUE_GROUP NUMBER (4)  NOT NULL , 
     INTERVAL_MINUTES NUMBER (2)  NOT NULL , 
     AVG_SPEED_ANSR_INTRVL_PRIOD_ID NUMBER (19)  NOT NULL , 
     CALLS_ABANDOND_INTRVL_PRIOD_ID NUMBER (19)  NOT NULL , 
     UNIT_OF_WORK_ID NUMBER (19)  NOT NULL , 
     RECORD_EFF_DT DATE DEFAULT to_date('1900/01/01', 'yyyy/mm/dd')  NOT NULL , 
     RECORD_END_DT DATE DEFAULT to_date('2999/12/31', 'yyyy/mm/dd')  NOT NULL 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;


CREATE INDEX CC_S_CONTACT_QUEUE__IDXv2 ON CC_S_CONTACT_QUEUE 
    ( 
     PROJECT_CONFIG_ID ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;

ALTER TABLE CC_S_CONTACT_QUEUE 
    ADD CONSTRAINT CC_S_CONTACT_QUEUE_PK PRIMARY KEY ( CONTACT_QUEUE_ID ) ;


ALTER TABLE CC_S_CONTACT_QUEUE 
    ADD CONSTRAINT CC_S_CONTACT_QUEUE__UN UNIQUE ( QUEUE_NUMBER , RECORD_EFF_DT ) ;



CREATE TABLE CC_S_FCST_INTERVAL 
    ( 
     FCST_INTERVAL_ID NUMBER (19)  NOT NULL , 
     PRODUCTION_PLAN_HORIZON_ID NUMBER (19)  NOT NULL , 
     UNIT_OF_WORK_ID NUMBER (19)  NOT NULL , 
     INTERVAL_DATE DATE  NOT NULL , 
     INTERVAL_ID NUMBER (19)  NOT NULL , 
     FORECAST_VERSION NUMBER (5) DEFAULT 0  NOT NULL , 
     CONTACTS_CREATED NUMBER (7) DEFAULT 0 , 
     CONTACTS_OFFERED NUMBER (7) DEFAULT 0 , 
     CONTACTS_HANDLED NUMBER (7) DEFAULT 0 , 
     MIN_SPEED_TO_HANDLE NUMBER (7,2) DEFAULT 0 , 
     MAX_SPEED_TO_HANDLE NUMBER (7,2) DEFAULT 0 , 
     MEAN_SPEED_TO_HANDLE NUMBER (7,2) DEFAULT 0 , 
     MEDIAN_SPEED_TO_HANDLE NUMBER (7,2) DEFAULT 0 , 
     STDDEV_SPEED_TO_HANDLE NUMBER (7,2) DEFAULT 0 , 
     MIN_SPEED_OF_ANSWER NUMBER (7,2) DEFAULT 0 , 
     MAX_SPEED_OF_ANSWER NUMBER (7,2) DEFAULT 0 , 
     MEAN_SPEED_OF_ANSWER NUMBER (7,2) DEFAULT 0 , 
     MEDIAN_SPEED_OF_ANSWER NUMBER (7,2) DEFAULT 0 , 
     STDDEV_SPEED_OF_ANSWER NUMBER (7,2) DEFAULT 0 , 
     CONTACTS_ABANDONED NUMBER (7) DEFAULT 0 , 
     CONTACT_INVENTORY NUMBER (7) DEFAULT 0 , 
     MIN_CONTACT_INVENTORY_AGE NUMBER (5,2) DEFAULT 0 , 
     MAX_CONTACT_INVENTORY_AGE NUMBER (5,2) DEFAULT 0 , 
     MEAN_CONTACT_INVENTORY_AGE NUMBER (5,2) DEFAULT 0 , 
     MEDIAN_CONTACT_INVENTORY_AGE NUMBER (5,2) DEFAULT 0 , 
     STDDEV_CONTACT_INVENTORY_AGE NUMBER (5,2) DEFAULT 0 , 
     MIN_HANDLE_TIME NUMBER (7,2) DEFAULT 0 , 
     MAX_HANDLE_TIME NUMBER (7,2) DEFAULT 0 , 
     MEAN_HANDLE_TIME NUMBER (7,2) DEFAULT 0 , 
     MEDIAN_HANDLE_TIME NUMBER (7,2) DEFAULT 0 , 
     CONTACT_INVENTORY_JEOPARDY NUMBER (7) DEFAULT 0 , 
     STDDEV_HANDLE_TIME NUMBER (7,2) DEFAULT 0 , 
     LABOR_MINUTES_TOTAL NUMBER (10,2) DEFAULT 0 , 
     LABOR_MINUTES_AVAILABLE NUMBER (9,2) DEFAULT 0 , 
     LABOR_MINUTES_WAITING NUMBER (10,2) DEFAULT 0 , 
     HEADCOUNT_TOTAL NUMBER (7,2) DEFAULT 0 , 
     HEADCOUNT_AVAILABLE NUMBER (7,2) DEFAULT 0 , 
     HEADCOUNT_UNAVAILABLE NUMBER (7,2) DEFAULT 0 , 
     SRVC_LEVEL_ANSWERED_PERCENT NUMBER (5,2) DEFAULT 0 , 
     SRVC_LEVEL_ANSWERED_PERCENT_2 NUMBER (5,2) DEFAULT 0 , 
     EXTRACT_DT DATE DEFAULT SYSDATE  NOT NULL , 
     LAST_UPDATE_DT DATE DEFAULT SYSDATE  NOT NULL , 
     LAST_UPDATE_BY VARCHAR2 (30)  NOT NULL 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;


CREATE INDEX CC_S_FCST_INTERVAL__IDXv2 ON CC_S_FCST_INTERVAL 
    ( 
     UNIT_OF_WORK_ID ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;
CREATE INDEX CC_S_FCST_INTERVAL__IDXv3 ON CC_S_FCST_INTERVAL 
    ( 
     INTERVAL_ID ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;

ALTER TABLE CC_S_FCST_INTERVAL 
    ADD CONSTRAINT CC_S_FCST_INTERVAL_PK PRIMARY KEY ( FCST_INTERVAL_ID ) ;


ALTER TABLE CC_S_FCST_INTERVAL 
    ADD CONSTRAINT CC_S_FCST_INTERVAL__UN UNIQUE ( PRODUCTION_PLAN_HORIZON_ID , INTERVAL_DATE , UNIT_OF_WORK_ID , INTERVAL_ID , FORECAST_VERSION ) ;



CREATE TABLE CC_S_INTERVAL 
    ( 
     INTERVAL_ID NUMBER (19)  NOT NULL , 
     INTERVAL_START_DATE DATE  NOT NULL , 
     INTERVAL_END_DATE DATE  NOT NULL , 
     INTERVAL_SECONDS NUMBER (4) DEFAULT 1800  NOT NULL CHECK ( INTERVAL_SECONDS IN (900, 1800, 3600)) , 
     RECORD_EFF_DT DATE DEFAULT to_date('1900/01/01', 'yyyy/mm/dd')  NOT NULL , 
     RECORD_END_DT DATE DEFAULT to_date('2999/12/31', 'yyyy/mm/dd')  NOT NULL 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;


CREATE INDEX CC_S_INTERVAL__IDX1 ON CC_S_INTERVAL 
    ( 
     INTERVAL_START_DATE ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;
CREATE INDEX CC_S_INTERVAL__IDX2 ON CC_S_INTERVAL 
    ( 
     INTERVAL_END_DATE ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;

ALTER TABLE CC_S_INTERVAL 
    ADD CONSTRAINT CC_S_INTERVAL_PK PRIMARY KEY ( INTERVAL_ID ) ;


ALTER TABLE CC_S_INTERVAL 
    ADD CONSTRAINT CC_S_INTERVAL__UN UNIQUE ( INTERVAL_START_DATE , INTERVAL_END_DATE ) ;



CREATE TABLE CC_S_IVR_INTERVAL 
    ( 
     IVR_INTERVAL_ID NUMBER (19)  NOT NULL , 
     PROJECT_CONFIG_ID NUMBER (19)  NOT NULL , 
     INTERVAL_DATE DATE  NOT NULL , 
     INTERVAL_ID NUMBER (19)  NOT NULL , 
     CONTACTS_CREATED NUMBER (7) DEFAULT 0  NOT NULL , 
     CONTACTS_OFFERED_TO_ACD NUMBER (7) DEFAULT 0  NOT NULL , 
     CONTACTS_CONTAINED_IN_IVR NUMBER (7) DEFAULT 0  NOT NULL , 
     MIN_TIME_IN_THE_IVR NUMBER (7,2) DEFAULT 0  NOT NULL , 
     MAX_TIME_IN_THE_IVR NUMBER (7,2) DEFAULT 0  NOT NULL , 
     MEAN_TIME_IN_THE_IVR NUMBER (7,2) DEFAULT 0  NOT NULL , 
     MEDIAN_TIME_IN_THE_IVR NUMBER (7,2) DEFAULT 0  NOT NULL , 
     STDDEV_TIME_IN_THE_IVR NUMBER (7,2) DEFAULT 0  NOT NULL , 
     EXTRACT_DT DATE  NOT NULL , 
     LAST_UPDATE_DT DATE  NOT NULL , 
     LAST_UPDATE_BY VARCHAR2 (30)  NOT NULL 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;


CREATE INDEX CC_S_IVR_INTERVAL__IDXv2 ON CC_S_IVR_INTERVAL 
    ( 
     INTERVAL_ID ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;

ALTER TABLE CC_S_IVR_INTERVAL 
    ADD CONSTRAINT CC_S_ACD_INTERVALv1_PK PRIMARY KEY ( IVR_INTERVAL_ID ) ;


ALTER TABLE CC_S_IVR_INTERVAL 
    ADD CONSTRAINT CC_S_IVR_INTERVAL__UN UNIQUE ( INTERVAL_DATE , INTERVAL_ID , PROJECT_CONFIG_ID ) ;



CREATE TABLE CC_S_IVR_SELF_SERVICE_PATH 
    ( 
     IVR_SELF_SERVICE_PATH_ID NUMBER (19)  NOT NULL , 
     CODE VARCHAR2 (30) , 
     DESCRIPTION VARCHAR2 (255) , 
     BEGIN_NODE VARCHAR2 (30)  NOT NULL , 
     END_NODE VARCHAR2 (30)  NOT NULL , 
     RECORD_EFF_DT DATE  NOT NULL , 
     RECORD_END_DT DATE  NOT NULL 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;



ALTER TABLE CC_S_IVR_SELF_SERVICE_PATH 
    ADD CONSTRAINT CC_S_SELF_SERVICE_PATH_PK PRIMARY KEY ( IVR_SELF_SERVICE_PATH_ID ) ;


ALTER TABLE CC_S_IVR_SELF_SERVICE_PATH 
    ADD CONSTRAINT CC_S_SELF_SERVICE_PATH__UN UNIQUE ( BEGIN_NODE , END_NODE , RECORD_EFF_DT ) ;



CREATE TABLE CC_S_IVR_SELF_SERVICE_USAGE 
    ( 
     IVR_SELF_SERVICE_USAGE_ID NUMBER (19)  NOT NULL , 
     PROJECT_CONFIG_ID NUMBER (19)  NOT NULL , 
     INTERVAL_ID NUMBER (19)  NOT NULL , 
     IVR_SELF_SERVICE_PATH_ID NUMBER (19)  NOT NULL , 
     CONTACTS_ENTERING NUMBER (10) DEFAULT 0  NOT NULL , 
     CONTACTS_TRANSFERRED NUMBER (10)  NOT NULL , 
     CONTACTS_COMPLETED NUMBER (10)  NOT NULL , 
     MINUTES_IN_IVR_TRANSFERRED NUMBER (12,2)  NOT NULL , 
     MINUTES_IN_IVR_COMPLETED NUMBER (12,2)  NOT NULL 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;


CREATE INDEX CC_S_IVR_SELF_SVC_USAGE__IDXv1 ON CC_S_IVR_SELF_SERVICE_USAGE 
    ( 
     INTERVAL_ID ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;
CREATE INDEX CC_S_IVR_SELF_SVC_USAGE__IDXv2 ON CC_S_IVR_SELF_SERVICE_USAGE 
    ( 
     IVR_SELF_SERVICE_PATH_ID ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;

ALTER TABLE CC_S_IVR_SELF_SERVICE_USAGE 
    ADD CONSTRAINT CC_S_IVR_SELF_SERVICE_USAGE_PK PRIMARY KEY ( IVR_SELF_SERVICE_USAGE_ID ) ;


ALTER TABLE CC_S_IVR_SELF_SERVICE_USAGE 
    ADD CONSTRAINT CC_S_IVR_SELF_SVC_USAGE__UN UNIQUE ( INTERVAL_ID , IVR_SELF_SERVICE_PATH_ID , PROJECT_CONFIG_ID ) ;



CREATE TABLE CC_S_PRODUCTION_PLAN 
    ( 
     PRODUCTION_PLAN_ID NUMBER (19)  NOT NULL , 
     PRODUCTION_PLAN_NAME VARCHAR2 (50)  NOT NULL , 
     PRODUCTION_PLAN_DESCRIPTION VARCHAR2 (1000) , 
     PROGRAM_NAME VARCHAR2 (50)  NOT NULL , 
     PROJECT_NAME VARCHAR2 (50)  NOT NULL , 
     GEOGRAPHY_NAME VARCHAR2 (50)  NOT NULL , 
     EFFECTIVE_DATE DATE DEFAULT SYSDATE  NOT NULL , 
     LAST_UPDATE_DATE DATE DEFAULT SYSDATE  NOT NULL , 
     EXTRACT_DT DATE  NOT NULL , 
     RECORD_EFF_DT DATE  NOT NULL , 
     RECORD_END_DT DATE  NOT NULL 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;



ALTER TABLE CC_S_PRODUCTION_PLAN 
    ADD CONSTRAINT CC_C_PRODUCTION_PLAN_PK PRIMARY KEY ( PRODUCTION_PLAN_ID ) ;


ALTER TABLE CC_S_PRODUCTION_PLAN 
    ADD CONSTRAINT CC_S_PRODUCTION_PLAN__UN UNIQUE ( PRODUCTION_PLAN_NAME , RECORD_EFF_DT ) ;



CREATE TABLE CC_S_PRODUCTION_PLAN_HORIZON 
    ( 
     PRODUCTION_PLAN_HORIZON_ID NUMBER (19)  NOT NULL , 
     PRODUCTION_PLAN_ID NUMBER (19)  NOT NULL , 
     HORIZON_START_DATE DATE DEFAULT SYSDATE , 
     HORIZON_START_HOUR NUMBER (2) DEFAULT to_char(SYSDATE, 'HH24') , 
     HORIZON_END_DATE DATE DEFAULT SYSDATE , 
     HORIZON_END_HOUR NUMBER (2) DEFAULT to_char(SYSDATE, 'HH24') , 
     HORIZON_NAME VARCHAR2 (50) , 
     HORIZON_DESCRIPTION VARCHAR2 (1000) , 
     INITIAL_VERSION NUMBER (4)  NOT NULL , 
     FINAL_VERSION NUMBER (4)  NOT NULL , 
     CREATE_DATE DATE DEFAULT SYSDATE , 
     LAST_UPDATE_DATE DATE DEFAULT SYSDATE 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;



ALTER TABLE CC_S_PRODUCTION_PLAN_HORIZON 
    ADD CONSTRAINT CC_C_HORIZON_PK PRIMARY KEY ( PRODUCTION_PLAN_HORIZON_ID ) ;


ALTER TABLE CC_S_PRODUCTION_PLAN_HORIZON 
    ADD CONSTRAINT CC_C_HORIZON__UN UNIQUE ( PRODUCTION_PLAN_ID , HORIZON_START_DATE , HORIZON_START_HOUR , HORIZON_END_DATE , HORIZON_END_HOUR ) ;



CREATE TABLE CC_S_TIMEZONEAM 
    ( 
     ID NUMBER (19)  NOT NULL , 
     TIMEZONE VARCHAR2 (50 BYTE) , 
     STARTTIME DATE , 
     ENDTIME DATE , 
     BIAS NUMBER 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;



ALTER TABLE CC_S_TIMEZONEAM 
    ADD CONSTRAINT CC_S_TIMEZONEAM_PK PRIMARY KEY ( ID ) ;



CREATE TABLE CC_S_TMP_ACTUALEVENTTIMELINE 
    ( 
     EMPLOYEEID NUMBER  NOT NULL , 
     STARTTIME DATE  NOT NULL , 
     ENDTIME DATE  NOT NULL , 
     LOGINID NUMBER  NOT NULL , 
     ACTIVITYID NUMBER , 
     ACTIVITYCATEGORYNAME VARCHAR2 (50 BYTE) , 
     ACTIVITYNAME VARCHAR2 (50 BYTE) , 
     TIMEENTRYEVENTID NUMBER , 
     ISPAID VARCHAR2 (20 BYTE) , 
     ORGANIZATIONID NUMBER , 
     ORGANIZATIONNAME VARCHAR2 (250 BYTE) , 
     TIMEZONE VARCHAR2 (30 BYTE) , 
     LOCAL_STARTTIME DATE , 
     LOCAL_ENDTIME DATE 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;


CREATE INDEX CC_S_TMP_AET__IDX1 ON CC_S_TMP_ACTUALEVENTTIMELINE 
    ( 
     LOCAL_STARTTIME ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;
CREATE INDEX CC_S_TMP_AET__IDX2 ON CC_S_TMP_ACTUALEVENTTIMELINE 
    ( 
     LOCAL_ENDTIME ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;

ALTER TABLE CC_S_TMP_ACTUALEVENTTIMELINE 
    ADD CONSTRAINT CC_S_TMP_ACTUALEVENTTIMELIN_PK PRIMARY KEY ( LOGINID, STARTTIME, ENDTIME ) ;



CREATE TABLE CC_S_TMP_AGENT_SKILL_GROUP 
    ( 
     SKILLTARGETID NUMBER , 
     PERIPHERALNUMBER NVARCHAR2(100) , 
     SKILLGROUPSKILLTARGETID NUMBER , 
     FIRSTNAME VARCHAR2 (50) , 
     LASTNAME VARCHAR2 (50) 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;




CREATE TABLE CC_S_TMP_AVY_AGENT 
    ( 
     USER_ID VARCHAR2 (32 CHAR)  NOT NULL , 
     TELSETLOGINID VARCHAR2(50) , 
     SURNAME VARCHAR2 (64 CHAR) , 
     GIVENNAME VARCHAR2 (64 CHAR) , 
     DEPARTMENT VARCHAR2 (64 CHAR) , 
     TITLE VARCHAR2 (64 CHAR) , 
     SKILLSETID NUMBER (16) 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;



ALTER TABLE CC_S_TMP_AVY_AGENT 
    ADD CONSTRAINT CC_S_TMP_AVY_AGENT_PK PRIMARY KEY ( USER_ID ) ;



CREATE TABLE CC_S_TMP_AVY_AGENTBYAPP 
    ( 
     TIMESTAMP DATE , 
     AGENTLOGIN VARCHAR2 (16) , 
     APPLICATIONID NUMBER (10) , 
     HOLDTIME NUMBER (10) 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;




CREATE TABLE CC_S_TMP_AVY_APPLICATION 
    ( 
     APPLICATIONID NUMBER (10)  NOT NULL , 
     NAME VARCHAR2 (30 CHAR) , 
     SERVICELEVELTHRESHOLD NUMBER (10) , 
     TEMPLATEID NUMBER (10) 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;



ALTER TABLE CC_S_TMP_AVY_APPLICATION 
    ADD CONSTRAINT CC_S_TMP_AVY_APPLICATION_PK PRIMARY KEY ( APPLICATIONID ) ;



CREATE TABLE CC_S_TMP_AVY_DAGENTPERFORMANCE 
    ( 
     TIMESTAMP DATE , 
     USERID VARCHAR2 (32 CHAR) , 
     AGENTLOGIN VARCHAR2 (16 CHAR) , 
     SUPERVISORLOGIN VARCHAR2 (16 CHAR) , 
     ACDCALLSANSWERED NUMBER (10) , 
     HOLDTIME NUMBER (10) , 
     LOGGEDINTIME NUMBER (10) , 
     NOTREADYTIME NUMBER (10) , 
     RESERVEDTIME NUMBER (10) , 
     RINGTIME NUMBER (10) , 
     TALKTIME NUMBER (10) , 
     WAITINGTIME NUMBER (10) , 
     POSTCALLPROCESSINGTIME NUMBER (10) , 
     CONTACTTALKTIME NUMBER (10) , 
     CONTACTHOLDTIME NUMBER (10) , 
     CALLSANSWERED NUMBER (10) , 
     SITEID NUMBER (10) , 
     SITE VARCHAR2 (30 CHAR) , 
     DNINEXTCALLSTALKTIME NUMBER (10) , 
     DNOUTEXTCALLSTALKTIME NUMBER (10) , 
     DNININTCALLSTALKTIME NUMBER (10) , 
     DNOUTINTCALLSTALKTIME NUMBER (10) , 
     DNINEXTCALLS NUMBER (10) , 
     DNOUTEXTCALLS NUMBER (10) , 
     DNININTCALLS NUMBER (10) , 
     DNOUTINTCALLS NUMBER (10) , 
     BUSYONDNTIME NUMBER (10) , 
     BREAKTIME NUMBER (10) , 
     CONSULTATIONTIME NUMBER (10) , 
     WALKAWAYTIME NUMBER (10) 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;


CREATE TABLE CC_S_TMP_AVY_ECSRSTAT
  (
    CUSTID                INTEGER ,
    SEQUENCEID            NUMBER (10) ,
    GUID                  VARCHAR2 (36 BYTE) ,
    CCMID                 INTEGER ,
    PROVIDERCONTACTID     VARCHAR2 (50 BYTE) ,
    INTERCALLID           INTEGER ,
    CONTACTTYPE           INTEGER ,
    CONTACTTYPENAME       VARCHAR2 (30 BYTE) ,
    CONTACTSUBTYPE        VARCHAR2 (50 BYTE) ,
    CONTACTPROXIMITY      VARCHAR2 (50 BYTE) ,
    PRIORITY              INTEGER ,
    PROVIDER              VARCHAR2 (50 BYTE) ,
    SITEID                INTEGER ,
    SITENAME              VARCHAR2 (30 BYTE) ,
    REMOTESITEID          INTEGER ,
    REMOTESITENAME        VARCHAR2 (30 BYTE) ,
    ORIGINATOR            VARCHAR2 (256 BYTE) ,
    ADDRESS               VARCHAR2 (255 BYTE) ,
    ROUTEPOINT            VARCHAR2 (30 BYTE) ,
    APPLICATIONID         INTEGER ,
    APPLICATIONNAME       VARCHAR2 (30 BYTE) ,
    SOURCEAPPLICATIONNAME VARCHAR2 (30 BYTE) ,
    APPLICATIONSTARTSTAMP TIMESTAMP ,
    LASTTREATMENTID       INTEGER ,
    TREATMENT             VARCHAR2 (50 BYTE) ,
    LASTTREATMENTSTAMP    TIMESTAMP ,
    LASTTREATMENTTIME     INTEGER ,
    SKILLSETID            INTEGER ,
    SKILLSETNAME          VARCHAR2 (30 BYTE) ,
    SKILLSETQUEUEDSTAMP   TIMESTAMP ,
    LOCALUSERID           INTEGER ,
    AGENTSURNAME          VARCHAR2 (64 BYTE) ,
    AGENTGIVENNAME        VARCHAR2 (64 BYTE) ,
    SUPERVISORSURNAME     VARCHAR2 (64 BYTE) ,
    SUPERVISORGIVENNAME   VARCHAR2 (64 BYTE) ,
    AGENTID               VARCHAR2 (16 BYTE) ,
    SUPERVISORID          VARCHAR2 (16 BYTE) ,
    ORIGINATEDSTAMP       TIMESTAMP ,
    INITIALDISPOSITION    VARCHAR2 (50 BYTE) ,
    SERVICESTAMP          TIMESTAMP ,
    APPABANDONDELAY       INTEGER ,
    APPACCEPTEDDELAY      INTEGER ,
    SKSABANDONDELAY       INTEGER ,
    SKSACCEPTEDDELAY      INTEGER ,
    HANDLINGTIME          INTEGER ,
    CONSULTTIME INTEGER,
    HOLDTIME                       INTEGER ,
    NUMBEROFTIMESONHOLD            INTEGER ,
    NUMBEROFTIMESRTQ               INTEGER ,
    FINALDISPOSITION               VARCHAR2 (50 BYTE) ,
    FINALDISPOSITIONSTAMP          TIMESTAMP ,
    PRESENTINGTIME                 INTEGER ,
    PCPTIME                        INTEGER ,
    PCPFIRSTCODE                   VARCHAR2 (32 BYTE) ,
    WAITTIME                       INTEGER ,
    NEXTADDRESS                    VARCHAR2 (255 BYTE) ,
    NEXTSEGMENTID                  INTEGER ,
    CONTACTORIGINATEDSTAMP         TIMESTAMP ,
    FINALDISPOSITIONINTERVAL       VARCHAR2 (255 BYTE) ,
    SERVICEINTERVAL                VARCHAR2 (255 BYTE) ,
    ORIGINATEDINTERVAL             VARCHAR2 (255 BYTE) ,
    DISCONNECTSOURCE               VARCHAR2 (9 BYTE) ,
    NUMCONTACTOBSERVES             INTEGER ,
    NUMCONTACTBARGEINS             INTEGER ,
    ANCHOREDMEDIASERVER            VARCHAR2 (50 BYTE) ,
    PREFERREDMEDIASERVER           VARCHAR2 (50 BYTE) ,
    PREFERREDMEDIASERVERRESULT     INTEGER ,
    PREFERREDMEDIASERVERRESULTDESC VARCHAR2 (80 BYTE)
  )
   TABLESPACE MAXDAT_DATA  
   LOGGING;




CREATE TABLE CC_S_TMP_AVY_IAPPLICATION 
    ( 
     TIMESTAMP DATE , 
     APPLICATIONID NUMBER (10) , 
     APPLICATION VARCHAR2 (30 CHAR) , 
     CALLSABANDONED NUMBER (10) , 
     CALLSABANDONEDAFTTHRESHOLD NUMBER (10) , 
     CALLSABANDONEDDELAY NUMBER (10) , 
     CALLSANSWERED NUMBER (10) , 
     CALLSANSWEREDAFTTHRESHOLD NUMBER (10) , 
     CALLSANSWEREDDELAY NUMBER (10) , 
     CALLSGIVENFORCEBUSY NUMBER (10) , 
     CALLSGIVENFORCEDISCONNECT NUMBER (10) , 
     CALLSGIVENFORCEOVERFLOW NUMBER (10) , 
     CALLSGIVENROUTETO NUMBER (10) , 
     CALLSOFFERED NUMBER (10) , 
     CALLSTRANSFERREDIN NUMBER (10) , 
     CALLSTRANSFERREDOUT NUMBER (10) , 
     IVRABANDONED NUMBER (10) , 
     IVRTERMINATED NUMBER (10) , 
     IVRTRANSFERRED NUMBER (10) , 
     POSTCALLPROCESSINGTIME NUMBER (10) , 
     TALKTIME NUMBER (10) , 
     WAITTIME NUMBER (10) , 
     ANSDELAY2 NUMBER (10) , 
     ANSDELAY4 NUMBER (10) , 
     ANSDELAY6 NUMBER (10) , 
     ANSDELAY8 NUMBER (10) , 
     ANSDELAY10 NUMBER (10) , 
     ANSDELAY12 NUMBER (10) , 
     ANSDELAY14 NUMBER (10) , 
     ANSDELAY16 NUMBER (10) , 
     ANSDELAY18 NUMBER (10) , 
     ANSDELAY20 NUMBER (10) , 
     ANSDELAY22 NUMBER (10) , 
     ANSDELAY24 NUMBER (10) , 
     ANSDELAY26 NUMBER (10) , 
     ANSDELAY28 NUMBER (10) , 
     ANSDELAY30 NUMBER (10) , 
     ANSDELAY32 NUMBER (10) , 
     ANSDELAY34 NUMBER (10) , 
     ANSDELAY36 NUMBER (10) , 
     ANSDELAY38 NUMBER (10) , 
     ANSDELAY40 NUMBER (10) , 
     ANSDELAY42 NUMBER (10) , 
     ANSDELAY44 NUMBER (10) , 
     ANSDELAY46 NUMBER (10) , 
     ANSDELAY48 NUMBER (10) , 
     ANSDELAY50 NUMBER (10) , 
     ANSDELAY52 NUMBER (10) , 
     ANSDELAY54 NUMBER (10) , 
     ANSDELAY56 NUMBER (10) , 
     ANSDELAY58 NUMBER (10) , 
     ANSDELAY60 NUMBER (10) , 
     ANSDELAY70 NUMBER (10) , 
     ANSDELAY80 NUMBER (10) , 
     ANSDELAY90 NUMBER (10) , 
     ANSDELAY100 NUMBER (10) , 
     ANSDELAY110 NUMBER (10) , 
     ANSDELAY120 NUMBER (10) , 
     ANSDELAY130 NUMBER (10) , 
     ANSDELAY140 NUMBER (10) , 
     ANSDELAY150 NUMBER (10) , 
     ANSDELAY160 NUMBER (10) , 
     ANSDELAY170 NUMBER (10) , 
     ANSDELAY180 NUMBER (10) , 
     ANSDELAY190 NUMBER (10) , 
     ANSDELAY200 NUMBER (10) , 
     ANSDELAY210 NUMBER (10) , 
     ANSDELAY220 NUMBER (10) , 
     ANSDELAY230 NUMBER (10) , 
     ANSDELAY240 NUMBER (10) , 
     ANSDELAY250 NUMBER (10) , 
     ANSDELAY260 NUMBER (10) , 
     ANSDELAY270 NUMBER (10) , 
     ANSDELAY280 NUMBER (10) , 
     ANSDELAY290 NUMBER (10) , 
     ANSDELAY300 NUMBER (10) , 
     ANSDELAY360 NUMBER (10) , 
     ANSDELAY420 NUMBER (10) , 
     ANSDELAY480 NUMBER (10) , 
     ANSDELAY540 NUMBER (10) , 
     ANSDELAY600 NUMBER (10) , 
     ANSDELAYBEYOND NUMBER (10) , 
     ABDDELAY2 NUMBER (10) , 
     ABDDELAY4 NUMBER (10) , 
     ABDDELAY6 NUMBER (10) , 
     ABDDELAY8 NUMBER (10) , 
     ABDDELAY10 NUMBER (10) , 
     ABDDELAY12 NUMBER (10) , 
     ABDDELAY14 NUMBER (10) , 
     ABDDELAY16 NUMBER (10) , 
     ABDDELAY18 NUMBER (10) , 
     ABDDELAY20 NUMBER (10) , 
     ABDDELAY22 NUMBER (10) , 
     ABDDELAY24 NUMBER (10) , 
     ABDDELAY26 NUMBER (10) , 
     ABDDELAY28 NUMBER (10) , 
     ABDDELAY30 NUMBER (10) , 
     ABDDELAY32 NUMBER (10) , 
     ABDDELAY34 NUMBER (10) , 
     ABDDELAY36 NUMBER (10) , 
     ABDDELAY38 NUMBER (10) , 
     ABDDELAY40 NUMBER (10) , 
     ABDDELAY42 NUMBER (10) , 
     ABDDELAY44 NUMBER (10) , 
     ABDDELAY46 NUMBER (10) , 
     ABDDELAY48 NUMBER (10) , 
     ABDDELAY50 NUMBER (10) , 
     ABDDELAY52 NUMBER (10) , 
     ABDDELAY54 NUMBER (10) , 
     ABDDELAY56 NUMBER (10) , 
     ABDDELAY58 NUMBER (10) , 
     ABDDELAY60 NUMBER (10) , 
     ABDDELAY70 NUMBER (10) , 
     ABDDELAY80 NUMBER (10) , 
     ABDDELAY90 NUMBER (10) , 
     ABDDELAY100 NUMBER (10) , 
     ABDDELAY110 NUMBER (10) , 
     ABDDELAY120 NUMBER (10) , 
     ABDDELAY130 NUMBER (10) , 
     ABDDELAY140 NUMBER (10) , 
     ABDDELAY150 NUMBER (10) , 
     ABDDELAY160 NUMBER (10) , 
     ABDDELAY170 NUMBER (10) , 
     ABDDELAY180 NUMBER (10) , 
     ABDDELAY190 NUMBER (10) , 
     ABDDELAY200 NUMBER (10) , 
     ABDDELAY210 NUMBER (10) , 
     ABDDELAY220 NUMBER (10) , 
     ABDDELAY230 NUMBER (10) , 
     ABDDELAY240 NUMBER (10) , 
     ABDDELAY250 NUMBER (10) , 
     ABDDELAY260 NUMBER (10) , 
     ABDDELAY270 NUMBER (10) , 
     ABDDELAY280 NUMBER (10) , 
     ABDDELAY290 NUMBER (10) , 
     ABDDELAY300 NUMBER (10) , 
     ABDDELAY360 NUMBER (10) , 
     ABDDELAY420 NUMBER (10) , 
     ABDDELAY480 NUMBER (10) , 
     ABDDELAY540 NUMBER (10) , 
     ABDDELAY600 NUMBER (10) , 
     ABDDELAYBEYOND NUMBER (10) , 
     TIME VARCHAR2 (5 CHAR) , 
     CONTACTTYPE VARCHAR2 (30 CHAR) , 
     MAXCALLSANSDELAYATSKILLSET NUMBER (10) , 
     MAXCALLSANSDELAY NUMBER (10) ,
     MAXCALLSABANDONEDDELAY NUMBER (10)
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;




CREATE TABLE CC_S_TMP_CISCO_AGENT_INTERVAL 
    ( 
     DATETIME DATE , 
     SKILLTARGETID NUMBER , 
     TIMEZONE NUMBER , 
     LOGGEDONTIME NUMBER , 
     AVAILTIME NUMBER , 
     NOTREADYTIME NUMBER , 
     TALKOTHERTIME NUMBER 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;


CREATE INDEX TMP_CISCO_AGT_INT_DTTIME_IDX ON CC_S_TMP_CISCO_AGENT_INTERVAL 
    ( 
     DATETIME ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    COMPUTE STATISTICS 
;
CREATE INDEX TMP_CISCO_AGT_INT_SKTGTID_IDX ON CC_S_TMP_CISCO_AGENT_INTERVAL 
    ( 
     SKILLTARGETID ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    COMPUTE STATISTICS 
;


CREATE TABLE CC_S_TMP_CISCO_AGENT_LOGOUT 
    ( 
     SKILLTARGETID NUMBER , 
     LOGOUTDATETIME DATE , 
     TIMEZONE NUMBER , 
     LOGINDURATION NUMBER , 
     REASONCODE NUMBER 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;


CREATE INDEX TMP_CISCO_AGT_LOUT_LODTTME_IDX ON CC_S_TMP_CISCO_AGENT_LOGOUT 
    ( 
     LOGOUTDATETIME ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    COMPUTE STATISTICS 
;
CREATE INDEX TMP_CISCO_AGT_LOUT_SKTGTID_IDX ON CC_S_TMP_CISCO_AGENT_LOGOUT 
    ( 
     SKILLTARGETID ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    COMPUTE STATISTICS 
;


CREATE TABLE CC_S_TMP_CISCO_A_SG_INTERVAL 
    ( 
     DATETIME DATE , 
     DBDATETIME DATE , 
     SKILLTARGETID NUMBER , 
     SKILLGROUPSKILLTARGETID NUMBER , 
     TIMEZONE NUMBER , 
     AVAILTIME NUMBER , 
     LOGGEDONTIME NUMBER , 
     NOTREADYTIME NUMBER , 
     TALKRESERVETIME NUMBER , 
     RESERVEDSTATETIME NUMBER , 
     TALKINTIME NUMBER , 
     TALKOTHERTIME NUMBER , 
     TALKOUTTIME NUMBER , 
     TALKAUTOOUTTIME NUMBER , 
     TALKPREVIEWTIME NUMBER , 
     HOLDTIME NUMBER , 
     WORKNOTREADYTIME NUMBER , 
     WORKREADYTIME NUMBER , 
     AGENTOUTCALLS NUMBER , 
     CALLSHANDLED NUMBER , 
     AUTOOUTCALLS NUMBER , 
     PREVIEWCALLS NUMBER , 
     INTERNALCALLS NUMBER,
     INTERNALCALLSTIME      NUMBER,
     SHORTCALLS             NUMBER(10,0),
     REDIRECTNOANSCALLS      NUMBER(10,0),
     AGENTOUTCALLSTIME       NUMBER,
     PRECISIONQUEUEID        NUMBER
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;


CREATE INDEX TMP_CISCO_AGTSG_INT_DTTIME_IDX ON CC_S_TMP_CISCO_A_SG_INTERVAL 
    ( 
     DATETIME ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    COMPUTE STATISTICS 
;
CREATE INDEX TMP_CISCO_AGTSG_INT_STGID_IDX ON CC_S_TMP_CISCO_A_SG_INTERVAL 
    ( 
     SKILLTARGETID ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    COMPUTE STATISTICS 
;
CREATE INDEX TMP_CSCO_AGTSG_INT_SGTGTID_IDX ON CC_S_TMP_CISCO_A_SG_INTERVAL 
    ( 
     SKILLGROUPSKILLTARGETID ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    COMPUTE STATISTICS 
;


CREATE TABLE CC_S_TMP_CISCO_C_T_INTERVAL 
    ( 
     CALLTYPEID NUMBER , 
     TIMEZONE NUMBER , 
     DATETIME DATE , 
     DBDATETIME DATE , 
     ANSWERWAITTIME NUMBER , 
     CALLSHANDLED NUMBER , 
     CALLSOFFERED NUMBER , 
     HANDLETIME NUMBER , 
     TALKTIME NUMBER , 
     HOLDTIME NUMBER , 
     CALLSANSWERED NUMBER , 
     ANSINTERVAL1 NUMBER , 
     ANSINTERVAL2 NUMBER , 
     ANSINTERVAL3 NUMBER , 
     ANSINTERVAL4 NUMBER , 
     ANSINTERVAL5 NUMBER , 
     ANSINTERVAL6 NUMBER , 
     ANSINTERVAL7 NUMBER , 
     ANSINTERVAL8 NUMBER , 
     ANSINTERVAL9 NUMBER , 
     ANSINTERVAL10 NUMBER , 
     ABANDINTERVAL1 NUMBER , 
     ABANDINTERVAL2 NUMBER , 
     ABANDINTERVAL3 NUMBER , 
     ABANDINTERVAL4 NUMBER , 
     ABANDINTERVAL5 NUMBER , 
     ABANDINTERVAL6 NUMBER , 
     ABANDINTERVAL7 NUMBER , 
     ABANDINTERVAL8 NUMBER , 
     ABANDINTERVAL9 NUMBER , 
     ABANDINTERVAL10 NUMBER , 
     TOTALCALLSABAND NUMBER , 
     ROUTERQUEUEWAITTIME NUMBER , 
     ROUTERQUEUECALLTYPELIMIT NUMBER , 
     ROUTERQUEUEGLOBALLIMIT NUMBER , 
     CALLSONHOLD NUMBER , 
     MAXHOLDTIME NUMBER , 
     MAXCALLWAITTIME NUMBER , 
     SERVICELEVELCALLS NUMBER , 
     SERVICELEVELABAND NUMBER , 
     CALLDELAYABANDTIME NUMBER , 
     MAXCALLSQUEUED NUMBER , 
     SHORTCALLS NUMBER , 
     REPORTING_INTERVAL NUMBER , 
     VRUSCRIPTEDXFERREDCALLS NUMBER , 
     VRUFORCEDXFERREDCALLS NUMBER , 
     OVERFLOWOUT NUMBER , 
     CTVRUTIME NUMBER , 
     ICRDEFAULTROUTED NUMBER , 
     NETWORKDEFAULTROUTED NUMBER , 
     RETURNBUSY NUMBER , 
     CALLSRONA NUMBER , 
     RETURNRELEASE NUMBER , 
     CALLSROUTEDNONAGENT NUMBER , 
     ERRORCOUNT NUMBER , 
     AGENTERRORCOUNT NUMBER , 
     INCOMPLETECALLS NUMBER , 
     RETURNRING NUMBER 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;


CREATE INDEX TMP_CISCO_CTYPE_INT_CLTPID_IDX ON CC_S_TMP_CISCO_C_T_INTERVAL 
    ( 
     CALLTYPEID ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    COMPUTE STATISTICS 
;
CREATE INDEX TMP_CISCO_CTYPE_INT_DTTIME_IDX ON CC_S_TMP_CISCO_C_T_INTERVAL 
    ( 
     DATETIME ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    COMPUTE STATISTICS 
;


CREATE TABLE CC_S_TMP_INTERVAL 
    ( 
     INTERVAL_ID NUMBER (19)  NOT NULL , 
     INTERVAL_START_DATE DATE  NOT NULL , 
     INTERVAL_END_DATE DATE  NOT NULL , 
     INTERVAL_SECONDS NUMBER (4) DEFAULT 1800  NOT NULL , 
     RECORD_EFF_DT DATE DEFAULT to_date('1900/01/01', 'yyyy/mm/dd')  NOT NULL , 
     RECORD_END_DT DATE DEFAULT to_date('2999/12/31', 'yyyy/mm/dd')  NOT NULL 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;



ALTER TABLE CC_S_TMP_INTERVAL 
    ADD CONSTRAINT CK_CC_S_TMP_INTERVAL_SECONDS 
    CHECK ( INTERVAL_SECONDS IN (900, 1800, 3600)) 
;

CREATE INDEX CC_S_TMP_INTERVAL__IDX1 ON CC_S_TMP_INTERVAL 
    ( 
     INTERVAL_START_DATE ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;
CREATE INDEX CC_S_TMP_INTERVAL__IDX2 ON CC_S_TMP_INTERVAL 
    ( 
     INTERVAL_END_DATE ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;

ALTER TABLE CC_S_TMP_INTERVAL 
    ADD CONSTRAINT CC_S_TMP_INTERVAL_PK PRIMARY KEY ( INTERVAL_ID ) ;


ALTER TABLE CC_S_TMP_INTERVAL 
    ADD CONSTRAINT CC_S_TMP_INTERVAL_UN UNIQUE ( INTERVAL_START_DATE , INTERVAL_END_DATE ) ;



CREATE TABLE CC_S_TMP_IVR_STEP 
    ( 
     ID NUMBER  NOT NULL , 
     CLIENT VARCHAR2 (200) , 
     STEPTIME DATE , 
     CONNID VARCHAR2 (200) , 
     SESSIONID VARCHAR2 (250) , 
     STEPNAME VARCHAR2 (200) , 
     STEPVALUE VARCHAR2 (200) , 
     NODENAME VARCHAR2 (200) 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;


CREATE UNIQUE INDEX CC_S_IVR_STEP_IDX ON CC_S_TMP_IVR_STEP 
    ( 
     ID ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    COMPUTE STATISTICS 
;

ALTER TABLE CC_S_TMP_IVR_STEP 
    ADD CONSTRAINT CC_S_IVR_STEP_PK PRIMARY KEY ( ID ) ;



CREATE TABLE CC_S_TMP_PIPKINS_EVENT 
    ( 
     EVENT_ID NUMBER (38) , 
     NAME VARCHAR2 (250 BYTE) , 
     EVENT_TYPE_GROUP_ID NUMBER (38) , 
     EVENT_TYPE_ID NUMBER (38) , 
     TOLERANCE_FOR_TIMECLOCK DATE , 
     DELETE_DATE DATE , 
     TOLERANCE_FOR_ADHERING DATE , 
     DESCRIPTION VARCHAR2 (250 BYTE) , 
     OWNER_USER NUMBER (38) , 
     MODIFY_USER NUMBER (38) , 
     OWNER_DATE DATE , 
     MODIFY_DATE DATE , 
     WORK_CLASSIFICATION_ID NUMBER (38) 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;




CREATE TABLE CC_S_TMP_PIPKINS_OFFICE 
    ( 
     OFFICE_ID NUMBER (10) , 
     LOCALE_ID NUMBER (10) , 
     TIMEZONE_ID NUMBER (10) , 
     NAME VARCHAR2 (20) , 
     DESCRIPTION VARCHAR2 (200) , 
     DELETE_DATE DATE , 
     OWNER_USER NUMBER (10) , 
     MODIFY_USER NUMBER (10) , 
     OWNER_DATE DATE , 
     MODIFY_DATE DATE 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;




CREATE TABLE CC_S_TMP_PIPKINS_STAFF 
    ( 
     STAFF_ID NUMBER (38) , 
     STAFF_GROUP_ID NUMBER (10) , 
     STAFF_GROUP_NAME VARCHAR2 (50 BYTE) , 
     FIRST_NAME VARCHAR2 (50 BYTE) , 
     MIDDLE_NAME VARCHAR2 (50 BYTE) , 
     LAST_NAME VARCHAR2 (50 BYTE) , 
     SUFFIX VARCHAR2 (50 BYTE) , 
     NATIONAL_ID VARCHAR2 (250 BYTE) , 
     HIRE_DATE DATE , 
     TERMINATION_DATE DATE , 
     SCHEDULE_TYPE NUMBER (38) , 
     DELETE_DATE DATE , 
     SENIORITY_EFFECTIVE_DATE DATE , 
     OWNER_USER NUMBER (38) , 
     OWNER_DATE DATE , 
     MODIFY_USER NUMBER (38) , 
     MODIFY_DATE DATE , 
     SECONDARY_ID VARCHAR2 (250 BYTE) , 
     EMAIL_ADDRESS VARCHAR2 (250 BYTE) , 
     HOME_PHONE VARCHAR2 (28 BYTE) , 
     WORK_PHONE VARCHAR2 (28 BYTE) , 
     CELL_PHONE VARCHAR2 (28) , 
     ADDRESS VARCHAR2 (2000 BYTE) , 
     PIP_ADDRESS VARCHAR2 (250 BYTE) , 
     TEXT_ADDRESS VARCHAR2 (250) , 
     TERMINATION_POLICY_ID NUMBER (38) , 
     TERMINATION_REASON VARCHAR2 (2000 BYTE) , 
     COMMAND_SCRIPT VARCHAR2 (4000 BYTE) , 
     MESSAGE_BUFFER VARCHAR2 (4000 BYTE) 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;




CREATE TABLE CC_S_TMP_PIPKINS_STF_TO_OFFICE 
    ( 
     EFFECTIVE_DATE DATE , 
     STAFF_ID NUMBER (10) , 
     OFFICE_ID NUMBER (10) , 
     END_DATE DATE 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;




CREATE TABLE CC_S_TMP_PIPKINS_SUP_TO_STAFF 
    ( 
     STAFF_ID NUMBER (38) , 
     SUPERVISOR NUMBER (38) , 
     PRIORITY NUMBER (38) , 
     EFFECTIVE_DATE DATE , 
     END_DATE DATE , 
     SUPERVISOR_ID NUMBER (38) 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;




CREATE TABLE CC_S_TMP_PIPKINS_TASK 
    ( 
     STAFF_ID NUMBER (38) , 
     SCHEDULE_INSTANCE_ID NUMBER (38) , 
     TASK_START DATE , 
     LOCAL_TASK_START DATE , 
     SCENARIO_GROUP_ID NUMBER (38) , 
     TASK_END DATE , 
     LOCAL_TASK_END DATE , 
     TASK_CATEGORY_ID NUMBER (38) , 
     DURATION NUMBER (38) , 
     EVENT_ID NUMBER (38) , 
     SUPERVISOR NUMBER (38) , 
     TASK_EDIT_ID NUMBER (38) , 
     EDIT_STATE NUMBER (38) , 
     TASK_MODIFICATION_REQUEST_REF NUMBER (38) , 
     ALT_TASK_EDIT_ID NUMBER (38) 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;




CREATE TABLE CC_S_TMP_PIPKINS_TIMEZONE 
    ( 
     TIMEZONE_ID NUMBER (10) , 
     STD_NAME VARCHAR2 (50) , 
     NAME VARCHAR2 (50) , 
     START_TIME DATE , 
     DST_OBSERVED NUMBER (10) , 
     STD_OFFSET FLOAT , 
     DST_OFFSET FLOAT , 
     START_MONTH NUMBER (10) , 
     START_WEEK NUMBER (10) , 
     START_WEEK_DAY NUMBER (10) , 
     END_TIME DATE , 
     END_MONTH NUMBER (10) , 
     END_WEEK NUMBER (10) , 
     END_WEEK_DAY NUMBER (10) , 
     DST_NAME VARCHAR2 (50) , 
     SHIFT_YEAR1 NUMBER (10) , 
     SHIFT_YEAR1_START_TIME DATE , 
     SHIFT_YEAR1_START_MONTH NUMBER (10) , 
     SHIFT_YEAR1_START_WEEK NUMBER (10) , 
     SHIFT_YEAR1_START_WEEK_DAY NUMBER (10) , 
     SHIFT_YEAR1_END_TIME DATE , 
     SHIFT_YEAR1_END_MONTH NUMBER (10) , 
     SHIFT_YEAR1_END_WEEK NUMBER (10) , 
     SHIFT_YEAR1_END_WEEK_DAY NUMBER (10) , 
     DOTNET_NAME VARCHAR2 (50) , 
     DISPLAY_FLAG NUMBER (10) 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;




CREATE TABLE CC_S_VM_IN_QUEUE 
    ( 
     CCVMQ_ID NUMBER (19)  NOT NULL , 
     VM_QUEUE_ID VARCHAR2 (25)  NOT NULL , 
     MEDIA_TYPE VARCHAR2 (15)  NOT NULL , 
     VM_RECEIVED_DT DATE  NOT NULL , 
     ANI VARCHAR2 (25)  NOT NULL , 
     EXTRACT_DT DATE  NOT NULL , 
     LAST_UPDATE_DT DATE  NOT NULL , 
     LAST_UPDATE_BY VARCHAR2 (30)  NOT NULL 
    ) 
    LOGGING 
;


CREATE UNIQUE INDEX CC_S_VM_IN_QUEUE_IDX ON CC_S_VM_IN_QUEUE 
    ( 
     VM_QUEUE_ID ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;

ALTER TABLE CC_S_VM_IN_QUEUE 
    ADD CONSTRAINT CC_S_VM_IN_QUEUE_PK PRIMARY KEY ( CCVMQ_ID ) ;



CREATE TABLE CC_S_WFM_AGENT_ACTIVITY 
    ( 
     WFM_AGENT_ACTIVITY_ID NUMBER (19)  NOT NULL , 
     AGENT_ID NUMBER (19)  NOT NULL , 
     ACTIVITY_TYPE_ID NUMBER (19)  NOT NULL , 
     ACTIVITY_START_TIME DATE  NOT NULL , 
     ACTIVITY_END_TIME DATE  NOT NULL , 
     ACTIVITY_DURATION_SECONDS NUMBER (15,2) DEFAULT 0  NOT NULL , 
     ACTIVITY_DT DATE  NOT NULL , 
     EXTRACT_DT DATE  NOT NULL , 
     LAST_UPDATE_DT DATE  NOT NULL , 
     LAST_UPDATE_BY VARCHAR2 (30)  NOT NULL 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;



ALTER TABLE CC_S_WFM_AGENT_ACTIVITY 
    ADD CONSTRAINT CC_S_AGENT_ACTIVITY_CK 
    CHECK (ACTIVITY_START_TIME <= ACTIVITY_END_TIME)
;

CREATE UNIQUE INDEX CC_S_WFM_AGENT_ACTIVITY_IDX ON CC_S_WFM_AGENT_ACTIVITY 
    ( 
     WFM_AGENT_ACTIVITY_ID ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;
CREATE INDEX CC_S_WFM_AGENT_ACTIVITY_IDX2 ON CC_S_WFM_AGENT_ACTIVITY 
    ( 
     AGENT_ID ASC , 
     ACTIVITY_TYPE_ID ASC , 
     ACTIVITY_START_TIME ASC 
    ) 
    LOGGING 
;
CREATE INDEX CC_S_WFM_AGENT_ACTIVITY_IDX3 ON CC_S_WFM_AGENT_ACTIVITY 
    ( 
     ACTIVITY_TYPE_ID ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;

ALTER TABLE CC_S_WFM_AGENT_ACTIVITY 
    ADD CONSTRAINT CC_S_WFM_AGENT_ACTIVITY_PK PRIMARY KEY ( WFM_AGENT_ACTIVITY_ID ) ;



CREATE TABLE CC_S_WFM_INTERVAL 
    ( 
     WFM_INTERVAL_ID NUMBER (19)  NOT NULL , 
     INTERVAL_DATE DATE  NOT NULL , 
     CONTACT_QUEUE_ID NUMBER (19)  NOT NULL , 
     INTERVAL_ID NUMBER (19)  NOT NULL , 
     LABOR_MINUTES_TOTAL NUMBER (9,2) DEFAULT 0  NOT NULL , 
     LABOR_MINUTES_WAITING NUMBER (9,2) DEFAULT 0  NOT NULL , 
     LABOR_MINUTES_AVAILABLE NUMBER (9,2) DEFAULT 0  NOT NULL , 
     HEADCOUNT_TOTAL NUMBER (7,2) DEFAULT 0  NOT NULL , 
     HEADCOUNT_AVAILABLE NUMBER (7,2) DEFAULT 0  NOT NULL , 
     HEADCOUNT_UNAVAILABLE NUMBER (7,2) DEFAULT 0  NOT NULL , 
     EXTRACT_DT DATE  NOT NULL , 
     LAST_UPDATE_DT DATE  NOT NULL , 
     LAST_UPDATE_BY VARCHAR2 (30)  NOT NULL 
    ) 
        TABLESPACE MAXDAT_DATA 
        LOGGING 
;


CREATE INDEX CC_S_WFM_INTERVAL__IDXv2 ON CC_S_WFM_INTERVAL 
    ( 
     CONTACT_QUEUE_ID ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;
CREATE INDEX CC_S_WFM_INTERVAL__IDXv3 ON CC_S_WFM_INTERVAL 
    ( 
     INTERVAL_ID ASC 
    ) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;

ALTER TABLE CC_S_WFM_INTERVAL 
    ADD CONSTRAINT CC_S_WFM_INTERVAL_PK PRIMARY KEY ( WFM_INTERVAL_ID ) ;


ALTER TABLE CC_S_WFM_INTERVAL 
    ADD CONSTRAINT CC_S_WFM_INTERVAL__UN UNIQUE ( INTERVAL_DATE , CONTACT_QUEUE_ID , INTERVAL_ID ) ;



CREATE TABLE CORP_ETL_JOB_STATISTICS 
    ( 
     JOB_ID NUMBER  NOT NULL , 
     JOB_NAME VARCHAR2 (80 BYTE)  NOT NULL , 
     JOB_STATUS_CD VARCHAR2 (20 BYTE)  NOT NULL , 
     FILE_NAME VARCHAR2 (512 BYTE) , 
     RECORD_COUNT NUMBER , 
     PROCESSED_COUNT NUMBER , 
     ERROR_COUNT NUMBER , 
     WARNING_COUNT NUMBER , 
     RECORD_INSERTED_COUNT NUMBER , 
     RECORD_UPDATED_COUNT NUMBER , 
     JOB_START_DATE DATE , 
     JOB_END_DATE DATE , 
     PARENT_JOB_ID NUMBER 
    ) 
    LOGGING 
;



ALTER TABLE CORP_ETL_JOB_STATISTICS 
    ADD CONSTRAINT CORP_ETL_JOB_STATISTICS_PK PRIMARY KEY ( JOB_ID ) ;


CREATE TABLE CC_A_LIST_LKUP
  (CC_CELL_ID    number not null,
   NAME       varchar2(30) not null,
   LIST_TYPE  varchar2(30) not null,
   VALUE      varchar2(100) not null,
   OUT_VAR    varchar2(500),
   REF_TYPE   varchar2(100),
   REF_ID     number(38),
   START_DATE date,
   END_DATE   date,
   COMMENTS   varchar2(4000),
   CREATED_TS date not null,
   UPDATED_TS date not null)
TABLESPACE MAXDAT_DATA;

COMMENT ON TABLE CC_A_LIST_LKUP is 'Used to create list of values to used when pulling data for savvion';

COMMENT ON COLUMN CC_A_LIST_LKUP.NAME is 'LIST(lookup rule name for list of values)/IFTHEN(IF VALUE THEN OUT_VAR)/ID(REFERENCE AND ID)';
COMMENT ON COLUMN CC_A_LIST_LKUP.VALUE is 'Either a list or reference value - Secondary lookup value';
COMMENT ON COLUMN CC_A_LIST_LKUP.OUT_VAR is 'Value to be extracted from table';
COMMENT ON COLUMN CC_A_LIST_LKUP.REF_TYPE is 'Table name if ref id is prim key';
COMMENT ON COLUMN CC_A_LIST_LKUP.REF_ID is 'Prim key when ref_type has table name';
COMMENT ON COLUMN CC_A_LIST_LKUP.START_DATE is 'used to turn on value';
COMMENT ON COLUMN CC_A_LIST_LKUP.END_DATE is 'Used to turn off value';

ALTER TABLE CC_A_LIST_LKUP add CONSTRAINT CC_A_LIST_LKUP_PK PRIMARY KEY (CC_CELL_ID)
USING INDEX TABLESPACE MAXDAT_INDX;

ALTER TABLE CC_A_LIST_LKUP add CONSTRAINT CC_A_LIST_LKUP_UK UNIQUE (NAME,LIST_TYPE,VALUE)
USING INDEX TABLESPACE MAXDAT_INDX;

GRANT SELECT ON CC_A_LIST_LKUP TO MAXDAT_READ_ONLY; 


CREATE TABLE CC_A_LIST_LKUP_HIST
  (CC_CELL_HISTORY_ID number not null,
   HIST_TYPE       varchar2(100),
   CC_CELL_ID         number not null,
   NAME            varchar2(30) not null,
   LIST_TYPE       varchar2(30) not null,
   VALUE           varchar2(100) not null,
   OUT_VAR         varchar2(500),
   REF_TYPE        varchar2(100),
   REF_ID          number(38),
   START_DATE      date,
   END_DATE        date,
   COMMENTS        varchar2(4000),
   CREATED_TS      date not null,
   UPDATED_TS      date not null,
   HIST_CREATED_TS date not null,
   HIST_USER       varchar2(4000),
   HIST_UPDATED_TS date not null)
TABLESPACE MAXDAT_DATA;

ALTER TABLE CC_A_LIST_LKUP_HIST add CONSTRAINT CC_A_LIST_LKUP_HIST_PK PRIMARY KEY (CC_CELL_HISTORY_ID)
USING INDEX TABLESPACE MAXDAT_INDX;


CREATE TABLE CC_S_TMP_TERMINATN_CALL_DETAIL
(
  DATETIME DATE,
  TIMEZONE NUMBER,
  AGENTSKILLTARGETID NUMBER,
  PERIPHERALID NUMBER,
  CALLTYPEID NUMBER,
  SKILLGROUPSKILLTARGETID NUMBER,
  CALLDISPOSITIONFLAG NUMBER,
  TALKTIME NUMBER,
  HOLDTIME NUMBER,
  WORKTIME NUMBER
)
      TABLESPACE MAXDAT_DATA 
        LOGGING 
;

CREATE TABLE CC_S_TMP_AGENT
(
  SKILLTARGETID NUMBER,
  PERSONID NUMBER,
  PERIPHERALID NUMBER,
  ENTERPRISENAME VARCHAR2(100),
  PERIPHERALNUMBER VARCHAR2(30),
  DELETED VARCHAR2(2),
  SUPERVISORAGENT VARCHAR2(2),
  USERDELETABLE VARCHAR2(2),
  AGENTDESKSETTINGSID NUMBER(19,0),
  FIRSTNAME VARCHAR2(100),
  LASTNAME VARCHAR2(100),
  AGENTGROUP VARCHAR2(100)
)
      TABLESPACE MAXDAT_DATA 
        LOGGING 
;

CREATE TABLE CC_S_TMP_ACTIVITY_TYPE
(
   REASONCODE NUMBER(19,0)
 , REASONTEXT VARCHAR2(250)
 , DESCRIPTION VARCHAR2(250)
)
      TABLESPACE MAXDAT_DATA 
        LOGGING 
;

CREATE TABLE CC_S_TMP_AGT_EVENT_DETAIL
(
  DBDATETIME DATE
 ,DATETIME DATE
 ,SKILLTARGETID NUMBER(19,0)
 ,LOGINDATETIME DATE
 ,DURATION NUMBER(19,0)
 ,REASONCODE NUMBER(19,0)
 ,REASONTEXT VARCHAR2(100)
 ,AGENTDESKSETTINGID NUMBER(19,0)
)
      TABLESPACE MAXDAT_DATA 
        LOGGING 
;

CREATE TABLE CC_S_TMP_AGENT_SUPERVISOR
(
  AGENTLOGINID NVARCHAR2(100)
 ,AGENTFIRSTNAME VARCHAR2(100)
 ,AGENTLASTNAME VARCHAR2(100)
 ,SUPLOGINID NVARCHAR2(100)
 ,SUPFIRSTNAME VARCHAR2(100)
 ,SUPLASTNAME VARCHAR2(100)
 ,DESKSETTING VARCHAR2(100)
 ,AGENTTEAMID NUMBER(19,0)
)
      TABLESPACE MAXDAT_DATA 
        LOGGING 
;

ALTER TABLE CC_S_CONTACT_QUEUE 
    ADD CONSTRAINT CC_C_CNTCT_Q_CC_C_PRJCT_CFG_FK FOREIGN KEY 
    ( 
     PROJECT_CONFIG_ID
    ) 
    REFERENCES CC_C_PROJECT_CONFIG 
    ( 
     PROJECT_CONFIG_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_S_PRODUCTION_PLAN_HORIZON 
    ADD CONSTRAINT CC_C_HRZN_CC_C_PROD_PLN_FK FOREIGN KEY 
    ( 
     PRODUCTION_PLAN_ID
    ) 
    REFERENCES CC_S_PRODUCTION_PLAN 
    ( 
     PRODUCTION_PLAN_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_S_ACD_AGENT_ACTIVITY 
    ADD CONSTRAINT CC_S_ACD_AGT_ACT_CC_S_AGT_FK FOREIGN KEY 
    ( 
     AGENT_ID
    ) 
    REFERENCES CC_S_AGENT 
    ( 
     AGENT_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_S_ACD_INTERVAL 
    ADD CONSTRAINT CC_S_ACD_INTRVL_CC_S_AGENT_FK FOREIGN KEY 
    ( 
     AGENT_ID
    ) 
    REFERENCES CC_S_AGENT 
    ( 
     AGENT_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_S_ACD_INTERVAL 
    ADD CONSTRAINT CC_S_ACD_INTRVL_CC_S_CNTCTQ_FK FOREIGN KEY 
    ( 
     CONTACT_QUEUE_ID
    ) 
    REFERENCES CC_S_CONTACT_QUEUE 
    ( 
     CONTACT_QUEUE_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_S_ACD_INTERVAL 
    ADD CONSTRAINT CC_S_ACD_INTRVL_CC_S_INTRVL_FK FOREIGN KEY 
    ( 
     INTERVAL_ID
    ) 
    REFERENCES CC_S_INTERVAL 
    ( 
     INTERVAL_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_S_AGENT_ABSENCE 
    ADD CONSTRAINT CC_S_AGENT_ABS_CC_C_ACT_TYP_FK FOREIGN KEY 
    ( 
     ACTIVITY_TYPE_ID
    ) 
    REFERENCES CC_C_ACTIVITY_TYPE 
    ( 
     ACTIVITY_TYPE_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_S_AGENT_ABSENCE 
    ADD CONSTRAINT CC_S_AGENT_ABS_CC_S_AGENT_FK FOREIGN KEY 
    ( 
     AGENT_ID
    ) 
    REFERENCES CC_S_AGENT 
    ( 
     AGENT_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_S_AGENT 
    ADD CONSTRAINT CC_S_AGENT_CC_C_PRJ_CONFIG_FK FOREIGN KEY 
    ( 
     PROJECT_CONFIG_ID
    ) 
    REFERENCES CC_C_PROJECT_CONFIG 
    ( 
     PROJECT_CONFIG_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_S_WFM_AGENT_ACTIVITY 
    ADD CONSTRAINT CC_S_AGT_ACT_CC_C_ACT_TYPE_FK FOREIGN KEY 
    ( 
     ACTIVITY_TYPE_ID
    ) 
    REFERENCES CC_C_ACTIVITY_TYPE 
    ( 
     ACTIVITY_TYPE_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_S_WFM_AGENT_ACTIVITY 
    ADD CONSTRAINT CC_S_AGT_ACT_CC_S_AGT_FK FOREIGN KEY 
    ( 
     AGENT_ID
    ) 
    REFERENCES CC_S_AGENT 
    ( 
     AGENT_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_S_AGENT_SUPERVISOR 
    ADD CONSTRAINT CC_S_AGT_SUP_CC_S_AGT_FK FOREIGN KEY 
    ( 
     SUPERVISOR_AGENT_ID
    ) 
    REFERENCES CC_S_AGENT 
    ( 
     AGENT_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_S_AGENT_WORK_DAY 
    ADD CONSTRAINT CC_S_AGT_WORK_DAY_CC_S_AGT_FK FOREIGN KEY 
    ( 
     AGENT_ID
    ) 
    REFERENCES CC_S_AGENT 
    ( 
     AGENT_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_S_CALL_DETAIL 
    ADD CONSTRAINT CC_S_CALL_DETAIL_CC_S_AGENT_FK FOREIGN KEY 
    ( 
     AGENT_ID
    ) 
    REFERENCES CC_S_AGENT 
    ( 
     AGENT_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_S_CONTACT_QUEUE 
    ADD CONSTRAINT CC_S_CNTCT_Q_CC_C_UOW_FK FOREIGN KEY 
    ( 
     UNIT_OF_WORK_ID
    ) 
    REFERENCES CC_C_UNIT_OF_WORK 
    ( 
     UNIT_OF_WORK_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_S_CONTACT_QUEUE 
    ADD CONSTRAINT CC_S_CNTCT_Q_CC_S_ABN_PRIOD_FK FOREIGN KEY 
    ( 
     CALLS_ABANDOND_INTRVL_PRIOD_ID
    ) 
    REFERENCES CC_S_ACD_INTERVAL_PERIOD 
    ( 
     ACD_INTERVAL_PERIOD_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_S_CONTACT_QUEUE 
    ADD CONSTRAINT CC_S_CNTCT_Q_CC_S_ASA_PRIOD_FK FOREIGN KEY 
    ( 
     AVG_SPEED_ANSR_INTRVL_PRIOD_ID
    ) 
    REFERENCES CC_S_ACD_INTERVAL_PERIOD 
    ( 
     ACD_INTERVAL_PERIOD_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_S_FCST_INTERVAL 
    ADD CONSTRAINT CC_S_FCST_INTRVL_CC_C_HRZN_FK FOREIGN KEY 
    ( 
     PRODUCTION_PLAN_HORIZON_ID
    ) 
    REFERENCES CC_S_PRODUCTION_PLAN_HORIZON 
    ( 
     PRODUCTION_PLAN_HORIZON_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_S_FCST_INTERVAL 
    ADD CONSTRAINT CC_S_FCST_INTRVL_CC_C_UOW_FK FOREIGN KEY 
    ( 
     UNIT_OF_WORK_ID
    ) 
    REFERENCES CC_C_UNIT_OF_WORK 
    ( 
     UNIT_OF_WORK_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_S_FCST_INTERVAL 
    ADD CONSTRAINT CC_S_FCST_INTRVL_CC_S_INT_FK FOREIGN KEY 
    ( 
     INTERVAL_ID
    ) 
    REFERENCES CC_S_INTERVAL 
    ( 
     INTERVAL_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_S_IVR_INTERVAL 
    ADD CONSTRAINT CC_S_IVR_INTRVL_CC_S_INTRVL_FK FOREIGN KEY 
    ( 
     INTERVAL_ID
    ) 
    REFERENCES CC_S_INTERVAL 
    ( 
     INTERVAL_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_S_IVR_INTERVAL 
    ADD CONSTRAINT CC_S_IVR_INT_CC_C_PRJ_CC_C_FK FOREIGN KEY 
    ( 
     PROJECT_CONFIG_ID
    ) 
    REFERENCES CC_C_PROJECT_CONFIG 
    ( 
     PROJECT_CONFIG_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_S_IVR_SELF_SERVICE_USAGE 
    ADD CONSTRAINT CC_S_IVR_SVC_CC_S_SVC_PATH_FK FOREIGN KEY 
    ( 
     IVR_SELF_SERVICE_PATH_ID
    ) 
    REFERENCES CC_S_IVR_SELF_SERVICE_PATH 
    ( 
     IVR_SELF_SERVICE_PATH_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_S_IVR_SELF_SERVICE_USAGE 
    ADD CONSTRAINT CC_S_IVR_USAGE_C_PRJ_CNFG_FK FOREIGN KEY 
    ( 
     PROJECT_CONFIG_ID
    ) 
    REFERENCES CC_C_PROJECT_CONFIG 
    ( 
     PROJECT_CONFIG_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_S_IVR_SELF_SERVICE_USAGE 
    ADD CONSTRAINT CC_S_IVR_USAGE_S_INTERVAL_FK FOREIGN KEY 
    ( 
     INTERVAL_ID
    ) 
    REFERENCES CC_S_INTERVAL 
    ( 
     INTERVAL_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_S_WFM_INTERVAL 
    ADD CONSTRAINT CC_S_WFM_INT_CC_S_CNTCT_Q_FK FOREIGN KEY 
    ( 
     CONTACT_QUEUE_ID
    ) 
    REFERENCES CC_S_CONTACT_QUEUE 
    ( 
     CONTACT_QUEUE_ID
    ) 
    NOT DEFERRABLE 
;


ALTER TABLE CC_S_WFM_INTERVAL 
    ADD CONSTRAINT CC_S_WFM_INT_CC_S_INTRVL_FK FOREIGN KEY 
    ( 
     INTERVAL_ID
    ) 
    REFERENCES CC_S_INTERVAL 
    ( 
     INTERVAL_ID
    ) 
    NOT DEFERRABLE 
;



CREATE OR REPLACE VIEW CC_S_AGENT_SV AS
SELECT CC_S_AGENT.* FROM CC_S_AGENT ;



CREATE OR REPLACE VIEW CC_S_CALL_DETAIL_SV AS
SELECT CC_S_CALL_DETAIL.* FROM CC_S_CALL_DETAIL ;



CREATE OR REPLACE FORCE VIEW CC_S_TMP_IVR_STEP_SV AS
SELECT iStep.ID,
  iStep.CONNID,
  iStep.STEPTIME,
  iStep.STEPNAME,
  iStep.STEPVALUE,
  iStep.NODENAME,
  CASE
    WHEN iStep.STEPVALUE LIKE 'mdiivrapp%'
    THEN NULL
    ELSE LAG(iStep.NODENAME, 1, NULL) OVER (ORDER BY iStep.CONNID, iStep.STEPTIME)
  END            AS begin_node,
  iStep.NODENAME AS end_node,
  (
  CASE
    WHEN iStep.STEPNAME = 'RPT_IVRData'
    THEN iStep.STEPVALUE
    ELSE iStep.NODENAME
  END) AS ournodename
FROM CC_S_TMP_IVR_STEP iStep
WHERE (iStep.STEPNAME = 'RPT_IVR_GetMenu')
OR (iStep.STEPNAME    = 'RPT_IVR_GetData'
AND iStep.STEPVALUE LIKE 'mdiivrapp%')
OR (iStep.STEPNAME = 'RPT_IVRData'
AND iStep.STEPVALUE LIKE '%vcall')
ORDER BY iStep.CONNID,
  iStep.STEPTIME ;



CREATE SEQUENCE SEQ_CC_A_ADHOC_JOB 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_A_SCHEDULE 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_A_SCHEDULED_JOB 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_C_ACTIVITY_TYPE 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_C_CONTACT_QUEUE 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_C_FILTER 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_C_LOOKUP 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_C_PROJECT_CONFIG 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_C_UNIT_OF_WORK 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_L_ERROR 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_L_PATCH_LOG 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_S_ACD_AGENT_ACTIVITY 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_S_ACD_INTERVAL 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_S_ACD_INTERVAL_PERIOD 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_S_AGENT 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_S_AGENT_ABSENCE 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_S_AGENT_SUPERVISOR 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_S_AGENT_WORK_DAY 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_S_APPRVD_EXCPTN 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_S_ATTENDANCE 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_S_CALL_DETAIL 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_S_CONTACT_QUEUE 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_S_FCST_INTERVAL 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_S_GROUP 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_S_INTERVAL 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_S_IVR_INTERVAL 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_S_IVR_SELF_SERVICE_PATH 
    START WITH 100 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_S_IVR_SS_USAGE 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_S_PP_HORIZON 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_S_PRODUCTION_PLAN 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_S_PROJECT 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_S_READINESS 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_S_SITE 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_S_VM_IN_QUEUE 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_S_WFM_AGENT_ACTIVITY 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_CC_S_WFM_INTERVAL 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE SEQ_JOB_ID 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 99999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE SEQUENCE CC_CELL_HISTORY_SEQ;

CREATE SEQUENCE SEQ_CC_CELL_ID;


CREATE OR REPLACE TRIGGER BIU_CC_A_ADHOC_JOB 
    BEFORE INSERT OR UPDATE ON CC_A_ADHOC_JOB 
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.ADHOC_JOB_ID IS NULL THEN 
          SELECT SEQ_CC_A_ADHOC_JOB.NEXTVAL INTO :NEW.ADHOC_JOB_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.CREATION_DATE := SYSDATE;
END IF;
END;  
/

ALTER TRIGGER BIU_CC_A_ADHOC_JOB ENABLE; 


CREATE OR REPLACE TRIGGER BIU_CC_A_SCHEDULE 
    BEFORE INSERT ON CC_A_SCHEDULE 
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.SCHEDULE_ID IS NULL THEN 
          SELECT SEQ_CC_A_SCHEDULE.NEXTVAL INTO :NEW.SCHEDULE_ID FROM DUAL;
END IF;
END;  
/


CREATE OR REPLACE TRIGGER BIU_CC_A_SCHEDULED_JOB 
    BEFORE INSERT OR UPDATE ON CC_A_SCHEDULED_JOB 
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.SCHEDULED_JOB_ID IS NULL THEN 
          SELECT SEQ_CC_A_SCHEDULED_JOB.NEXTVAL INTO :NEW.SCHEDULED_JOB_ID FROM DUAL;
END IF;
IF INSERTING THEN
  	:NEW.JOB_START_DATE := SYSDATE;
END IF;
END; 
 
/

ALTER TRIGGER BIU_CC_A_SCHEDULED_JOB ENABLE; 


CREATE OR REPLACE TRIGGER BIU_CC_C_ACTIVITY_TYPE 
    BEFORE INSERT OR UPDATE ON CC_C_ACTIVITY_TYPE 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.ACTIVITY_TYPE_ID IS NULL THEN 
          SELECT SEQ_CC_C_ACTIVITY_TYPE.NEXTVAL INTO :NEW.ACTIVITY_TYPE_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATE_BY := USER;
END; 
/

ALTER TRIGGER BIU_CC_C_ACTIVITY_TYPE ENABLE; 


CREATE OR REPLACE TRIGGER BIU_CC_C_CONTACT_QUEUE 
    BEFORE INSERT OR UPDATE ON CC_C_CONTACT_QUEUE 
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.C_CONTACT_QUEUE_ID IS NULL THEN 
  SELECT SEQ_CC_C_CONTACT_QUEUE.NEXTVAL INTO :NEW.C_CONTACT_QUEUE_ID FROM DUAL;
END IF;
IF INSERTING AND :NEW.QUEUE_NUMBER IS NULL THEN 
  :NEW.QUEUE_NUMBER := :NEW.C_CONTACT_QUEUE_ID;
END IF;
END; 
/

ALTER TRIGGER BIU_CC_C_CONTACT_QUEUE ENABLE; 


CREATE OR REPLACE TRIGGER BIU_CC_C_FILTER 
    BEFORE INSERT OR UPDATE ON CC_C_FILTER 
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.FILTER_ID IS NULL THEN 
          SELECT SEQ_CC_C_FILTER.NEXTVAL INTO :NEW.FILTER_ID FROM DUAL;
END IF;
END;  
/


CREATE OR REPLACE TRIGGER BIU_CC_C_LOOKUP 
    BEFORE INSERT OR UPDATE ON CC_C_LOOKUP 
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.LOOKUP_ID IS NULL THEN 
          SELECT SEQ_CC_C_LOOKUP.NEXTVAL INTO :NEW.LOOKUP_ID FROM DUAL;
END IF;
END;  
/


CREATE OR REPLACE TRIGGER BIU_CC_C_PROJECT_CONFIG 
    BEFORE INSERT OR UPDATE ON CC_C_PROJECT_CONFIG 
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.PROJECT_CONFIG_ID IS NULL THEN 
          SELECT SEQ_CC_C_PROJECT_CONFIG.NEXTVAL INTO :NEW.PROJECT_CONFIG_ID FROM DUAL;
END IF;
END; 
/

ALTER TRIGGER BIU_CC_C_PROJECT_CONFIG ENABLE; 


CREATE OR REPLACE TRIGGER BIU_CC_C_UNIT_OF_WORK 
    BEFORE INSERT OR UPDATE ON CC_C_UNIT_OF_WORK 
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.UNIT_OF_WORK_ID IS NULL THEN 
          SELECT SEQ_CC_C_UNIT_OF_WORK.NEXTVAL INTO :NEW.UNIT_OF_WORK_ID FROM DUAL;
END IF;
END; 
/

ALTER TRIGGER BIU_CC_C_UNIT_OF_WORK ENABLE; 


CREATE OR REPLACE TRIGGER BIU_CC_L_PATCH_LOG 
    BEFORE INSERT OR UPDATE ON CC_L_PATCH_LOG 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.PATCH_LOG_ID IS NULL THEN 
  SELECT SEQ_CC_L_PATCH_LOG.NEXTVAL INTO :NEW.PATCH_LOG_ID FROM DUAL;
END IF;
END; 
/

ALTER TRIGGER BIU_CC_L_PATCH_LOG ENABLE; 


CREATE OR REPLACE TRIGGER BIU_CC_S_ACD_AGENT_ACTIVITY 
    BEFORE INSERT OR UPDATE ON CC_S_ACD_AGENT_ACTIVITY 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.ACD_AGENT_ACTIVITY_ID IS NULL THEN 
          SELECT SEQ_CC_S_ACD_AGENT_ACTIVITY.NEXTVAL INTO :NEW.ACD_AGENT_ACTIVITY_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATE_BY := USER;
END; 
/

ALTER TRIGGER BIU_CC_S_ACD_AGENT_ACTIVITY ENABLE; 


CREATE OR REPLACE TRIGGER BIU_CC_S_ACD_INTERVAL 
    BEFORE INSERT OR UPDATE ON CC_S_ACD_INTERVAL 
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.ACD_INTERVAL_ID IS NULL THEN 
          SELECT SEQ_CC_S_ACD_INTERVAL.NEXTVAL INTO :NEW.ACD_INTERVAL_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
IF :NEW.LAST_UPDATE_BY IS NULL THEN 
          :NEW.LAST_UPDATE_BY := USER;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
END; 
/

ALTER TRIGGER BIU_CC_S_ACD_INTERVAL ENABLE; 


CREATE OR REPLACE TRIGGER BIU_CC_S_ACD_INTERVAL_PERIOD 
    BEFORE INSERT OR UPDATE ON CC_S_ACD_INTERVAL_PERIOD 
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.ACD_INTERVAL_PERIOD_ID IS NULL THEN 
          SELECT SEQ_CC_S_ACD_INTERVAL_PERIOD.NEXTVAL INTO :NEW.ACD_INTERVAL_PERIOD_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
END; 
/

ALTER TRIGGER BIU_CC_S_ACD_INTERVAL_PERIOD ENABLE; 


CREATE OR REPLACE TRIGGER BIU_CC_S_AGENT 
    BEFORE INSERT OR UPDATE ON CC_S_AGENT 
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.AGENT_ID IS NULL THEN 
          SELECT SEQ_CC_S_AGENT.NEXTVAL INTO :NEW.AGENT_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATE_BY := USER;
END; 
/

ALTER TRIGGER BIU_CC_S_AGENT ENABLE; 


CREATE OR REPLACE TRIGGER BIU_CC_S_AGENT_ABSENCE 
    BEFORE INSERT OR UPDATE ON CC_S_AGENT_ABSENCE 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.AGENT_ABSENCE_ID IS NULL THEN 
          SELECT SEQ_CC_S_AGENT_ABSENCE.NEXTVAL INTO :NEW.AGENT_ABSENCE_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATE_BY := USER;
END; 
/

ALTER TRIGGER BIU_CC_S_AGENT_ABSENCE ENABLE; 


CREATE OR REPLACE TRIGGER BIU_CC_S_AGENT_SUPERVISOR 
    BEFORE INSERT OR UPDATE ON CC_S_AGENT_SUPERVISOR 
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.AGENT_SUPERVISOR_ID IS NULL THEN 
          SELECT SEQ_CC_S_AGENT_SUPERVISOR.NEXTVAL INTO :NEW.AGENT_SUPERVISOR_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
END; 
/

ALTER TRIGGER BIU_CC_S_AGENT_SUPERVISOR ENABLE; 


CREATE OR REPLACE TRIGGER BIU_CC_S_AGENT_WORK_DAY 
    BEFORE INSERT OR UPDATE ON CC_S_AGENT_WORK_DAY 
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.AGENT_WORK_DAY_ID IS NULL THEN 
          SELECT SEQ_CC_S_AGENT_WORK_DAY.NEXTVAL INTO :NEW.AGENT_WORK_DAY_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATE_BY := USER;
END; 
/

ALTER TRIGGER BIU_CC_S_AGENT_WORK_DAY ENABLE; 


CREATE OR REPLACE TRIGGER BIU_CC_S_CALL_DETAIL 
    BEFORE INSERT OR UPDATE ON CC_S_CALL_DETAIL 
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.CALL_DETAIL_ID IS NULL THEN 
          SELECT SEQ_CC_S_CALL_DETAIL.NEXTVAL INTO :NEW.CALL_DETAIL_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATE_BY := USER;
END; 
/

ALTER TRIGGER BIU_CC_S_CALL_DETAIL ENABLE; 


CREATE OR REPLACE TRIGGER BIU_CC_S_CONTACT_QUEUE 
    BEFORE INSERT OR UPDATE ON CC_S_CONTACT_QUEUE 
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.CONTACT_QUEUE_ID IS NULL THEN 
          SELECT SEQ_CC_S_CONTACT_QUEUE.NEXTVAL INTO :NEW.CONTACT_QUEUE_ID FROM DUAL;
END IF;
END; 
/

ALTER TRIGGER BIU_CC_S_CONTACT_QUEUE ENABLE; 


CREATE OR REPLACE TRIGGER BIU_CC_S_FCST_INTERVAL 
    BEFORE INSERT OR UPDATE ON CC_S_FCST_INTERVAL 
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.FCST_INTERVAL_ID IS NULL THEN 
          SELECT SEQ_CC_S_FCST_INTERVAL.NEXTVAL INTO :NEW.FCST_INTERVAL_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATE_BY := USER;
END; 
/

ALTER TRIGGER BIU_CC_S_FCST_INTERVAL ENABLE; 


CREATE OR REPLACE TRIGGER BIU_CC_S_INTERVAL 
    BEFORE INSERT OR UPDATE ON CC_S_INTERVAL 
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.INTERVAL_ID IS NULL THEN 
          SELECT SEQ_CC_S_INTERVAL.NEXTVAL INTO :NEW.INTERVAL_ID FROM DUAL;
END IF;
END;  
/

ALTER TRIGGER BIU_CC_S_INTERVAL ENABLE; 


CREATE OR REPLACE TRIGGER BIU_CC_S_IVR_INTERVAL 
    BEFORE INSERT OR UPDATE ON CC_S_IVR_INTERVAL 
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.IVR_INTERVAL_ID IS NULL THEN 
          SELECT SEQ_CC_S_IVR_INTERVAL.NEXTVAL INTO :NEW.IVR_INTERVAL_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
IF :NEW.LAST_UPDATE_BY IS NULL THEN 
	:NEW.LAST_UPDATE_BY := USER;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
END; 
/

ALTER TRIGGER BIU_CC_S_IVR_INTERVAL ENABLE; 


CREATE OR REPLACE TRIGGER BIU_CC_S_PP_HORIZON 
    BEFORE INSERT OR UPDATE ON CC_S_PRODUCTION_PLAN_HORIZON 
    FOR EACH ROW 
BEGIN IF INSERTING
  AND :NEW.PRODUCTION_PLAN_HORIZON_ID IS NULL THEN
  SELECT SEQ_CC_S_PP_HORIZON.NEXTVAL INTO :NEW.PRODUCTION_PLAN_HORIZON_ID FROM DUAL;
END IF;
IF INSERTING THEN
  :NEW.CREATE_DATE := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DATE := SYSDATE;
END;
/ 


CREATE OR REPLACE TRIGGER BIU_CC_S_PRODUCTION_PLAN 
    BEFORE INSERT OR UPDATE ON CC_S_PRODUCTION_PLAN 
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.PRODUCTION_PLAN_ID IS NULL THEN 
          SELECT SEQ_CC_S_PRODUCTION_PLAN.NEXTVAL INTO :NEW.PRODUCTION_PLAN_ID FROM DUAL;
END IF;
IF INSERTING THEN
  :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DATE := SYSDATE;
END; 
/

ALTER TRIGGER BIU_CC_S_PRODUCTION_PLAN ENABLE; 


CREATE OR REPLACE TRIGGER BIU_CC_S_VM_IN_QUEUE 
    BEFORE INSERT OR UPDATE ON CC_S_VM_IN_QUEUE 
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.CCVMQ_ID IS NULL THEN 
          SELECT SEQ_CC_S_VM_IN_QUEUE.NEXTVAL INTO :NEW.CCVMQ_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATE_BY := USER;
END; 
/

ALTER TRIGGER BIU_CC_S_VM_IN_QUEUE ENABLE; 


CREATE OR REPLACE TRIGGER BIU_CC_S_WFM_AGENT_ACTIVITY 
    BEFORE INSERT OR UPDATE ON CC_S_WFM_AGENT_ACTIVITY 
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.WFM_AGENT_ACTIVITY_ID IS NULL THEN 
          SELECT SEQ_CC_S_WFM_AGENT_ACTIVITY.NEXTVAL INTO :NEW.WFM_AGENT_ACTIVITY_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATE_BY := USER;
END; 
/

ALTER TRIGGER BIU_CC_S_WFM_AGENT_ACTIVITY ENABLE; 


CREATE OR REPLACE TRIGGER BIU_CC_S_WFM_INTERVAL 
    BEFORE INSERT OR UPDATE ON CC_S_WFM_INTERVAL 
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.WFM_INTERVAL_ID IS NULL THEN 
          SELECT SEQ_CC_S_WFM_INTERVAL.NEXTVAL INTO :NEW.WFM_INTERVAL_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATE_BY := USER;
END;  
/

ALTER TRIGGER BIU_CC_S_WFM_INTERVAL ENABLE; 


CREATE OR REPLACE TRIGGER BI_CC_L_ERROR 
    BEFORE INSERT ON CC_L_ERROR 
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.ID IS NULL THEN 
          SELECT SEQ_CC_L_ERROR.NEXTVAL INTO :NEW.ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.ERROR_DATE := SYSDATE;
END IF;
END; 
/

ALTER TRIGGER BI_CC_L_ERROR ENABLE; 

CREATE OR REPLACE TRIGGER TRG_BIU_CC_A_LIST_LKUP
BEFORE INSERT OR UPDATE ON CC_A_LIST_LKUP
FOR EACH ROW
BEGIN
  if inserting then
    if :new.CC_CELL_ID is null then
      :new.CC_CELL_ID := SEQ_CC_CELL_ID.nextval;
    end if;
    if :new.CREATED_TS is null then
      :new.CREATED_TS := sysdate;
    end if;
  end if;
  :new.UPDATED_TS := sysdate;
end;
/


CREATE OR REPLACE TRIGGER TRG_ADIU_CC_A_LIST_LKUP
AFTER INSERT OR UPDATE OR DELETE ON CC_A_LIST_LKUP
FOR EACH ROW
BEGIN

  if inserting then
    insert into CC_A_LIST_LKUP_HIST
      (CC_CELL_HISTORY_ID,
       HIST_TYPE,
       CC_CELL_ID,
       NAME,
       LIST_TYPE,
       VALUE,
       OUT_VAR,
       REF_TYPE,
       REF_ID,
       START_DATE,
       END_DATE,
       COMMENTS,
       CREATED_TS,
       UPDATED_TS,
       HIST_CREATED_TS,
       HIST_USER,
       HIST_UPDATED_TS)
    values
      (CC_CELL_HISTORY_SEQ.nextval,
       'INSERT',
       :new.CC_CELL_ID,
       :new.NAME,
       :new.LIST_TYPE,
       :new.VALUE,
       :new.OUT_VAR,
       :new.REF_TYPE,
       :new.REF_ID,
       :new.START_DATE, 
       :new.END_DATE,
       :new.COMMENTS,
       :new.CREATED_TS,
       :new.UPDATED_TS,
       sysdate,
       user,
       sysdate);
  end if;
  
  if updating then
    insert into CC_A_LIST_LKUP_HIST 
      (CC_CELL_HISTORY_ID,
       HIST_TYPE,
       CC_CELL_ID,
       NAME,
       LIST_TYPE,
       VALUE,
       OUT_VAR,
       REF_TYPE,
       REF_ID,
       START_DATE,
       END_DATE,
       COMMENTS,
       CREATED_TS,
       UPDATED_TS,
       HIST_CREATED_TS,
       HIST_USER,
       HIST_UPDATED_TS)
    values
      (CC_CELL_HISTORY_SEQ.nextval,
       'UPDATE',
       :old.CC_CELL_ID,
       :old.name,
       :old.LIST_TYPE,
       :old.value,
       :old.OUT_VAR,
       :old.REF_TYPE,
       :old.REF_ID,
       :old.START_DATE,
       :old.END_DATE,
       :old.COMMENTS,
       :old.CREATED_TS,
       :old.UPDATED_TS,
       sysdate,
       user,
       sysdate);
       
  end if;
  
  if deleting then
    insert into CC_A_LIST_LKUP_HIST
      (CC_CELL_HISTORY_ID,
       HIST_TYPE,
       CC_CELL_ID,
       NAME,
       LIST_TYPE,
       VALUE,
       OUT_VAR,
       REF_TYPE,
       REF_ID,
       START_DATE,
       END_DATE,
       COMMENTS,
       CREATED_TS,
       UPDATED_TS,
       HIST_CREATED_TS,
       HIST_USER,
       HIST_UPDATED_TS)
    values
      (CC_CELL_HISTORY_SEQ.nextval,
       'DELETE',
       :old.CC_CELL_ID,
       :old.name,
       :old.LIST_TYPE,
       :old.value,
       :old.OUT_VAR,
       :old.REF_TYPE,
       :old.REF_ID,
       :old.START_DATE,
       :old.END_DATE,
       :old.COMMENTS,
       :old.CREATED_TS,
       :old.UPDATED_TS,
       sysdate,
       user,
       sysdate);
  end if;
  
end;
/





-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            54
-- CREATE INDEX                            48
-- ALTER TABLE                             98
-- CREATE VIEW                              3
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          28
-- ALTER TRIGGER                           24
-- CREATE STRUCTURED TYPE                   0
-- CREATE COLLECTION TYPE                   0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         37
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
