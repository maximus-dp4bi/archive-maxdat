

CREATE TABLE CC_S_TMP_PIPKINS_STAFF_GROUP (
	STAFF_GROUP_ID	NUMBER(22)
	, PFUSER_ID	NUMBER(22)
	, NAME	VARCHAR2(50)
	, CATEGORY	NUMBER(22)
	, DESCRIPTION	VARCHAR2(250)
	, OWNER_USER	NUMBER(22)
	, MODIFY_USER	NUMBER(22)
	, OWNER_DATE	DATE
	, MODIFY_DATE	DATE
	, DELETE_DATE	DATE
)
; 


CREATE TABLE CC_S_TMP_PIPKINS_STF_GRP_STF (
  STAFF_ID	NUMBER(22)
  , STAFF_GROUP_ID	NUMBER(22)
  , END_DATE	DATE
  , START_DATE	DATE
)
;


CREATE TABLE CC_S_AGENT_GROUP ( 	
	AGENT_GROUP_ID NUMBER(19,0),
	AGENT_ID NUMBER(19,0), 
	GROUP_ID NUMBER(19,0), 
	GROUP_NAME VARCHAR2(50 BYTE),
	RECORD_EFF_DT DATE, 
	RECORD_END_DT DATE,
	EXTRACT_DT DATE, 
	LAST_UPDATE_DT DATE, 
	LAST_UPDATE_BY VARCHAR2(30 BYTE)
);


ALTER TABLE CC_S_AGENT_GROUP ADD CONSTRAINT CC_S_AGENT_GROUP_AGENT_FK FOREIGN KEY (AGENT_ID)
	  REFERENCES CC_S_AGENT (AGENT_ID) ENABLE;


CREATE SEQUENCE  SEQ_CC_S_AGENT_GROUP MINVALUE 1 MAXVALUE 9999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE;
	  
	  
CREATE OR REPLACE TRIGGER BIU_CC_S_AGENT_GROUP
    BEFORE INSERT OR UPDATE ON CC_S_AGENT_GROUP 
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.AGENT_GROUP_ID IS NULL THEN 
	SELECT SEQ_CC_S_AGENT_GROUP.NEXTVAL INTO :NEW.AGENT_GROUP_ID FROM DUAL;
END IF;
IF INSERTING THEN 
	:NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATE_BY := USER;
END;
/
ALTER TRIGGER BIU_CC_S_AGENT_GROUP ENABLE;

INSERT INTO CC_L_PATCH_LOG ( PATCH_VERSION , SCRIPT_SEQUENCE , SCRIPT_NAME)
VALUES ('1.10.0','005','005_CREATE_AGENT_GROUP_STAGING_TABLES');

COMMIT;