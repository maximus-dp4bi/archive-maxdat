alter session set current_schema = cisco_enterprise_cc;

CREATE TABLE CC_HCO_S_CALL_BACK
(
  CALL_BACK_ID NUMBER NOT NULL
  , SURROGATE_ID NUMBER
  , CALL_BACK_DATE DATE
  , CLIENT VARCHAR2(20)
  , ENTER_DATETIME DATE
  , EVENT_DATETIME DATE
  , LEAVE_DATETIME DATE
  , SUBMITTED_TIME DATE
  , COMPLETED_TIME DATE
  , CALL_BACK_TIME NUMBER
  , STATUS NUMBER
  , STATUS_TEXT VARCHAR2(50)
  , FIRST_NAME VARCHAR2(20)
  , LAST_NAME VARCHAR2(20)
  , CAUSE_ID NUMBER
  , CAUSE_TEXT VARCHAR2(50)
  , ACTIVITY_ID VARCHAR2(50)
  , AGENT_PHONE_EXT NUMBER
  , LOGIN_ID VARCHAR2(100)
  , QUEUE_NUMBER NUMBER
  , QUEUE_NAME VARCHAR2(50)
  , EXTRACT_DT DATE
  , LAST_UPDATE_DT DATE
  , LAST_UPDATE_BY VARCHAR2(30)
);


ALTER TABLE CC_HCO_S_CALL_BACK
ADD CONSTRAINT CC_HCO_S_CALL_BACK_PK PRIMARY KEY (CALL_BACK_ID);

CREATE SEQUENCE SEQ_CC_HCO_S_CALL_BACK START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20;

CREATE OR REPLACE TRIGGER BIU_CC_HCO_S_CALL_BACK
    BEFORE INSERT OR UPDATE ON CC_HCO_S_CALL_BACK
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.CALL_BACK_ID IS NULL THEN 
          SELECT SEQ_CC_HCO_S_CALL_BACK.NEXTVAL INTO :NEW.CALL_BACK_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATE_BY := USER;
END; 
/

CREATE TABLE CC_HCO_F_CALL_BACK
  (
    F_CALL_BACK_ID  		   NUMBER (19) NOT NULL ,
    D_DATE_ID                      NUMBER (19) NOT NULL ,
    D_CONTACT_QUEUE_ID             NUMBER (19) NOT NULL ,
    D_AGENT_ID			NUMBER,
    AGENT_LOGIN_ID		NUMBER,
    CALL_BACK_DATE			DATE,
    QUEUE_NUMBER                   NUMBER (19),
    CLIENT		VARCHAR2(20),
    CALL_BACK_TIME NUMBER,
    STATUS			NUMBER,
    STATUS_TEXT			VARCHAR2(50),
    CAUSE_ID			NUMBER,
    CAUSE_TEXT   VARCHAR2(50),
    ACTIVITY_ID			VARCHAR2(50),
     CREATE_DATE                    DATE DEFAULT SYSDATE NOT NULL ,
    LAST_UPDATE_DATE               DATE DEFAULT SYSDATE NOT NULL ,
    LAST_UPDATE_BY 		   VARCHAR2(30)
  ) ;
  
    CREATE INDEX CC_HCO_F_CALL_BACK_IDX2 ON CC_HCO_F_CALL_BACK
      (
        D_DATE_ID ASC
    );
  
    CREATE INDEX CC_HCO_F_CALL_BACK_IDX4 ON CC_HCO_F_CALL_BACK
      (
        D_CONTACT_QUEUE_ID ASC
      ) ;
      
    CREATE INDEX CC_HCO_F_CALL_BACK_IDX3 ON CC_HCO_F_CALL_BACK
            (
              D_AGENT_ID ASC
      ) ;
    
    ALTER TABLE CC_HCO_F_CALL_BACK ADD CONSTRAINT CC_HCO_F_CALL_BACK_PK PRIMARY KEY
    (
      F_CALL_BACK_ID
    )
    ;
    
        ALTER TABLE CC_HCO_F_CALL_BACK ADD CONSTRAINT F_HCO_CALL_BACK_D_CNTCT_Q_FK FOREIGN KEY ( D_CONTACT_QUEUE_ID ) REFERENCES CC_D_CONTACT_QUEUE ( D_CONTACT_QUEUE_ID ) NOT DEFERRABLE ;
        
        ALTER TABLE CC_HCO_F_CALL_BACK ADD CONSTRAINT F_HCO_CALL_BACK_D_DATES_FK FOREIGN KEY ( D_DATE_ID ) REFERENCES CC_D_DATES ( D_DATE_ID ) NOT DEFERRABLE ;
        
        ALTER TABLE CC_HCO_F_CALL_BACK ADD CONSTRAINT F_HCO_CALL_BACK_D_AGENT_FK FOREIGN KEY ( D_AGENT_ID ) REFERENCES CC_D_AGENT ( D_AGENT_ID ) NOT DEFERRABLE ;
 
        ALTER TABLE CC_HCO_F_CALL_BACK ADD CONSTRAINT CC_HCO_F_CALL_BACK__UN UNIQUE
        (
          D_DATE_ID , ACTIVITY_ID
        )
        ;
    
          
      CREATE SEQUENCE SEQ_CC_HCO_F_CALL_BACK START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20;
      
      CREATE OR REPLACE TRIGGER BIU_CC_HCO_F_CALL_BACK
          BEFORE INSERT OR UPDATE ON CC_HCO_F_CALL_BACK
          FOR EACH ROW 
      BEGIN 
      IF INSERTING AND :NEW.F_CALL_BACK_ID IS NULL THEN 
                SELECT SEQ_CC_HCO_F_CALL_BACK.NEXTVAL INTO :NEW.F_CALL_BACK_ID FROM DUAL;
      END IF;
      IF INSERTING THEN 
                :NEW.CREATE_DATE := SYSDATE;
      END IF;
      :NEW.LAST_UPDATE_DATE := SYSDATE;
      :NEW.LAST_UPDATE_BY := USER;
      END; 
  /
  
  CREATE OR REPLACE FORCE VIEW CC_HCO_F_CALL_BACK_SV (F_CALL_BACK_ID,D_DATE_ID,D_CONTACT_QUEUE_ID,QUEUE_NUMBER,D_AGENT_ID,AGENT_LOGIN_ID,D_PROJECT_ID,D_PROGRAM_ID,
  CALL_BACK_DATE, CALL_BACK_TIME, CLIENT, CAUSE_ID, CAUSE_TEXT, STATUS, STATUS_TEXT,
  CREATE_DATE,LAST_UPDATE_DATE,LAST_UPDATE_BY) AS 
  SELECT CC_HCO_F_CALL_BACK.F_CALL_BACK_ID,CC_HCO_F_CALL_BACK.D_DATE_ID,CC_HCO_F_CALL_BACK.D_CONTACT_QUEUE_ID,CC_HCO_F_CALL_BACK.QUEUE_NUMBER,
  CC_HCO_F_CALL_BACK.D_AGENT_ID,CC_HCO_F_CALL_BACK.AGENT_LOGIN_ID,CC_D_CONTACT_QUEUE.D_PROJECT_ID,CC_D_CONTACT_QUEUE.D_PROGRAM_ID, 
  CC_HCO_F_CALL_BACK.CALL_BACK_DATE,CC_HCO_F_CALL_BACK.CALL_BACK_TIME,'MAXCAHCO',
  CC_HCO_F_CALL_BACK.CAUSE_ID,CC_HCO_F_CALL_BACK.CAUSE_TEXT,CC_HCO_F_CALL_BACK.STATUS,CC_HCO_F_CALL_BACK.STATUS_TEXT, CC_HCO_F_CALL_BACK.CREATE_DATE,CC_HCO_F_CALL_BACK.LAST_UPDATE_DATE,CC_HCO_F_CALL_BACK.LAST_UPDATE_BY
  FROM CC_HCO_F_CALL_BACK
  INNER JOIN CC_D_CONTACT_QUEUE ON CC_HCO_F_CALL_BACK.D_CONTACT_QUEUE_ID = CC_D_CONTACT_QUEUE.D_CONTACT_QUEUE_ID;
  
  GRANT SELECT ON CC_HCO_F_CALL_BACK_SV TO MAXDAT_READ_ONLY;

------------------------------------------------------------------------------------------------------------------------