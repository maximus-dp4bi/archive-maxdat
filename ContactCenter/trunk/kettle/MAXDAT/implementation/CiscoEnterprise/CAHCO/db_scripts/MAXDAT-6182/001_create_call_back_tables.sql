alter session set current_schema = cisco_enterprise_cc;

CREATE TABLE CC_S_CALL_BACK
(
  CALL_BACK_ID NUMBER NOT NULL
  , CALL_GUID VARCHAR2(50)
  , QUEUE_NUMBER NUMBER  
  , CALL_BACK_DATE DATE
  , CALL_BACK_ENTER_DATETIME DATE
  , CALL_BACK_ENTRY_HOUR NUMBER(2,0)
  , CALL_BACK_EXIT_DATETIME DATE
  , CALL_BACK_EXIT_HOUR NUMBER(2,0)
  , CALL_BACK_DURATION NUMBER
  , CALL_BACK_RESULT_ID NUMBER
  , CALL_BACK_RESULT VARCHAR2(50)
  , CALL_BACK_STATUS_ID NUMBER
  , CALL_BACK_STATUS VARCHAR2(50)
  , CUSTOMER_NUMBER NUMBER
  , CALL_BACK_EST_WAIT NUMBER
  , CALL_BACK_ATTEMPTS NUMBER
  , TALK_TIME NUMBER
  , EXTRACT_DT DATE  DEFAULT SYSDATE NOT NULL
  , LAST_UPDATE_DT DATE DEFAULT SYSDATE NOT NULL
  , LAST_UPDATE_BY VARCHAR2(30)
);

ALTER TABLE CC_S_CALL_BACK
ADD CONSTRAINT CC_S_CALL_BACK_PK PRIMARY KEY (CALL_BACK_ID);

ALTER TABLE CC_S_CALL_BACK 
    ADD CONSTRAINT CC_S_CALL_BACK_UN UNIQUE ( CALL_BACK_DATE, CALL_GUID ) ; 

CREATE SEQUENCE SEQ_CC_S_CALL_BACK START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20;

CREATE OR REPLACE TRIGGER BIU_CC_S_CALL_BACK
    BEFORE INSERT OR UPDATE ON CC_S_CALL_BACK
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.CALL_BACK_ID IS NULL THEN 
          SELECT SEQ_CC_S_CALL_BACK.NEXTVAL INTO :NEW.CALL_BACK_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATE_BY := USER;
END; 
/

------------------------------------------------------------------------------------------------------------------------


CREATE TABLE CC_F_CALL_BACK
  (
    F_CALL_BACK_ID  		   	NUMBER (19) NOT NULL 
    , D_DATE_ID              		NUMBER (19) NOT NULL 
    , D_CONTACT_QUEUE_ID     		NUMBER (19) NOT NULL 
    , CALL_BACK_DATE			DATE
    , QUEUE_NUMBER           		NUMBER
    , CALL_GUID		   		VARCHAR2(50)
    , CALL_BACK_ENTER_DATETIME 		DATE
    , CALL_BACK_ENTRY_HOUR 		NUMBER(2,0)
    , CALL_BACK_EXIT_DATETIME 		DATE
    , CALL_BACK_EXIT_HOUR 		NUMBER(2,0)
    , CALL_BACK_DURATION 		NUMBER
    , CALL_BACK_RESULT_ID 		NUMBER
    , CALL_BACK_RESULT 			VARCHAR2(50)
    , CALL_BACK_STATUS_ID 		NUMBER
    , CALL_BACK_STATUS 			VARCHAR2(50)
    , CUSTOMER_NUMBER 			NUMBER
    , CALL_BACK_EST_WAIT 		NUMBER
    , CALL_BACK_ATTEMPTS 		NUMBER
    , TALK_TIME 			NUMBER
    , CREATE_DATE                    	DATE DEFAULT SYSDATE NOT NULL
    , LAST_UPDATE_DATE               	DATE DEFAULT SYSDATE NOT NULL
    , LAST_UPDATE_BY 		   	VARCHAR2(30)
  ) ;
  
CREATE INDEX CC_F_CALL_BACK_IDX2 ON CC_F_CALL_BACK
(
  D_DATE_ID ASC
);

CREATE INDEX CC_F_CALL_BACK_IDX4 ON CC_F_CALL_BACK
(
  D_CONTACT_QUEUE_ID ASC
) ;

ALTER TABLE CC_F_CALL_BACK ADD CONSTRAINT CC_F_CALL_BACK_PK PRIMARY KEY
(
F_CALL_BACK_ID
)
;

  ALTER TABLE CC_F_CALL_BACK ADD CONSTRAINT F_CALL_BACK_D_CNTCT_Q_FK FOREIGN KEY ( D_CONTACT_QUEUE_ID ) REFERENCES CC_D_CONTACT_QUEUE ( D_CONTACT_QUEUE_ID ) NOT DEFERRABLE ;

  ALTER TABLE CC_F_CALL_BACK ADD CONSTRAINT F_CALL_BACK_D_DATES_FK FOREIGN KEY ( D_DATE_ID ) REFERENCES CC_D_DATES ( D_DATE_ID ) NOT DEFERRABLE ;

   ALTER TABLE CC_F_CALL_BACK ADD CONSTRAINT CC_F_CALL_BACK__UN UNIQUE
  (
    D_DATE_ID ,CALL_GUID
  )
  ;


CREATE SEQUENCE SEQ_CC_F_CALL_BACK START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20;

CREATE OR REPLACE TRIGGER BIU_CC_F_CALL_BACK
    BEFORE INSERT OR UPDATE ON CC_F_CALL_BACK
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.F_CALL_BACK_ID IS NULL THEN 
	  SELECT SEQ_CC_F_CALL_BACK.NEXTVAL INTO :NEW.F_CALL_BACK_ID FROM DUAL;
END IF;
IF INSERTING THEN 
	  :NEW.CREATE_DATE := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DATE := SYSDATE;
:NEW.LAST_UPDATE_BY := USER;
END; 
/

CREATE OR REPLACE FORCE VIEW CC_HCO_F_CALL_BACK_SV (F_CALL_BACK_ID,D_DATE_ID,D_CONTACT_QUEUE_ID,D_PROJECT_ID,D_PROGRAM_ID,
CALL_BACK_DATE, QUEUE_NUMBER, CALL_BACK_ENTER_DATETIME, CALL_BACK_ENTER_HOUR, CALL_BACK_EXIT_DATETIME, CALL_BACK_EXIT_HOUR,
CALL_BACK_DURATION, CALL_BACK_RESULT, CALL_BACK_STATUS, CUSTOMER_NUMBER, CALL_BACK_EST_WAIT, CALL_BACK_ATTEMPTS, TALK_TIME)
AS 
SELECT CC_F_CALL_BACK.F_CALL_BACK_ID,CC_F_CALL_BACK.D_DATE_ID,CC_F_CALL_BACK.D_CONTACT_QUEUE_ID,CC_D_CONTACT_QUEUE.D_PROJECT_ID,CC_D_CONTACT_QUEUE.D_PROGRAM_ID, 
CC_F_CALL_BACK.CALL_BACK_DATE,CC_F_CALL_BACK.QUEUE_NUMBER,CC_F_CALL_BACK.CALL_BACK_ENTER_DATETIME,
CC_F_CALL_BACK.CALL_BACK_ENTRY_HOUR,CC_F_CALL_BACK.CALL_BACK_EXIT_DATETIME,CC_F_CALL_BACK.CALL_BACK_EXIT_HOUR,CC_F_CALL_BACK.CALL_BACK_DURATION, CC_F_CALL_BACK.CALL_BACK_RESULT,CC_F_CALL_BACK.CALL_BACK_STATUS,
CC_F_CALL_BACK.CUSTOMER_NUMBER, CC_F_CALL_BACK.CALL_BACK_EST_WAIT, CC_F_CALL_BACK.CALL_BACK_ATTEMPTS, CC_F_CALL_BACK.TALK_TIME
FROM CC_F_CALL_BACK
INNER JOIN CC_D_CONTACT_QUEUE ON CC_F_CALL_BACK.D_CONTACT_QUEUE_ID = CC_D_CONTACT_QUEUE.D_CONTACT_QUEUE_ID;

GRANT SELECT ON CC_HCO_F_CALL_BACK_SV TO MAXDAT_READ_ONLY;

----------------------------------------------------------------------------------------------------------------------