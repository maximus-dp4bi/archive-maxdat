CREATE TABLE CC_S_AGENT_RTG_GRP_INTERVAL
  (
    AGENT_RTG_GRP_INTERVAL_ID NUMBER(19,0) NOT NULL ENABLE,
    INTERVAL_DATE               DATE NOT NULL ENABLE,
    INTERVAL_ID             NUMBER (19)  NOT NULL ENABLE,
    AGENT_ROUTING_GROUP_ID  NUMBER NOT NULL ENABLE,
    AGENT_ID                NUMBER(19,0) NOT NULL ENABLE,
    LOGIN_SECONDS           NUMBER(10,2) DEFAULT 0 NOT NULL ENABLE,
    EXTERNAL_SECONDS        NUMBER(10,2) DEFAULT 0 NOT NULL ENABLE,
    INTERNAL_SECONDS        NUMBER(10,2) DEFAULT 0 NOT NULL ENABLE,
    IDLE_SECONDS            NUMBER(10,2) DEFAULT 0 NOT NULL ENABLE,
    NOT_READY_SECONDS       NUMBER(10,2) DEFAULT 0 NOT NULL ENABLE,
    ACD_TALK_SECONDS        NUMBER(10,2) NOT NULL ENABLE,
    HOLD_SECONDS            NUMBER(10,2) NOT NULL ENABLE,
    TALK_RESERVE_SECONDS    NUMBER(10,2),
    RING_SECONDS            NUMBER(10,2) NOT NULL ENABLE,
    WRAP_SECONDS	    NUMBER(10,2) NOT NULL ENABLE,
    PREDICTIVE_TALK_SECONDS NUMBER(10,2),
    PREVIEW_TALK_SECONDS    NUMBER(10,2),
    ACD_CALLS_COUNT         NUMBER(10,0) DEFAULT 0 NOT NULL ENABLE,
    EXTERNAL_CALLS_COUNT    NUMBER(10,0) DEFAULT 0 NOT NULL ENABLE,
    INTERNAL_CALLS_COUNT    NUMBER(10,0) DEFAULT 0 NOT NULL ENABLE,
    PREDICTIVE_CALLS_COUNT  NUMBER(10,0),
    PREVIEW_CALLS_COUNT     NUMBER(10,0),
    BREAK_TIME              NUMBER(10,2),
    CONSULTATION_TIME       NUMBER(10,2),
    WALKAWAY_TIME           NUMBER(10,2),
    BUSYONDNTIME            NUMBER(10,2),
    EXTRACT_DT              DATE NOT NULL ENABLE,
    LAST_UPDATE_DT          DATE NOT NULL ENABLE,
    LAST_UPDATE_BY          VARCHAR2(30 BYTE) NOT NULL ENABLE,
    SHORT_CALLS             NUMBER(10,0),
    CALLS_RETURNED_TO_QUEUE NUMBER(10,0)
  );
  
ALTER TABLE CC_S_AGENT_RTG_GRP_INTERVAL 
    ADD CONSTRAINT CC_S_AGT_RTG_GRP_INTVL_PK PRIMARY KEY ( AGENT_RTG_GRP_INTERVAL_ID ) ;


ALTER TABLE CC_S_AGENT_RTG_GRP_INTERVAL 
    ADD CONSTRAINT CC_S_AGT_RTG_GRP_INTVL_UN UNIQUE ( INTERVAL_DATE, INTERVAL_ID , AGENT_ID, AGENT_ROUTING_GROUP_ID  ) ;   
    
    
ALTER TABLE CC_S_AGENT_RTG_GRP_INTERVAL 
    ADD CONSTRAINT CC_S_AGT_ROU_GRP_CC_S_AGT_FK FOREIGN KEY 
    ( 
     AGENT_ID
    ) 
    REFERENCES CC_S_AGENT 
    ( 
     AGENT_ID
    ) 
    NOT DEFERRABLE 
;

ALTER TABLE CC_S_AGENT_RTG_GRP_INTERVAL 
    ADD CONSTRAINT CC_S_AGT_ROU_GRP_CC_S_ARG_FK FOREIGN KEY 
    ( 
     AGENT_ROUTING_GROUP_ID
    ) 
    REFERENCES CC_C_AGENT_RTG_GRP 
    ( 
     C_AGENT_ROUTING_GROUP_ID
    ) 
    NOT DEFERRABLE 
;    
  
CREATE INDEX CC_S_AGT_RTG_GRP_INTVL_IDX1 ON CC_S_AGENT_RTG_GRP_INTERVAL 
    ( 
    INTERVAL_ID 
) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;

CREATE INDEX CC_S_AGT_RTG_GRP_INTVL_IDX2 ON CC_S_AGENT_RTG_GRP_INTERVAL 
    ( 
    AGENT_ID 
) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;

CREATE INDEX CC_S_AGT_RTG_GRP_INTVL_IDX3 ON CC_S_AGENT_RTG_GRP_INTERVAL 
    ( 
    AGENT_ROUTING_GROUP_ID 
) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;  

CREATE INDEX CC_S_AGT_RTG_GRP_INTVL_IDX4 ON CC_S_AGENT_RTG_GRP_INTERVAL 
    ( 
    INTERVAL_DATE 
) 
    TABLESPACE MAXDAT_INDX 
    LOGGING 
;

CREATE SEQUENCE SEQ_CC_S_AGT_RTG_GRP_INTVL 
    START WITH 1 
    INCREMENT BY 1 
    MAXVALUE 9999999999999999999 
    MINVALUE 1 
    CACHE 20 
;

CREATE OR REPLACE TRIGGER BIU_CC_S_AGT_RTG_GRP_INTVL BEFORE
  INSERT OR
  UPDATE ON CC_S_AGENT_RTG_GRP_INTERVAL FOR EACH ROW BEGIN IF INSERTING
  AND :NEW.AGENT_RTG_GRP_INTERVAL_ID IS NULL THEN
  SELECT SEQ_CC_S_AGT_RTG_GRP_INTVL.NEXTVAL
  INTO :NEW.AGENT_RTG_GRP_INTERVAL_ID
  FROM DUAL;
END IF;
IF INSERTING THEN
  :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATE_BY := USER;
END;
/
ALTER TRIGGER BIU_CC_S_AGT_RTG_GRP_INTVL ENABLE;
