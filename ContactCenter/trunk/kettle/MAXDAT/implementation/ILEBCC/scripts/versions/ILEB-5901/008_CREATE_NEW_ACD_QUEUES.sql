--Create new staging table for Alert Flag

CREATE SEQUENCE SEQ_CC_S_ACD_NEW_QUEUES START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE TABLE CC_S_ACD_NEW_QUEUES
(ACD_NEW_QUEUES_ID NUMBER NOT NULL,
APPLICATION_ID NUMBER(10,0) NOT NULL,
APPLICATION_NAME VARCHAR2(30),
CONTACTS_HANDLED NUMBER(10,0),
CONTACT_TYPE VARCHAR2(30),
ALERT_FLAG VARCHAR2(1) DEFAULT 'N',
EXTRACT_DT                     DATE DEFAULT SYSDATE NOT NULL ,
LAST_UPDATE_DT                 DATE DEFAULT SYSDATE NOT NULL ,
LAST_UPDATE_BY                 VARCHAR2 (30) NOT NULL
);

ALTER TABLE CC_S_ACD_NEW_QUEUES ADD CONSTRAINT CC_S_ACD_NEW_QUEUES_PK PRIMARY KEY
(
  ACD_NEW_QUEUES_ID
)
;


CREATE OR REPLACE TRIGGER BIU_CC_S_ACD_NEW_QUEUES
    BEFORE INSERT OR UPDATE ON CC_S_ACD_NEW_QUEUES
    FOR EACH ROW 
    ENABLE 
BEGIN 
IF INSERTING AND :NEW.ACD_NEW_QUEUES_ID IS NULL THEN 
          SELECT SEQ_CC_S_ACD_NEW_QUEUES.NEXTVAL INTO :NEW.ACD_NEW_QUEUES_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
IF :NEW.LAST_UPDATE_BY IS NULL THEN 
          :NEW.LAST_UPDATE_BY := USER;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
END; 
/

grant select on CC_S_ACD_NEW_QUEUES to MAXDAT_READ_ONLY; 

--Create semantic view on the staging table

CREATE OR REPLACE VIEW CC_S_ACD_NEW_QUEUES_SV
AS SELECT 
	* FROM CC_S_ACD_NEW_QUEUES;

GRANT SELECT ON CC_S_ACD_NEW_QUEUES_SV TO MAXDAT_READ_ONLY;
