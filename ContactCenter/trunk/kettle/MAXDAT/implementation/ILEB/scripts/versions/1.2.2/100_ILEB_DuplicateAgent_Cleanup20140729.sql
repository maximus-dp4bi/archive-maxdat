--Disable Constraints for duration of cleanup script
ALTER TABLE CC_D_AGENT
DISABLE CONSTRAINT CC_D_AGENT__UN;

ALTER TABLE CC_D_AGENT
DISABLE CONSTRAINT CC_D_AGENT_REC_DATE_CK;


--Delete duplicated Fact records that are assoc. with duplicated agent records
DELETE FROM CC_F_AGENT_BY_DATE
WHERE D_AGENT_ID IN (
	WITH dupFacts AS (
		--Distinct set of LOGIN_IDs assoc. w/ duplicated fact records
		SELECT DISTINCT LOGIN_ID, D_DATE 
		FROM (
			SELECT LOGIN_ID, D_DATE, COUNT(*) as dupeFactCount
			FROM CC_F_AGENT_BY_DATE f
			INNER JOIN CC_D_GROUP dg on f.D_GROUP_ID = dg.D_GROUP_ID
			INNER JOIN CC_D_DATES dd on f.D_DATE_ID = dd.D_DATE_ID
			INNER JOIN CC_D_AGENT da on f.D_AGENT_ID = da.D_AGENT_ID
			GROUP BY LOGIN_ID, D_DATE
			HAVING COUNT(*) > 1
		)sub2)
	SELECT subFact.D_AGENT_ID
	FROM CC_F_AGENT_BY_DATE subFact
	INNER JOIN CC_D_AGENT subAgent on subFact.D_AGENT_ID = subAgent.D_AGENT_ID
	INNER JOIN CC_D_DATES subDates on subFact.D_DATE_ID = subDates.D_DATE_ID
	INNER JOIN dupFacts df on  ((subAgent.LOGIN_ID = df.LOGIN_ID) AND (subDates.D_DATE = df.D_DATE))
	WHERE subFact.D_AGENT_ID IN 
		--Distinct set D_AGENT_IDs representing bad records in CC_D_AGENT
		(SELECT DISTINCT sub3.D_AGENT_ID
		 FROM 
			(SELECT
				D_AGENT_ID
			  , LOGIN_ID
			  , VERSION
			  , RECORD_EFF_DT
			  , RECORD_END_DT
			  , LEAD (RECORD_EFF_DT , 1, NULL) OVER (PARTITION BY LOGIN_ID ORDER BY LOGIN_ID, VERSION, RECORD_EFF_DT, RECORD_END_DT) as NEXT_EFF_DT
			  FROM CC_D_AGENT a
			  ORDER BY LOGIN_ID, VERSION, RECORD_EFF_DT, RECORD_END_DT
			  )sub3
			WHERE RECORD_END_DT > NEXT_EFF_DT)
);

DELETE FROM CC_F_AGENT_ACTIVITY_BY_DATE
WHERE D_AGENT_ID IN (
	WITH dupFacts AS (
		--Distinct set of LOGIN_IDs assoc. w/ duplicated fact records
		SELECT DISTINCT LOGIN_ID, D_DATE, ACTIVITY_TYPE_NAME
		FROM (
			SELECT LOGIN_ID, D_DATE, ACTIVITY_TYPE_NAME, COUNT(*) as dupeFactCount
			FROM CC_F_AGENT_ACTIVITY_BY_DATE f
			INNER JOIN CC_D_GROUP dg on f.D_GROUP_ID = dg.D_GROUP_ID
			INNER JOIN CC_D_DATES dd on f.D_DATE_ID = dd.D_DATE_ID
			INNER JOIN CC_D_AGENT da on f.D_AGENT_ID = da.D_AGENT_ID
			INNER JOIN CC_D_ACTIVITY_TYPE dat on f.D_ACTIVITY_TYPE_ID = dat.D_ACTIVITY_TYPE_ID
			GROUP BY LOGIN_ID, ACTIVITY_TYPE_NAME, D_DATE
			HAVING COUNT(*) > 1
		)sub2)
	SELECT subFact.D_AGENT_ID
	FROM CC_F_AGENT_ACTIVITY_BY_DATE subFact
	INNER JOIN CC_D_AGENT subAgent on subFact.D_AGENT_ID = subAgent.D_AGENT_ID
	INNER JOIN CC_D_DATES subDates on subFact.D_DATE_ID = subDates.D_DATE_ID
	INNER JOIN CC_D_ACTIVITY_TYPE subActivity on subFact.D_ACTIVITY_TYPE_ID = subActivity.D_ACTIVITY_TYPE_ID
	INNER JOIN dupFacts df on ((subAgent.LOGIN_ID = df.LOGIN_ID) 
								AND (subDates.D_DATE = df.D_DATE) 
								AND (subActivity.ACTIVITY_TYPE_NAME = df.ACTIVITY_TYPE_NAME))
	WHERE subFact.D_AGENT_ID IN 
		--Distinct set D_AGENT_IDs representing bad records in CC_D_AGENT
		(SELECT DISTINCT sub3.D_AGENT_ID
		 FROM 
			(SELECT
				D_AGENT_ID
			  , LOGIN_ID
			  , VERSION
			  , RECORD_EFF_DT
			  , RECORD_END_DT
			  , LEAD (RECORD_EFF_DT , 1, NULL) OVER (PARTITION BY LOGIN_ID ORDER BY LOGIN_ID, VERSION, RECORD_EFF_DT, RECORD_END_DT) as NEXT_EFF_DT
			  FROM CC_D_AGENT a
			  ORDER BY LOGIN_ID, VERSION, RECORD_EFF_DT, RECORD_END_DT
			  )sub3
			WHERE RECORD_END_DT > NEXT_EFF_DT)
);

--Set duplicate records to an invalid effective date
MERGE INTO CC_D_AGENT a
using ( SELECT * 
	FROM 
	(SELECT
			D_AGENT_ID
	  , LOGIN_ID
	  , VERSION
	  , RECORD_EFF_DT
	  , RECORD_END_DT
	  , LEAD (RECORD_EFF_DT , 1, NULL) OVER (PARTITION BY LOGIN_ID ORDER BY LOGIN_ID, VERSION, RECORD_EFF_DT, RECORD_END_DT) as NEXT_EFF_DT
	  FROM CC_D_AGENT a
	  ORDER BY LOGIN_ID, VERSION, RECORD_EFF_DT, RECORD_END_DT
	  )sub 
	WHERE RECORD_END_DT > NEXT_EFF_DT
	ORDER BY LOGIN_ID, VERSION, RECORD_EFF_DT, RECORD_END_DT
) b
ON (a.D_AGENT_ID = b.D_AGENT_ID)
WHEN matched THEN UPDATE SET a.RECORD_EFF_DT = TO_DATE('2999-12-31 23:59:59', 'YYYY-MM-DD HH24:MI:SS');

--Update valid records to cover any gaps created by duplicate records
MERGE INTO CC_D_AGENT a
using ( SELECT * 
	FROM 
	(SELECT
			D_AGENT_ID
	  , LOGIN_ID
	  , VERSION
	  , RECORD_EFF_DT
	  , RECORD_END_DT
	  , LEAD (RECORD_EFF_DT , 1, NULL) OVER (PARTITION BY LOGIN_ID ORDER BY LOGIN_ID, VERSION, RECORD_EFF_DT, RECORD_END_DT) as NEXT_EFF_DT
	  FROM CC_D_AGENT a
	  ORDER BY LOGIN_ID, VERSION, RECORD_EFF_DT, RECORD_END_DT
	  )sub 
	WHERE RECORD_END_DT < NEXT_EFF_DT
    AND NEXT_EFF_DT != TO_DATE('2999-12-31 23:59:59', 'YYYY-MM-DD HH24:MI:SS')
	ORDER BY LOGIN_ID, VERSION, RECORD_EFF_DT, RECORD_END_DT
) b
ON (a.D_AGENT_ID = b.D_AGENT_ID)
WHEN matched THEN UPDATE SET a.RECORD_END_DT = b.NEXT_EFF_DT;


--Update valid Fact records to valid D_AGENT record
MERGE INTO CC_F_AGENT_BY_DATE a
using (
  SELECT abd.F_AGENT_BY_DATE_ID
      ,  d.D_DATE
      ,  a.LOGIN_ID
  FROM CC_F_AGENT_BY_DATE abd
  INNER JOIN CC_D_DATES d on abd.D_DATE_ID = d.D_DATE_ID
  INNER JOIN CC_D_AGENT a on abd.D_AGENT_ID = a.D_AGENT_ID
  WHERE abd.D_AGENT_ID IN (
    SELECT sub.D_AGENT_ID
    FROM CC_D_AGENT sub
    WHERE sub.RECORD_EFF_DT = TO_DATE('2999-12-31 23:59:59', 'YYYY-MM-DD HH24:MI:SS'))
) b
ON (a.F_AGENT_BY_DATE_ID = b.F_AGENT_BY_DATE_ID)
WHEN matched THEN UPDATE SET a.D_AGENT_ID = (SELECT sub2.D_AGENT_ID from CC_D_AGENT sub2 WHERE (b.D_DATE >= sub2.RECORD_EFF_DT AND b.D_DATE < sub2.RECORD_END_DT) AND (sub2.LOGIN_ID = b.LOGIN_ID));


MERGE INTO CC_F_AGENT_ACTIVITY_BY_DATE a
using (
  SELECT abd.F_AGENT_ACTIVITY_BY_DATE_ID
      ,  d.D_DATE
      ,  a.LOGIN_ID
  FROM CC_F_AGENT_ACTIVITY_BY_DATE abd
  INNER JOIN CC_D_DATES d on abd.D_DATE_ID = d.D_DATE_ID
  INNER JOIN CC_D_AGENT a on abd.D_AGENT_ID = a.D_AGENT_ID
  WHERE abd.D_AGENT_ID IN (
    SELECT sub.D_AGENT_ID
    FROM CC_D_AGENT sub
    WHERE sub.RECORD_EFF_DT = TO_DATE('2999-12-31 23:59:59', 'YYYY-MM-DD HH24:MI:SS'))
) b
ON (a.F_AGENT_ACTIVITY_BY_DATE_ID = b.F_AGENT_ACTIVITY_BY_DATE_ID)
WHEN matched THEN UPDATE SET a.D_AGENT_ID = (SELECT sub2.D_AGENT_ID from CC_D_AGENT sub2 WHERE (b.D_DATE >= sub2.RECORD_EFF_DT AND b.D_DATE < sub2.RECORD_END_DT) AND (sub2.LOGIN_ID = b.LOGIN_ID));

--Delete duplicate Agent records
DELETE FROM CC_D_AGENT a 
WHERE a.RECORD_EFF_DT = TO_DATE('2999-12-31 23:59:59', 'YYYY-MM-DD HH24:MI:SS');

--Re-Enable Constraints
ALTER TABLE CC_D_AGENT
ENABLE CONSTRAINT CC_D_AGENT_REC_DATE_CK;

ALTER TABLE CC_D_AGENT
ENABLE CONSTRAINT CC_D_AGENT__UN;

INSERT INTO CC_L_PATCH_LOG ( PATCH_VERSION , SCRIPT_SEQUENCE , SCRIPT_NAME)
VALUES ('1.2.2','100','100_ILEB_DUPLICATED_AGENT_CLEANUP');

COMMIT;