CREATE TABLE CC_S_TERM_CALL_VM
(
	TERM_CALL_VM_ID NUMBER NOT NULL
	, INTERVAL_ID NUMBER
	, INTERVAL_DATE DATE
	, INTERACTION_ID VARCHAR2(50)
	, ACTIVITY_ID VARCHAR2(50)
	, CALL_TYPE_ID NUMBER
	, CLIENT VARCHAR2(20) DEFAULT NULL
	, MEDIA_TYPE VARCHAR2(20)
	, SUBMITTED_TIME DATE
	, COMPLETED_TIME DATE
	, CONN_ID VARCHAR2(50) NOT NULL
	, CRM_ACTIVITY_ID VARCHAR2(20) DEFAULT NULL
	, DATETIME DATE
	, EXTRACT_DT DATE
	, LAST_UPDATE_DT DATE
	, LAST_UPDATE_BY VARCHAR2(30)
);	

ALTER TABLE CC_S_TERM_CALL_VM 
ADD CONSTRAINT CC_S_TERM_CALL_VM_PK PRIMARY KEY (TERM_CALL_VM_ID);

CREATE SEQUENCE SEQ_CC_S_TERM_CALL_VM START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20;


  CREATE OR REPLACE TRIGGER BIU_CC_S_TERM_CALL_VM
    BEFORE INSERT OR UPDATE ON CC_S_TERM_CALL_VM
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.TERM_CALL_VM_ID IS NULL THEN 
          SELECT SEQ_CC_S_TERM_CALL_VM.NEXTVAL INTO :NEW.TERM_CALL_VM_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATE_BY := USER;
END; 
/

------------------------------------------------------------------------------------------------------------------------------------------

CREATE TABLE CC_F_TERM_CALL_VM
  (
    F_TERM_CALL_VM_ID  NUMBER (19) NOT NULL ,
    D_DATE_ID                      NUMBER (19) NOT NULL ,
    D_CONTACT_QUEUE_ID             NUMBER (19) NOT NULL ,
    D_INTERVAL_ID                  NUMBER (19) NOT NULL ,
    QUEUE_NUMBER                   NUMBER (19),
    CALL_REFERENCE_ID		   VARCHAR2(50) NOT NULL,
    INTERACTION_ID                 VARCHAR2(50),
    ACTIVITY_ID			   VARCHAR2(50),
    CLIENT                         VARCHAR2(20),
    MEDIA_TYPE                     VARCHAR2(20),
    SUBMITTED_TIME                 DATE,
    COMPLETED_TIME                 DATE,
    CRM_ACTIVITY_ID		   VARCHAR2(50),
    DATETIME                       DATE,
    CREATE_DATE                    DATE DEFAULT SYSDATE NOT NULL ,
    LAST_UPDATE_DATE               DATE DEFAULT SYSDATE NOT NULL ,
    LAST_UPDATE_BY 		   VARCHAR2(30)
  ) ;
  
    CREATE INDEX CC_F_TERM_CALL_VM_IDX2 ON CC_F_TERM_CALL_VM
      (
        D_DATE_ID ASC
    );
  
    CREATE INDEX CC_F_TERM_CALL_VM__IDX7 ON CC_F_TERM_CALL_VM
      (
        D_CONTACT_QUEUE_ID ASC
      ) ;
      
    CREATE INDEX CC_F_TERM_CALL_VM_IDX8 ON CC_F_TERM_CALL_VM
      (
        D_INTERVAL_ID ASC
      ) ;
      
    
    ALTER TABLE CC_F_TERM_CALL_VM ADD CONSTRAINT CC_F_TERM_CALL_VM_PK PRIMARY KEY
    (
      F_TERM_CALL_VM_ID
    )
    ;
    
    ALTER TABLE CC_F_TERM_CALL_VM ADD CONSTRAINT F_TERM_CALL_D_CNTCT_Q_FK FOREIGN KEY ( D_CONTACT_QUEUE_ID ) REFERENCES CC_D_CONTACT_QUEUE ( D_CONTACT_QUEUE_ID ) NOT DEFERRABLE ;
    
    ALTER TABLE CC_F_TERM_CALL_VM ADD CONSTRAINT F_TERM_CALL_D_DATES_FK FOREIGN KEY ( D_DATE_ID ) REFERENCES CC_D_DATES ( D_DATE_ID ) NOT DEFERRABLE ;
       
    ALTER TABLE CC_F_TERM_CALL_VM ADD CONSTRAINT F_TERM_CALL_D_INT_FK FOREIGN KEY ( D_INTERVAL_ID ) REFERENCES CC_D_INTERVAL ( D_INTERVAL_ID ) NOT DEFERRABLE ;
    
    ALTER TABLE CC_F_TERM_CALL_VM ADD CONSTRAINT CC_F_TERM_CALL__UN UNIQUE
          (
            D_DATE_ID , D_INTERVAL_ID, CALL_REFERENCE_ID
          )
    ;
  
  CREATE SEQUENCE SEQ_CC_F_TERM_CALL_VM START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20;
  
  CREATE OR REPLACE TRIGGER BIU_CC_F_TERM_CALL_VM
      BEFORE INSERT OR UPDATE ON CC_F_TERM_CALL_VM
      FOR EACH ROW 
  BEGIN 
  IF INSERTING AND :NEW.F_TERM_CALL_VM_ID IS NULL THEN 
            SELECT SEQ_CC_F_TERM_CALL_VM.NEXTVAL INTO :NEW.F_TERM_CALL_VM_ID FROM DUAL;
  END IF;
  IF INSERTING THEN 
            :NEW.CREATE_DATE := SYSDATE;
  END IF;
  :NEW.LAST_UPDATE_DATE := SYSDATE;
  :NEW.LAST_UPDATE_BY := USER;
  END; 
  /

-------------------------------------------------------------

CREATE OR REPLACE FORCE VIEW CC_F_TERM_CALL_VM_SV (F_TERM_CALL_VM_ID, D_DATE_ID, D_CONTACT_QUEUE_ID, D_INTERVAL_ID, D_PROJECT_ID, D_PROGRAM_ID, QUEUE_NUMBER, CALL_REFERENCE_ID, INTERACTION_ID, CLIENT, MEDIA_TYPE, SUBMITTED_TIME, COMPLETED_TIME, CRM_ACTIVITY_ID, DATETIME, CREATE_DATE, LAST_UPDATE_DATE, LAST_UPDATE_BY) AS 
SELECT CC_F_TERM_CALL_VM.F_TERM_CALL_VM_ID,CC_F_TERM_CALL_VM.D_DATE_ID,CC_F_TERM_CALL_VM.D_CONTACT_QUEUE_ID,CC_F_TERM_CALL_VM.D_INTERVAL_ID,
CC_D_CONTACT_QUEUE.D_PROJECT_ID,CC_D_CONTACT_QUEUE.D_PROGRAM_ID, CC_F_TERM_CALL_VM.QUEUE_NUMBER,CC_F_TERM_CALL_VM.CALL_REFERENCE_ID,CC_F_TERM_CALL_VM.INTERACTION_ID,CC_F_TERM_CALL_VM.CLIENT,CC_F_TERM_CALL_VM.MEDIA_TYPE,CC_F_TERM_CALL_VM.SUBMITTED_TIME,
CC_F_TERM_CALL_VM.COMPLETED_TIME,CC_F_TERM_CALL_VM.CRM_ACTIVITY_ID,CC_F_TERM_CALL_VM.DATETIME,
CC_F_TERM_CALL_VM.CREATE_DATE,CC_F_TERM_CALL_VM.LAST_UPDATE_DATE,CC_F_TERM_CALL_VM.LAST_UPDATE_BY
FROM CC_F_TERM_CALL_VM
INNER JOIN CC_D_CONTACT_QUEUE ON CC_F_TERM_CALL_VM.D_CONTACT_QUEUE_ID = CC_D_CONTACT_QUEUE.D_CONTACT_QUEUE_ID;

create or replace view cc_f_vm_call_interval_sv(project_id, program_id, date_id, interval_id, count_interval)
as 
select CC_D_CONTACT_QUEUE.D_PROJECT_ID, CC_D_CONTACT_QUEUE.D_PROGRAM_ID, CC_D_DATES.D_DATE_ID, CC_D_INTERVAL.D_INTERVAL_ID, count(*)
from cc_f_term_call_vm 
INNER JOIN CC_D_INTERVAL ON CC_F_TERM_CALL_VM.D_INTERVAL_ID = CC_D_INTERVAL.D_INTERVAL_ID
INNER JOIN CC_D_CONTACT_QUEUE ON CC_F_TERM_CALL_VM.D_CONTACT_QUEUE_ID = CC_D_CONTACT_QUEUE.D_CONTACT_QUEUE_ID
INNER JOIN CC_D_DATES ON CC_F_TERM_CALL_VM.D_DATE_ID = CC_D_DATES.D_DATE_ID
group by CC_D_CONTACT_QUEUE.D_PROJECT_ID, CC_D_CONTACT_QUEUE.D_PROGRAM_ID, CC_D_DATES.D_DATE_ID, CC_D_INTERVAL.D_INTERVAL_ID;


GRANT SELECT ON CC_F_TERM_CALL_VM_SV TO MAXDAT_READ_ONLY;
GRANT SELECT ON CC_F_VM_CALL_INTERVAL_SV TO MAXDAT_READ_ONLY;



-------------------------------------------------------------------------------
