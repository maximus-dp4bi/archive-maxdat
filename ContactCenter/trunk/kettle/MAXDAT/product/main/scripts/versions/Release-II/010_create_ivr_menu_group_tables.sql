  CREATE TABLE CC_C_IVR_MENU_GROUP
     (	
       IVR_MENU_GROUP_ID NUMBER(19,0) NOT NULL, 
       IVR_MENU_GROUP_NAME VARCHAR2(100) NOT NULL,
       IVR_MENU_NAME VARCHAR2(100) NOT NULL,
       IVR_SUB_MENU_NAME VARCHAR2(100) NOT NULL, 
       PROJECT_NAME VARCHAR2(50),
       PROGRAM_NAME VARCHAR2(50)
     );
     
     ALTER TABLE CC_C_IVR_MENU_GROUP
     ADD CONSTRAINT CC_C_IVR_MENU_GROUP_PK PRIMARY KEY (IVR_MENU_GROUP_ID);
     
      ALTER TABLE CC_C_IVR_MENU_GROUP ADD CONSTRAINT CC_C_IVR_MENU_GROUP__UN UNIQUE
             (
               IVR_MENU_NAME, IVR_SUB_MENU_NAME
             )
        ;
  	
     CREATE SEQUENCE SEQ_CC_C_IVR_MENU_GROUP START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20;
    
	CREATE OR REPLACE TRIGGER BIU_CC_C_IVR_MENU_GROUP
	BEFORE INSERT OR UPDATE ON CC_C_IVR_MENU_GROUP
	FOR EACH ROW 
	BEGIN
	IF INSERTING AND :NEW.IVR_MENU_GROUP_ID IS NULL THEN 
	    SELECT SEQ_CC_C_IVR_MENU_GROUP.NEXTVAL INTO :NEW.IVR_MENU_GROUP_ID FROM DUAL;
	END IF;
	END; 
/

  
  CREATE TABLE CC_S_IVR_MENU_GROUP_DATE
     (	
       IVR_MENU_GROUP_ID NUMBER(19,0) NOT NULL, 
       CALL_DATE DATE NOT NULL,
       PROJECT_CONFIG_ID NUMBER,
       IVR_MENU_GROUP_NAME VARCHAR2(100) NOT NULL,
       IVR_MENU_NAME VARCHAR2(100) NOT NULL,
       IVR_SUB_MENU_NAME VARCHAR2(100) NOT NULL, 
       CALL_COUNT NUMBER,
       EXTRACT_DT DATE,
       LAST_UPDATE_DT DATE,
       LAST_UPDATE_BY VARCHAR2(30)
     );
     
ALTER TABLE CC_S_IVR_MENU_GROUP_DATE
ADD CONSTRAINT CC_S_IVR_MENU_GROUP_PK PRIMARY KEY (IVR_MENU_GROUP_ID);

 ALTER TABLE CC_S_IVR_MENU_GROUP_DATE ADD CONSTRAINT CC_S_IVR_MENU_GROUP_DATE__UN UNIQUE
        (
          CALL_DATE , IVR_MENU_NAME, IVR_SUB_MENU_NAME
        )
        ;
    

CREATE SEQUENCE SEQ_CC_S_IVR_MENU_GROUP_DATE START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20;

CREATE OR REPLACE TRIGGER BIU_CC_S_IVR_MENU_GROUP_DATE
    BEFORE INSERT OR UPDATE ON CC_S_IVR_MENU_GROUP_DATE
    FOR EACH ROW 
BEGIN 
IF INSERTING AND :NEW.IVR_MENU_GROUP_ID IS NULL THEN 
          SELECT SEQ_CC_S_IVR_MENU_GROUP_DATE.NEXTVAL INTO :NEW.IVR_MENU_GROUP_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATE_BY := USER;
END; 
/


     
CREATE TABLE CC_F_IVR_MENU_GROUP_DATE
  (
    F_IVR_MENU_GROUP_ID  		   NUMBER (19) NOT NULL ,
    D_DATE_ID                      NUMBER (19) NOT NULL ,
    IVR_MENU_NAME                  VARCHAR2(100) NOT NULL,
    IVR_SUB_MENU_NAME              VARCHAR2(100) NOT NULL,
    IVR_CALL_COUNT             NUMBER,
    CREATE_DATE                    DATE DEFAULT SYSDATE NOT NULL ,
    LAST_UPDATE_DATE               DATE DEFAULT SYSDATE NOT NULL ,
    LAST_UPDATE_BY 		   VARCHAR2(30)
  ) ;
  
    CREATE INDEX CC_F_IVR_MENU_GROUP_DATE_IDX2 ON CC_F_IVR_MENU_GROUP_DATE
      (
        D_DATE_ID ASC
    );
  
    
    ALTER TABLE CC_F_IVR_MENU_GROUP_DATE ADD CONSTRAINT CC_F_IVR_MENU_GROUP_DATE_PK PRIMARY KEY
    (
      F_IVR_MENU_GROUP_ID
    )
    ;
    
        ALTER TABLE CC_F_IVR_MENU_GROUP_DATE ADD CONSTRAINT CC_F_IVR_MENU_GROUP_D_DATES_FK FOREIGN KEY ( D_DATE_ID ) REFERENCES CC_D_DATES ( D_DATE_ID ) NOT DEFERRABLE ;
        
        ALTER TABLE CC_F_IVR_MENU_GROUP_DATE ADD CONSTRAINT CC_F_IVR_MENU_GROUP_DATE__UN UNIQUE
        (
          D_DATE_ID , IVR_MENU_NAME, IVR_SUB_MENU_NAME
        )
        ;
    
          
      CREATE SEQUENCE SEQ_CC_F_IVR_MENU_GROUP_DATE START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20;
      
      CREATE OR REPLACE TRIGGER BIU_CC_F_IVR_MENU_GROUP_DATE
          BEFORE INSERT OR UPDATE ON CC_F_IVR_MENU_GROUP_DATE
          FOR EACH ROW 
      BEGIN 
      IF INSERTING AND :NEW.F_IVR_MENU_GROUP_ID IS NULL THEN 
                SELECT SEQ_CC_F_IVR_MENU_GROUP_DATE.NEXTVAL INTO :NEW.F_IVR_MENU_GROUP_ID FROM DUAL;
      END IF;
      IF INSERTING THEN 
                :NEW.CREATE_DATE := SYSDATE;
      END IF;
      :NEW.LAST_UPDATE_DATE := SYSDATE;
      :NEW.LAST_UPDATE_BY := USER;
      END; 
  /
  
  
  CREATE OR REPLACE FORCE VIEW CC_F_IVR_MENU_DATE_SV (F_IVR_MENU_GROUP_ID, D_DATE_ID, IVR_MENU_NAME, IVR_SUB_MENU_NAME, D_PROJECT_ID, D_PROGRAM_ID,
  IVR_CALL_COUNT, CREATE_DATE, LAST_UPDATE_DATE, LAST_UPDATE_BY)
  AS 
  SELECT CC_F_IVR_MENU_GROUP_DATE.F_IVR_MENU_GROUP_ID, CC_F_IVR_MENU_GROUP_DATE.D_DATE_ID, 
  CC_F_IVR_MENU_GROUP_DATE.IVR_MENU_NAME, CC_F_IVR_MENU_GROUP_DATE.IVR_SUB_MENU_NAME, CC_D_PROJECT.PROJECT_ID, CC_D_PROGRAM.PROGRAM_ID,
  CC_F_IVR_MENU_GROUP_DATE.IVR_CALL_COUNT, CC_F_IVR_MENU_GROUP_DATE.CREATE_DATE, CC_F_IVR_MENU_GROUP_DATE.LAST_UPDATE_DATE, CC_F_IVR_MENU_GROUP_DATE.LAST_UPDATE_BY
  FROM
  CC_F_IVR_MENU_GROUP_DATE
  INNER JOIN CC_C_IVR_MENU_GROUP ON CC_F_IVR_MENU_GROUP_DATE.IVR_SUB_MENU_NAME = CC_C_IVR_MENU_GROUP.IVR_SUB_MENU_NAME 
  INNER JOIN CC_D_PROJECT ON CC_C_IVR_MENU_GROUP.PROJECT_NAME = CC_D_PROJECT.PROJECT_NAME
  INNER JOIN CC_D_PROGRAM ON CC_C_IVR_MENU_GROUP.PROGRAM_NAME = CC_D_PROGRAM.PROGRAM_NAME
  WHERE CC_F_IVR_MENU_GROUP_DATE.IVR_MENU_NAME = CC_C_IVR_MENU_GROUP.IVR_MENU_NAME;
  
CREATE OR REPLACE FORCE VIEW CC_F_IVR_MENU_GROUP_DATE_SV (D_DATE_ID, D_PROJECT_ID, D_PROGRAM_ID, IVR_MENU_GROUP_NAME, IVR_CALL_COUNT) AS 
  SELECT CC_F_IVR_MENU_GROUP_DATE.D_DATE_ID, CC_D_PROJECT.PROJECT_ID, CC_D_PROGRAM.PROGRAM_ID, CC_C_IVR_MENU_GROUP.IVR_MENU_GROUP_NAME, SUM(IVR_CALL_COUNT)
    FROM
    CC_F_IVR_MENU_GROUP_DATE
    INNER JOIN CC_C_IVR_MENU_GROUP ON CC_F_IVR_MENU_GROUP_DATE.IVR_SUB_MENU_NAME = CC_C_IVR_MENU_GROUP.IVR_SUB_MENU_NAME 
    INNER JOIN CC_D_PROJECT ON CC_C_IVR_MENU_GROUP.PROJECT_NAME = CC_D_PROJECT.PROJECT_NAME
    INNER JOIN CC_D_PROGRAM ON CC_C_IVR_MENU_GROUP.PROGRAM_NAME = CC_D_PROGRAM.PROGRAM_NAME
    WHERE CC_F_IVR_MENU_GROUP_DATE.IVR_MENU_NAME = CC_C_IVR_MENU_GROUP.IVR_MENU_NAME
  GROUP BY CC_F_IVR_MENU_GROUP_DATE.D_DATE_ID, CC_D_PROJECT.PROJECT_ID, CC_D_PROGRAM.PROGRAM_ID, CC_C_IVR_MENU_GROUP.IVR_MENU_GROUP_NAME;
 
 
  GRANT SELECT ON CC_F_IVR_MENU_DATE_SV TO MAXDAT_READ_ONLY;
  GRANT SELECT ON CC_F_IVR_MENU_GROUP_DATE_SV TO MAXDAT_READ_ONLY;