ALTER TABLE CC_S_CALL_DETAIL
ADD (
QUEUE_NUMBER NUMBER NOT NULL
,CALL_REFERENCE_ID VARCHAR2(50) NOT NULL
,CALL_DURATION NUMBER
,ACTIVITY_ID VARCHAR2(50)
,ROUTER_SEQUENCE NUMBER
,CALL_OFFERED_FLAG NUMBER
,CALL_ANSWERED_FLAG NUMBER 
);


alter table cc_s_call_detail drop constraint cc_s_call_detail__un;

    ALTER TABLE CC_S_CALL_DETAIL ADD CONSTRAINT CC_S_CALL_DETAIL__UN UNIQUE
    (
      CALL_DATE , CALL_REFERENCE_ID
    )
    ;

alter table cc_s_call_detail
modify CALL_SEGMENT_END_DT null;

create or replace view cc_s_call_detail_sv
as select * from cc_s_call_detail;

CREATE TABLE CC_F_CALL
  (
    F_CALL_ID  		   NUMBER (19) NOT NULL ,
    D_DATE_ID                      NUMBER (19) NOT NULL ,
    D_CONTACT_QUEUE_ID             NUMBER (19) NOT NULL ,
    D_AGENT_ID			NUMBER,
    AGENT_LOGIN_ID		NUMBER,
    CALL_DATE			DATE,
    QUEUE_NUMBER                   NUMBER (19),
    CALL_SEGMENT_ID		VARCHAR2(50),
    SOURCE_CALL_ID		VARCHAR2(40),
    DNIS			VARCHAR2(30),
    DISPOSITION			VARCHAR2(200),
    TRANSFER_TO			VARCHAR2(200),
    CALL_SEGMENT_END_DT		DATE,
    LANGUAGE			VARCHAR2(50),
    ANI_PHONE_NUMBER		VARCHAR2(200),
    QUEUE_TIME_SECONDS		NUMBER(11,2),
    RING_TIME_SECONDS		NUMBER(11,2),
    HOLD_TIME_SECONDS		NUMBER(11,2),
    AFTER_CALL_WORK_SECONDS	NUMBER(11,2),
    TALK_TIME_SECONDS		NUMBER(11,2),
    IVR_TIME_SECONDS		NUMBER(11,2),
    XFERRED_OUT_FLAG		VARCHAR2(1),
    VOICEMAIL_FLAG		VARCHAR2(1),
    CALL_REFERENCE_ID		VARCHAR2(50) NOT NULL,
    CALL_DURATION		NUMBER,
    ACTIVITY_ID			VARCHAR2(50),
    ROUTER_SEQUENCE		NUMBER,
    CALL_OFFERED_FLAG		NUMBER,
    CALL_ANSWERED_FLAG		NUMBER,
    DATETIME                    DATE,
    CREATE_DATE                    DATE DEFAULT SYSDATE NOT NULL ,
    LAST_UPDATE_DATE               DATE DEFAULT SYSDATE NOT NULL ,
    LAST_UPDATE_BY 		   VARCHAR2(30)
  ) ;
  
    CREATE INDEX CC_F_CALL_IDX2 ON CC_F_CALL
      (
        D_DATE_ID ASC
    );
  
    CREATE INDEX CC_F_CALL_IDX4 ON CC_F_CALL
      (
        D_CONTACT_QUEUE_ID ASC
      ) ;
      
    CREATE INDEX CC_F_CALL_IDX3 ON CC_F_CALL
            (
              D_AGENT_ID ASC
      ) ;
    
    ALTER TABLE CC_F_CALL ADD CONSTRAINT CC_F_CALL_PK PRIMARY KEY
    (
      F_CALL_ID
    )
    ;
    
    ALTER TABLE CC_F_CALL ADD CONSTRAINT F_CALL_DET_D_CNTCT_Q_FK FOREIGN KEY ( D_CONTACT_QUEUE_ID ) REFERENCES CC_D_CONTACT_QUEUE ( D_CONTACT_QUEUE_ID ) NOT DEFERRABLE ;
    
    ALTER TABLE CC_F_CALL ADD CONSTRAINT F_CALL_DET_D_DATES_FK FOREIGN KEY ( D_DATE_ID ) REFERENCES CC_D_DATES ( D_DATE_ID ) NOT DEFERRABLE ;
    
    ALTER TABLE CC_F_CALL ADD CONSTRAINT F_CALL_DET_D_AGENT_FK FOREIGN KEY ( D_AGENT_ID ) REFERENCES CC_D_AGENT ( D_AGENT_ID ) NOT DEFERRABLE ;
       
    ALTER TABLE CC_F_CALL ADD CONSTRAINT CC_F_CALL__UN UNIQUE
    (
      D_DATE_ID , CALL_REFERENCE_ID
    )
    ;

      
  CREATE SEQUENCE SEQ_CC_F_CALL START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20;
  
  CREATE OR REPLACE TRIGGER BIU_CC_F_CALL
      BEFORE INSERT OR UPDATE ON CC_F_CALL
      FOR EACH ROW 
  BEGIN 
  IF INSERTING AND :NEW.F_CALL_ID IS NULL THEN 
            SELECT SEQ_CC_F_CALL.NEXTVAL INTO :NEW.F_CALL_ID FROM DUAL;
  END IF;
  IF INSERTING THEN 
            :NEW.CREATE_DATE := SYSDATE;
  END IF;
  :NEW.LAST_UPDATE_DATE := SYSDATE;
  :NEW.LAST_UPDATE_BY := USER;
  END; 
  /

CREATE OR REPLACE VIEW CC_F_CALL_SV (F_CALL_ID, D_DATE_ID, D_CONTACT_QUEUE_ID, QUEUE_NUMBER, D_AGENT_ID, AGENT_LOGIN_ID, D_PROJECT_ID, D_PROGRAM_ID, CALL_SEGMENT_ID, CALL_DATE, SOURCE_CALL_ID, DNIS, DISPOSITION, TRANSFER_TO, CALL_SEGMENT_END_DT, LANGUAGE, ANI_PHONE_NUMBER, QUEUE_TIME_SECONDS, RING_TIME_SECONDS, HOLD_TIME_SECONDS, AFTER_CALL_WORK_SECONDS, TALK_TIME_SECONDS, IVR_TIME_SECONDS, XFERRED_OUT_FLAG, VOICEMAIL_FLAG, CALL_ABANDONED_FLAG, CALL_REFERENCE_ID, CALL_DURATION, ACTIVITY_ID, ROUTER_SEQUENCE, CALL_OFFERED_FLAG, CALL_ANSWERED_FLAG, DATETIME, CREATE_DATE, LAST_UPDATE_DATE, LAST_UPDATE_BY) AS 
SELECT CC_F_CALL.F_CALL_ID,CC_F_CALL.D_DATE_ID,CC_F_CALL.D_CONTACT_QUEUE_ID,CC_F_CALL.QUEUE_NUMBER,
CC_F_CALL.D_AGENT_ID,CC_F_CALL.AGENT_LOGIN_ID,CC_D_CONTACT_QUEUE.D_PROJECT_ID,CC_D_CONTACT_QUEUE.D_PROGRAM_ID, CC_F_CALL.CALL_SEGMENT_ID,CC_F_CALL.CALL_DATE,
CC_F_CALL.SOURCE_CALL_ID,CC_F_CALL.DNIS,CC_F_CALL.DISPOSITION,CC_F_CALL.TRANSFER_TO,CC_F_CALL.CALL_SEGMENT_END_DT,CC_F_CALL.LANGUAGE,
CC_F_CALL.ANI_PHONE_NUMBER,CC_F_CALL.QUEUE_TIME_SECONDS, CC_F_CALL.RING_TIME_SECONDS, CC_F_CALL.HOLD_TIME_SECONDS,
CC_F_CALL.AFTER_CALL_WORK_SECONDS, CC_F_CALL.TALK_TIME_SECONDS, CC_F_CALL.IVR_TIME_SECONDS, CC_F_CALL.XFERRED_OUT_FLAG,
CC_F_CALL.VOICEMAIL_FLAG, 
case when CC_F_CALL.DISPOSITION = 'ABANDONED' then 1 else 0 end CALL_ABANDONED_FLAG, CC_F_CALL.CALL_REFERENCE_ID, CC_F_CALL.CALL_DURATION,
CC_F_CALL.ACTIVITY_ID, CC_F_CALL.ROUTER_SEQUENCE, CC_F_CALL.CALL_OFFERED_FLAG, CC_F_CALL.CALL_ANSWERED_FLAG,
CC_F_CALL.DATETIME, CC_F_CALL.CREATE_DATE,CC_F_CALL.LAST_UPDATE_DATE,CC_F_CALL.LAST_UPDATE_BY
FROM CC_F_CALL
INNER JOIN CC_D_CONTACT_QUEUE ON CC_F_CALL.D_CONTACT_QUEUE_ID = CC_D_CONTACT_QUEUE.D_CONTACT_QUEUE_ID;

GRANT SELECT ON CC_F_CALL_SV TO MAXDAT_READ_ONLY;
GRANT SELECT ON cc_s_call_detail_sv TO MAXDAT_READ_ONLY;

---------------------------------------------------------------------------
