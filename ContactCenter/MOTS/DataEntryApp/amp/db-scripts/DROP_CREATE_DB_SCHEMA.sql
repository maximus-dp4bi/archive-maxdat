-- Generated by Oracle SQL Developer Data Modeler 4.0.3.853
--   at:        2015-08-12 12:47:26 EDT
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g




DROP VIEW D_DATA_TYPE_SV 
;

DROP VIEW D_DIVISION_SV 
;

DROP VIEW D_GEOGRAPHY_MASTER_SV 
;

DROP VIEW D_METRIC_DEFINITION_SV 
;

DROP VIEW D_METRIC_PROJECT_SV 
;

DROP VIEW D_PROGRAM_SV 
;

DROP VIEW D_PROJECT_SV 
;

DROP VIEW D_REPORTING_PERIOD_SV 
;

DROP VIEW D_SEGMENT_SV 
;

DROP VIEW D_SLA_DEFINITION_SV 
;

DROP VIEW D_SLA_PROJECT_SV 
;

DROP VIEW F_METRIC_SV 
;

DROP VIEW F_SERVICE_LEVEL_AGREEMENT_SV 
;

DROP TABLE AMP_REVISION_ENTITY CASCADE CONSTRAINTS ;

DROP TABLE AMP_ROLE CASCADE CONSTRAINTS ;

DROP TABLE AMP_USER CASCADE CONSTRAINTS ;

DROP TABLE AMP_USER_AMP_ROLE CASCADE CONSTRAINTS ;

DROP TABLE D_COMPARISON_METRIC CASCADE CONSTRAINTS ;

DROP TABLE D_CONTROL_CHART_PARAMETERS CASCADE CONSTRAINTS ;

DROP TABLE D_DATA_TYPE CASCADE CONSTRAINTS ;

DROP TABLE D_DIVISION CASCADE CONSTRAINTS ;

DROP TABLE D_GEOGRAPHY_MASTER CASCADE CONSTRAINTS ;

DROP TABLE D_METRIC_DEFINITION CASCADE CONSTRAINTS ;

DROP TABLE D_METRIC_DEFINITION_AUD CASCADE CONSTRAINTS ;

DROP TABLE D_METRIC_PROJECT CASCADE CONSTRAINTS ;

DROP TABLE D_METRIC_PROJECT_AUD CASCADE CONSTRAINTS ;

DROP TABLE D_METRIC_TYPE CASCADE CONSTRAINTS ;

DROP TABLE D_METRIC_VALIDATION_RULE CASCADE CONSTRAINTS ;

DROP TABLE D_METRIC_VALIDATION_RULE_AUD CASCADE CONSTRAINTS ;

DROP TABLE D_PROGRAM CASCADE CONSTRAINTS ;

DROP TABLE D_PROJECT CASCADE CONSTRAINTS ;

DROP TABLE D_PROJECT_GEOGRAPHY_MASTER CASCADE CONSTRAINTS ;

DROP TABLE D_PROJECT_PROGRAM CASCADE CONSTRAINTS ;

DROP TABLE D_PROJECT_USER CASCADE CONSTRAINTS ;

DROP TABLE D_REPORTING_PERIOD CASCADE CONSTRAINTS ;

DROP TABLE D_SEGMENT CASCADE CONSTRAINTS ;

DROP TABLE D_SLA_DEFINITION CASCADE CONSTRAINTS ;

DROP TABLE D_SLA_PROJECT CASCADE CONSTRAINTS ;

DROP TABLE F_METRIC CASCADE CONSTRAINTS ;

DROP TABLE F_SERVICE_LEVEL_AGREEMENT CASCADE CONSTRAINTS ;

DROP TABLE S_METRIC CASCADE CONSTRAINTS ;

DROP TABLE S_METRIC_AUD CASCADE CONSTRAINTS ;

DROP TABLE S_PROJECT_REPORT CASCADE CONSTRAINTS ;

DROP TABLE S_PROJECT_REPORT_AUD CASCADE CONSTRAINTS ;

DROP SEQUENCE SEQ_AMP_REVISION_ENTITY ;

DROP SEQUENCE SEQ_AMP_ROLE ;

DROP SEQUENCE SEQ_AMP_USER ;

DROP SEQUENCE SEQ_D_COMPARISON_METRIC ;

DROP SEQUENCE SEQ_D_CONTROL_CHART ;

DROP SEQUENCE SEQ_D_DATA_TYPE ;

DROP SEQUENCE SEQ_D_DIVISION ;

DROP SEQUENCE SEQ_D_GEO_MASTER ;

DROP SEQUENCE SEQ_D_METRIC_DEFINITION ;

DROP SEQUENCE SEQ_D_METRIC_PROJECT ;

DROP SEQUENCE SEQ_D_METRIC_VALIDATION_RULE ;

DROP SEQUENCE SEQ_D_PROGRAM ;

DROP SEQUENCE SEQ_D_PROJECT ;

DROP SEQUENCE SEQ_D_PROJECT_ROLE ;

DROP SEQUENCE SEQ_D_REPORTING_PERIOD ;

DROP SEQUENCE SEQ_D_SEGMENT ;

DROP SEQUENCE SEQ_D_SLA_DEFINITION ;

DROP SEQUENCE SEQ_D_SLA_PROJECT ;

DROP SEQUENCE SEQ_F_METRIC ;

DROP SEQUENCE SEQ_F_SLA ;

DROP SEQUENCE SEQ_METRIC_VALUE_INTEGER ;

DROP SEQUENCE SEQ_METRIC_VALUE_VARCHAR ;

DROP SEQUENCE SEQ_S_METRIC ;

DROP SEQUENCE SEQ_S_PROJECT_REPORT ;

CREATE SEQUENCE SEQ_AMP_REVISION_ENTITY START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_AMP_ROLE START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_AMP_USER START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_D_COMPARISON_METRIC START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_D_CONTROL_CHART START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_D_DATA_TYPE START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_D_DIVISION START WITH 1 INCREMENT BY 1 MAXVALUE 99999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_D_GEO_MASTER START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_D_METRIC_DEFINITION START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_D_METRIC_PROJECT START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_D_METRIC_VALIDATION_RULE START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_D_PROGRAM START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_D_PROJECT START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_D_PROJECT_ROLE START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_D_REPORTING_PERIOD START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_D_SEGMENT START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_D_SLA_DEFINITION START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_D_SLA_PROJECT START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_F_METRIC START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_F_SLA START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_METRIC_VALUE_INTEGER START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_METRIC_VALUE_VARCHAR START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_S_METRIC ;

CREATE SEQUENCE SEQ_S_PROJECT_REPORT START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE TABLE AMP_REVISION_ENTITY
  (
    ID       NUMBER (10) NOT NULL ,
             TIMESTAMP NUMBER (19) NOT NULL ,
    USERNAME VARCHAR2 (255 CHAR)
  ) ;
ALTER TABLE AMP_REVISION_ENTITY ADD CONSTRAINT AMP_REVISION_ENTITY_PK PRIMARY KEY ( ID ) ;

CREATE TABLE AMP_ROLE
  (
    ID          NUMBER (19) NOT NULL ,
    DESCRIPTION VARCHAR2 (250) ,
    NAME        VARCHAR2 (50) ,
    TYPE        VARCHAR2 (50)
  )
  LOGGING ;
ALTER TABLE AMP_ROLE ADD CONSTRAINT ROLE_PK PRIMARY KEY ( ID ) ;

CREATE TABLE AMP_USER
  (
    ID                  NUMBER (19) NOT NULL ,
    ACCOUNT_EXPIRED     NUMBER (1) NOT NULL ,
    ACCOUNT_LOCKED      NUMBER (1) NOT NULL ,
    ADDRESS             VARCHAR2 (150 CHAR) ,
    CITY                VARCHAR2 (50 CHAR) ,
    COUNTRY             VARCHAR2 (100 CHAR) ,
    POSTAL_CODE         VARCHAR2 (15 CHAR) ,
    PROVINCE            VARCHAR2 (100 CHAR) ,
    CREDENTIALS_EXPIRED NUMBER (1) NOT NULL ,
    EMAIL               VARCHAR2 (255 CHAR) ,
    ACCOUNT_ENABLED     NUMBER (1) ,
    FIRST_NAME          VARCHAR2 (50 CHAR) ,
    LAST_NAME           VARCHAR2 (50 CHAR) ,
    PASSWORD            VARCHAR2 (255 CHAR) ,
    PASSWORD_HINT       VARCHAR2 (255 CHAR) ,
    PHONE_NUMBER        VARCHAR2 (255 CHAR) ,
    USERNAME            VARCHAR2 (50 CHAR) NOT NULL ,
    VERSION             NUMBER (10) ,
    WEBSITE             VARCHAR2 (255 CHAR)
  )
  LOGGING ;
ALTER TABLE AMP_USER ADD CONSTRAINT APP_USER_PK PRIMARY KEY ( ID ) ;
ALTER TABLE AMP_USER ADD CONSTRAINT AMP_USER__UN2 UNIQUE ( USERNAME ) ;

CREATE TABLE AMP_USER_AMP_ROLE
  (
    USER_ID NUMBER (19) NOT NULL ,
    ROLE_ID NUMBER (19) NOT NULL
  )
  LOGGING ;
ALTER TABLE AMP_USER_AMP_ROLE ADD CONSTRAINT USER_ROLE_PK PRIMARY KEY ( USER_ID, ROLE_ID ) ;

CREATE TABLE D_COMPARISON_METRIC
  (
    D_COMPARISON_METRIC_ID      NUMBER (19) NOT NULL ,
    D_METRIC_VALIDATION_RULE_ID NUMBER (19) NOT NULL ,
    D_COMPARISON_METRIC_DEF_ID  NUMBER (19) NOT NULL ,
    COMPARISON_METRIC_LOC       VARCHAR2 (250) NOT NULL ,
    ALIAS                       VARCHAR2 (50) NOT NULL
  )
  LOGGING ;
ALTER TABLE D_COMPARISON_METRIC ADD CONSTRAINT D_COMPARISON_METRIC_PK PRIMARY KEY ( D_COMPARISON_METRIC_ID ) ;
ALTER TABLE D_COMPARISON_METRIC ADD CONSTRAINT D_COMPARISON_METRIC__UN UNIQUE ( D_METRIC_VALIDATION_RULE_ID , ALIAS ) ;

CREATE TABLE D_CONTROL_CHART_PARAMETERS
  (
    D_CONTROL_CHART_ID        NUMBER NOT NULL ,
    D_METRIC_PROJECT_ID       NUMBER (19) NOT NULL ,
    REPORT_TYPE               VARCHAR2 (10) ,
    MU                        NUMBER (19,6) ,
    SIGMA                     NUMBER (19,6) ,
    UCL_OF_SIGMA              NUMBER (19,6) ,
    LCL_OF_SIGMA              NUMBER (19,6) ,
    UPPER_CONTROL_LIMIT       NUMBER (19,6) ,
    LOWER_CONTROL_LIMIT       NUMBER (19,6) ,
    CENTER_LINE               NUMBER (19,6) ,
    UPPER_SPECIFICATION_LIMIT NUMBER (19,6) ,
    LOWER_SPECIFICATION_LIMIT NUMBER (19,6) ,
    UPPER_WARNING_LIMIT       NUMBER (19,6) ,
    LOWER_WARNING_LIMIT       NUMBER (19,6) ,
    CP                        NUMBER (19,6) ,
    CPK                       NUMBER (19,6) ,
    NUMBER_OF_OBSERVATIONS    NUMBER ,
    PARAMETER_EFF_DT          DATE ,
    PARAMETER_END_DT          DATE ,
    CREATE_DATE               DATE ,
    LAST_MODIFIED_DATE        DATE ,
    CREATED_BY                VARCHAR2 (50) ,
    UPDATED_BY                VARCHAR2 (50)
  )
  LOGGING ;
CREATE UNIQUE INDEX D_CONTROL_CHART_PARAMETERS_UK ON D_CONTROL_CHART_PARAMETERS
  (
    D_CONTROL_CHART_ID ASC
  )
  LOGGING ;
  ALTER TABLE D_CONTROL_CHART_PARAMETERS ADD CONSTRAINT D_CONTROL_CHART_PARAMETERS_PK PRIMARY KEY ( D_CONTROL_CHART_ID ) ;

CREATE TABLE D_DATA_TYPE
  (
    D_DATA_TYPE_ID     NUMBER (19) NOT NULL ,
    NAME               VARCHAR2 (50) ,
    VALUE_TABLE        VARCHAR2 (50) ,
    CREATE_DATE        DATE NOT NULL ,
    CREATED_BY         VARCHAR2 (50) ,
    LAST_MODIFIED_DATE DATE ,
    UPDATED_BY         VARCHAR2 (50)
  )
  LOGGING ;
ALTER TABLE D_DATA_TYPE ADD CONSTRAINT D_DATA_TYPE_PK PRIMARY KEY ( D_DATA_TYPE_ID ) ;

CREATE TABLE D_DIVISION
  (
    D_DIVISION_ID      NUMBER NOT NULL ,
    DIVISION_NAME      VARCHAR2 (100) ,
    D_SEGMENT_ID       NUMBER NOT NULL ,
    CREATE_DATE        DATE ,
    LAST_MODIFIED_DATE DATE
  )
  LOGGING ;
CREATE INDEX D_DIVISION__IDXv2 ON D_DIVISION
  ( D_SEGMENT_ID ASC
  ) LOGGING ;
ALTER TABLE D_DIVISION ADD CONSTRAINT D_DIVISION_PK PRIMARY KEY ( D_DIVISION_ID ) ;
ALTER TABLE D_DIVISION ADD CONSTRAINT D_DIVISION__UN UNIQUE ( DIVISION_NAME ) ;

CREATE TABLE D_GEOGRAPHY_MASTER
  (
    D_GEOGRAPHY_MASTER_ID NUMBER (19) NOT NULL ,
    GEOGRAPHY_NAME        VARCHAR2 (100) ,
    CREATE_DATE           DATE ,
    LAST_MODIFIED_DATE    DATE ,
    COUNTRY_ID            NUMBER (19) ,
    STATE_ID              NUMBER (19) ,
    REGION_ID             NUMBER (19) ,
    DISTRICT_ID           NUMBER (19) ,
    PROVINCE_ID           NUMBER (19)
  )
  LOGGING ;
ALTER TABLE D_GEOGRAPHY_MASTER ADD CONSTRAINT D_GEOGRAPHY_MASTER_PK PRIMARY KEY ( D_GEOGRAPHY_MASTER_ID ) ;
ALTER TABLE D_GEOGRAPHY_MASTER ADD CONSTRAINT D_GEOGRAPHY_MASTER__UN UNIQUE ( GEOGRAPHY_NAME ) ;

CREATE TABLE D_METRIC_DEFINITION
  (
    D_METRIC_DEFINITION_ID NUMBER (19) NOT NULL ,
    D_DATA_TYPE_ID         NUMBER (19) DEFAULT 2 NOT NULL ,
    D_METRIC_TYPE_ID       NUMBER (19) ,
    NAME                   VARCHAR2 (100) ,
    LABEL                  VARCHAR2 (100) ,
    SORT_ORDER             NUMBER (6) ,
    TYPE                   VARCHAR2 (50) ,
    CATEGORY               VARCHAR2 (50) ,
    SUB_CATEGORY           VARCHAR2 (50) ,
    VALUE_TYPE             VARCHAR2 (50) ,
    DISPLAY_FORMAT         VARCHAR2 (50) ,
    STATUS                 VARCHAR2 (50) ,
    FUNCTIONAL_AREA        VARCHAR2 (50) ,
    HAS_ACTUAL             VARCHAR2 (50) ,
    HAS_TARGET             VARCHAR2 (50) ,
    HAS_FORECAST           VARCHAR2 (50) ,
    IS_CALCULATED          VARCHAR2 (50) ,
    IS_WEEKLY              VARCHAR2 (50) ,
    IS_MONTHLY             VARCHAR2 (50) ,
    DATA_SOURCE            VARCHAR2 (250 CHAR) ,
    DESCRIPTION            VARCHAR2 (4000) ,
    HELPFUL_INFO           VARCHAR2 (4000) ,
    FORMULA                VARCHAR2 (250 CHAR) ,
    UPPER_BOUND            NUMBER (18,2) ,
    LOWER_BOUND            NUMBER (18,2) ,
    RECORD_EFF_DT          DATE ,
    RECORD_END_DT          DATE ,
    CREATE_DATE            DATE ,
    CREATED_BY             VARCHAR2 (50) ,
    LAST_MODIFIED_DATE     DATE ,
    UPDATED_BY             VARCHAR2 (50) ,
    EXAMPLE                VARCHAR2 (1000)
  )
  LOGGING ;
ALTER TABLE D_METRIC_DEFINITION ADD CONSTRAINT M_DEF_HAS_TARGET_CK CHECK (HAS_TARGET       IN ('Y', 'N')) ;
ALTER TABLE D_METRIC_DEFINITION ADD CONSTRAINT M_DEF_HAS_FORECAST_CK CHECK (HAS_FORECAST   IN ('Y', 'N')) ;
ALTER TABLE D_METRIC_DEFINITION ADD CONSTRAINT M_DEF_IS_CALCULATED_CK CHECK (IS_CALCULATED IN ('Y', 'N')) ;
CREATE INDEX D_METRIC_DEFINITION__IDXv2 ON D_METRIC_DEFINITION
  (
    FUNCTIONAL_AREA ASC ,
    CATEGORY ASC ,
    SUB_CATEGORY ASC
  )
  LOGGING ;
CREATE INDEX D_METRIC_DEFINITION__IDXv3 ON D_METRIC_DEFINITION
  (
    D_DATA_TYPE_ID ASC
  )
  LOGGING ;
ALTER TABLE D_METRIC_DEFINITION ADD CONSTRAINT D_METRIC_DEFINITION_PK PRIMARY KEY ( D_METRIC_DEFINITION_ID ) ;
ALTER TABLE D_METRIC_DEFINITION ADD CONSTRAINT D_METRIC_DEFINITION_NAME__UN UNIQUE ( NAME ) ;

CREATE TABLE D_METRIC_DEFINITION_AUD
  (
    D_METRIC_DEFINITION_ID NUMBER (19) NOT NULL ,
    REV                    NUMBER (10) NOT NULL ,
    REVTYPE                NUMBER (3) ,
    CREATED_BY             VARCHAR2 (255 CHAR) ,
    CREATE_DATE            TIMESTAMP ,
    UPDATED_BY             VARCHAR2 (255 CHAR) ,
    LAST_MODIFIED_DATE     TIMESTAMP ,
    DATA_SOURCE            VARCHAR2 (250 CHAR) ,
    DISPLAY_FORMAT         VARCHAR2 (255 CHAR) ,
    FORMULA                VARCHAR2 (250 CHAR) ,
    FUNCTIONAL_AREA        VARCHAR2 (255 CHAR) ,
    HAS_ACTUAL             VARCHAR2 (255 CHAR) ,
    HAS_FORECAST           VARCHAR2 (255 CHAR) ,
    HELPFUL_INFO           VARCHAR2 (4000 CHAR) ,
    IS_CALCULATED          VARCHAR2 (255 CHAR) ,
    IS_MONTHLY             VARCHAR2 (255 CHAR) ,
    LABEL                  VARCHAR2 (255 CHAR) ,
    LOWER_BOUND            NUMBER (19) ,
    DESCRIPTION            VARCHAR2 (4000 CHAR) ,
    NAME                   VARCHAR2 (50 CHAR) ,
    SORT_ORDER             NUMBER (19) ,
    STATUS                 VARCHAR2 (255 CHAR) ,
    UPPER_BOUND            NUMBER (19) ,
    VALUE_TYPE             VARCHAR2 (255 CHAR) ,
    D_DATA_TYPE_ID         NUMBER (19) ,
    D_METRIC_TYPE_ID       NUMBER (19) ,
    IS_WEEKLY              VARCHAR2 (50) ,
    EXAMPLE                VARCHAR2 (1000) ,
    CATEGORY               VARCHAR2 (50) ,
    SUB_CATEGORY           VARCHAR2 (50) ,
    TYPE                   VARCHAR2 (50) ,
    RECORD_EFF_DT          DATE ,
    RECORD_END_DT          DATE ,
    HAS_TARGET             VARCHAR2 (50)
  ) ;
ALTER TABLE D_METRIC_DEFINITION_AUD ADD CONSTRAINT D_METRIC_DEFINITION_AUD_PK PRIMARY KEY ( D_METRIC_DEFINITION_ID, REV ) ;

CREATE TABLE D_METRIC_PROJECT
  (
    D_METRIC_PROJECT_ID         NUMBER (19) NOT NULL ,
    D_PROJECT_ID                NUMBER (19) NOT NULL ,
    D_PROGRAM_ID                NUMBER (19) NOT NULL ,
    D_GEOGRAPHY_MASTER_ID       NUMBER (19) NOT NULL ,
    D_METRIC_DEFINITION_ID      NUMBER (19) NOT NULL ,
    SUPPLY_FORECAST             VARCHAR2 (50) ,
    SUPPLY_TARGET               VARCHAR2 (50) ,
    IS_SLA                      VARCHAR2 (50) ,
    SLA_TYPE                    VARCHAR2 (50) ,
    SLA_THRESHOLD               VARCHAR2 (50) ,
    UPPER_SPECIFICATION_LIMIT   NUMBER (19,6) ,
    LOWER_SPECIFICATION_LIMIT   NUMBER (19,6) ,
    CALCULATE_CONTROL_CHART_IND VARCHAR2 (1) ,
    TREND_INDICATOR_CALCULATION VARCHAR2 (20) ,
    ACTUAL_VALUE_PROVIDED_BY    VARCHAR2 (50) ,
    FORECAST_VALUE_PROVIDED_BY  VARCHAR2 (50) ,
    ACTUAL_EFF_DT               DATE ,
    FORECAST_EFF_DT             DATE ,
    TARGET_EFF_DT               DATE ,
    RECORD_EFF_DT               DATE ,
    RECORD_END_DT               DATE ,
    CREATE_DATE                 DATE ,
    CREATED_BY                  VARCHAR2 (50) ,
    LAST_MODIFIED_DATE          DATE ,
    UPDATED_BY                  VARCHAR2 (50) ,
    IS_AUTO_LOAD                VARCHAR2 (1)
  )
  LOGGING ;
ALTER TABLE D_METRIC_PROJECT ADD CONSTRAINT M_PROJ_IS_SLA_CK CHECK (IS_SLA                   IN ('Y', 'N')) ;
ALTER TABLE D_METRIC_PROJECT ADD CONSTRAINT M_PROJ_SUPPLY_FORECAST_CK CHECK (SUPPLY_FORECAST IN ('Y', 'N')) ;
ALTER TABLE D_METRIC_PROJECT ADD CONSTRAINT M_PROJ_SUPPLY_TARGET_CK CHECK (SUPPLY_TARGET     IN ('Y', 'N')) ;
CREATE INDEX D_METRIC_PROJECT__IDXv2 ON D_METRIC_PROJECT
  (
    D_METRIC_DEFINITION_ID ASC
  )
  LOGGING ;
CREATE INDEX D_METRIC_PROJECT__IDXv3 ON D_METRIC_PROJECT
  (
    D_PROGRAM_ID ASC
  )
  LOGGING ;
CREATE INDEX D_METRIC_PROJECT__IDXv4 ON D_METRIC_PROJECT
  (
    D_PROJECT_ID ASC
  )
  LOGGING ;
CREATE INDEX D_METRIC_PROJECT__IDXv5 ON D_METRIC_PROJECT
  (
    ACTUAL_EFF_DT DESC
  )
  LOGGING ;
CREATE INDEX D_METRIC_PROJECT__IDXv6 ON D_METRIC_PROJECT
  (
    FORECAST_EFF_DT DESC
  )
  LOGGING ;
ALTER TABLE D_METRIC_PROJECT ADD CONSTRAINT D_METRIC_PROJECT_PK PRIMARY KEY ( D_METRIC_PROJECT_ID ) ;
ALTER TABLE D_METRIC_PROJECT ADD CONSTRAINT D_METRIC_PROJECT__UN UNIQUE ( D_PROJECT_ID , D_PROGRAM_ID , D_GEOGRAPHY_MASTER_ID , D_METRIC_DEFINITION_ID , RECORD_EFF_DT ) ;

CREATE TABLE D_METRIC_PROJECT_AUD
  (
    D_METRIC_PROJECT_ID         NUMBER (19) NOT NULL ,
    REV                         NUMBER (10) NOT NULL ,
    REVTYPE                     NUMBER (3) ,
    CREATED_BY                  VARCHAR2 (255 CHAR) ,
    CREATE_DATE                 TIMESTAMP ,
    UPDATED_BY                  VARCHAR2 (255 CHAR) ,
    LAST_MODIFIED_DATE          TIMESTAMP ,
    ACTUAL_EFF_DT               TIMESTAMP ,
    ACTUAL_VALUE_PROVIDED_BY    VARCHAR2 (255 CHAR) ,
    CALCULATE_CONTROL_CHART_IND VARCHAR2 (255 CHAR) ,
    FORECAST_EFF_DT             TIMESTAMP ,
    FORECAST_VALUE_PROVIDED_BY  VARCHAR2 (255 CHAR) ,
    IS_SLA                      VARCHAR2 (255 CHAR) ,
    LOWER_SPECIFICATION_LIMIT FLOAT ,
    RECORD_EFF_DT               TIMESTAMP ,
    RECORD_END_DT               TIMESTAMP ,
    SLA_THRESHOLD               VARCHAR2 (255 CHAR) ,
    SLA_TYPE                    VARCHAR2 (255 CHAR) ,
    SUPPLY_FORECAST             VARCHAR2 (255 CHAR) ,
    SUPPLY_TARGET               VARCHAR2 (255 CHAR) ,
    TARGET_EFF_DT               TIMESTAMP ,
    TREND_INDICATOR_CALCULATION VARCHAR2 (255 CHAR) ,
    UPPER_SPECIFICATION_LIMIT FLOAT ,
    D_GEOGRAPHY_MASTER_ID  NUMBER (19) ,
    D_METRIC_DEFINITION_ID NUMBER (19) ,
    D_PROGRAM_ID           NUMBER (19) ,
    D_PROJECT_ID           NUMBER (19) ,
    IS_AUTO_LOAD           VARCHAR2 (1)
  ) ;
ALTER TABLE D_METRIC_PROJECT_AUD ADD CONSTRAINT D_METRIC_PROJECT_AUD_PK PRIMARY KEY ( D_METRIC_PROJECT_ID, REV ) ;

CREATE TABLE D_METRIC_TYPE
  (
    D_METRIC_TYPE_ID    NUMBER (19) NOT NULL ,
    METRIC_TYPE_NAME    VARCHAR2 (50) NOT NULL ,
    METRIC_CATEGORY     VARCHAR2 (50) NOT NULL ,
    METRIC_SUB_CATEGORY VARCHAR2 (50) ,
    SORT_ORDER          NUMBER (4)
  )
  LOGGING ;
ALTER TABLE D_METRIC_TYPE ADD CONSTRAINT D_METRIC_TYPE_PK PRIMARY KEY ( D_METRIC_TYPE_ID ) ;

CREATE TABLE D_METRIC_VALIDATION_RULE
  (
    D_METRIC_VALIDATION_RULE_ID NUMBER (19) NOT NULL ,
    D_METRIC_DEFINITION_ID      NUMBER (19) NOT NULL ,
    RULE_NAME                   VARCHAR2 (250) NOT NULL ,
    RULE_DESCRIPTION            VARCHAR2 (4000) NOT NULL ,
    RULE_MESSAGE                VARCHAR2 (250) NOT NULL ,
    RULE_VALIDATION_TYPE        VARCHAR2 (250) NOT NULL ,
    RULE_SEVERITY_INDICATOR     VARCHAR2 (250) NOT NULL ,
    METRIC_VALUE_TYPE           VARCHAR2 (250) NOT NULL ,
    METRIC_VALUE_LOCATION       VARCHAR2 (250) NOT NULL ,
    PREVENT_SUBMIT              NUMBER (1) NOT NULL ,
    ALLOW_IGNORE_WITH_COMMENT   NUMBER (1) NOT NULL ,
    IS_EXPRESSION_RULE          NUMBER (1) NOT NULL ,
    RULE_EXPRESSION             VARCHAR2 (4000) NOT NULL ,
    CREATE_DATE                 DATE ,
    CREATED_BY                  VARCHAR2 (50) ,
    LAST_MODIFIED_DATE          DATE ,
    UPDATED_BY                  VARCHAR2 (50)
  )
  LOGGING ;
--  WARNING: Column D_METRIC_VALIDATION_RULE.PREVENT_SUBMIT has no check constraint defined for this database type
--  WARNING: Column D_METRIC_VALIDATION_RULE.ALLOW_IGNORE_WITH_COMMENT has no check constraint defined for this database type
--  WARNING: Column D_METRIC_VALIDATION_RULE.IS_EXPRESSION_RULE has no check constraint defined for this database type
CREATE INDEX D_METRIC_VALIDATION_RULE__IDX ON D_METRIC_VALIDATION_RULE
  (
    D_METRIC_DEFINITION_ID ASC
  )
  LOGGING ;
ALTER TABLE D_METRIC_VALIDATION_RULE ADD CONSTRAINT D_METRIC_VALIDATION_RULE_PK PRIMARY KEY ( D_METRIC_VALIDATION_RULE_ID ) ;
ALTER TABLE D_METRIC_VALIDATION_RULE ADD CONSTRAINT D_METRIC_VALIDATION_RULE__UN UNIQUE ( D_METRIC_DEFINITION_ID , RULE_NAME ) ;

CREATE TABLE D_METRIC_VALIDATION_RULE_AUD
  (
    D_METRIC_VALIDATION_RULE_ID NUMBER (19) NOT NULL ,
    REV                         NUMBER (10) NOT NULL ,
    REVTYPE                     NUMBER (3) ,
    ALLOW_IGNORE_WITH_COMMENT   NUMBER (1) ,
    IS_EXPRESSION_RULE          NUMBER (1) ,
    METRIC_VALUE_LOCATION       VARCHAR2 (255 CHAR) ,
    METRIC_VALUE_TYPE           VARCHAR2 (255 CHAR) ,
    PREVENT_SUBMIT              NUMBER (1) ,
    RULE_DESCRIPTION            VARCHAR2 (255 CHAR) ,
    RULE_EXPRESSION             VARCHAR2 (255 CHAR) ,
    RULE_MESSAGE                VARCHAR2 (255 CHAR) ,
    RULE_NAME                   VARCHAR2 (255 CHAR) ,
    RULE_SEVERITY_INDICATOR     VARCHAR2 (255 CHAR) ,
    RULE_VALIDATION_TYPE        VARCHAR2 (255 CHAR) ,
    D_METRIC_DEFINITION_ID      NUMBER (19) ,
    CREATE_DATE                 DATE ,
    CREATED_BY                  VARCHAR2 (50) ,
    LAST_MODIFIED_DATE          DATE ,
    UPDATED_BY                  VARCHAR2 (50)
  ) ;
ALTER TABLE D_METRIC_VALIDATION_RULE_AUD ADD CONSTRAINT D_METRIC_VLDTN_RULE_AUD_PK PRIMARY KEY ( D_METRIC_VALIDATION_RULE_ID, REV ) ;

CREATE TABLE D_PROGRAM
  (
    D_PROGRAM_ID       NUMBER (19) NOT NULL ,
    PROGRAM_NAME       VARCHAR2 (100) ,
    CREATE_DATE        DATE ,
    LAST_MODIFIED_DATE DATE
  )
  LOGGING ;
ALTER TABLE D_PROGRAM ADD CONSTRAINT D_PROGRAM_PK PRIMARY KEY ( D_PROGRAM_ID ) ;
ALTER TABLE D_PROGRAM ADD CONSTRAINT D_PROGRAM__UN UNIQUE ( PROGRAM_NAME ) ;

CREATE TABLE D_PROJECT
  (
    D_PROJECT_ID       NUMBER (19) NOT NULL ,
    PROJECT_NAME       VARCHAR2 (100) ,
    D_DIVISION_ID      NUMBER NOT NULL ,
    CREATE_DATE        DATE ,
    LAST_MODIFIED_DATE DATE
  )
  LOGGING ;
CREATE INDEX D_PROJECT__IDXv2 ON D_PROJECT
  ( D_DIVISION_ID ASC
  ) LOGGING ;
ALTER TABLE D_PROJECT ADD CONSTRAINT D_PROJECT_PK PRIMARY KEY ( D_PROJECT_ID ) ;
ALTER TABLE D_PROJECT ADD CONSTRAINT D_PROJECT__UN UNIQUE ( PROJECT_NAME ) ;

CREATE TABLE D_PROJECT_GEOGRAPHY_MASTER
  (
    D_PROJECT_ID          NUMBER (19) NOT NULL ,
    D_GEOGRAPHY_MASTER_ID NUMBER (19) NOT NULL
  )
  LOGGING ;

CREATE TABLE D_PROJECT_PROGRAM
  (
    D_PROJECT_ID NUMBER (19) NOT NULL ,
    D_PROGRAM_ID NUMBER (19) NOT NULL
  )
  LOGGING ;

CREATE TABLE D_PROJECT_USER
  (
    D_PROJECT_USER_ID  NUMBER (19) NOT NULL ,
    D_PROJECT_ID       NUMBER (19) NOT NULL ,
    APP_USER_ID        NUMBER (19) NOT NULL ,
    D_PROJECT_ROLE_ID  NUMBER (19) NOT NULL ,
    FUNCTIONAL_AREA    VARCHAR2 (50) NOT NULL ,
    IS_ACTIVE_FLAG     VARCHAR2 (1) NOT NULL ,
    CREATE_DATE        DATE ,
    CREATED_BY         VARCHAR2 (50) ,
    LAST_MODIFIED_DATE DATE ,
    UPDATED_BY         VARCHAR2 (50)
  )
  LOGGING ;
ALTER TABLE D_PROJECT_USER ADD CONSTRAINT D_PROJECT_USER_PK PRIMARY KEY ( D_PROJECT_USER_ID ) ;

CREATE TABLE D_REPORTING_PERIOD
  (
    D_REPORTING_PERIOD_ID NUMBER (19) NOT NULL ,
    TYPE                  VARCHAR2 (50) ,
    START_DATE            DATE ,
    END_DATE              DATE ,
    MONTH                 VARCHAR2 (50) ,
    YEAR                  NUMBER (19) ,
    CREATE_DATE           DATE ,
    CREATED_BY            VARCHAR2 (50) ,
    LAST_MODIFIED_DATE    DATE ,
    UPDATED_BY            VARCHAR2 (50)
  )
  LOGGING ;
CREATE UNIQUE INDEX D_REPORTING_PERIOD__IDXv2 ON D_REPORTING_PERIOD
  (
  TYPE ASC , END_DATE DESC
  )
  LOGGING ;
  ALTER TABLE D_REPORTING_PERIOD ADD CONSTRAINT D_REPORTING_PERIOD_PK PRIMARY KEY ( D_REPORTING_PERIOD_ID ) ;
  ALTER TABLE D_REPORTING_PERIOD ADD CONSTRAINT D_REPORTING_PERIOD__UN UNIQUE ( START_DATE , END_DATE ) ;

CREATE TABLE D_SEGMENT
  (
    D_SEGMENT_ID       NUMBER NOT NULL ,
    SEGMENT_NAME       VARCHAR2 (100) ,
    CREATE_DATE        DATE ,
    LAST_MODIFIED_DATE DATE
  )
  LOGGING ;
ALTER TABLE D_SEGMENT ADD CONSTRAINT D_SEGMENT_PK PRIMARY KEY ( D_SEGMENT_ID ) ;
ALTER TABLE D_SEGMENT ADD CONSTRAINT D_SEGMENT__UN UNIQUE ( SEGMENT_NAME ) ;

CREATE TABLE D_SLA_DEFINITION
  (
    D_SLA_DEFINITION_ID            NUMBER (19) NOT NULL ,
    SLA_NAME                       VARCHAR2 (50) ,
    SLA_LABEL                      VARCHAR2 (100) ,
    CATEGORY                       VARCHAR2 (50) ,
    FUNCTIONAL_AREA                VARCHAR2 (50) ,
    REFERENCE_VALUE_DISPLAY_FORMAT VARCHAR2 (50) ,
    VERSION                        NUMBER (4) ,
    RECORD_EFF_DT                  DATE ,
    RECORD_END_DT                  DATE ,
    CREATE_DATE                    DATE ,
    CREATED_BY                     VARCHAR2 (50) ,
    LAST_MODIFIED_DATE             DATE ,
    UPDATED_BY                     VARCHAR2 (50)
  )
  LOGGING ;
CREATE INDEX D_SLA_DEFINITION__IDXv2 ON D_SLA_DEFINITION
  (
    CATEGORY ASC
  )
  LOGGING ;
CREATE INDEX D_SLA_DEFINITION__IDXv3 ON D_SLA_DEFINITION
  (
    FUNCTIONAL_AREA ASC
  )
  LOGGING ;
ALTER TABLE D_SLA_DEFINITION ADD CONSTRAINT D_SLA_DEFINITION_PK PRIMARY KEY ( D_SLA_DEFINITION_ID ) ;
ALTER TABLE D_SLA_DEFINITION ADD CONSTRAINT D_SLA_DEFINITION_SLA_NAME__UN UNIQUE ( SLA_NAME ) ;

CREATE TABLE D_SLA_PROJECT
  (
    D_SLA_PROJECT_ID               NUMBER (19) NOT NULL ,
    D_PROJECT_ID                   NUMBER (19) NOT NULL ,
    D_PROGRAM_ID                   NUMBER (19) NOT NULL ,
    D_GEOGRAPHY_MASTER_ID          NUMBER (19) NOT NULL ,
    D_SLA_DEFINITION_ID            NUMBER (19) NOT NULL ,
    FREQUENCY                      VARCHAR2 (50) ,
    PROJECT_SLA_LABEL              VARCHAR2 (255) ,
    REFERENCE_VALUE_CALC_DESC      VARCHAR2 (255) ,
    REFERENCE_VALUE_DESC           VARCHAR2 (255) ,
    PRIMARY_METRIC_DEFN_ID         NUMBER ,
    PRIMARY_METRIC_THRESHOLD_LOW   NUMBER (19,6) ,
    PRIMARY_METRIC_THRESHOLD_HIGH  NUMBER (19,6) ,
    SECONDARY_METRIC_DEFN_ID       NUMBER ,
    SECONDRY_METRIC_THRESHOLD_LOW  NUMBER (19,6) ,
    SECONDRY_METRIC_THRESHOLD_HIGH NUMBER (19,6) ,
    SORT_ORDER                     NUMBER (6) ,
    SORT_ID                        VARCHAR2 (50) ,
    START_DATE                     DATE ,
    END_DATE                       DATE ,
    CREATE_DATE                    DATE ,
    CREATED_BY                     VARCHAR2 (50) ,
    LAST_MODIFIED_DATE             DATE ,
    UPDATED_BY                     VARCHAR2 (50)
  )
  LOGGING ;
CREATE INDEX D_SLA_PROJECT__IDXv2 ON D_SLA_PROJECT
  (
    D_SLA_DEFINITION_ID ASC
  )
  LOGGING ;
CREATE INDEX D_SLA_PROJECT__IDXv3 ON D_SLA_PROJECT
  (
    D_PROJECT_ID ASC
  )
  LOGGING ;
CREATE INDEX D_SLA_PROJECT__IDXv4 ON D_SLA_PROJECT
  (
    D_PROGRAM_ID ASC
  )
  LOGGING ;
CREATE INDEX D_SLA_PROJECT__IDXv5 ON D_SLA_PROJECT
  (
    START_DATE DESC ,
    END_DATE DESC
  )
  LOGGING ;
ALTER TABLE D_SLA_PROJECT ADD CONSTRAINT D_SLA_PROJECT_PK PRIMARY KEY ( D_SLA_PROJECT_ID ) ;
ALTER TABLE D_SLA_PROJECT ADD CONSTRAINT D_SLA_PROJECT__UN UNIQUE ( D_PROJECT_ID , D_PROGRAM_ID , D_GEOGRAPHY_MASTER_ID , D_SLA_DEFINITION_ID , START_DATE , SORT_ID ) ;

CREATE TABLE F_METRIC
  (
    F_METRIC_ID                   NUMBER (19) NOT NULL ,
    D_METRIC_PROJECT_ID           NUMBER (19) NOT NULL ,
    D_REPORTING_PERIOD_ID         NUMBER (19) NOT NULL ,
    APPROVED                      VARCHAR2 (50) ,
    APPROVED_DATE                 DATE ,
    ACTUAL_VALUE                  NUMBER (19,6) ,
    ACTUAL_RECEIVED_DATE          DATE ,
    ACTUAL_TREND_INDICATOR        NUMBER (1) ,
    ACTUAL_FORECAST_VARIANCE_FRMT NUMBER (1) ,
    FORECAST_VALUE                NUMBER (19,6) ,
    FORECAST_RECEIVED_DATE        DATE ,
    TARGET_VALUE                  NUMBER (19,6) ,
    TARGET_RECEIVED_DATE          DATE ,
    COMMENTS                      VARCHAR2 (4000) ,
    FORECAST_COMMENTS             VARCHAR2 (4000) ,
    TARGET_COMMENTS               VARCHAR2 (4000) ,
    CREATE_DATE                   DATE ,
    CREATED_BY                    VARCHAR2 (50) ,
    LAST_MODIFIED_DATE            DATE ,
    UPDATED_BY                    VARCHAR2 (50) ,
    ACTUAL_VALUE_NOT_SUPPLIED     VARCHAR2 (1) ,
    FORECAST_VALUE_NOT_SUPPLIED   VARCHAR2 (1)
  )
  LOGGING ;
CREATE INDEX F_METRIC__IDXv2 ON F_METRIC
  ( D_METRIC_PROJECT_ID ASC
  ) LOGGING ;
CREATE INDEX F_METRIC__RPT_PERIOD_FK ON F_METRIC
  (
    D_REPORTING_PERIOD_ID ASC
  )
  LOGGING ;
ALTER TABLE F_METRIC ADD CONSTRAINT F_METRIC_PK PRIMARY KEY ( F_METRIC_ID ) ;
ALTER TABLE F_METRIC ADD CONSTRAINT F_METRIC__UN UNIQUE ( D_METRIC_PROJECT_ID , D_REPORTING_PERIOD_ID ) ;

CREATE TABLE F_SERVICE_LEVEL_AGREEMENT
  (
    F_SLA_ID              NUMBER (19) NOT NULL ,
    D_SLA_PROJECT_ID      NUMBER (19) NOT NULL ,
    D_REPORTING_PERIOD_ID NUMBER (19) NOT NULL ,
    COMPLIANCE_RESULT     NUMBER (1) ,
    REFERENCE_VALUE       NUMBER (19,6) ,
    COMPLIANCE_COMMENTS   VARCHAR2 (240) ,
    CREATE_DATE           DATE ,
    CREATED_BY            VARCHAR2 (50) ,
    LAST_MODIFIED_DATE    DATE ,
    UPDATED_BY            VARCHAR2 (50)
  )
  LOGGING ;
CREATE INDEX F_SERVICE_LEVEL_AGREEMENT_IDX ON F_SERVICE_LEVEL_AGREEMENT
  (
    D_SLA_PROJECT_ID ASC
  )
  LOGGING ;
CREATE INDEX F_SERVICE_LEVEL_AGREEMENT_IX ON F_SERVICE_LEVEL_AGREEMENT
  (
    D_REPORTING_PERIOD_ID ASC
  )
  LOGGING ;
ALTER TABLE F_SERVICE_LEVEL_AGREEMENT ADD CONSTRAINT F_SERVICE_LEVEL_AGREEMENT_PK PRIMARY KEY ( F_SLA_ID ) ;
ALTER TABLE F_SERVICE_LEVEL_AGREEMENT ADD CONSTRAINT F_SERVICE_LEVEL_AGREEMENT__UN UNIQUE ( D_SLA_PROJECT_ID , D_REPORTING_PERIOD_ID ) ;

CREATE TABLE S_METRIC
  (
    S_METRIC_ID                   NUMBER (19) NOT NULL ,
    D_METRIC_DEFINITION_ID        NUMBER (19) NOT NULL ,
    S_ACTUALS_PROJECT_REPORT_ID   NUMBER (19) ,
    S_FORECASTS_PROJECT_REPORT_ID NUMBER (19) ,
    APPROVED                      VARCHAR2 (50) ,
    APPROVED_DATE                 DATE ,
    ACTUAL_VALUE                  NUMBER (19,6) ,
    ACTUAL_RECEIVED_DATE          DATE ,
    ACTUAL_TREND_INDICATOR        NUMBER (1) ,
    ACTUAL_FORECAST_VARIANCE_FRMT NUMBER (1) ,
    FORECAST_VALUE                NUMBER (19,6) ,
    FORECAST_RECEIVED_DATE        DATE ,
    TARGET_VALUE                  NUMBER (19,6) ,
    TARGET_RECEIVED_DATE          DATE ,
    COMMENTS                      VARCHAR2 (4000) ,
    FORECAST_COMMENTS             VARCHAR2 (4000) ,
    TARGET_COMMENTS               VARCHAR2 (4000) ,
    CREATE_DATE                   DATE ,
    CREATED_BY                    VARCHAR2 (50) ,
    LAST_MODIFIED_DATE            DATE ,
    UPDATED_BY                    VARCHAR2 (50) ,
    ACTUAL_VALUE_NOT_SUPPLIED     VARCHAR2 (1) ,
    FORECAST_VALUE_NOT_SUPPLIED   VARCHAR2 (1)
  )
  LOGGING ;
CREATE INDEX S_METRIC__IDX ON S_METRIC
  (
    D_METRIC_DEFINITION_ID ASC
  )
  LOGGING ;
CREATE INDEX S_METRIC__IDXv1 ON S_METRIC
  (
    S_ACTUALS_PROJECT_REPORT_ID ASC
  )
  LOGGING ;
CREATE INDEX S_METRIC__IDXv2 ON S_METRIC
  (
    S_FORECASTS_PROJECT_REPORT_ID ASC
  )
  LOGGING ;
ALTER TABLE S_METRIC ADD CONSTRAINT S_METRIC_PK PRIMARY KEY ( S_METRIC_ID ) ;
ALTER TABLE S_METRIC ADD CONSTRAINT S_METRIC_UN1 UNIQUE ( D_METRIC_DEFINITION_ID , S_ACTUALS_PROJECT_REPORT_ID , S_FORECASTS_PROJECT_REPORT_ID ) ;

CREATE TABLE S_METRIC_AUD
  (
    S_METRIC_ID                   NUMBER (19) NOT NULL ,
    REV                           NUMBER (10) NOT NULL ,
    REVTYPE                       NUMBER (3) ,
    CREATED_BY                    VARCHAR2 (255 CHAR) ,
    CREATE_DATE                   TIMESTAMP ,
    UPDATED_BY                    VARCHAR2 (255 CHAR) ,
    LAST_MODIFIED_DATE            TIMESTAMP ,
    COMMENTS                      VARCHAR2 (255 CHAR) ,
    ACTUAL_FORECAST_VARIANCE_FRMT NUMBER (19) ,
    ACTUAL_RECEIVED_DATE          TIMESTAMP ,
    ACTUAL_TREND_INDICATOR        NUMBER (19) ,
    ACTUAL_VALUE FLOAT ,
    ACTUAL_VALUE_NOT_SUPPLIED NUMBER (1) ,
    FORECAST_COMMENTS         VARCHAR2 (255 CHAR) ,
    FORECAST_RECEIVED_DATE    TIMESTAMP ,
    FORECAST_VALUE FLOAT ,
    FORECAST_VALUE_NOT_SUPPLIED   NUMBER (1) ,
    S_ACTUALS_PROJECT_REPORT_ID   NUMBER (19) ,
    S_FORECASTS_PROJECT_REPORT_ID NUMBER (19) ,
    D_METRIC_DEFINITION_ID        NUMBER (19)
  ) ;
ALTER TABLE S_METRIC_AUD ADD CONSTRAINT S_METRIC_AUD_PK PRIMARY KEY ( S_METRIC_ID, REV ) ;

CREATE TABLE S_PROJECT_REPORT
  (
    S_PROJECT_REPORT_ID        NUMBER (19) NOT NULL ,
    D_PROJECT_ID               NUMBER (19) NOT NULL ,
    D_PROGRAM_ID               NUMBER (19) NOT NULL ,
    D_GEOGRAPHY_MASTER_ID      NUMBER (19) NOT NULL ,
    D_REPORTING_PERIOD_ID      NUMBER (19) NOT NULL ,
    APPROVED                   VARCHAR2 (50) ,
    APPROVED_DATE              DATE ,
    REPORT_TYPE                VARCHAR2 (250) ,
    STATUS                     VARCHAR2 (50) ,
    IS_ACTUALS_TREND_PROCESSED VARCHAR2 (1) DEFAULT 'N' NOT NULL ,
    IS_FUTURE_TRENDS_PROCESSED VARCHAR2 (1) DEFAULT 'N' NOT NULL ,
    IS_ERROR                   VARCHAR2 (1) DEFAULT 'N' NOT NULL ,
    CREATE_DATE                DATE ,
    CREATED_BY                 VARCHAR2 (50) ,
    LAST_MODIFIED_DATE         DATE ,
    UPDATED_BY                 VARCHAR2 (50) ,
    FUNCTIONAL_AREA            VARCHAR2 (50)
  )
  LOGGING ;
CREATE INDEX S_PROJECT_REPORT__IDX ON S_PROJECT_REPORT
  (
    D_PROJECT_ID ASC
  )
  LOGGING ;
CREATE INDEX S_PROJECT_REPORT__IDXv1 ON S_PROJECT_REPORT
  (
    D_PROGRAM_ID ASC
  )
  LOGGING ;
CREATE INDEX S_PROJECT_REPORT__IDXv2 ON S_PROJECT_REPORT
  (
    D_GEOGRAPHY_MASTER_ID ASC
  )
  LOGGING ;
CREATE INDEX S_PROJECT_REPORT__IDXv3 ON S_PROJECT_REPORT
  (
    D_REPORTING_PERIOD_ID ASC
  )
  LOGGING ;
ALTER TABLE S_PROJECT_REPORT ADD CONSTRAINT S_PROJECT_REPORT_PK PRIMARY KEY ( S_PROJECT_REPORT_ID ) ;
ALTER TABLE S_PROJECT_REPORT ADD CONSTRAINT S_PROJECT_REPORT__UN UNIQUE ( D_PROJECT_ID , D_PROGRAM_ID , D_GEOGRAPHY_MASTER_ID , D_REPORTING_PERIOD_ID , REPORT_TYPE , FUNCTIONAL_AREA ) ;

CREATE TABLE S_PROJECT_REPORT_AUD
  (
    S_PROJECT_REPORT_ID        NUMBER (19) NOT NULL ,
    REPORT_TYPE                VARCHAR2 (31 CHAR) NOT NULL ,
    REV                        NUMBER (10) NOT NULL ,
    REVTYPE                    NUMBER (3) ,
    CREATED_BY                 VARCHAR2 (255 CHAR) ,
    CREATE_DATE                TIMESTAMP ,
    UPDATED_BY                 VARCHAR2 (255 CHAR) ,
    LAST_MODIFIED_DATE         TIMESTAMP ,
    APPROVED                   NUMBER (1) ,
    APPROVED_DATE              TIMESTAMP ,
    STATUS                     VARCHAR2 (255 CHAR) ,
    D_GEOGRAPHY_MASTER_ID      NUMBER (19) ,
    D_PROGRAM_ID               NUMBER (19) ,
    D_PROJECT_ID               NUMBER (19) ,
    D_REPORTING_PERIOD_ID      NUMBER (19) ,
    IS_ACTUALS_TREND_PROCESSED VARCHAR2 (1) NOT NULL ,
    IS_FUTURE_TRENDS_PROCESSED VARCHAR2 (1) NOT NULL ,
    FUNCTIONAL_AREA            VARCHAR2 (50)
  ) ;
ALTER TABLE S_PROJECT_REPORT_AUD ADD CONSTRAINT S_PROJECT_REPORT_AUD_PK PRIMARY KEY ( S_PROJECT_REPORT_ID, REV ) ;

ALTER TABLE D_CONTROL_CHART_PARAMETERS ADD CONSTRAINT D_CCP_METRIC_PROJ_FK FOREIGN KEY ( D_METRIC_PROJECT_ID ) REFERENCES D_METRIC_PROJECT ( D_METRIC_PROJECT_ID ) NOT DEFERRABLE ;

ALTER TABLE D_COMPARISON_METRIC ADD CONSTRAINT D_CMP_MTRC_MTRC_DEF_FK FOREIGN KEY ( D_COMPARISON_METRIC_DEF_ID ) REFERENCES D_METRIC_DEFINITION ( D_METRIC_DEFINITION_ID ) NOT DEFERRABLE ;

ALTER TABLE D_COMPARISON_METRIC ADD CONSTRAINT D_CMP_MTRC_MTRC_VLDTN_RL_FK FOREIGN KEY ( D_METRIC_VALIDATION_RULE_ID ) REFERENCES D_METRIC_VALIDATION_RULE ( D_METRIC_VALIDATION_RULE_ID ) NOT DEFERRABLE ;

ALTER TABLE D_DIVISION ADD CONSTRAINT D_DIVISION_SEGMENT_FK FOREIGN KEY ( D_SEGMENT_ID ) REFERENCES D_SEGMENT ( D_SEGMENT_ID ) NOT DEFERRABLE ;

ALTER TABLE D_PROJECT_GEOGRAPHY_MASTER ADD CONSTRAINT D_PRJ_GEO_D_GEO_FK FOREIGN KEY ( D_GEOGRAPHY_MASTER_ID ) REFERENCES D_GEOGRAPHY_MASTER ( D_GEOGRAPHY_MASTER_ID ) NOT DEFERRABLE ;

ALTER TABLE D_PROJECT_GEOGRAPHY_MASTER ADD CONSTRAINT D_PRJ_GEO_D_PRJ_FK FOREIGN KEY ( D_PROJECT_ID ) REFERENCES D_PROJECT ( D_PROJECT_ID ) NOT DEFERRABLE ;

ALTER TABLE D_PROJECT_PROGRAM ADD CONSTRAINT D_PRJ_PRG_D_PRG_FK FOREIGN KEY ( D_PROGRAM_ID ) REFERENCES D_PROGRAM ( D_PROGRAM_ID ) NOT DEFERRABLE ;

ALTER TABLE D_PROJECT_PROGRAM ADD CONSTRAINT D_PRJ_PRG_D_PRJ_FK FOREIGN KEY ( D_PROJECT_ID ) REFERENCES D_PROJECT ( D_PROJECT_ID ) NOT DEFERRABLE ;

ALTER TABLE D_PROJECT ADD CONSTRAINT D_PROJECT_D_DIVISION_FK FOREIGN KEY ( D_DIVISION_ID ) REFERENCES D_DIVISION ( D_DIVISION_ID ) NOT DEFERRABLE ;

ALTER TABLE S_PROJECT_REPORT ADD CONSTRAINT D_PROJECT_REPORT_D_GEO_MSTR_FK FOREIGN KEY ( D_GEOGRAPHY_MASTER_ID ) REFERENCES D_GEOGRAPHY_MASTER ( D_GEOGRAPHY_MASTER_ID ) NOT DEFERRABLE ;

ALTER TABLE S_PROJECT_REPORT ADD CONSTRAINT D_PROJECT_REPORT_D_PROGRAM_FK FOREIGN KEY ( D_PROGRAM_ID ) REFERENCES D_PROGRAM ( D_PROGRAM_ID ) NOT DEFERRABLE ;

ALTER TABLE S_PROJECT_REPORT ADD CONSTRAINT D_PROJECT_REPORT_D_PROJECT_FK FOREIGN KEY ( D_PROJECT_ID ) REFERENCES D_PROJECT ( D_PROJECT_ID ) NOT DEFERRABLE ;

ALTER TABLE S_PROJECT_REPORT ADD CONSTRAINT D_PROJECT_REPORT_RPRTNG_PRD_FK FOREIGN KEY ( D_REPORTING_PERIOD_ID ) REFERENCES D_REPORTING_PERIOD ( D_REPORTING_PERIOD_ID ) NOT DEFERRABLE ;

ALTER TABLE D_PROJECT_USER ADD CONSTRAINT D_PROJECT_USER_AMP_ROLE_FK FOREIGN KEY ( D_PROJECT_ROLE_ID ) REFERENCES AMP_ROLE ( ID ) NOT DEFERRABLE ;

ALTER TABLE D_PROJECT_USER ADD CONSTRAINT D_PROJECT_USER_APP_USER_FK FOREIGN KEY ( APP_USER_ID ) REFERENCES AMP_USER ( ID ) NOT DEFERRABLE ;

ALTER TABLE D_PROJECT_USER ADD CONSTRAINT D_PROJECT_USER_D_PROJECT_FK FOREIGN KEY ( D_PROJECT_ID ) REFERENCES D_PROJECT ( D_PROJECT_ID ) NOT DEFERRABLE ;

ALTER TABLE D_SLA_PROJECT ADD CONSTRAINT D_SLA_PROJECT_D_GEO_MASTER_FK FOREIGN KEY ( D_GEOGRAPHY_MASTER_ID ) REFERENCES D_GEOGRAPHY_MASTER ( D_GEOGRAPHY_MASTER_ID ) NOT DEFERRABLE ;

ALTER TABLE D_SLA_PROJECT ADD CONSTRAINT D_SLA_PROJECT_D_PROGRAM_FK FOREIGN KEY ( D_PROGRAM_ID ) REFERENCES D_PROGRAM ( D_PROGRAM_ID ) NOT DEFERRABLE ;

ALTER TABLE D_SLA_PROJECT ADD CONSTRAINT D_SLA_PROJECT_D_PROJECT_FK FOREIGN KEY ( D_PROJECT_ID ) REFERENCES D_PROJECT ( D_PROJECT_ID ) NOT DEFERRABLE ;

ALTER TABLE D_SLA_PROJECT ADD CONSTRAINT D_SLA_PROJECT_D_SLA_DEFN_FK FOREIGN KEY ( D_SLA_DEFINITION_ID ) REFERENCES D_SLA_DEFINITION ( D_SLA_DEFINITION_ID ) NOT DEFERRABLE ;

ALTER TABLE D_METRIC_VALIDATION_RULE ADD CONSTRAINT D_VLDTN_RLE_COMP_MTRC_DEF_FK FOREIGN KEY ( D_METRIC_DEFINITION_ID ) REFERENCES D_METRIC_DEFINITION ( D_METRIC_DEFINITION_ID ) NOT DEFERRABLE ;

ALTER TABLE D_METRIC_VALIDATION_RULE_AUD ADD CONSTRAINT FK_4CBVF1F2BI1N9J4DCJVQCYXS0 FOREIGN KEY ( REV ) REFERENCES AMP_REVISION_ENTITY ( ID ) NOT DEFERRABLE ;

ALTER TABLE S_PROJECT_REPORT_AUD ADD CONSTRAINT FK_96PUUC105R1O15C3081D3FCT8 FOREIGN KEY ( REV ) REFERENCES AMP_REVISION_ENTITY ( ID ) NOT DEFERRABLE ;

ALTER TABLE D_METRIC_PROJECT_AUD ADD CONSTRAINT FK_AE5EAHUYFEQHK7DU9DSTTLSY5 FOREIGN KEY ( REV ) REFERENCES AMP_REVISION_ENTITY ( ID ) NOT DEFERRABLE ;

ALTER TABLE D_METRIC_DEFINITION_AUD ADD CONSTRAINT FK_EAB4JJQIINH0QFSY9ELMLU5X3 FOREIGN KEY ( REV ) REFERENCES AMP_REVISION_ENTITY ( ID ) NOT DEFERRABLE ;

ALTER TABLE S_METRIC_AUD ADD CONSTRAINT FK_FDMI396WD771T6RV157TRHKOG FOREIGN KEY ( REV ) REFERENCES AMP_REVISION_ENTITY ( ID ) NOT DEFERRABLE ;

ALTER TABLE F_METRIC ADD CONSTRAINT F_METRIC_D_REPORTING_PERIOD_FK FOREIGN KEY ( D_REPORTING_PERIOD_ID ) REFERENCES D_REPORTING_PERIOD ( D_REPORTING_PERIOD_ID ) NOT DEFERRABLE ;

ALTER TABLE F_METRIC ADD CONSTRAINT F_METRIC__METRIC_PROJ_FK FOREIGN KEY ( D_METRIC_PROJECT_ID ) REFERENCES D_METRIC_PROJECT ( D_METRIC_PROJECT_ID ) NOT DEFERRABLE ;

ALTER TABLE F_SERVICE_LEVEL_AGREEMENT ADD CONSTRAINT F_SLA_D_REPORTING_PERIOD_FK FOREIGN KEY ( D_REPORTING_PERIOD_ID ) REFERENCES D_REPORTING_PERIOD ( D_REPORTING_PERIOD_ID ) NOT DEFERRABLE ;

ALTER TABLE F_SERVICE_LEVEL_AGREEMENT ADD CONSTRAINT F_SLA_D_SLA_PROJECT_FK FOREIGN KEY ( D_SLA_PROJECT_ID ) REFERENCES D_SLA_PROJECT ( D_SLA_PROJECT_ID ) NOT DEFERRABLE ;

ALTER TABLE D_METRIC_DEFINITION ADD CONSTRAINT METRIC_DEF__DATA_TYPE_FK FOREIGN KEY ( D_DATA_TYPE_ID ) REFERENCES D_DATA_TYPE ( D_DATA_TYPE_ID ) NOT DEFERRABLE ;

ALTER TABLE D_METRIC_PROJECT ADD CONSTRAINT METRIC_PROJ_GEO_MASTER_FK FOREIGN KEY ( D_GEOGRAPHY_MASTER_ID ) REFERENCES D_GEOGRAPHY_MASTER ( D_GEOGRAPHY_MASTER_ID ) NOT DEFERRABLE ;

ALTER TABLE D_METRIC_PROJECT ADD CONSTRAINT METRIC_PROJ_PROGRAM_FK FOREIGN KEY ( D_PROGRAM_ID ) REFERENCES D_PROGRAM ( D_PROGRAM_ID ) NOT DEFERRABLE ;

ALTER TABLE D_METRIC_PROJECT ADD CONSTRAINT METRIC_PROJ__METRIC_DEF_FK FOREIGN KEY ( D_METRIC_DEFINITION_ID ) REFERENCES D_METRIC_DEFINITION ( D_METRIC_DEFINITION_ID ) NOT DEFERRABLE ;

ALTER TABLE D_METRIC_PROJECT ADD CONSTRAINT METRIC_PROJ__PROJECT_FK FOREIGN KEY ( D_PROJECT_ID ) REFERENCES D_PROJECT ( D_PROJECT_ID ) NOT DEFERRABLE ;

ALTER TABLE S_METRIC ADD CONSTRAINT S_METRIC_D_ACTUALS_REPORT_FK FOREIGN KEY ( S_ACTUALS_PROJECT_REPORT_ID ) REFERENCES S_PROJECT_REPORT ( S_PROJECT_REPORT_ID ) NOT DEFERRABLE ;

ALTER TABLE S_METRIC ADD CONSTRAINT S_METRIC_D_FORECASTS_REPORT_FK FOREIGN KEY ( S_FORECASTS_PROJECT_REPORT_ID ) REFERENCES S_PROJECT_REPORT ( S_PROJECT_REPORT_ID ) NOT DEFERRABLE ;

ALTER TABLE S_METRIC ADD CONSTRAINT S_METRIC_D_METRIC_DEF_FK FOREIGN KEY ( D_METRIC_DEFINITION_ID ) REFERENCES D_METRIC_DEFINITION ( D_METRIC_DEFINITION_ID ) NOT DEFERRABLE ;

ALTER TABLE AMP_USER_AMP_ROLE ADD CONSTRAINT USER_ROLE_APP_USER_FK FOREIGN KEY ( USER_ID ) REFERENCES AMP_USER ( ID ) NOT DEFERRABLE ;

ALTER TABLE AMP_USER_AMP_ROLE ADD CONSTRAINT USER_ROLE_ROLE_FK FOREIGN KEY ( ROLE_ID ) REFERENCES AMP_ROLE ( ID ) NOT DEFERRABLE ;

CREATE OR REPLACE VIEW D_DATA_TYPE_SV  AS
SELECT D_DATA_TYPE.* FROM D_DATA_TYPE ;





CREATE OR REPLACE VIEW D_DIVISION_SV  AS
SELECT D_DIVISION.* FROM D_DIVISION ;





CREATE OR REPLACE VIEW D_GEOGRAPHY_MASTER_SV  AS
SELECT D_GEOGRAPHY_MASTER.* FROM D_GEOGRAPHY_MASTER ;





CREATE OR REPLACE VIEW D_METRIC_DEFINITION_SV  AS
SELECT D_METRIC_DEFINITION.* FROM D_METRIC_DEFINITION ;





CREATE OR REPLACE VIEW D_METRIC_PROJECT_SV  AS
SELECT D_METRIC_PROJECT.* FROM D_METRIC_PROJECT ;





CREATE OR REPLACE VIEW D_PROGRAM_SV  AS
SELECT D_PROGRAM.* FROM D_PROGRAM ;





CREATE OR REPLACE VIEW D_PROJECT_SV  AS
SELECT D_PROJECT.* FROM D_PROJECT ;





CREATE OR REPLACE VIEW D_REPORTING_PERIOD_SV  AS
SELECT D_REPORTING_PERIOD.* FROM D_REPORTING_PERIOD ;





CREATE OR REPLACE VIEW D_SEGMENT_SV  AS
SELECT D_SEGMENT.* FROM D_SEGMENT ;





CREATE OR REPLACE VIEW D_SLA_DEFINITION_SV  AS
SELECT D_SLA_DEFINITION.* FROM D_SLA_DEFINITION ;





CREATE OR REPLACE VIEW D_SLA_PROJECT_SV  AS
SELECT D_SLA_PROJECT.* FROM D_SLA_PROJECT ;





CREATE OR REPLACE VIEW F_METRIC_SV  AS
SELECT F_METRIC.* FROM F_METRIC ;





CREATE OR REPLACE VIEW F_SERVICE_LEVEL_AGREEMENT_SV  AS
SELECT F_SERVICE_LEVEL_AGREEMENT.* FROM F_SERVICE_LEVEL_AGREEMENT ;






-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            31
-- CREATE INDEX                            29
-- ALTER TABLE                             92
-- CREATE VIEW                             13
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         24
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ERRORS                                   0
-- WARNINGS                                 3
