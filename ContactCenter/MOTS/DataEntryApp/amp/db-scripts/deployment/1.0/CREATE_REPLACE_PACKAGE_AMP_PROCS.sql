
CREATE OR REPLACE PACKAGE AMP_PROCS AS
   PROCEDURE SP_MERGE_F_METRIC(projectReportId IN NUMBER);
END AMP_PROCS;
/


CREATE OR REPLACE PACKAGE BODY AMP_PROCS AS

  PROCEDURE SP_MERGE_F_METRIC ( projectReportId IN NUMBER ) AS
    s VARCHAR(4000);
  BEGIN
--  s := 'SELECT * FROM F_METRIC';
  MERGE INTO F_METRIC F USING (
  SELECT 
	  MP.D_METRIC_PROJECT_ID
	  ,APR.D_REPORTING_PERIOD_ID 
	  ,APR.APPROVED 
	  ,APR.APPROVED_DATE 
	  ,S.ACTUAL_VALUE 
	  ,S.ACTUAL_RECEIVED_DATE 
	  ,S.ACTUAL_TREND_INDICATOR 
	  ,S.ACTUAL_FORECAST_VARIANCE_FRMT 
	  ,S.FORECAST_VALUE 
	  ,S.FORECAST_RECEIVED_DATE 
	  ,S.COMMENTS 
	  ,S.FORECAST_COMMENTS 
	  ,S.CREATE_DATE 
	  ,S.CREATED_BY 
	  ,S.LAST_MODIFIED_DATE 
	  ,S.UPDATED_BY 
	  ,S.ACTUAL_VALUE_NOT_SUPPLIED 
	  ,S.FORECAST_VALUE_NOT_SUPPLIED 
  FROM
	S_METRIC S
	INNER JOIN S_PROJECT_REPORT APR ON S.S_ACTUALS_PROJECT_REPORT_ID = APR.S_PROJECT_REPORT_ID
	INNER JOIN D_METRIC_PROJECT MP ON S.D_METRIC_DEFINITION_ID = MP.D_METRIC_DEFINITION_ID
		AND APR.D_PROJECT_ID = MP.D_PROJECT_ID
		AND APR.D_PROGRAM_ID = MP.D_PROGRAM_ID
		AND APR.D_GEOGRAPHY_MASTER_ID = MP.D_GEOGRAPHY_MASTER_ID
  WHERE S.S_ACTUALS_PROJECT_REPORT_ID =  projectReportId 
  ) STG ON (
	  STG.D_METRIC_PROJECT_ID = F.D_METRIC_PROJECT_ID
	  AND STG.D_REPORTING_PERIOD_ID = F.D_REPORTING_PERIOD_ID
  )
  WHEN MATCHED THEN UPDATE SET 
	  F.APPROVED = STG.APPROVED
	  ,F.APPROVED_DATE = STG.APPROVED_DATE
	  ,F.ACTUAL_VALUE = STG.ACTUAL_VALUE                    
	  ,F.ACTUAL_RECEIVED_DATE = STG.ACTUAL_RECEIVED_DATE
	  ,F.ACTUAL_TREND_INDICATOR = STG.ACTUAL_TREND_INDICATOR
	  ,F.ACTUAL_FORECAST_VARIANCE_FRMT = STG.ACTUAL_FORECAST_VARIANCE_FRMT
	  ,F.FORECAST_VALUE = STG.FORECAST_VALUE
	  ,F.FORECAST_RECEIVED_DATE = STG.FORECAST_RECEIVED_DATE
	  ,F.COMMENTS = STG.COMMENTS
	  ,F.FORECAST_COMMENTS = STG.FORECAST_COMMENTS
	  ,F.CREATE_DATE = STG.CREATE_DATE
	  ,F.CREATED_BY = STG.CREATED_BY
	  ,F.LAST_MODIFIED_DATE = STG.LAST_MODIFIED_DATE
	  ,F.UPDATED_BY = STG.UPDATED_BY
	  ,F.ACTUAL_VALUE_NOT_SUPPLIED = STG.ACTUAL_VALUE_NOT_SUPPLIED
	  ,F.FORECAST_VALUE_NOT_SUPPLIED = STG.FORECAST_VALUE_NOT_SUPPLIED
  WHEN NOT MATCHED THEN INSERT (
	  F.D_METRIC_PROJECT_ID
	  ,F.D_REPORTING_PERIOD_ID
	  ,F.APPROVED 
	  ,F.APPROVED_DATE 
	  ,F.ACTUAL_VALUE 
	  ,F.ACTUAL_RECEIVED_DATE 
	  ,F.ACTUAL_TREND_INDICATOR 
	  ,F.ACTUAL_FORECAST_VARIANCE_FRMT 
	  ,F.FORECAST_VALUE 
	  ,F.FORECAST_RECEIVED_DATE 
	  ,F.COMMENTS 
	  ,F.FORECAST_COMMENTS 
	  ,F.CREATE_DATE 
	  ,F.CREATED_BY 
	  ,F.LAST_MODIFIED_DATE 
	  ,F.UPDATED_BY 
	  ,F.ACTUAL_VALUE_NOT_SUPPLIED 
	  ,F.FORECAST_VALUE_NOT_SUPPLIED 
  )
  VALUES (
	  STG.D_METRIC_PROJECT_ID
	  ,STG.D_REPORTING_PERIOD_ID
	  ,STG.APPROVED 
	  ,STG.APPROVED_DATE 
	  ,STG.ACTUAL_VALUE 
	  ,STG.ACTUAL_RECEIVED_DATE 
	  ,STG.ACTUAL_TREND_INDICATOR 
	  ,STG.ACTUAL_FORECAST_VARIANCE_FRMT 
	  ,STG.FORECAST_VALUE 
	  ,STG.FORECAST_RECEIVED_DATE 
	  ,STG.COMMENTS 
	  ,STG.FORECAST_COMMENTS 
	  ,STG.CREATE_DATE 
	  ,STG.CREATED_BY 
	  ,STG.LAST_MODIFIED_DATE 
	  ,STG.UPDATED_BY 
	  ,STG.ACTUAL_VALUE_NOT_SUPPLIED 
	  ,STG.FORECAST_VALUE_NOT_SUPPLIED 
  );
  
  END SP_MERGE_F_METRIC;

END AMP_PROCS;
/

