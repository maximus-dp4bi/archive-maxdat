<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

<!--     <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> -->
<!--         <property name="ignoreUnresolvablePlaceholders" value="true"/> -->
<!--         <property name="locations"> -->
<!--             <list> -->
<!--                 <value>classpath:jdbc.properties</value> -->
<!--                 <value>classpath:mail.properties</value> -->
<!--                 <value>classpath:hibernate.properties</value> -->
<!--             </list> -->
<!--         </property> -->
<!--     </bean> -->

	<!--                                                                      -->
	<!-- Configuration for encryptor, based on environment variables.         -->
	<!--                                                                      -->
	<!-- In this example, the encryption password will be read from an        -->
	<!-- environment variable called "APP_ENCRYPTION_PASSWORD" which, once    --> 
	<!-- the application has been started, could be safely unset.             -->
	<!--                                                                      -->
	<bean id="environmentVariablesConfiguration" class="org.jasypt.encryption.pbe.config.EnvironmentStringPBEConfig">
	  <property name="algorithm" value="PBEWithMD5AndDES" />
	  <property name="passwordEnvName" value="APP_ENCRYPTION_PASSWORD" />
	</bean>
	 
	 
	<!--                                                                      -->
	<!-- The will be the encryptor used for decrypting configuration values.  -->
	<!--                                                                      -->
	<bean id="configurationEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
	  <property name="config" ref="environmentVariablesConfiguration" />
	</bean>
	
	
	<!--                                                                      -->
	<!-- The EncryptablePropertyPlaceholderConfigurer will read the           -->
	<!-- .properties files and make their values accessible as ${var}         -->
	<!--                                                                      -->
	<!-- Our "configurationEncryptor" bean (which implements                  --> 
	<!-- org.jasypt.encryption.StringEncryptor) is set as a constructor arg.  -->
	<!--                                                                      -->
	<bean id="propertyConfigurer" class="org.jasypt.spring31.properties.EncryptablePropertyPlaceholderConfigurer" >
	  <constructor-arg ref="configurationEncryptor" />
<!--         <property name="ignoreUnresolvablePlaceholders" value="true"/> -->
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
                <value>classpath:mail.properties</value>
                <value>classpath:hibernate.properties</value>
                <value>classpath:ldap.properties</value>
            </list>
        </property>
	  
	</bean>


    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" depends-on="propertyConfigurer">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

</beans>
