<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
       default-lazy-init="true">

    <bean class="org.springframework.orm.hibernate4.HibernateExceptionTranslator"/>
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" destroy-method="destroy">
        <!-- Refer to Interceptor Here -->
    	<property name="entityInterceptor">
        	<ref bean="propertyChangeInterceptor"/>
    	</property>
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:hibernate.cfg.xml"/>
        <property name="packagesToScan" value="com.maximus.amp.model" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.query.substitutions">true 'Y', false 'N'</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                <!-- Hibernate Search index directory -->
                <prop key="hibernate.search.default.indexBase">${app.search.index.basedir}</prop>
<!--                 <prop key="hibernate.show_sql">true</prop> -->
<!-- 			    <prop key="hibernate.format_sql">true</prop> -->
<!-- 			    <prop key="hibernate.use_sql_comments">true</prop> -->
            </props>
            <!-- Turn batching off for better error messages under PostgreSQL -->
            <!-- hibernate.jdbc.batch_size=0 -->
        </property>
    </bean>

    <bean id="propertyChangeInterceptor" class="com.maximus.amp.dao.hibernate.interceptor.PropertyChangeInterceptor" />

    <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- Activates scanning of @Autowired -->
    <context:annotation-config/>

    <!-- Activates scanning of @Repository -->
    <context:component-scan base-package="com.maximus.amp.dao"/>
    
	<!-- amp-webapp daos -->

	<bean id="divisionDao" class="com.maximus.amp.dao.hibernate.GenericDaoHibernate">
        <constructor-arg value="com.maximus.amp.model.Division"/>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
	
	<bean id="metricDefinitionDao" class="com.maximus.amp.dao.hibernate.GenericDaoHibernate">
        <constructor-arg value="com.maximus.amp.model.MetricDefinition"/>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

	<bean id="reportingPeriodDao" class="com.maximus.amp.dao.hibernate.GenericDaoHibernate">
        <constructor-arg value="com.maximus.amp.model.ReportingPeriod"/>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

	<bean id="metricProjectDao" class="com.maximus.amp.dao.hibernate.GenericDaoHibernate">
        <constructor-arg value="com.maximus.amp.model.MetricProject"/>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
	<bean id="metricDao" class="com.maximus.amp.dao.hibernate.GenericDaoHibernate">
        <constructor-arg value="com.maximus.amp.model.Metric"/>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
	<bean id="projectDao" class="com.maximus.amp.dao.hibernate.GenericDaoHibernate">
        <constructor-arg value="com.maximus.amp.model.Project"/>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    

</beans>
