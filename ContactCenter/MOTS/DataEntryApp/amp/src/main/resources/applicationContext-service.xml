<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"
       default-lazy-init="true">

    <!-- =================================================================== -->
    <!-- AOP: Configuration and Aspects                                      -->
    <!-- =================================================================== -->
    <aop:config>
        <aop:advisor id="userManagerTx" advice-ref="userManagerTxAdvice" pointcut="execution(* *..service.UserManager.*(..))" order="0"/>
        <aop:advisor id="userManagerSecurity" advice-ref="userSecurityAdvice" pointcut="execution(* *..service.UserManager.saveUser(..))" order="1"/>
        <aop:advisor id="managerTx" advice-ref="txAdvice" pointcut="execution(* *..service.*Manager.*(..))" order="2"/>
    </aop:config>

    <!-- Enable @Transactional support -->
    <tx:annotation-driven/>

    <!-- Enable @AspectJ support -->
    <aop:aspectj-autoproxy/>

    <!-- Activates scanning of @Autowired -->
    <context:annotation-config/>

    <!-- Activates scanning of @Service -->
    <context:component-scan base-package="com.maximus.amp.service"/>

    <tx:advice id="txAdvice">
        <tx:attributes>
            <!-- Read-only commented out to make things easier for end-users -->
            <!-- http://issues.appfuse.org/browse/APF-556 -->
            <!--tx:method name="get*" read-only="true"/-->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <tx:advice id="userManagerTxAdvice">
        <tx:attributes>
            <tx:method name="save*" rollback-for="UserExistsException"/>
        </tx:attributes>
    </tx:advice>

    <bean id="userSecurityAdvice" class="com.maximus.amp.service.UserSecurityAdvice"/>
    
    <bean id="projectReportUserPermission" class="com.maximus.amp.webapp.security.ProjectReportUserPermission" />
    <bean id="projectReportApproverPermission" class="com.maximus.amp.webapp.security.ProjectReportApproverPermission" />
    
    
	<bean id="ampPermissionEvaluator" class="com.maximus.amp.webapp.security.AmpPermissionEvaluator">
		<constructor-arg index="0">
            <map key-type="java.lang.String" value-type="com.maximus.amp.webapp.security.Permission">
                <entry key="isProjectReportUser" value-ref="projectReportUserPermission"/>
                <entry key="isProjectReportApprover" value-ref="projectReportApproverPermission"/>
            </map>
        </constructor-arg>
	</bean>

	<bean id="expressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
	     <property name="permissionEvaluator" ref="ampPermissionEvaluator" />
	</bean>

    <!-- =================================================================== -->
    <!-- Mail: Sender and Velocity configuration                             -->
    <!-- =================================================================== -->
    <bean id="mailEngine" class="com.maximus.amp.service.MailEngine">
        <property name="mailSender" ref="mailSender"/>
        <property name="velocityEngine" ref="velocityEngine"/>
        <property name="from" value="${mail.default.from}"/>
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${mail.host}"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <!-- Uncomment if you need to authenticate with your SMTP Server -->
        <!--property name="username" value="${mail.username}"/>
        <property name="password" value="${mail.password}"/>
        <property name="javaMailProperties">
            <value>
                mail.smtp.auth=true
            </value>
        </property-->
    </bean>

    <!-- Configure Velocity for sending e-mail -->
    <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
        <property name="velocityProperties">
            <props>
                <prop key="resource.loader">class</prop>
                <prop key="class.resource.loader.class">
                    org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
                </prop>
                <prop key="velocimacro.library"></prop>
            </props>
        </property>
    </bean>

    <bean id="mailMessage" class="org.springframework.mail.SimpleMailMessage" scope="prototype">
        <property name="from" value="${mail.default.from}"/>
    </bean>

    <!-- =================================================================== -->
    <!-- Security class from Spring Security - used to configure Password    -->
    <!-- Encryption in UserManagerImpl. Can override in security.xml.        -->
    <!-- =================================================================== -->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!-- Password reset token encoder -->
    <bean id="passwordTokenEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder"/>
    
    <!-- amp-webapp services -->

	<bean id="comparisonMetricManager" class="com.maximus.amp.service.impl.GenericManagerImpl">
	    <constructor-arg>
	        <bean class="com.maximus.amp.dao.hibernate.GenericDaoHibernate">
	            <constructor-arg value="com.maximus.amp.model.ComparisonMetric"/>
	            <property name="sessionFactory" ref="sessionFactory"/>
	        </bean>
	    </constructor-arg>
	</bean>
    
	<bean id="metricDefinitionManager" class="com.maximus.amp.service.impl.MetricDefinitionManagerImpl">
	    <constructor-arg>
	        <bean class="com.maximus.amp.dao.hibernate.MetricDefinitionDaoHibernate" />
	    </constructor-arg>
	</bean>

	<bean id="metricProjectManager" class="com.maximus.amp.service.impl.GenericManagerImpl">
	    <constructor-arg>
	        <bean class="com.maximus.amp.dao.hibernate.GenericDaoHibernate">
	            <constructor-arg value="com.maximus.amp.model.MetricProject"/>
	            <property name="sessionFactory" ref="sessionFactory"/>
	        </bean>
	    </constructor-arg>
	</bean>


	<bean id="projectUserManager" class="com.maximus.amp.service.impl.GenericManagerImpl">
	    <constructor-arg>
	        <bean class="com.maximus.amp.dao.hibernate.GenericDaoHibernate">
	            <constructor-arg value="com.maximus.amp.model.ProjectUser"/>
	            <property name="sessionFactory" ref="sessionFactory"/>
	        </bean>
	    </constructor-arg>
	</bean>

	
	<bean id="metricValidationRuleManager" class="com.maximus.amp.service.impl.GenericManagerImpl">
	    <constructor-arg>
	        <bean class="com.maximus.amp.dao.hibernate.GenericDaoHibernate">
	            <constructor-arg value="com.maximus.amp.model.MetricValidationRule"/>
	            <property name="sessionFactory" ref="sessionFactory"/>
	        </bean>
	    </constructor-arg>
	</bean>
	
	<bean id="projectManager" class="com.maximus.amp.service.impl.GenericManagerImpl">
	    <constructor-arg>
	        <bean class="com.maximus.amp.dao.hibernate.GenericDaoHibernate">
	            <constructor-arg value="com.maximus.amp.model.Project"/>
	            <property name="sessionFactory" ref="sessionFactory"/>
	        </bean>
	    </constructor-arg>
	</bean>

	<bean id="programManager" class="com.maximus.amp.service.impl.GenericManagerImpl">
	    <constructor-arg>
	        <bean class="com.maximus.amp.dao.hibernate.GenericDaoHibernate">
	            <constructor-arg value="com.maximus.amp.model.Program"/>
	            <property name="sessionFactory" ref="sessionFactory"/>
	        </bean>
	    </constructor-arg>
	</bean>
	
	<bean id="geographyManager" class="com.maximus.amp.service.impl.GenericManagerImpl">
	    <constructor-arg>
	        <bean class="com.maximus.amp.dao.hibernate.GenericDaoHibernate">
	            <constructor-arg value="com.maximus.amp.model.GeographyMaster"/>
	            <property name="sessionFactory" ref="sessionFactory"/>
	        </bean>
	    </constructor-arg>
	</bean>
	
	<bean id="projectReportManager" class="com.maximus.amp.service.impl.ProjectReportManagerImpl">
	    <constructor-arg>
	        <bean class="com.maximus.amp.dao.hibernate.ProjectReportDaoHibernate">
	            <property name="sessionFactory" ref="sessionFactory"/>
	        </bean>
	    </constructor-arg>
	    <property name="lookupManager" ref="lookupManager" />
	    <property name="userDao" ref="userDao" />
	    <property name="metricDao" ref="metricDao" />
	    <property name="metricProjectDao" ref="metricProjectDao" />
	    <property name="reportingPeriodDao" ref="reportingPeriodDao" />
	</bean>

</beans>
