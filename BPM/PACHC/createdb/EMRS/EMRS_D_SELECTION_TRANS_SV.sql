CREATE OR REPLACE VIEW EMRS_D_SELECTION_TRANS_SV AS
  SELECT
    COALESCE(st.SELECTION_TXN_ID,ss.SELECTION_SEGMENT_ID*-1)  AS SELECTION_TRANSACTION_ID,
    COALESCE(st.SELECTION_TXN_ID,ss.SELECTION_SEGMENT_ID*-1)  AS SOURCE_RECORD_ID,
    COALESCE(ss.SELECTION_SEGMENT_ID, st.SELECTION_TXN_ID*-1)  AS SELECTION_SEGMENT_ID,
    COALESCE(ss.CLIENT_ID, st.CLIENT_ID) AS CLIENT_ID,      
    (SELECT
      CASE
        WHEN (COUNT(*)-1) < 0
        THEN 0
        ELSE COUNT(*)-1
      END
      FROM maxdat_support.d_dates
      WHERE business_day_flag = 'Y' AND d_date BETWEEN TRUNC(COALESCE(ss.create_ts,st.create_ts)) AND TRUNC(COALESCE(ss.status_date,st.status_date))
    ) AS AGE_IN_BUSINESS_DAYS,      
    COALESCE(st.CLIENT_AID_CATEGORY_CD, ss.CLIENT_AID_CATEGORY_CD,  '0' ) AS AID_CATEGORY_CODE,
    COALESCE(st.BENEFITS_PACKAGE_CD, '0') AS BENEFITS_PACKAGE_CD,
    COALESCE(st.DISENROLL_REASON_CD_1, '0') AS CHANGE_REASON_CODE,
    COALESCE(st.CHOICE_REASON_CD, ss.CHOICE_REASON_CD, '0') AS CHOICE_REASON_CD,
    COALESCE(st.CLIENT_AID_CATEGORY_CD, ss.CLIENT_AID_CATEGORY_CD,  '0' ) AS CLIENT_AID_CATEGORY_CD,
    COALESCE(st.CLIENT_RESIDENCE_ADDRESS_ID, 0) AS CLIENT_RESIDENCE_ADDRESS_ID,
    st.CONTRACT_ID AS CONTRACT_ID,
    COALESCE(st.COUNTY, ss.COUNTY_CD) AS COUNTY_CODE,
    NULL AS CSDA_CODE,
    NULL AS CURRENT_SELECTION_STATUS_ID,
    NULL AS CUSTOM_FIELD1,
    NULL AS CUSTOM_FIELD2,
    NULL AS CUSTOM_FIELD3,
    NULL AS CUSTOM_FIELD4,
    NULL AS CUSTOM_FIELD5,
    COALESCE(st.DISENROLL_REASON_CD_2, ss.DISENROLL_REASON_CD_2) AS DISENROLL_REASON_CD_2,
    st.FOLLOWUP_BY AS FOLLOWUP_BY,
    st.FOLLOWUP_CALL_DATE AS FOLLOWUP_CALL_DATE,
    st.FOLLOWUP_FORM_RCV_DATE AS FOLLOWUP_FORM_RCV_DATE,
    st.FOLLOWUP_REASON_CD AS FOLLOWUP_REASON_CD,
    (SELECT
      CASE
        WHEN (COUNT(*)-1) < 0
        THEN 0
        ELSE COUNT(*)-1
      END
    FROM maxdat_support.d_dates
    WHERE business_day_flag = 'Y' AND d_date BETWEEN TRUNC(st.create_ts) AND COALESCE(
      (SELECT MIN(TRUNC(sh.create_ts))
      FROM selection_txn_status_history sh
      WHERE sh.selection_txn_id = st.selection_txn_id AND sh.status_cd = 'readyToUpload'
      ),TRUNC(st.status_date))
    ) AS HISTORY_AGE_IN_BUSINESS_DAYS,
    st.MISSING_INFO_ID AS MISSING_INFO_ID,
    st.MISSING_SIGNATURE_IND AS MISSING_SIGNATURE_IND,
    st.NETWORK_ID AS NETWORK_ID,
    COALESCE(st.NETWORK_ID, ss.NETWORK_ID, 0) AS PROVIDER_NUMBER,
    NULL AS NEWBORN_FLAG,
    st.ORIGINAL_END_DATE AS ORIGINAL_END_DATE,
    st.ORIGINAL_START_DATE AS ORIGINAL_START_DATE,
    st.OUTREACH_SESSION_ID AS OUTREACH_SESSION_ID,
    COALESCE(st.OVERRIDE_REASON_CD, '0') AS OVERRIDE_REASON_CD,
    COALESCE(st.PLAN_ID, ss.PLAN_ID) AS PLAN_ID,
    COALESCE(st.PLAN_ID_EXT, ss.PLAN_ID_EXT, '0') AS PLAN_ID_EXT,
    COALESCE(st.PLAN_TYPE_CD, ss.PLAN_TYPE_CD, '0') AS PLAN_TYPE,
    COALESCE(st.PRIOR_CHOICE_REASON_CD, '0') AS PRIOR_CHOICE_REASON_CD,
    COALESCE(st.PRIOR_CLIENT_AID_CATEGORY_CD, '0') AS PRIOR_CLIENT_AID_CATEGORY_CD,
    st.PRIOR_CONTRACT_ID AS PRIOR_CONTRACT_ID,
    COALESCE(st.PRIOR_COUNTY_CD, '0') AS PRIOR_COUNTY_CD,
    st.PRIOR_DISENROLL_REASON_CD_1 AS PRIOR_DISENROLL_REASON_CD_1,
    st.PRIOR_DISENROLL_REASON_CD_2 AS PRIOR_DISENROLL_REASON_CD_2,
    st.PRIOR_NETWORK_ID AS PRIOR_NETWORK_ID,
    COALESCE(st.PRIOR_PLAN_ID, 0) AS PRIOR_PLAN_ID,
    st.PRIOR_PLAN_ID_EXT AS PRIOR_PLAN_ID_EXT,
    st.PRIOR_PROVIDER_FIRST_NAME AS PRIOR_PROVIDER_FIRST_NAME,
    st.PRIOR_PROVIDER_ID AS PRIOR_PROVIDER_ID,
    st.PRIOR_PROVIDER_ID_EXT AS PRIOR_PROVIDER_ID_EXT,
    st.PRIOR_PROVIDER_LAST_NAME AS PRIOR_PROVIDER_LAST_NAME,
    st.PRIOR_PROVIDER_MIDDLE_NAME AS PRIOR_PROVIDER_MIDDLE_NAME,
    st.PRIOR_SELECTION_END_DATE AS PRIOR_SELECTION_END_DATE,
    st.PRIOR_SELECTION_SEGMENT_ID AS PRIOR_SELECTION_SEGMENT_ID,
    st.PRIOR_SELECTION_START_DATE AS PRIOR_SELECTION_START_DATE,
    st.PRIOR_ZIPCODE AS PRIOR_ZIPCODE,
    COALESCE(st.PROGRAM_TYPE_CD, '0') AS PROGRAM_CODE,
    COALESCE(st.PROGRAM_TYPE_CD,'0') AS PROGRAM_TYPE_CD,
    st.PROVIDER_FIRST_NAME AS PROVIDER_FIRST_NAME,
    st.PROVIDER_ID AS PROVIDER_ID,
    st.PROVIDER_ID_EXT AS PROVIDER_ID_EXT,
    CASE WHEN st.PROVIDER_ID_EXT IS NULL THEN 'N'
          ELSE 'Y'
    END AS PCP_SELECTED,
    st.PROVIDER_LAST_NAME AS PROVIDER_LAST_NAME,
    st.PROVIDER_MIDDLE_NAME AS PROVIDER_MIDDLE_NAME,
    st.REF_EXT_TXN_ID AS REF_EXT_TXN_ID,
    st.REF_SELECTION_TXN_ID AS REF_SELECTION_TXN_ID,
    st.REF_SOURCE_ID AS REF_SOURCE_ID,
    st.REF_SOURCE_TYPE AS REF_SOURCE_TYPE,
    st.SELECTION_GENERIC_FIELD1_DATE AS SELECTION_GENERIC_FIELD1_DATE,
    st.SELECTION_GENERIC_FIELD10_TXT AS SELECTION_GENERIC_FIELD10_TXT,
    st.SELECTION_GENERIC_FIELD2_DATE AS SELECTION_GENERIC_FIELD2_DATE,
    st.SELECTION_GENERIC_FIELD3_NUM AS SELECTION_GENERIC_FIELD3_NUM,
    st.SELECTION_GENERIC_FIELD4_NUM AS SELECTION_GENERIC_FIELD4_NUM,
    st.SELECTION_GENERIC_FIELD5_TXT AS SELECTION_GENERIC_FIELD5_TXT,
    st.SELECTION_GENERIC_FIELD6_TXT AS SELECTION_GENERIC_FIELD6_TXT,
    st.SELECTION_GENERIC_FIELD7_TXT AS SELECTION_GENERIC_FIELD7_TXT,
    st.SELECTION_GENERIC_FIELD8_TXT AS SELECTION_GENERIC_FIELD8_TXT,
    st.SELECTION_GENERIC_FIELD9_TXT AS SELECTION_GENERIC_FIELD9_TXT,
    COALESCE(st.CHOICE_REASON_CD, ss.CHOICE_REASON_CD, '0') AS SELECTION_REASON_CODE,
    COALESCE(st.SELECTION_SOURCE_CD, 'A') AS SELECTION_SOURCE_CD,
    st.STATUS_CD AS SELECTION_STATUS_CODE,
    st.SELECTION_TXN_GROUP_ID AS SELECTION_TXN_GROUP_ID,
    st.START_DATE AS START_DATE,
    st.END_DATE AS END_DATE,
    COALESCE(ss.START_ND,st.START_ND) AS START_ND,
    COALESCE(ss.END_ND,st.END_ND) AS END_ND,
    COALESCE(st.STATUS_CD, ss.STATUS_CD, '0') AS STATUS_CD,
    COALESCE(st.STATUS_DATE, ss.STATUS_DATE) AS STATUS_DATE,
--    COALESCE(st.CLIENT_AID_CATEGORY_CD, ss.CLIENT_AID_CATEGORY_CD, '0') AS SUBPROGRAM_CODE, --on Aid Category, this field is not used
    st.SURPLUS_INFO AS SURPLUS_INFO,
    COALESCE(st.TRANSACTION_TYPE_CD, 'NotDefined') AS TRANSACTION_TYPE_CD,
    COALESCE(st.ZIPCODE, ss.ZIPCODE, '0') AS ZIP_CODE,
    st.CREATE_TS AS RECORD_DATE,
    st.CREATED_BY AS RECORD_NAME,
    st.CREATE_TS AS RECORD_TIME,
    st.UPDATE_TS AS MODIFIED_DATE,
    st.UPDATED_BY AS MODIFIED_NAME,
    st.UPDATE_TS AS MODIFIED_TIME
  FROM ats.selection_segment ss 
  LEFT JOIN ats.selection_txn st on (st.client_id = ss.client_id and st.selection_segment_id = ss.selection_segment_id)
  WHERE (COALESCE(ss.start_nd, st.start_nd) >= to_number(to_char(ADD_MONTHS(TRUNC(sysdate, 'mm'), -3), 'yyyymmdd')) and COALESCE(ss.end_nd, st.end_nd) > COALESCE(ss.start_nd, st.start_nd) );
  
GRANT SELECT ON maxdat_support.EMRS_D_SELECTION_TRANS_SV TO MAXDAT_REPORTS;