drop view EMRS_D_CALL_RECORD_SV;
CREATE OR REPLACE VIEW EMRS_D_CALL_RECORD_SV AS
SELECT 
CA.CALL_DATE
, CA.CALL_TYPE_CD
, CA.call_type
, CA.CALLER_TYPE_CD
, CA.caller_type
, CA.CALL_ACTION
, CA.CALLER_PHONE
, CA.ext_telephony_ref
, CA.caller_first_name
, CA.caller_last_name
, CA.parent_call_record_id
, CA.CREATE_TS
, CA.UPDATE_TS
, CA.created_by
, CA.updated_by
, CA.note_ref_id
, CA.CALL_sTART_TS
, CA.CALL_END_TS
, CA.RECORD_NAME
, CA.CALL_RECORD_ID
, CA.EVENT_ID
, CA.EVENT_TYPE_CD
, CA.CONTEXT
, CA.SELECTION_TXN_ID
, CA.SELECTION_SEGMENT_ID
, CA.WORKER_ID
, CA.WORKER_USERNAME
, CA.CASE_ID
, CA.CLIENT_ID
, CA.TRANSACTION_TYPE_CD
, CA.PLAN_ID PLAN_ID
, CA.PLAN_ID_EXT PLAN_ID_EXT
, CA.CONTRACT_ID
, CA.PROVIDER_ID
, CA.PROVIDER_ID_EXT
, CA.TO_PLAN_ID
, CA.TO_PLAN_ID_EXT
, CA.TO_CONTRACT_ID
, CA.TO_PROVIDER_ID
, CA.TO_PROVIDER_ID_EXT
, COALESCE(CON.PLAN_SERVICE_TYPE_CD,CA.PLAN_SERVICE_TYPE_CD) PLAN_sERVICE_TYPE_CD
, CA.SELECTION_START_DATE
, CA.SELECTION_END_DATE
, CA.DISENROLL_REASON_CD_1
, CA.DISENROLL_REASON_CD_2
, CA.SELECTION_SOURCE_CD
, CA.CHOICE_REASON_CD
, CA.ERROR_CODE
, CA.ACCEPTED_DATE
, CA.CALL_REASON_TYPE_CD
, CA.CHAT_REASON_CD
, CA.FIRST_CALL_RESOLUTION
, CA.REFERRAL_TO
, CA.REFERRAL_REASON
, CA.LANGUAGE_CD CALL_LANGUAGE_CD
, CA.MANAGED_CARE_STATUS
, CA.MEDCHAT_ID
, ROW_NUMBER() OVER(PARTITION BY CA.CALL_RECORD_ID ORDER BY CA.EVENT_ID desc) CALL_EVENT_ORDER
FROM
(
SELECT 
CR.CALL_RECORD_ID
, CR.CALL_TYPE_CD
, ct.report_label call_type 
, CR.CALLER_TYPE_CD
, crt.report_label caller_type 
, CASE WHEN E2.EVENT_ID IS NULL THEN E.CONTEXT ELSE E2.CONTEXT END CALL_ACTION
, CR.WORKER_ID
, CR.WORKER_USERNAME
, CR.LANGUAGE_CD
-- below is until https://jira.maximus.com/browse/NCEB-1574 is fixed by baseline. Medchat to EB, the Call_start_ts is UTC, need to change to Eastern
, CASE WHEN CR.CALL_TYPE_CD = 'WEBCHAT' and CR.MEDCHAT_ID is not NULL THEN (cast(FROM_TZ(cast( CR.CALL_sTART_TS AS TIMESTAMP),'UTC') AT TIME ZONE 'US/EASTERN' as date)) ELSE (CR.CALL_START_TS) END CALL_START_TS
, CASE WHEN CR.CALL_TYPE_CD = 'WEBCHAT' and CR.MEDCHAT_ID is not NULL THEN (cast(FROM_TZ(cast( CR.CALL_END_TS AS TIMESTAMP),'UTC') AT TIME ZONE 'US/EASTERN' as date)) ELSE TRUNC(CR.CALL_END_TS) END CALL_END_TS
, CASE WHEN CR.CALL_TYPE_CD = 'WEBCHAT' and CR.MEDCHAT_ID is not NULL THEN TRUNC(cast(FROM_TZ(cast( CR.CALL_sTART_TS AS TIMESTAMP),'UTC') AT TIME ZONE 'US/EASTERN' as date)) ELSE TRUNC(CR.CALL_START_TS) END CALL_DATE
--, CR.CALL_START_TS
--, CR.CALL_END_TS
--, TRUNC(CR.CALL_START_TS) CALL_DATE
, CR.CALLER_PHONE
, cr.ext_telephony_ref 
, cr.caller_first_name 
, cr.caller_last_name
, cr.parent_call_record_id
, CR.CREATE_TS
, CR.UPDATE_TS
, cr.created_by 
, cr.updated_by
, null note_ref_id
, CRL.CASE_ID
, CRL.EXT_CASE_NUM
, CRL.CLIENT_ID
, CRL.EXT_CLIENT_NUM
, CRL.CLIENT_LAST_NAME
, CRL.CLIENT_FIRST_NAME
, CRL.CLIENT_MI
, CASE WHEN E2.EVENT_ID IS NULL THEN E.EVENT_ID ELSE E2.EVENT_ID END EVENT_ID
, CASE WHEN E2.EVENT_ID IS NULL THEN E.EVENT_TYPE_CD ELSE E2.EVENT_TYPE_CD END EVENT_TYPE_CD
, CASE WHEN E2.EVENT_ID IS NULL THEN E.CONTEXT ELSE E2.CONTEXT END CONTEXT
, CASE WHEN E2.EVENT_ID IS NULL THEN E.COMMENTS ELSE E2.COMMENTS END COMMENTS
, CASE WHEN E2.EVENT_ID IS NULL THEN E.CREATE_TS ELSE E2.CREATE_TS END EVENT_CREATE_TS
, CASE WHEN E2.EVENT_ID IS NULL THEN E.REF_TYPE ELSE E2.REF_TYPE END EVENT_REF_TYPE
, CASE WHEN E2.EVENT_ID IS NULL THEN E.REF_ID ELSE E2.REF_ID END EVENT_REF_ID
, CR.CREATED_BY RECORD_NAME
, COALESCE(CASE WHEN ST.TRANSACTION_TYPE_CD IN ('NewEnrollment') then ST.SELECTION_SEGMENT_ID ELSE ST.PRIOR_SELECTION_SEGMENT_ID END, SELC.SELECTION_SEGMENT_ID) SELECTION_SEGMENT_ID
, ST.PRIOR_SELECTION_SEGMENT_ID SELP_SELECTION_SEGMENT_ID
, SELC.SELECTION_SEGMENT_ID SELC_SELECTION_SEGMENT_ID
, COALESCE(CASE WHEN ST.TRANSACTION_TYPE_CD IN ('NewEnrollment') then ST.START_DATE ELSE ST.PRIOR_SELECTION_START_DATE END, SELC.START_DATE) SELECTION_START_DATE
, COALESCE(CASE WHEN ST.TRANSACTION_TYPE_CD IN ('NewEnrollment') then ST.END_DATE ELSE ST.PRIOR_SELECTION_END_DATE END, SELC.END_DATE) SELECTION_END_DATE
, ST.SELECTION_TXN_ID
, ST.TRANSACTION_TYPE_CD
, ST.SELECTION_SOURCE_CD
, COALESCE(CASE WHEN ST.TRANSACTION_TYPE_CD IN ('NewEnrollment') then ST.CONTRACT_ID else ST.PRIOR_CONTRACT_ID END, SELC.CONTRACT_ID) CONTRACT_ID
, COALESCE(CASE WHEN ST.TRANSACTION_TYPE_CD IN ('NewEnrollment') then ST.PLAN_ID ELSE ST.PRIOR_PLAN_ID END, SELC.PLAN_ID) PLAN_ID
, COALESCE(CASE WHEN ST.TRANSACTION_TYPE_CD IN ('NewEnrollment') then ST.PLAN_ID_EXT ELSE ST.PRIOR_PLAN_ID_EXT END, SELC.PLAN_ID_EXT) PLAN_ID_EXT
, CASE WHEN ST.TRANSACTION_TYPE_CD IN ('NewEnrollment') then ST.PROVIDER_ID else ST.PRIOR_PROVIDER_ID END PROVIDER_ID
, COALESCE(CASE WHEN ST.TRANSACTION_TYPE_CD IN ('NewEnrollment') then ST.PROVIDER_ID_EXT ELSE ST.PRIOR_PROVIDER_ID_EXT END, SELC.PROVIDER_ID_EXT) PROVIDER_ID_EXT
, CASE WHEN ST.TRANSACTION_TYPE_CD IN ('Transfer') then ST.PLAN_ID else null end TO_PLAN_ID
, CASE WHEN ST.TRANSACTION_TYPE_CD IN ('Transfer') then ST.PLAN_ID_EXT else null end TO_PLAN_ID_EXT
, CASE WHEN ST.TRANSACTION_TYPE_CD IN ('Transfer') then ST.CONTRACT_ID else null end TO_CONTRACT_ID
, CASE WHEN ST.TRANSACTION_TYPE_CD IN ('Transfer') then ST.PROVIDER_ID else null end TO_PROVIDER_ID
, CASE WHEN ST.TRANSACTION_TYPE_CD IN ('Transfer') then ST.PROVIDER_ID_EXT else null end TO_PROVIDER_ID_EXT
, ST.PRIOR_PROVIDER_ID TO_
, EAID.SUBPROGRAM_CODES PLAN_SERVICE_TYPE_CD
, SMID.ERROR_CODE 
, ST.CHOICE_REASON_CD
, ST.DISENROLL_REASON_CD_1
, ST.DISENROLL_REASON_CD_2
, CSCL.CSCL_CLNT_CLIENT_ID
, (SELECT MAX(TRUNC(sh.create_ts))
      FROM EB.selection_txn_status_history sh
      WHERE sh.selection_txn_id = st.selection_txn_id AND sh.status_cd = 'acceptedByState'
      ) ACCEPTED_DATE
, UPPER(CRSN.VALUE) CALL_REASON_TYPE_CD
, UPPER(CHRSN.VALUE) CHAT_REASON_CD
, CASE WHEN UPPER(CR.CALL_RECORD_FIELD1) = 'TRUE' THEN 1 ELSE 0 END FIRST_CALL_RESOLUTION
, CASE WHEN E2.EVENT_ID IS NULL THEN CASE WHEN UPPER(E.CONTEXT) LIKE '%REFER%' THEN TRIM(substr(REFF.report_label,instr(REFF.REPORT_LABEL,'- ')+1)) ELSE NULL END 
       ELSE CASE WHEN UPPER(E2.CONTEXT) LIKE '%REFER%' THEN TRIM(substr(REFF2.REPORT_LABEL,instr(REFF2.REPORT_LABEL,'- ')+1)) ELSE NULL END
       END referral_reason
, CASE WHEN E2.EVENT_ID IS NULL THEN 
  CASE WHEN upper(E.CONTEXT) LIKE 'REFER%STATE%' THEN 'To State-Operated Call Centers'
            when upper(E.CONTEXT) like 'REFER%PHP%' then 'To PHP'
            when upper(E.CONTEXT) like 'REFER%HEALTH%' then 'To PHP'
            when upper(E.CONTEXT) like 'REFER%OMBUD%' then 'To Ombudsman'
            when upper(E.CONTEXT) like 'REFER%DSS%' THEN 'To County DSS and PHHS Offices'
            else NULL
            end
  ELSE 
  CASE WHEN upper(E2.CONTEXT) LIKE 'REFER%STATE%' THEN 'To State-Operated Call Centers'
            when upper(E2.CONTEXT) like 'REFER%PHP%' then 'To PHP'
            when upper(E2.CONTEXT) like 'REFER%HEALTH%' then 'To PHP'
            when upper(E2.CONTEXT) like 'REFER%OMBUD%' then 'To Ombudsman'
            when upper(E2.CONTEXT) like 'REFER%DSS%' THEN 'To County DSS and PHHS Offices'
            else NULL
            end 
  END
  REFERRAL_TO
  , ELIG.SEGMENT_DETAIL_VALUE_2 MANAGED_CARE_STATUS
, ROW_NUMBER() OVER(PARTITION BY CR.CALL_RECORD_ID, NVL(E2.EVENT_ID,E.EVENT_ID) ORDER BY ABS(SELC.CLIENT_ID - CRL.CLIENT_ID), (SELC.CREATE_TS - CR.CALL_START_TS), ELIG.CREATE_TS DESC) ROWN
, MEDCHAT_ID
FROM EB.CALL_RECORD CR
JOIN EB.enum_call_type ct                     ON (cr.call_type_cd = ct.value)
--JOIN EB.ENUM_LANGUAGE LANG ON LANG.VALUE = CR.LANGUAGE_CD
LEFT JOIN EB.ENUM_CALL_REASONS CRSN ON UPPER(CRSN.VALUE) = UPPER(CR.CALL_RECORD_FIELD2)
LEFT JOIN EB.ENUM_MEDCHAT_TOPIC CHRSN ON UPPER(CHRSN.VALUE)=UPPER(CR.MEDCHAT_TOPIC)
LEFT JOIN EB.enum_caller_type crt       ON (cr.caller_type_cd = crt.value)
LEFT JOIN EB.CALL_RECORD_LINK CRL ON CRL.CALL_RECORD_ID = CR.CALL_RECORD_ID
LEFT JOIN EB.EVENT E ON E.CALL_RECORD_ID = CR.CALL_RECORD_ID AND E.EVENT_TYPE_CD = 'INBOUND_CALL'
LEFT JOIN EB.EVENT E2 ON E2.CALL_RECORD_ID = CR.CALL_RECORD_ID AND E2.EVENT_TYPE_CD NOT IN ( 'INBOUND_CALL','LINK_TO_CALL')
LEFT JOIN EB.ENUM_MANUAL_CALL_ACTION REFF ON REFF.CATEGORIES like 'REFERRAL' AND REFF.VALUE = E.CONTEXT
LEFT JOIN EB.ENUM_MANUAL_CALL_ACTION REFF2 ON REFF2.CATEGORIES like 'REFERRAL' AND REFF2.VALUE = E2.CONTEXT
LEFT JOIN EB.CASE_CLIENT CSCL ON CSCL.CSCL_CASE_ID = CRL.CASE_ID 
                              AND CSCL.CSCL_CLNT_CLIENT_ID = NVL(CRL.CLIENT_ID, CSCL.CSCL_CLNT_CLIENT_ID)
                              AND CSCL.STATUS_BEGIN_NDT < CSCL.STATUS_END_NDT 
                              AND CSCL.STATUS_BEGIN_NDT <= CR.CALL_START_NDT 
                              AND CSCL.STATUS_END_NDT > CR.CALL_START_NDT
LEFT JOIN EB.ELIG_SEGMENT_AND_DETAILS ELIG ON ELIG.CLIENT_ID = CSCL.CSCL_CLNT_CLIENT_ID
                                        AND ELIG.START_ND < ELIG.END_ND
                                        AND ELIG.START_ND = CSCL.ELIG_BEGIN_ND
--                                      AND ELIG.START_ND * POWER(10,9) <= CR.CALL_START_NDT 
--                                      AND ELIG.END_ND * POWER(10,9) >= CR.CALL_START_NDT
                                      AND ELIG.SEGMENT_TYPE_CD = 'ME'
LEFT JOIN EB.ENUM_AID_CATEGORY EAID ON EAID.VALUE = CSCL.CSCL_ADLK_ID
LEFT JOIN EB.SELECTION_SEGMENT SELC ON (SELC.CLIENT_ID = CSCL.CSCL_CLNT_CLIENT_ID AND SELC.PROGRAM_TYPE_CD = 'MEDICAID' 
                                AND SELC.PLAN_TYPE_CD = 'MEDICAL'
                                AND (LEAST(SELC.CREATE_TS, SELC.START_DATE) <= CR.CALL_sTART_TS)
                                )
LEFT JOIN EB.SELECTION_TXN ST ON NVL(E2.REF_TYPE,e.ref_type) = 'SELECTION_TXN' and NVL(E2.REF_ID,e.ref_id) = st.selection_txn_id
LEFT JOIN EB.SELECTION_MISSING_INFO_DETAILS SMID ON SMID.MISSING_INFO_ID = ST.MISSING_INFO_ID AND SMID.ERROR_CODE = 'M028' 
WHERE 1=1
AND CR.CALL_END_TS IS NOT NULL
--AND CR.CALL_RECORD_ID = 26051113--26051085
) CA
LEFT JOIN EB.CONTRACT CON ON CON.CONTRACT_ID = CA.CONTRACT_ID
WHERE CA.ROWN = 1
AND CA.CALL_DATE >= GREATEST(TO_DATE('&schemadatelimit','MM/DD/YYYY'), ADD_MONTHS(TRUNC(SYSDATE), -13))
;

GRANT SELECT ON maxdat_support.EMRS_D_CALL_RECORD_SV TO MAXDAT_REPORTS;

--DROP VIEW EMRS_D_CALL_RECORD_SV
