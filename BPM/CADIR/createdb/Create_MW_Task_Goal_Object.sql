-- MW Task Goal table 

CREATE TABLE S_MW_TASK_GOAL
(
  MW_TG_ID        NUMBER(10) NOT NULL,
  GROUP_NAME	  VARCHAR2(100),
  TASK_TYPE       VARCHAR2(100),
  DAILY_GOAL	  NUMBER,
  START_TIME	  NUMBER(10,2),
  END_TIME	  NUMBER(10,2),
  START_DATE      DATE,
  END_DATE	  DATE,
  CALCULATE 	  VARCHAR2(1) DEFAULT 'Y' NOT NULL ,  
  COMMENTS	  VARCHAR2(4000),
  CREATE_DATE     DATE NOT NULL,
  CREATED_BY      VARCHAR2(45 CHAR) NOT NULL,
  UPDATED_DATE    DATE NOT NULL,
  UPDATED_BY      VARCHAR2(45 CHAR) NOT NULL
)
TABLESPACE MAXDAT_DATA
  PCTFREE 10
  INITRANS 1
  MAXTRANS 255
  STORAGE
  (
    INITIAL 64K
    NEXT 1M
    MINEXTENTS 1
    MAXEXTENTS UNLIMITED
  );     
  
ALTER TABLE S_MW_TASK_GOAL ADD CONSTRAINT MW_TG_ID_PK PRIMARY KEY
(
  MW_TG_ID
);   
  

CREATE SEQUENCE SEQ_MW_TG_ID START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 5 ;

CREATE OR REPLACE TRIGGER BIU_S_MW_TASK_GOAL
    BEFORE INSERT OR UPDATE ON S_MW_TASK_GOAL
    FOR EACH ROW 
    ENABLE 
BEGIN

IF INSERTING AND :NEW.MW_TG_ID IS NULL THEN 
          SELECT SEQ_MW_TG_ID.NEXTVAL INTO :NEW.MW_TG_ID FROM DUAL;
END IF;

IF INSERTING THEN 
          :NEW.CREATE_DATE := SYSDATE;
          :NEW.CREATED_BY  := USER;
END IF;

:NEW.UPDATED_DATE := SYSDATE;
:NEW.UPDATED_BY   := USER;

END;
/

 
  
GRANT SELECT, INSERT, UPDATE, DELETE ON MAXDAT_CADR.S_MW_TASK_GOAL TO MAXDAT_OLTP_SIUD;
GRANT SELECT ON MAXDAT_CADR.S_MW_TASK_GOAL TO MAXDAT_READ_ONLY;   
  
  
-- CREATE SEMANTIC VIEWS 

CREATE OR REPLACE VIEW MAXDAT_CADR.S_MW_TASK_GOAL_SV AS SELECT * FROM MAXDAT_CADR.S_MW_TASK_GOAL WITH READ ONLY;

