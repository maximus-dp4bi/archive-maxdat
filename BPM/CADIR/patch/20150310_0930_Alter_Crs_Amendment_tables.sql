delete from S_CRS_IMR_EXPERT_LICENSE_STATE;

delete from S_CRS_IMR_CERT_SPECIALTY;

commit;

ALTER TABLE S_CRS_IMR_EXPERT_LICENSE_STATE
ADD (CREATED_BY VARCHAR2(100) NOT NULL, UPDATED_BY VARCHAR2(100) NOT NULL);

ALTER TABLE S_CRS_IMR_CERT_SPECIALTY
ADD (CREATED_BY VARCHAR2(100) NOT NULL, UPDATED_BY VARCHAR2(100) NOT NULL);


CREATE OR REPLACE TRIGGER BIU_S_CRS_IMR_CERT_SPECIALTY
    BEFORE INSERT OR UPDATE ON S_CRS_IMR_CERT_SPECIALTY
    FOR EACH ROW 
    ENABLE 
BEGIN
IF INSERTING AND :NEW.SCICS_ID IS NULL THEN 
          SELECT SEQ_SCICS_ID.NEXTVAL INTO :NEW.SCICS_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.CREATE_DT := SYSDATE;
          :NEW.CREATED_BY:= USER;
END IF;
:NEW.UPDATE_DT := SYSDATE;
:NEW.UPDATED_BY := USER;
END;
/

CREATE OR REPLACE TRIGGER BI_S_CRS_IMR_EXP_LICENSE_STATE
    BEFORE INSERT ON S_CRS_IMR_EXPERT_LICENSE_STATE
    FOR EACH ROW 
    ENABLE 
BEGIN
IF INSERTING AND :NEW.SCIELS_ID IS NULL THEN 
          SELECT SEQ_SCIELS_ID.NEXTVAL INTO :NEW.SCIELS_ID FROM DUAL;      
END IF;
IF INSERTING THEN 
          :NEW.CREATE_DT := SYSDATE;
          :NEW.CREATED_BY:= USER;
END IF;
:NEW.UPDATE_DT := SYSDATE;
:NEW.UPDATED_BY := USER;
END;
/

CREATE OR REPLACE VIEW S_CRS_IMR_CERT_SPECIALTY_SV AS
SELECT 
*   
FROM S_CRS_IMR_CERT_SPECIALTY
WITH READ ONLY;

CREATE OR REPLACE VIEW S_CRS_IMR_EXP_LICENSE_STATE_SV AS
SELECT 
*
FROM S_CRS_IMR_EXPERT_LICENSE_STATE
WITH READ ONLY;