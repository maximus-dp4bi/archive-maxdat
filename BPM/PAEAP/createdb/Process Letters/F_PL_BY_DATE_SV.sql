CREATE OR REPLACE FORCE VIEW MAXDAT_SUPPORT.F_PL_BY_DATE_SV
AS
  SELECT DISTINCT
    --F_PL_BY_DATE_SV
    LR.LMREQ_ID AS PL_BI_ID ,
    LR.CREATE_TS AS BUCKET_START_DATE ,
    CASE
      WHEN LR.SENT_ON IS NULL AND LR.ERROR_CODES IS NOT NULL AND SI.TASK_ID IS NULL
      THEN H.CREATE_TS
      WHEN LR.MAILED_DATE IS NOT NULL
      THEN LR.MAILED_DATE
      WHEN ER.DESCRIPTION IS NOT NULL AND SI.TASK_ID IS NULL
      THEN C.LETTER_RESP_FILE_DT
      WHEN L.CANCEL_DT IS NOT NULL
      THEN L.CANCEL_DT
      ELSE sysdate
    END AS BUCKET_END_DATE ,
    CASE
      WHEN LR.SENT_ON IS NULL AND LR.ERROR_CODES IS NOT NULL AND SI.TASK_ID IS NULL
      THEN H.CREATE_TS
      WHEN LR.MAILED_DATE IS NOT NULL
      THEN LR.MAILED_DATE
      WHEN ER.DESCRIPTION IS NOT NULL AND SI.TASK_ID IS NULL
      THEN C.LETTER_RESP_FILE_DT
      WHEN L.CANCEL_DT IS NOT NULL
      THEN L.CANCEL_DT
      ELSE NULL
    END AS COMPLETE_DATE ,
    ES.VALUE AS DPLLS_ID ,
    CASE
      WHEN LR.MAILED_DATE IS NOT NULL
      THEN 'Complete'
      WHEN LR.SENT_ON IS NULL AND LR.ERROR_CODES IS NOT NULL
      THEN 'Complete'
      WHEN ER.DESCRIPTION IS NOT NULL
      THEN 'Complete'
      WHEN LR.STATUS_CD IN ('CANC','VOID','OBE','COMBND')
      THEN 'Complete'
      ELSE 'Active'
    END AS INSTANCE_STATUS ,
    H.CREATE_TS AS LETTER_STATUS_DATE ,
    LR.SENT_ON ,
    LR.MAILED_DATE ,
    LR.UPDATE_TS ,
    L.CANCEL_DT AS CANCEL_DATE ,
    C.LETTER_RESP_FILE_DT AS LETTER_RESPONSE_FILE_DATE ,
    LR.ERROR_CODES ,
    LR.STATUS_CD ,
    SI.TASK_ID ,
    ER.DESCRIPTION ,
    COUNT(D.D_DATE) OVER(PARTITION BY LR.LMREQ_ID) AS AGE_IN_BUSINESS_DAYS ,
    TRUNC(
    CASE
      WHEN LR.SENT_ON IS NULL AND LR.ERROR_CODES IS NOT NULL AND SI.TASK_ID IS NULL
      THEN H.CREATE_TS
      WHEN LR.MAILED_DATE IS NOT NULL
      THEN LR.MAILED_DATE
      WHEN ER.DESCRIPTION IS NOT NULL AND SI.TASK_ID IS NULL
      THEN C.LETTER_RESP_FILE_DT
      WHEN L.CANCEL_DT IS NOT NULL
      THEN L.CANCEL_DT
      ELSE sysdate
    END) - TRUNC(LR.CREATE_TS) AS AGE_IN_CALENDAR_DAYS
  FROM eb.LETTER_REQUEST LR
  LEFT JOIN eb.ENUM_LM_STATUS ES               ON (LR.STATUS_CD = ES.VALUE)
  LEFT JOIN eb.letter_req_status_history H     ON (LR.LMREQ_ID = H.LMREQ_ID AND H.STATUS_CD = 'REQ')
  LEFT JOIN eb.ENUM_MAILHOUSE_ERROR_REASONS ER ON (LR.REJECT_REASON_CD = ER.VALUE)
  LEFT JOIN
    (SELECT CASE_ID , STEP_DEFINITION_ID , CREATE_TS AS TASK_DATE , TASK_ID FROM
      (SELECT CASE_ID , STEP_DEFINITION_ID , CREATE_TS , STEP_INSTANCE_ID AS TASK_ID ,RANK() OVER(PARTITION BY CASE_ID ORDER BY STEP_INSTANCE_ID DESC) AS RNK FROM EB.STEP_INSTANCE WHERE STEP_DEFINITION_ID IN (26,22,27)
      ) WHERE RNK = 1
    ) SI ON (LR.CASE_ID = SI.CASE_ID)
  LEFT JOIN
    (SELECT M.LMREQ_ID, MAX(jb.create_ts) AS LETTER_RESP_FILE_DT FROM eb.etl_l_mailhouse M
    JOIN eb.JOB_RUN_DATA JB ON (JB.JOB_RUN_DATA_ID = M.JOB_ID)
    GROUP BY M.LMREQ_ID
    ) C ON LR.LMREQ_ID = C.LMREQ_ID
  LEFT JOIN
    (SELECT L.LMREQ_ID, MAX(L.CREATE_TS) over (partition BY L.LMREQ_ID) AS CANCEL_DT FROM eb.letter_req_status_history L WHERE STATUS_CD IN ('CANC','VOID','OBE','COMBND')
    ) L                        ON (L.LMREQ_ID = LR.LMREQ_ID)
  LEFT JOIN MAXDAT_SUPPORT.d_dates D ON (d.BUSINESS_DAY_FLAG = 'Y' AND D.D_DATE >= LR.CREATE_TS AND D.D_DATE <= CASE WHEN LR.SENT_ON IS NULL AND LR.ERROR_CODES IS NOT NULL AND SI.TASK_ID IS NULL THEN H.CREATE_TS WHEN LR.MAILED_DATE IS NOT NULL THEN LR.MAILED_DATE WHEN ER.DESCRIPTION IS NOT NULL AND SI.TASK_ID IS NULL THEN C.LETTER_RESP_FILE_DT WHEN L.CANCEL_DT IS NOT NULL THEN L.CANCEL_DT ELSE sysdate END)
    --F_PL_BY_DATE_SV
  WHERE LR.CREATE_TS >= ADD_MONTHS(TRUNC(sysdate,'mm'),-2) OR LR.STATUS_CD NOT IN('COMBND', 'VOID', 'ERR', 'MAIL', 'REJ') ;
  
  GRANT SELECT ON MAXDAT_SUPPORT.F_PL_BY_DATE_SV TO EB_MAXDAT_REPORTS;