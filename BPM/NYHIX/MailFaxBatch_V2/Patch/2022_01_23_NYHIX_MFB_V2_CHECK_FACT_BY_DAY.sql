CREATE OR REPLACE PROCEDURE NYHIX_MFB_V2_CHECK_FACT_BY_DAY(P_YYYYMM VARCHAR)
IS

	CURSOR GUID_CSR IS
	WITH END_DT AS 
	(
        SELECT SOURCE_SERVER, BATCH_GUID, INSTANCE_STATUS,
		TRUNC(COALESCE(REPROCESSED_DATE,
				CANCEL_DT,
				BATCH_COMPLETE_DT,
				COMPLETE_DT,
				SYSDATE)
				) END_DATE
        FROM MAXDAT.NYHIX_MFB_V2_BATCH_SUMMARY
        WHERE TO_CHAR(CREATE_DT,'YYYYMM') like P_YYYYMM
        AND (BATCH_GUID, SOURCE_SERVER) 
        IN ( SELECT BATCH_GUID,SOURCE_SERVER 
            FROM MAXDAT.NYHIX_MFB_V2_STATS_BATCH 
            )
        --AND ROWNUM > 10    
    ),
	LAST_DAY AS
	( 
	SELECT BATCH_GUID, MAX(TRUNC(D_DATE)) AS D_DATE
	FROM MAXDAT.F_MFB_V2_BY_DAY
	GROUP BY BATCH_GUID
	)  
	SELECT ROWNUM AS RN, END_DT.SOURCE_SERVER, END_DT.BATCH_GUID
	FROM END_DT
	LEFT OUTER JOIN LAST_DAY ON END_DT.BATCH_GUID = LAST_DAY.BATCH_GUID
	WHERE LAST_DAY.D_DATE IS NULL
	OR END_DT.END_DATE > NVL(LAST_DAY.D_DATE,TO_DATE('19000101','YYYYMMDD'))
	ORDER BY 1,2;
    
	GUID_CSR_REC 	GUID_CSR%ROWTYPE;

	BEGIN

	IF (GUID_CSR%ISOPEN)
	THEN
		CLOSE GUID_CSR;
	END IF;
	
	OPEN GUID_CSR;

		LOOP  -- Main "Driving" Loop

			FETCH GUID_CSR INTO GUID_CSR_REC;

			EXIT WHEN GUID_CSR%NOTFOUND;
		
            IF GUID_CSR_REC.RN < 10
            THEN
                DBMS_OUTPUT.PUT_LINE(GUID_CSR_REC.SOURCE_SERVER||' '||GUID_CSR_REC.BATCH_GUID);
            END IF;		
            
            MAXDAT.NYHIX_MFB_V2_BATCH_SUMMARY_PKG.PROCESS_ONE_BATCH(GUID_CSR_REC.SOURCE_SERVER,GUID_CSR_REC.BATCH_GUID);
            
		END LOOP;

	IF (GUID_CSR%ISOPEN)
	THEN
		CLOSE GUID_CSR;
	END IF;
		
	EXCEPTION
		WHEN NO_DATA_FOUND
		THEN 
			NULL;
		WHEN OTHERS THEN RAISE;
		
	END;	
/
SHOW ERRORS

grant execute on maxdat.NYHIX_MFB_V2_CHECK_FACT_BY_DAY to maxdat_read_only;