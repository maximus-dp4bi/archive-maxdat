--ENGAGE_ACTUALS_SUP

declare  c int;
begin
   select count(*) into c from user_tables where table_name ='ENGAGE_ACTUALS_SUP';
   if c = 1 then
      execute immediate 'drop table ENGAGE_ACTUALS_SUP cascade constraints';
   end if;
end;
/

CREATE TABLE ENGAGE_ACTUALS_SUP 
(
  EVALUATION_REFERENCE_ID NUMBER 
, EVALUATION_REFERENCE VARCHAR2(512 BYTE) 
, EVALUATOR_ID VARCHAR2(250 BYTE) 
, SCORE_TOTAL NUMBER 
, EVALUATION_DATE_TIME DATE 
, EVALUATION_FORM VARCHAR2(512 BYTE) 
, CALL_DATE DATE 
, QC_EVALUATION_ID VARCHAR2(512 BYTE) 
, CREATE_BY VARCHAR2(100 BYTE) 
, CREATE_DATETIME DATE 
, LAST_UPDATE_DATE DATE 
, LAST_UPDATED_BY VARCHAR2(100 BYTE) 
) 
TABLESPACE MAXDAT_DATA; 

CREATE UNIQUE INDEX ENGAGEACTUALSSUP_EVALREF_ID ON ENGAGE_ACTUALS_SUP (EVALUATION_REFERENCE_ID ASC) 
TABLESPACE MAXDAT_INDX;

GRANT INSERT,UPDATE,SELECT,DELETE ON ENGAGE_ACTUALS_SUP TO MAXDAT;
GRANT SELECT ON ENGAGE_ACTUALS_SUP TO MAXDAT_READ_ONLY;
 
CREATE OR REPLACE VIEW ENGAGE_ACTUALS_SUP_SV 
(
  EVALUATION_REFERENCE_ID 
, EVALUATION_REFERENCE 
, EVALUATOR_ID 
, SCORE_TOTAL 
, EVALUATION_DATE_TIME
, EVALUATION_FORM 
, CALL_DATE 
, QC_EVALUATION_ID 
, CREATE_BY 
, CREATE_DATETIME
, LAST_UPDATE_DATE 
, LAST_UPDATED_BY 
)
AS
SELECT 
 EVALUATION_REFERENCE_ID 
, EVALUATION_REFERENCE 
, EVALUATOR_ID 
, SCORE_TOTAL 
, EVALUATION_DATE_TIME
, EVALUATION_FORM 
, CALL_DATE 
, QC_EVALUATION_ID 
, CREATE_BY 
, CREATE_DATETIME
, LAST_UPDATE_DATE 
, LAST_UPDATED_BY 
FROM ENGAGE_ACTUALS_SUP
WITH READ ONLY;

GRANT SELECT ON ENGAGE_ACTUALS_SUP_SV TO MAXDAT;
GRANT SELECT ON ENGAGE_ACTUALS_SUP_SV TO MAXDAT_READ_ONLY;

create or replace trigger TRG_BIU_ENGAGE_ACTUALS_SUP
BEFORE INSERT OR UPDATE ON ENGAGE_ACTUALS_SUP
FOR EACH ROW

BEGIN
  IF INSERTING THEN
    :new.create_by := user;
    :new.create_datetime := sysdate;
  END IF;

 :new.last_updated_by := user;
 :new.last_update_date := sysdate;

end;
/