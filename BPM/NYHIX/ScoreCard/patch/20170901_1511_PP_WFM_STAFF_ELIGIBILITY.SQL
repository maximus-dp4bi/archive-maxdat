CREATE TABLE DP_SCORECARD.PP_WFM_STAFF_ELIGIBILITY
(
  STAFF_ID              INTEGER                 NOT NULL,
  EVENT_ID              INTEGER                 NOT NULL,
  START_DATE            DATE                    NOT NULL,
  HOUR_OR_OTHER         CHAR(1 BYTE)            NOT NULL,
  END_DATE              DATE,
  WORK_AMOUNT           FLOAT(126),
  DESCRIPTION           VARCHAR2(2000 BYTE),
  SCHEDULING_PRIORITY   INTEGER                 NOT NULL,
  MODIFY_USER           NUMBER(38),
  MODIFY_DATE           DATE,
  SCHEDULE_INSTANCE_ID  INTEGER,
  DELETE_FLAG           VARCHAR2(1 BYTE)        DEFAULT 'N'
)
TABLESPACE MAXDAT_DATA
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          1280K
            NEXT             256K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;

COMMENT ON TABLE DP_SCORECARD.PP_WFM_STAFF_ELIGIBILITY IS 'Team Eligibilities determine the serving teams with which an agent is eligible to work,
and the days that the agent is available to work with the serving teams.';

COMMENT ON COLUMN DP_SCORECARD.PP_WFM_STAFF_ELIGIBILITY.STAFF_ID IS 'Internal identifier for a STAFF record.';

COMMENT ON COLUMN DP_SCORECARD.PP_WFM_STAFF_ELIGIBILITY.EVENT_ID IS 'Internal identifier for an EVENT record.';

COMMENT ON COLUMN DP_SCORECARD.PP_WFM_STAFF_ELIGIBILITY.START_DATE IS 'Is the date upon which the staff member is eligible to work within the specified serving team.';

COMMENT ON COLUMN DP_SCORECARD.PP_WFM_STAFF_ELIGIBILITY.HOUR_OR_OTHER IS 'Is a flag indicating the manner in which the staff member will be assigned to the serving team.';

COMMENT ON COLUMN DP_SCORECARD.PP_WFM_STAFF_ELIGIBILITY.END_DATE IS 'Is the date after which the staff member is no longer eligible to work within the specified serving team.';

COMMENT ON COLUMN DP_SCORECARD.PP_WFM_STAFF_ELIGIBILITY.WORK_AMOUNT IS 'If the staff member has been specified as available on limited duty,
then this is the number of hours of duty per cycle to which the agent may be assigned.';


CREATE UNIQUE INDEX DP_SCORECARD.XPK_PP_WFM_STAFF_ELIGIBILITY ON DP_SCORECARD.PP_WFM_STAFF_ELIGIBILITY
(STAFF_ID, START_DATE, EVENT_ID)
LOGGING
TABLESPACE MAXDAT_INDX
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          768K
            NEXT             256K
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

ALTER TABLE DP_SCORECARD.PP_WFM_STAFF_ELIGIBILITY ADD (
  CONSTRAINT XPK_PP_WFM_STAFF_ELIGIBILITY
  PRIMARY KEY
  (STAFF_ID, START_DATE, EVENT_ID)
  USING INDEX DP_SCORECARD.XPK_PP_WFM_STAFF_ELIGIBILITY
  ENABLE VALIDATE);

GRANT SELECT ON DP_SCORECARD.PP_WFM_STAFF_ELIGIBILITY TO MAXDAT_READ_ONLY;

GRANT SELECT ON DP_SCORECARD.PP_WFM_STAFF_ELIGIBILITY TO MAXDAT;

CREATE OR REPLACE FORCE VIEW DP_SCORECARD.PP_WFM_STAFF_ELIGIBILITY_SV
(STAFF_ID, EVENT_ID, START_DATE, END_DATE, DELETE_FLAG, 
 MODIFY_DATE, MODIFY_USER, EVENT_NAME)
AS 
WITH STAFF_ELIGIBILITY
AS 	(
	SELECT STAFF_ID, TRUNC(START_DATE) 	AS START_DATE,
	TRUNC(NVL(END_DATE,SYSDATE)) 		AS END_DATE,
	EVENT_ID 							AS EVENT_ID,
	SCHEDULING_PRIORITY					AS SCHEDULING_PRIORITY
	FROM DP_SCORECARD.PP_WFM_STAFF_ELIGIBILITY
	WHERE NVL(DELETE_FLAG,'N') = 'N'
	AND TRUNC(START_DATE) <= TRUNC(SYSDATE)
	),
STAFF_MAX_END_DATE
AS 	( -- SELECT THE MAX END_DATE --
	SELECT STAFF_ID, MAX(END_DATE) AS END_DATE
	FROM STAFF_ELIGIBILITY
	WHERE START_DATE <= TRUNC(SYSDATE)
	GROUP BY STAFF_ID
	),
STAFF_START_AND_END
AS 	(
	SELECT  --<< SELECT THE MAX(START_DATE) EVEN IF MULTIPLE NULL MAX(END_DATES)
    STAFF_ID, END_DATE, MAX(START_DATE) AS START_DATE
	FROM STAFF_ELIGIBILITY
	WHERE (STAFF_ID, END_DATE)
	IN 	(
		SELECT STAFF_ID, END_DATE
		FROM STAFF_MAX_END_DATE
		)
	GROUP BY STAFF_ID, END_DATE
	),
STAFF_EVENT_PRIORITY
AS 	(
	SELECT STAFF_ID, START_DATE, END_DATE, MIN(SCHEDULING_PRIORITY) AS SCHEDULING_PRIORITY
	FROM STAFF_ELIGIBILITY
	WHERE ( STAFF_ID, START_DATE, END_DATE)
	IN ( SELECT STAFF_ID, START_DATE, END_DATE
		FROM STAFF_START_AND_END
		)
	GROUP BY STAFF_ID, START_DATE, END_DATE
	),
STAFF_EVENT_DATES
AS	( SELECT STAFF_ID, START_DATE, END_DATE, SCHEDULING_PRIORITY, MAX(EVENT_ID) AS EVENT_ID
	FROM STAFF_ELIGIBILITY
	WHERE (STAFF_ID, START_DATE, END_DATE, SCHEDULING_PRIORITY)
	IN ( SELECT STAFF_ID, START_DATE, END_DATE, SCHEDULING_PRIORITY
		FROM STAFF_EVENT_PRIORITY
		)
	GROUP BY STAFF_ID, START_DATE, END_DATE, SCHEDULING_PRIORITY
)
--STAFF_ELIGIBILITY_SV
--AS (
SELECT SE.STAFF_ID, SE.EVENT_ID, SE.START_DATE, SE.END_DATE, SE.DELETE_FLAG,
 SE.MODIFY_DATE, SE.MODIFY_USER, E.NAME AS EVENT_NAME
FROM DP_SCORECARD.PP_WFM_STAFF_ELIGIBILITY SE
JOIN MAXDAT.PP_WFM_EVENT E ON E.EVENT_ID = SE.EVENT_ID
JOIN STAFF_EVENT_DATES SED
ON SED.STAFF_ID = SE.STAFF_ID
AND SED.START_DATE = TRUNC(SE.START_DATE)
AND SED.END_DATE = TRUNC(NVL(SE.END_DATE,SYSDATE))
AND SED.SCHEDULING_PRIORITY = SE.SCHEDULING_PRIORITY
AND SED.EVENT_ID = SE.EVENT_ID
WHERE (SED.STAFF_ID, SED.EVENT_ID)
IN ( SELECT STAFF_ID, EVENT_ID
FROM DP_SCORECARD.PP_WFM_STAFF_ELIGIBIL_WRK_SV
);


GRANT SELECT ON DP_SCORECARD.PP_WFM_STAFF_ELIGIBILITY_SV TO DP_SCORECARD_READ_ONLY;

GRANT SELECT ON DP_SCORECARD.PP_WFM_STAFF_ELIGIBILITY_SV TO MAXDAT_READ_ONLY;

GRANT SELECT ON DP_SCORECARD.PP_WFM_STAFF_ELIGIBILITY_SV TO MAXDAT;

GRANT SELECT ON DP_SCORECARD.PP_WFM_STAFF_ELIGIBILITY_SV TO MAXDAT_REPORTS;


CREATE OR REPLACE FORCE VIEW DP_SCORECARD.PP_WFM_STAFF_ELIGIBIL_WRK_SV
(STAFF_ID, EVENT_ID, EVENT_NAME)
AS 
WITH STAFF_ELIGIBILITY
AS 	(
	SELECT STAFF_ID, TRUNC(START_DATE) 	AS START_DATE,
	TRUNC(NVL(END_DATE,SYSDATE)) 		AS END_DATE,
	EVENT_ID 							AS EVENT_ID,
	SCHEDULING_PRIORITY					AS SCHEDULING_PRIORITY
	FROM DP_SCORECARD.PP_WFM_STAFF_ELIGIBILITY
	WHERE NVL(DELETE_FLAG,'N') = 'N'
	AND TRUNC(START_DATE) <= TRUNC(SYSDATE)
	),
STAFF_MAX_END_DATE
AS 	( -- SELECT THE MAX END_DATE --
	SELECT STAFF_ID, MAX(END_DATE) AS END_DATE
	FROM STAFF_ELIGIBILITY
	WHERE START_DATE <= TRUNC(SYSDATE)
	GROUP BY STAFF_ID
	),
STAFF_START_AND_END
AS 	(
	SELECT  --<< SELECT THE MAX(START_DATE) EVEN IF MULTIPLE NULL MAX(END_DATES)
    STAFF_ID, END_DATE, MAX(START_DATE) AS START_DATE
	FROM STAFF_ELIGIBILITY
	WHERE (STAFF_ID, END_DATE)
	IN 	(
		SELECT STAFF_ID, END_DATE
		FROM STAFF_MAX_END_DATE
		)
	GROUP BY STAFF_ID, END_DATE
	),
STAFF_EVENT_PRIORITY
AS 	(
	SELECT STAFF_ID, START_DATE, END_DATE, MIN(SCHEDULING_PRIORITY) AS SCHEDULING_PRIORITY
	FROM STAFF_ELIGIBILITY
	WHERE ( STAFF_ID, START_DATE, END_DATE)
	IN ( SELECT STAFF_ID, START_DATE, END_DATE
		FROM STAFF_START_AND_END
		)
	GROUP BY STAFF_ID, START_DATE, END_DATE
	),
STAFF_EVENT_DATES
AS	( SELECT STAFF_ID, START_DATE, END_DATE, SCHEDULING_PRIORITY, MAX(EVENT_ID) AS EVENT_ID
	FROM STAFF_ELIGIBILITY
	WHERE (STAFF_ID, START_DATE, END_DATE, SCHEDULING_PRIORITY)
	IN ( SELECT STAFF_ID, START_DATE, END_DATE, SCHEDULING_PRIORITY
		FROM STAFF_EVENT_PRIORITY
		)
	GROUP BY STAFF_ID, START_DATE, END_DATE, SCHEDULING_PRIORITY
),
STAFF_ELIGIBILITY_LKUP
AS (
SELECT SE.STAFF_ID, E.EVENT_ID, E.NAME AS EVENT_NAME
FROM DP_SCORECARD.STAFF_ELIGIBILITY SE
JOIN MAXDAT.PP_WFM_EVENT E ON E.EVENT_ID = SE.EVENT_ID
JOIN STAFF_EVENT_DATES SED
ON SED.STAFF_ID = SE.STAFF_ID
AND SED.START_DATE = TRUNC(SE.START_DATE)
AND SED.END_DATE = TRUNC(NVL(SE.END_DATE,SYSDATE))
AND SED.SCHEDULING_PRIORITY = SE.SCHEDULING_PRIORITY
AND SED.EVENT_ID = SE.EVENT_ID
)
SELECT STAFF_ID, EVENT_ID, EVENT_NAME
FROM STAFF_ELIGIBILITY_LKUP
WHERE STAFF_ID IN (SELECT STAFF_ID
FROM STAFF_ELIGIBILITY_LKUP
GROUP BY STAFF_ID
HAVING SUM(1) = 1
);


GRANT SELECT ON DP_SCORECARD.PP_WFM_STAFF_ELIGIBIL_WRK_SV TO DP_SCORECARD_READ_ONLY;

GRANT SELECT ON DP_SCORECARD.PP_WFM_STAFF_ELIGIBIL_WRK_SV TO MAXDAT_READ_ONLY;

GRANT SELECT ON DP_SCORECARD.PP_WFM_STAFF_ELIGIBIL_WRK_SV TO MAXDAT;

GRANT SELECT ON DP_SCORECARD.PP_WFM_STAFF_ELIGIBIL_WRK_SV TO MAXDAT_REPORTS;
