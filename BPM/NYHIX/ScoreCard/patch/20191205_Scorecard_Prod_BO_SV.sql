
  CREATE OR REPLACE FORCE EDITIONABLE VIEW DP_SCORECARD.SCORECARD_PROD_BO_SV (STAFF_ID, STAFF_NATID, DATES, EVENT_SORT_ID, EVENT_NAME, TOTAL_LOGGED, ACTIVITY_TIME, ACTIVITY_TIME_IN_HHMMSS, TARGET, OPS_GROUP) AS 
  WITH
all_dates AS
(
	SELECT STAFF_ID, TRUNC(DATES) AS DATES -- EVENT_NAME_SORT, EVENT_NAME
	FROM DP_SCORECARD.SC_PRODUCTION_BO
	WHERE TRUNC(DATES) >= TRUNC(SYSDATE - 31)
--	AND STAFF_ID = 17227 
	UNION
	SELECT STAFF_ID,  TRUNC(DATES)
	FROM SCORECARD_PROD_DP_BO_SV
	WHERE TRUNC(DATES) >= TRUNC(SYSDATE - 31)
),
MIN_EVENT AS
( -- THIS IS TO GET AN EVENT NAME TO ATTACHED TO THE 
    -- OUTER JOINED ROWS SO THAT THERE IS AT LEASE 1
    -- ROW FOR ANY DATE IN SCORECARD_PROD_DP_BO_SV
SELECT STAFF_ID,  EVENT_NAME, min(event_name_sort) as event_name_sort
    FROM SC_PRODUCTION_BO
    WHERE TRUNC(DATES) >= TRUNC(SYSDATE - 31)
    AND (staff_id, event_name )
    in ( select staff_id, 
            min(event_name) as event_name
        FROM SC_PRODUCTION_BO
        WHERE TRUNC(DATES) >= TRUNC(SYSDATE - 31)     
        AND NOT ( EVENT_NAME='Daily Adherence' -- << add to get ALL ADHERENCE
                OR EVENT_NAME = 'Daily Adherence Detail' 
                or  EVENT_SUBNAME='Total Logged'  -- << from original view
                )
        GROUP BY STAFF_ID        
        )
    group by STAFF_ID,  EVENT_NAME
),
TOTAL_LOGGED AS
(
SELECT STAFF_ID, DATES, EVENT_NAME_SORT, EVENT_NAME, METRIC AS TOTAL_LOGGED
FROM DP_SCORECARD.SC_PRODUCTION_BO
WHERE EVENT_SUBNAME='Total Logged'
AND TRUNC(DATES) >= TRUNC(SYSDATE - 31)
),
ACTIVITY_TIME AS
(
SELECT STAFF_ID, DATES, EVENT_NAME_SORT, EVENT_NAME, METRIC AS ACTIVITY_TIME
FROM DP_SCORECARD.SC_PRODUCTION_BO
WHERE EVENT_SUBNAME='Total Activity Time'
AND TRUNC(DATES) >= TRUNC(SYSDATE - 31)
),
TARGETS AS
(
SELECT SCORECARD_GROUP, TARGET, OPS_GROUP, START_DATE, END_DATE FROM
    (SELECT DISTINCT
           CASE
             WHEN UPPER(SCORECARD_GROUP) LIKE 'OTHER%' THEN
              'All Other Tasks'
             ELSE
              SCORECARD_GROUP
           END AS SCORECARD_GROUP,
           TARGET,
           OPS_GROUP,
           START_DATE,
           END_DATE
      FROM MAXDAT.PP_BO_EVENT_TARGET_LKUP
     WHERE SCORECARD_FLAG = 'Y')
),
results as
(
SELECT All_DATES.STAFF_ID,
       (
			SELECT DISTINCT STAFF_NATID
			FROM DP_SCORECARD.SCORECARD_HIERARCHY_SV
			WHERE STAFF_STAFF_ID=ALL_DATES.STAFF_ID
	   ) AS STAFF_NATID,
       ALL_DATES.DATES,
       NVL(TOTAL_LOGGED.EVENT_NAME_SORT,MIN_EVENT.EVENT_NAME_SORT) AS EVENT_SORT_ID,
       NVL(TOTAL_LOGGED.EVENT_NAME,MIN_EVENT.EVENT_NAME) AS EVENT_NAME,
       TOTAL_LOGGED.TOTAL_LOGGED,
       ACTIVITY_TIME.ACTIVITY_TIME,
	   CASE
		WHEN ACTIVITY_TIME.ACTIVITY_TIME IS NULL
			THEN NULL
		ELSE
			(TO_CHAR(TRUNC((ACTIVITY_TIME.ACTIVITY_TIME * 3600) / 3600), 'FM999999990')
			|| ':' || TO_CHAR(TRUNC(MOD((ACTIVITY_TIME.ACTIVITY_TIME * 3600), 3600) / 60), 'FM00')
			|| ':' || TO_CHAR(MOD((ACTIVITY_TIME.ACTIVITY_TIME * 3600), 60), 'FM00'))
		END 	AS ACTIVITY_TIME_IN_HHMMSS,
	   (
			SELECT DISTINCT TARGET
			FROM TARGETS
			WHERE SCORECARD_GROUP = TOTAL_LOGGED.EVENT_NAME AND
			TOTAL_LOGGED.DATES >= TARGETS.START_DATE
			AND (TARGETS.END_DATE IS NULL OR TOTAL_LOGGED.DATES <= TARGETS.END_DATE)
		) AS TARGET,
		(	SELECT DISTINCT OPS_GROUP
			FROM TARGETS
			WHERE SCORECARD_GROUP = TOTAL_LOGGED.EVENT_NAME
			AND  TOTAL_LOGGED.DATES >= TARGETS.START_DATE
			AND (TARGETS.END_DATE IS NULL OR TOTAL_LOGGED.DATES <= TARGETS.END_DATE)
		) AS OPS_GROUP
  FROM ALL_DATES
  LEFT OUTER JOIN MIN_EVENT
    ON MIN_EVENT.STAFF_ID = ALL_DATES.STAFF_ID
  LEFT OUTER JOIN TOTAL_LOGGED
	ON TOTAL_LOGGED.STAFF_ID = ALL_DATES.STAFF_ID
	AND TRUNC(TOTAL_LOGGED.DATES) = TRUNC(ALL_DATES.DATES)
  LEFT OUTER JOIN ACTIVITY_TIME 
    ON ACTIVITY_TIME.STAFF_ID = ALL_DATES.STAFF_ID
   AND TRUNC(ACTIVITY_TIME.DATES) = TRUNC(ALL_DATES.DATES)
   AND TOTAL_LOGGED.EVENT_NAME = ACTIVITY_TIME.EVENT_NAME
)
select STAFF_ID,STAFF_NATID,DATES,EVENT_SORT_ID,EVENT_NAME,TOTAL_LOGGED,ACTIVITY_TIME,ACTIVITY_TIME_IN_HHMMSS,TARGET,OPS_GROUP 
from results 
where 1=1;


GRANT SELECT ON DP_SCORECARD.SCORECARD_PROD_BO_SV TO MAXDAT;
GRANT SELECT ON DP_SCORECARD.SCORECARD_PROD_BO_SV TO MAXDAT_READ_ONLY;
GRANT SELECT ON DP_SCORECARD.SCORECARD_PROD_BO_SV TO MAXDAT_REPORTS;
GRANT SELECT ON DP_SCORECARD.SCORECARD_PROD_BO_SV TO DP_SCORECARD_READ_ONLY;