DROP VIEW DP_SCORECARD.SCORECARD_PROD_BO_SV;

CREATE OR REPLACE FORCE VIEW DP_SCORECARD.SCORECARD_PROD_BO_SV
(STAFF_ID, STAFF_NATID, DATES, EVENT_SORT_ID, EVENT_NAME, 
 TOTAL_LOGGED, ACTIVITY_TIME, ACTIVITY_TIME_IN_HHMMSS, TARGET, OPS_GROUP)
AS 
WITH ALL_DATES AS
( 	SELECT distinct STAFF_ID, DATES -- EVENT_NAME_SORT, EVENT_NAME
	FROM DP_SCORECARD.SC_PRODUCTION_BO
	WHERE ( EVENT_SUBNAME='Adherence' -- << add to get ALL ADHERENCE
        or  EVENT_SUBNAME='Total Logged' 
        ) -- << from original view
	AND TRUNC(DATES) >= TRUNC(SYSDATE - 31)
),
ALL_EVENTS AS
( SELECT DISTINCT STAFF_ID, EVENT_NAME_SORT, EVENT_NAME
  FROM DP_SCORECARD.SC_PRODUCTION_BO
  WHERE  ( EVENT_NAME='xxxDaily Adherence' -- << add to get ALL ADHERENCE
	or  EVENT_SUBNAME='Total Logged'  -- << from original view
	)
  AND TRUNC(DATES) >= TRUNC(SYSDATE - 31)
),
ALL_ZEROS AS
( SELECT ALL_DATES.STAFF_ID, ALL_DATES.DATES, 
		ALL_EVENTS.EVENT_NAME_SORT, ALL_EVENTS.EVENT_NAME, 
		0 AS TOTAL_LOGGED 
  FROM ALL_DATES
  JOIN ALL_EVENTS 
	ON ALL_DATES.STAFF_ID = ALL_EVENTS.STAFF_ID
),
--ADHERENCE AS
--(
--	SELECT distinct STAFF_ID, DATES -- EVENT_NAME_SORT, EVENT_NAME
--	FROM DP_SCORECARD.SC_PRODUCTION_BO
--	WHERE ( EVENT_NAME='Daily Adherence' -- << add to get ALL ADHERENCE
--	or  EVENT_SUBNAME='Total Logged'  -- << from original view
--	)
--	AND TRUNC(DATES) >= TRUNC(SYSDATE - 31)
--),
TOTAL_LOGGED AS
(
SELECT STAFF_ID, DATES, EVENT_NAME_SORT, EVENT_NAME, METRIC AS TOTAL_LOGGED
FROM DP_SCORECARD.SC_PRODUCTION_BO
WHERE EVENT_SUBNAME='Total Logged'
AND TRUNC(DATES) >= TRUNC(SYSDATE - 31)
),
ACTIVITY_TIME AS
(
SELECT STAFF_ID, DATES, EVENT_NAME_SORT, EVENT_NAME, METRIC AS ACTIVITY_TIME
FROM DP_SCORECARD.SC_PRODUCTION_BO
WHERE EVENT_SUBNAME='Total Activity Time'
AND TRUNC(DATES) >= TRUNC(SYSDATE - 31)
),
TARGETS AS
(
SELECT SCORECARD_GROUP, TARGET, OPS_GROUP, START_DATE, END_DATE FROM
    (SELECT DISTINCT
           CASE
             WHEN UPPER(SCORECARD_GROUP) LIKE 'OTHER%' THEN
              'All Other Tasks'
             ELSE
              SCORECARD_GROUP
           END AS SCORECARD_GROUP,
           TARGET,
           OPS_GROUP,
           START_DATE,
           END_DATE
      FROM MAXDAT.PP_BO_EVENT_TARGET_LKUP
     WHERE SCORECARD_FLAG = 'Y')
),
RESULTS AS
(
SELECT all_zeros.STAFF_ID,
       (
			SELECT DISTINCT STAFF_NATID
			FROM DP_SCORECARD.SCORECARD_HIERARCHY_SV
			WHERE STAFF_STAFF_ID=all_zeros.STAFF_ID
	   ) AS STAFF_NATID,
       all_zeros.DATES,
       all_zeros.EVENT_NAME_SORT AS EVENT_SORT_ID,
       all_zeros.EVENT_NAME,
       TOTAL_LOGGED.TOTAL_LOGGED,
       ACTIVITY_TIME.ACTIVITY_TIME,
	   CASE
		WHEN ACTIVITY_TIME.ACTIVITY_TIME IS NULL
			THEN NULL
		ELSE
			(TO_CHAR(TRUNC((ACTIVITY_TIME.ACTIVITY_TIME * 3600) / 3600), 'FM999999990')
			|| ':' || TO_CHAR(TRUNC(MOD((ACTIVITY_TIME.ACTIVITY_TIME * 3600), 3600) / 60), 'FM00')
			|| ':' || TO_CHAR(MOD((ACTIVITY_TIME.ACTIVITY_TIME * 3600), 60), 'FM00'))
		END 	AS ACTIVITY_TIME_IN_HHMMSS,
	   (
			SELECT DISTINCT TARGET
			FROM TARGETS
			WHERE SCORECARD_GROUP = TOTAL_LOGGED.EVENT_NAME AND
			TOTAL_LOGGED.DATES >= TARGETS.START_DATE
			AND (TARGETS.END_DATE IS NULL OR TOTAL_LOGGED.DATES <= TARGETS.END_DATE)
		) AS TARGET,
		(	SELECT DISTINCT OPS_GROUP
			FROM TARGETS
			WHERE SCORECARD_GROUP = all_zeros.EVENT_NAME
			AND  all_zeros.DATES BETWEEN TARGETS.START_DATE
			AND nvl(TARGETS.END_DATE,sysdate)
		) AS OPS_GROUP
  FROM all_zeros --ADHERENCE
  LEFT OUTER JOIN TOTAL_LOGGED
	ON TOTAL_LOGGED.STAFF_ID = all_zeros.STAFF_ID
	AND TOTAL_LOGGED.DATES = all_zeros.DATES
  LEFT OUTER JOIN ACTIVITY_TIME ACTIVITY_TIME
    ON TOTAL_LOGGED.STAFF_ID = ACTIVITY_TIME.STAFF_ID
   AND TOTAL_LOGGED.DATES = ACTIVITY_TIME.DATES
   AND TOTAL_LOGGED.EVENT_NAME = ACTIVITY_TIME.EVENT_NAME
--   where all_zeros.event_name <> 'Daily Adherence'
)
SELECT * FROM results;

GRANT SELECT ON DP_SCORECARD.SCORECARD_PROD_BO_SV TO MAXDAT;

GRANT SELECT ON DP_SCORECARD.SCORECARD_PROD_BO_SV TO MAXDAT_READ_ONLY;

GRANT SELECT ON DP_SCORECARD.SCORECARD_PROD_BO_SV TO MAXDAT_REPORTS;

GRANT SELECT ON DP_SCORECARD.SCORECARD_PROD_BO_SV TO DP_SCORECARD_READ_ONLY;

--GRANT SELECT ON DP_SCORECARD.SCORECARD_PROD_BO_SV TO RESTORE;