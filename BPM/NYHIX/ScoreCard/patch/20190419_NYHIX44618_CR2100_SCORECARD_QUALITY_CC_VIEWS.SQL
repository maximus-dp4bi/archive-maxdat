--DROP VIEW DP_SCORECARD.SCORECARD_QUALITY_QC_AGENT_MONTHLY_SV;

CREATE OR REPLACE FORCE VIEW DP_SCORECARD.SCORECARD_QUALITY_QC_AGENT_MONTHLY_SV
(QC_AGENT_NATID, DATES_MONTH_NUM, STAFF_STAFF_ID, STAFF_STAFF_NAME, TERMINATION_DATE, 
 MANAGER_NATID, MANAGER_STAFF_ID, MANAGER_NAME, SUPERVISOR_NATID, SUPERVISOR_STAFF_ID, 
 SUPERVISOR_NAME, COUNT_ALL_QC_SCORES, SUP_QC_SCORE_BY_AGENT_TOT, SUP_QC_SCORE_BY_SUP_TOT, SUP_QC_SCORE_BY_SUP_COUNT, 
 QC_DISPUTES, QC_EVAL_SCORE_TOT, QC_EVAL_COUNT)
BEQUEATH DEFINER
AS 
SELECT QC_AGENT_NATID,
DATES_MONTH_NUM,
    STAFF_STAFF_ID,STAFF_STAFF_NAME,TERMINATION_DATE,
    --BUILDING,DEPARTMENT,
    MANAGER_NATID,MANAGER_STAFF_ID,MANAGER_NAME,
    SUPERVISOR_NATID,SUPERVISOR_STAFF_ID, SUPERVISOR_NAME,
    --TOTAL_ALL_QC_SCORES,
    COUNT_ALL_QC_SCORES,SUP_QC_SCORE_BY_AGENT_TOT,SUP_QC_SCORE_BY_SUP_TOT,SUP_QC_SCORE_BY_SUP_COUNT,
    --SUP_QC_SCORE_BY_AGENT_AVG,SUP_QC_SCORE_BY_SUP_AVG,DEVIATION,
    QC_DISPUTES,QC_EVAL_SCORE_TOT,QC_EVAL_COUNT
FROM (
WITH JUST_MONTHS AS
(
    SELECT
		TO_CHAR(ADD_MONTHS (TRUNC (ADD_MONTHS (SYSDATE, -11), 'MM'), 1*LEVEL -1), 'MM/DD/YYYY') AS DATES,
		TO_CHAR(ADD_MONTHS (TRUNC (ADD_MONTHS (SYSDATE, -11), 'MM'), 1*LEVEL -1), 'MONTH') AS DATES_MONTH,
		TO_CHAR(ADD_MONTHS (TRUNC (ADD_MONTHS (SYSDATE, -11), 'MM'), 1*LEVEL -1), 'YYYYMM') AS DATES_MONTH_NUM,
		TO_CHAR(ADD_MONTHS (TRUNC (ADD_MONTHS (SYSDATE, -11), 'MM'), 1*LEVEL -1), 'MONTH YYYY') AS DATES_YEAR --,
	FROM DUAL
	CONNECT BY LEVEL <= MONTHS_BETWEEN(TRUNC(SYSDATE), 
		TRUNC (ADD_MONTHS (SYSDATE, -11), 'MM')) + 1
),
ENG_ACTUALS AS
( SELECT 
	EVALUATION_REFERENCE_ID,
	EVALUATION_REFERENCE,
	AGENT_ID,
	EVALUATOR_ID,
	SCORE_TOTAL,
	EVALUATION_DATE_TIME,
	EVALUATION_FORM,
	TO_CHAR(CASE 
		WHEN	(CALL_DATE IS NULL
				OR CALL_DATE = TO_DATE('1/1/1753','MM/DD/YYYY')
				)
				THEN EVALUATION_DATE_TIME
					ELSE CALL_DATE 
				END,'YYYYMM' )    
		AS DATES_MONTH_NUM
	-- CALL_DATE,
FROM DP_SCORECARD.ENGAGE_ACTUALS
WHERE ( DELETED_FLAG != 'Y' OR DELETED_FLAG IS NULL )
AND 	TO_CHAR(CASE 
		WHEN	(CALL_DATE IS NULL
				OR CALL_DATE = TO_DATE('1/1/1753','MM/DD/YYYY')
				)
				THEN EVALUATION_DATE_TIME
					ELSE CALL_DATE 
				END,'YYYYMM' )    
     BETWEEN TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE, -11), 'MM'),'YYYYMM')
     AND TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE, -0), 'MM'),'YYYYMM')
),
ENG_SUP AS
(
SELECT 
	EVALUATION_REFERENCE_ID, 
	EVALUATION_REFERENCE, 
	EVALUATOR_ID, 
	SCORE_TOTAL, 
	EVALUATION_DATE_TIME, 
	EVALUATION_FORM, 
	TO_CHAR(CASE 
		WHEN	(CALL_DATE IS NULL
				OR CALL_DATE = TO_DATE('1/1/1753','MM/DD/YYYY')
				)
				THEN EVALUATION_DATE_TIME
					ELSE CALL_DATE 
				END,'YYYYMM')   
		AS DATES_MONTH_NUM,
--	CALL_DATE, 
	QC_EVALUATION_ID 
FROM DP_SCORECARD.ENGAGE_ACTUALS_SUP
),
ENG_QC AS
(
SELECT 
	AGENT_ID, 
	TO_CHAR(EVALUATION_DATE_TIME,'YYYYMM') AS DATES_MONTH_NUM ,
	SUM(SCORE_TOTAL) AS QC_EVAL_SCORE_TOT, 
--	EVALUATION_REFERENCE_ID, 
	COUNT(DISTINCT EVALUATION_REFERENCE) AS QC_EVAL_COUNT 
--	EVALUATOR_ID, 
--	EVALUATION_FORM 
FROM DP_SCORECARD.ENGAGE_ACTUALS_QC_EVAL
WHERE EVALUATION_DATE_TIME >= TRUNC(ADD_MONTHS(SYSDATE, -11), 'MM')
GROUP BY AGENT_ID, TO_CHAR(EVALUATION_DATE_TIME,'YYYYMM') 
),
QC_AGENT_MONTHLY AS		
( -- This is a summary of evaluaions performed by the QC agent ( Evaluator_id )
	SELECT  
--		AGENT_ID, 
		EVALUATOR_ID 										AS QC_AGENT_ID,   --<< This is the QC Agent
		DATES_MONTH_NUM,
		SUM(CASE WHEN SCORECARD_SCORE_TYPE = 'QC' 
			THEN SCORE_TOTAL ELSE 0 END )    				AS TOT_QC_SCORE,   
		SUM(CASE WHEN SCORECARD_SCORE_TYPE = 'QC' 
			THEN 1 ELSE 0 END )            					AS COUNT_QC_SCORE, 
		-- COUNT(DISTINCT EVALUATION_REFERENCE) 				AS AUDITS,
        SUM(QC_SCORE_AGENT) 								AS QC_SCORE_AGENT,
        SUM(QC_SCORE_SUP) 									AS QC_SCORE_SUP,
        SUM(QC_SCORE_SUP_COUNT) 							AS QC_SCORE_SUP_COUNT
	FROM 	( SELECT
			--	EA1.AGENT_ID,
				EA1.EVALUATOR_ID,
				EA1.SCORE_TOTAL,
				EA1.DATES_MONTH_NUM,
				CASE WHEN F.SCORECARD_SCORE_TYPE = 'QC' 
					THEN F.SCORECARD_SCORE_TYPE 
					ELSE '?' 
				END 						AS SCORECARD_SCORE_TYPE,
				EA1.EVALUATION_REFERENCE,
                CASE WHEN SUP.QC_EVALUATION_ID IS NOT NULL THEN EA1.SCORE_TOTAL ELSE 0 END AS QC_SCORE_AGENT,
                CASE WHEN SUP.QC_EVALUATION_ID IS NOT NULL THEN SUP.SCORE_TOTAL ELSE 0 END AS QC_SCORE_SUP,
                CASE WHEN SUP.QC_EVALUATION_ID IS NOT NULL THEN 1               ELSE 0 END AS QC_SCORE_SUP_COUNT
			FROM ENG_ACTUALS EA1
			LEFT OUTER JOIN DP_SCORECARD.ENGAGE_FORM_TYPE F
				ON EA1.EVALUATION_FORM = F.EVALUATION_FORM
            LEFT OUTER JOIN DP_SCORECARD.ENGAGE_ACTUALS_SUP SUP
                ON EA1.EVALUATION_REFERENCE = SUP.QC_EVALUATION_ID 
			) 
            GROUP BY 
--				AGENT_ID,
				EVALUATOR_ID,
				DATES_MONTH_NUM
),
DISPUTES AS
(
  SELECT TO_CHAR(PT_ENTRY_DATE,'YYYYMM') DATES_MONTH_NUM,
  H.STAFF_NATID,
  COUNT(PT_ID) QC_DISPUTES
  FROM DP_SCORECARD.SC_PERFORMANCE_TRACKER T
  JOIN DP_SCORECARD.SCORECARD_HIERARCHY H ON T.STAFF_ID = H.STAFF_STAFF_ID
  JOIN DP_SCORECARD.SC_DISCUSSION_LKUP L ON L.DL_ID = T.DL_ID
  WHERE L.DISCUSSION_TOPIC = 'QC Dispute'
  AND  PT_ENTRY_DATE >= TRUNC(ADD_MONTHS(SYSDATE, -11), 'MM')
  GROUP BY TO_CHAR(PT_ENTRY_DATE,'YYYYMM'), H.STAFF_NATID
),
ALL_AGENTS_MONTHLY AS
( SELECT 	-- This will be used as the 'driver' table
			-- in the final query to ensure that we get
			-- 12 months for each QC agent
		 AGENTS.EVALUATOR_ID   AS QC_AGENT_ID,
         JUST_MONTHS.DATES_MONTH_NUM,
         HIERARCHY.*
  FROM 
	(
		(   SELECT EVALUATOR_ID --, DATES_MONTH_NUM 
			FROM ENG_ACTUALS
			UNION
			SELECT AGENT_ID --, DATES_MONTH_NUM 
			FROM ENG_QC
		) AGENTS
	JOIN 
		( SELECT H.manager_NATID, H.MANAGER_STAFF_ID, S1.LAST_NAME||', '||S1.FIRST_NAME AS MANAGER_NAME,
				H.SUPERVISOR_NATID, H.SUPERVISOR_STAFF_ID, S2.LAST_NAME||', '||S2.FIRST_NAME AS SUPERVISOR_NAME,
				H.STAFF_NATID, H.STAFF_STAFF_ID, S3.LAST_NAME||', '||S3.FIRST_NAME AS STAFF_STAFF_NAME,
				H.TERMINATION_DATE, H.BUILDING, H.DEPARTMENT
			FROM DP_SCORECARD.SCORECARD_HIERARCHY H
			JOIN DP_SCORECARD.SC_HIERARCHY_STAFF S1
			ON S1.STAFF_ID = H.MANAGER_STAFF_ID
			JOIN DP_SCORECARD.SC_HIERARCHY_STAFF S2
			ON S2.STAFF_ID = H.supervisor_STAFF_ID
			JOIN DP_SCORECARD.SC_HIERARCHY_STAFF S3
			ON S3.STAFF_ID = H.staff_STAFF_ID
			WHERE H.STAFF_STAFF_ID 
			IN ( SELECT MAX(STAFF_STAFF_ID)
				FROM DP_SCORECARD.SCORECARD_HIERARCHY
				GROUP BY staff_natID
				)		
	    ) HIERARCHY
	ON AGENTS.EVALUATOR_ID = HIERARCHY.STAFF_NATID
	)	
    CROSS JOIN JUST_MONTHS
),
FINAL_RESULTS AS
(
SELECT 	ALL_AGENTS_MONTHLY.QC_AGENT_ID          AS QC_AGENT_NATID,
        ALL_AGENTS_MONTHLY.DATES_MONTH_NUM      AS DATES_MONTH_NUM,
        ALL_AGENTS_MONTHLY.STAFF_STAFF_ID		AS STAFF_STAFF_ID,
        ALL_AGENTS_MONTHLY.STAFF_STAFF_NAME		AS STAFF_STAFF_NAME,
        ALL_AGENTS_MONTHLY.TERMINATION_DATE		AS TERMINATION_DATE,
        ALL_AGENTS_MONTHLY.BUILDING				AS BUILDING,
        ALL_AGENTS_MONTHLY.DEPARTMENT			AS DEPARTMENT,
        ALL_AGENTS_MONTHLY.MANAGER_NATID		AS MANAGER_NATID,
        ALL_AGENTS_MONTHLY.MANAGER_STAFF_ID		AS MANAGER_STAFF_ID,
        ALL_AGENTS_MONTHLY.MANAGER_NAME			AS MANAGER_NAME,
        ALL_AGENTS_MONTHLY.SUPERVISOR_NATID		AS SUPERVISOR_NATID,
        ALL_AGENTS_MONTHLY.SUPERVISOR_STAFF_ID	AS SUPERVISOR_STAFF_ID,
        ALL_AGENTS_MONTHLY.SUPERVISOR_NAME		AS SUPERVISOR_NAME,
        QC_AGENT_MONTHLY.TOT_QC_SCORE           AS TOTAL_ALL_QC_SCORES,
        QC_AGENT_MONTHLY.COUNT_QC_SCORE         AS COUNT_ALL_QC_SCORES, 
    --    QC_AGENT_MONTHLY.AUDITS                 AS AUDITS,
        QC_AGENT_MONTHLY.QC_SCORE_AGENT         AS SUP_QC_SCORE_BY_AGENT_TOT,
        QC_AGENT_MONTHLY.QC_SCORE_SUP           AS SUP_QC_SCORE_BY_SUP_TOT,
        QC_AGENT_MONTHLY.QC_SCORE_SUP_COUNT     AS SUP_QC_SCORE_BY_SUP_COUNT,
		--
		CASE WHEN NVL(QC_SCORE_SUP_COUNT,0) > 0
			THEN ROUND(NVL(QC_SCORE_AGENT,0)/QC_SCORE_SUP_COUNT,2)
			ELSE NULL END						AS SUP_QC_SCORE_BY_AGENT_AVG,
		CASE WHEN NVL(QC_SCORE_SUP_COUNT,0) > 0
			THEN ROUND(NVL(QC_SCORE_SUP,0)/QC_SCORE_SUP_COUNT,2) 
			ELSE NULL END						AS SUP_QC_SCORE_BY_SUP_AVG,
		CASE WHEN NVL(QC_SCORE_SUP_COUNT,0) > 0
			THEN 
			ROUND(NVL(QC_SCORE_SUP,0)/QC_SCORE_SUP_COUNT,2)
            - ROUND(NVL(QC_SCORE_AGENT,0)/QC_SCORE_SUP_COUNT,2)
			ELSE NULL		END					AS DEVIATION,
		-- 
		DISPUTES.QC_DISPUTES                    AS QC_DISPUTES, 
        ENG_QC.QC_EVAL_SCORE_TOT				AS QC_EVAL_SCORE_TOT,
        ENG_QC.QC_EVAL_COUNT					AS QC_EVAL_COUNT
FROM ALL_AGENTS_MONTHLY
LEFT OUTER JOIN QC_AGENT_MONTHLY
    ON ALL_AGENTS_MONTHLY.QC_AGENT_ID = QC_AGENT_MONTHLY.QC_AGENT_ID
    AND ALL_AGENTS_MONTHLY.DATES_MONTH_NUM = QC_AGENT_MONTHLY.DATES_MONTH_NUM
LEFT OUTER JOIN DISPUTES 
    ON ALL_AGENTS_MONTHLY.QC_AGENT_ID = DISPUTES.STAFF_NATID
    AND ALL_AGENTS_MONTHLY.DATES_MONTH_NUM = DISPUTES.DATES_MONTH_NUM
LEFT OUTER JOIN ENG_QC
    ON ALL_AGENTS_MONTHLY.QC_AGENT_ID = ENG_QC.AGENT_ID
    AND ALL_AGENTS_MONTHLY.DATES_MONTH_NUM = ENG_QC.DATES_MONTH_NUM
)
SELECT * FROM FINAL_RESULTS
ORDER BY 1,2 NULLS FIRST
);


GRANT SELECT ON DP_SCORECARD.SCORECARD_QUALITY_QC_AGENT_MONTHLY_SV TO MAXDAT;

GRANT SELECT ON DP_SCORECARD.SCORECARD_QUALITY_QC_AGENT_MONTHLY_SV TO MAXDAT_READ_ONLY;

GRANT SELECT ON DP_SCORECARD.SCORECARD_QUALITY_QC_AGENT_MONTHLY_SV TO MAXDAT_REPORTS;

GRANT SELECT ON DP_SCORECARD.SCORECARD_QUALITY_QC_AGENT_MONTHLY_SV TO DP_SCORECARD_READ_ONLY;

----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------

--DROP VIEW DP_SCORECARD.SCORECARD_QUALITY_QC_SUPERVISOR_MONTHLY_SV;

CREATE OR REPLACE FORCE VIEW DP_SCORECARD.SCORECARD_QUALITY_QC_SUPERVISOR_MONTHLY_SV
(DATES_MONTH_NUM, MONTH_NAME, MANAGER_NATID, MANAGER_STAFF_ID, MANAGER_NAME, 
 SUPERVISOR_NATID, SUPERVISOR_STAFF_ID, SUPERVISOR_NAME, COUNT_ALL_QC_SCORES, SUP_QC_SCORE_BY_AGENT_TOT, 
 SUP_QC_SCORE_BY_SUP_TOT, SUP_QC_SCORE_BY_SUP_COUNT, QC_DISPUTES, QC_EVAL_SCORE_TOT, QC_EVAL_COUNT)
BEQUEATH DEFINER
AS 
SELECT 
    DATES_MONTH_NUM, TO_CHAR(TO_DATE(DATES_MONTH_NUM,'YYYYMM'), 'Month YYYY') as MONTH_NAME,
    MANAGER_NATID, MANAGER_STAFF_ID, Manager_Name, 
    SUPERVISOR_NATID, SUPERVISOR_STAFF_ID, Supervisor_Name,
    sum(COUNT_ALL_QC_SCORES)        AS COUNT_ALL_QC_SCORES,
    sum(SUP_QC_SCORE_BY_AGENT_TOT)  AS SUP_QC_SCORE_BY_AGENT_TOT,
    sum(SUP_QC_SCORE_BY_SUP_TOT)    AS SUP_QC_SCORE_BY_SUP_TOT,
    sum(SUP_QC_SCORE_BY_SUP_COUNT)  AS SUP_QC_SCORE_BY_SUP_COUNT,
    sum(QC_DISPUTES)                AS QC_DISPUTES,
    sum(QC_EVAL_SCORE_TOT)          AS QC_EVAL_SCORE_TOT,
    sum(QC_EVAL_COUNT)              AS QC_EVAL_COUNT
FROM DP_SCORECARD.SCORECARD_QUALITY_QC_AGENT_MONTHLY_SV
WHERE SUPERVISOR_STAFF_ID IN ( SELECT STAFF_ID FROM SC_HIERARCHY_STAFF
WHERE TERMINATION_DATE IS NULL OR TERMINATION_DATE >= SYSDATE-30 )
GROUP BY
    DATES_MONTH_NUM, --TO_CHAR(TO_DATE(DATES_MONTH_NUM,'YYYYMM'),
    MANAGER_NATID, MANAGER_STAFF_ID, Manager_Name, 
    SUPERVISOR_NATID, SUPERVISOR_STAFF_ID, Supervisor_Name;


GRANT SELECT ON DP_SCORECARD.SCORECARD_QUALITY_QC_SUPERVISOR_MONTHLY_SV TO MAXDAT;

GRANT SELECT ON DP_SCORECARD.SCORECARD_QUALITY_QC_SUPERVISOR_MONTHLY_SV TO MAXDAT_READ_ONLY;

GRANT SELECT ON DP_SCORECARD.SCORECARD_QUALITY_QC_SUPERVISOR_MONTHLY_SV TO MAXDAT_REPORTS;

GRANT SELECT ON DP_SCORECARD.SCORECARD_QUALITY_QC_SUPERVISOR_MONTHLY_SV TO DP_SCORECARD_READ_ONLY;

GRANT SELECT ON DP_SCORECARD.SC_AUDIT_LWOP_20190419_BAK TO DP_SCORECARD_READ_ONLY;

GRANT SELECT ON DP_SCORECARD.SC_AUDIT_LWOP_AUD_20190419_BAK TO DP_SCORECARD_READ_ONLY;


