CREATE OR REPLACE Procedure DP_SCORECARD.Update_SC_AUDIT_LWOP
   ( IN_STAFF_ID            IN NUMBER,
    IN_LWOP_INSTANCE_ID     IN NUMBER,
    IN_DELETE_FLAG          IN NUMBER,
    IN_NATIONAL_ID          IN NUMBER,
    IN_HOURS                IN NUMBER )

AS

    LV_MANAGER_COUNT         NUMBER(5) := 0;
    LV_SUPERVISOR_COUNT      NUMBER(5) := 0;

    LV_NEGATIVE_BALANCE_FOUND  NUMBER(5) := 0;
    LV_HOURS   NUMBER(3,1)  := 0;
    LV_HIRE_DATE  DATE := sysdate;

    LV_ERR_CODE VARCHAR2(50) := NULL;
    LV_ERR_MSG  VARCHAR2(300) := NULL;

    LV_LWOP_OCCURRENCE_DATE  	DATE      := SYSDATE;
	LV_LWOP_CREATE_DATE			DATE      := SYSDATE;

    LV_SC_AUDIT_LWOP_REC  SC_AUDIT_LWOP%ROWTYPE;


BEGIN

    LV_ERR_MSG          := NULL;

    -- FIRST CHECK THE INPUT PARARMETERS

    IF  IN_STAFF_ID IS NULL
    OR  IN_LWOP_INSTANCE_ID IS NULL
--    OR IN_HOURS IS NULL OR IN_HOURS < 0
	OR IN_DELETE_FLAG IS NULL
    OR IN_NATIONAL_ID IS NULL
        THEN
        LV_ERR_MSG := 'Input Parameter Error';
        dbms_output.put_line(LV_ERR_MSG);
        RETURN;     --<< don't CHECK FOR ADDITIONAL ERRORS
    END IF;

	-- ***************************************************************
	-- NOTE: PER USER SPECIFICATIONS THE ONLY THING THIS PROCEDURE
	-- WILL BE USED FOR IS TO DELETE RECORDS.
	-- ***************************************************************

	IF NVL(IN_DELETE_FLAG,0) <> 1
	THEN
        LV_ERR_MSG := 'DELETE FLAG <> 1';
        dbms_output.put_line(LV_ERR_MSG);
        RETURN;     --<< don't CHECK FOR ADDITIONAL ERRORS
	END IF;

	-- SINCE ONLY 'DELETES' ARE ALLOWED THE ONLY THINGS THAT MATTER
	-- ARE:
	-- 	1.	IS THE USER AUTHORIZED
	-- 	2.	IS THE LWOP_OCCURRENCE_DTAE DATE FOR A SUPERVISOR IN RANGE

    -- DETERMINEIF THE USER MAKING THE CHANGE IS A MANAGER OR ABOVE
    -- OR A SUPERVISOR

    -- note because terminated staff records are frozen a current
    -- manager could still have a national id in the supervisor column

    SELECT COUNT(*) INTO LV_MANAGER_COUNT FROM
        (
        SELECT 'ADMIN' AS NAME FROM DP_SCORECARD.SCORECARD_HIERARCHY WHERE ADMIN_ID=IN_NATIONAL_ID
        UNION
        SELECT DISTINCT SR_DIRECTOR_NATID AS NAME FROM DP_SCORECARD.SCORECARD_HIERARCHY WHERE SR_DIRECTOR_NATID=IN_NATIONAL_ID
        AND TERMINATION_DATE IS NULL
        UNION
        SELECT DISTINCT DIRECTOR_NATID AS NAME FROM DP_SCORECARD.SCORECARD_HIERARCHY WHERE DIRECTOR_NATID=IN_NATIONAL_ID
        AND TERMINATION_DATE IS NULL
        UNION
        SELECT DISTINCT SR_MANAGER_NATID AS NAME FROM DP_SCORECARD.SCORECARD_HIERARCHY WHERE SR_MANAGER_NATID=IN_NATIONAL_ID
        AND TERMINATION_DATE IS NULL
        UNION
        SELECT DISTINCT MANAGER_NATID AS NAME FROM DP_SCORECARD.SCORECARD_HIERARCHY WHERE MANAGER_NATID=IN_NATIONAL_ID
        AND TERMINATION_DATE IS NULL
        );

    SELECT COUNT(*) INTO LV_SUPERVISOR_COUNT FROM
        (
        SELECT DISTINCT SUPERVISOR_NATID FROM DP_SCORECARD.SCORECARD_HIERARCHY
		WHERE SUPERVISOR_NATID=IN_NATIONAL_ID
        AND TERMINATION_DATE IS NULL
        );

    IF NVL(LV_MANAGER_COUNT,0) = 0
    AND NVL(LV_SUPERVISOR_COUNT,0) = 0
    THEN -- THE STAFF IS NOT AUTHORIZED
        LV_ERR_MSG := LV_ERR_MSG ||' ERROR '||IN_NATIONAL_ID||' IS NOT AUTHORIZED';
        dbms_output.put_line(LV_ERR_MSG);
        RETURN;     --<< don't CHECK FOR ADDITIONAL ERRORS
    END IF;


    BEGIN  -- DETERMIINE THE LWOP_DATE TO USE FOR THE LIMIT ON SUPERVISORS

    SELECT 	TRUNC(NVL(LWOP_OCCURRENCE_DATE,SYSDATE)),
			TRUNC(NVL(LWOP_CREATE_DATE,SYSDATE))
			INTO LV_LWOP_OCCURRENCE_DATE, LV_LWOP_CREATE_DATE
    FROM SC_AUDIT_LWOP
    WHERE LWOP_INSTANCE_ID = IN_LWOP_INSTANCE_ID;

	EXCEPTION

		WHEN OTHERS
		THEN
			LV_ERR_MSG := LV_ERR_MSG ||' ERROR LWOP DATES COULD NOT BE DETERMINED ' ;
			DBMS_OUTPUT.PUT_LINE(LV_ERR_MSG);
			RETURN;

    END;

	IF LV_MANAGER_COUNT > 0
	OR ( LV_SUPERVISOR_COUNT > 0
		AND ( LV_LWOP_OCCURRENCE_DATE > TRUNC(SYSDATE-7)
			OR LV_LWOP_CREATE_DATE > TRUNC(SYSDATE-7)
			)
		)
	THEN
		DELETE FROM SC_AUDIT_LWOP
		WHERE LWOP_INSTANCE_ID = IN_LWOP_INSTANCE_ID;

		COMMIT;
	END IF;

EXCEPTION

    -- PER SPCIFICATIONS DO NOT RAISE AN ERROR
    -- BECAUSE MICRO STARTEGY WILL CRASH

    WHEN OTHERS THEN

        NULL;

END;
/

show errors