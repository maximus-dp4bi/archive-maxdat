--Prefix CURR

CREATE OR REPLACE VIEW D_NYHIX_MFD_CURRENT_SV_V2
AS
  SELECT
    NYHIX_MFD_BI_ID,
    EEMFDB_ID,
    INSTANCE_STATUS,
    INSTANCE_START_DATE,
    INSTANCE_END_DATE,
    COMPLETE_DT,
    CANCEL_DT,
    CANCEL_REASON,
    CANCEL_METHOD,
    DCN,
    CREATE_DT,
    RECEIVED_DT,
    DOC_TYPE_CD,
    PAGE_COUNT,
    ECN,
    CHANNEL,
    KOFAX_DCN,
    BATCH_ID,
    BATCH_NAME,
    DOC_STATUS_CD,
    DOC_STATUS,
    DOC_STATUS_DT,
    DOC_UPDATE_DT,
    case when to_char(s2.staff_id) is not null then to_char(s2.staff_id) else DOC_UPDATED_BY_STAFF_ID end as DOC_UPDATED_BY_STAFF_ID,
    APP_DOC_DATA_ID,
    PRIORITY,
    FORM_TYPE_CD,
    FREE_FORM_TXT_IND,
    PREVIOUS_KOFAX_DCN,
    SCAN_DT,
    RELEASE_DT,
    APP_DOC_TRACKER_ID,
    ENV_STATUS_CD,
    ENV_STATUS,
    ENV_STATUS_DT,
    SLA_COMPLETE_DT,
    ENV_UPDATE_DT,
    case when to_char(s3.staff_id) is not null then to_char(s3.staff_id) else ENV_UPDATED_BY_STAFF_ID end as ENV_UPDATED_BY_STAFF_ID,
    case when to_char(s1.staff_id) is not null then to_char(s1.staff_id) else TRASHED_BY end as TRASHED_BY,
    SLA_COMPLETE,
    MAXE_ORIGINATION_DT,
    RESCANNED_IND,
    RETURNED_MAIL_IND,
    RETURNED_MAIL_REASON,
    RESCAN_COUNT,
    NOTE_ID,
    ASF_PROCESS_DOC,
    ASF_CANCEL_DOC,
    TRASHED_DT,
    TRASHED_IND,
    ORIG_DOC_TYPE_CD,
    ORIG_DOC_FORM_TYPE_CD,
    RESEARCH_REQ_IND,
    EXPEDIATED_IND,
    STG_EXTRACT_DATE,
    STG_LAST_UPDATE_DATE,
    AGE_IN_BUSINESS_DAYS CURR_AGE_IN_BUSINESS_DAYS,
    AGE_IN_CALENDAR_DAYS CURR_AGE_IN_CALENDAR_DAYS,
    TIMELINESS_STATUS CURR_TIMELINESS_STATUS,
    TIMELINESS_DAYS,
    TIMELINESS_DAYS_TYPE,
    TIMELINESS_DATE,
    JEOPARDY_FLAG CURR_JEOPARDY_FLAG,
    JEOPARDY_DAYS,
    JEOPARDY_DAYS_TYPE,
    JEOPARDY_DATE,
    SLA_RECEIVED_DATE,
    SLA_AGE_IN_BUSINESS_DAYS,
    SLA_TIMELINESS_STATUS,
    DOC_TYPE,
    FORM_TYPE,
    TARGET_DAYS
  FROM
    D_NYHIX_MFD_CURRENT_V2 C
  LEFT JOIN STAFF_KEY_LKUP S1 ON s1.staff_key = C.TRASHED_BY
  LEFT JOIN STAFF_KEY_LKUP S2 ON s2.staff_key = C.DOC_UPDATED_BY_STAFF_ID
  LEFT JOIN STAFF_KEY_LKUP S3 ON s3.staff_key = C.ENV_UPDATED_BY_STAFF_ID;

-- Grant permissions

grant execute on BPM_COMMON to MAXDAT;

--Replace History view
create or replace view D_NYHIX_MFD_HISTORY_SV_V2
as
select
  H.DMFDBD_ID,
  B.D_DATE,
  H.NYHIX_MFD_BI_ID,
  H.DNMFDDS_ID,
  H.DNMFDDT_ID,
  H.DNMFDES_ID,
  H.DNMFDFT_ID,
  H.DNMFDIS_ID,
  H.DOC_STATUS_DT,
  H.ENV_STATUS_DT,
  BPM_COMMON.BUS_DAYS_BETWEEN(D.CREATE_DT, B.D_DATE)  AGE_IN_BUSINESS_DAYS,
  case when (ROUND(TRUNC(B.D_DATE) - TRUNC(D.CREATE_DT))) > 0 then (ROUND(TRUNC(B.D_DATE) - TRUNC(D.CREATE_DT))) else 0 end as AGE_IN_CALENDAR_DAYS,
  case when (D.COMPLETE_DT is not null and B.D_DATE >= TRUNC(D.COMPLETE_DT)) or (D.CANCEL_DT is not null and B.D_DATE >= TRUNC(D.CANCEL_DT)) then 'N/A'
     when BPM_COMMON.BUS_DAYS_BETWEEN(D.CREATE_DT, B.D_DATE) >= D.JEOPARDY_DAYS then 'Y'
     else 'N' end as JEOPARDY_FLAG,
  case when ((D.COMPLETE_DT is not null and BPM_COMMON.BUS_DAYS_BETWEEN(D.CREATE_DT, B.D_DATE) <= D.TIMELINESS_DAYS) and B.D_DATE >= TRUNC(D.COMPLETE_DT)) then 'Timely'
     when ((D.COMPLETE_DT is not null and BPM_COMMON.BUS_DAYS_BETWEEN(D.CREATE_DT, B.D_DATE) > D.TIMELINESS_DAYS) and B.D_DATE >= TRUNC(D.COMPLETE_DT)) then 'Untimely'
     when (D.CANCEL_DT is not null and B.D_DATE >= TRUNC(D.CANCEL_DT)) then 'Not Required'
     else 'Not Complete' end as TIMELINESS_STATUS
from D_NYHIX_MFD_HISTORY_V2 H
join D_NYHIX_MFD_CURRENT_V2 D on (H.NYHIX_MFD_BI_ID = D.NYHIX_MFD_BI_ID)
join BPM_D_DATES B on (B.D_DATE >= H.BUCKET_START_DATE and B.D_DATE <= H.BUCKET_END_DATE);


--Replace fact View

Create or replace view F_NYHIX_MFD_BY_DATE_SV_V2
as
Select 
d.NYHIX_MFD_BI_ID,
bdd.D_DATE,
CASE WHEN bdd.D_DATE = TRUNC(d.CREATE_DT) THEN 1 else 0 END AS CREATION_COUNT,
CASE WHEN (bdd.D_DATE != TRUNC(d.COMPLETE_DT) OR d.COMPLETE_DT is NULL) THEN 1 ELSE 0 END AS INVENTORY_COUNT,
CASE WHEN bdd.D_DATE = TRUNC(d.COMPLETE_DT) THEN 1 else 0 END AS COMPLETION_COUNT,
CASE WHEN bdd.D_DATE = trunc(d.ENV_STATUS_DT)
            AND d.env_status = 'COMPLETEDRELEASED'
            AND d.cancel_dt is null
     THEN 1 
     ELSE 0
END AS SLA_SATISFIED_COUNT
FROM BPM_D_DATES bdd JOIN D_NYHIX_MFD_CURRENT_V2 d on (bdd.D_DATE >= TRUNC(D.INSTANCE_START_DATE) and bdd.D_DATE <= nvl(TRUNC(D.INSTANCE_END_DATE),sysdate));