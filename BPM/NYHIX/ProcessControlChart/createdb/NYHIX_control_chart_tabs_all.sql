CREATE TABLE BPM_D_CONTROL_CHART_PARAMETERS
  (
    D_CONTROL_CHART_ID        NUMBER NOT NULL ,
    D_PROCESS_GROUP_METRIC_ID NUMBER (19) NOT NULL ,
    REPORT_TYPE               VARCHAR2 (10) ,
    MU                        NUMBER (19,6) ,
    SIGMA                     NUMBER (19,6) ,
    UCL_OF_SIGMA              NUMBER (19,6) ,
    LCL_OF_SIGMA              NUMBER (19,6) ,
    UPPER_CONTROL_LIMIT       NUMBER (19,6) ,
    LOWER_CONTROL_LIMIT       NUMBER (19,6) ,
    CENTER_LINE               NUMBER (19,6) ,
    UPPER_SPECIFICATION_LIMIT NUMBER (19,6) ,
    LOWER_SPECIFICATION_LIMIT NUMBER (19,6) ,
    UPPER_WARNING_LIMIT       NUMBER (19,6) ,
    LOWER_WARNING_LIMIT       NUMBER (19,6) ,
    CP                        NUMBER (19,6) ,
    CPK                       NUMBER (19,6) ,
    NUMBER_OF_OBSERVATIONS    NUMBER ,
    PARAMETER_EFF_DT          DATE ,
    PARAMETER_END_DT          DATE ,
    CREATE_DATE               DATE ,
    LAST_MODIFIED_DATE        DATE ,
    CREATED_BY                VARCHAR2 (50) ,
    UPDATED_BY                VARCHAR2 (50)
  )
  TABLESPACE MAXDAT_DATA   ;

CREATE UNIQUE INDEX D_CONTROL_CHART_PARAMETERS_UK ON BPM_D_CONTROL_CHART_PARAMETERS
  ( D_CONTROL_CHART_ID ASC  )  TABLESPACE MAXDAT_INDX LOGGING ;
  ALTER TABLE BPM_D_CONTROL_CHART_PARAMETERS ADD CONSTRAINT D_CONTROL_CHART_PARAMETERS_PK PRIMARY KEY (  D_CONTROL_CHART_ID )   ;

CREATE SEQUENCE SEQ_D_CONTROL_CHART START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;
  
CREATE OR REPLACE TRIGGER BIU_D_CONTROL_CHART_PARAMETERS 
    BEFORE INSERT OR UPDATE ON BPM_D_CONTROL_CHART_PARAMETERS 
    FOR EACH ROW 
    ENABLE 
BEGIN
IF INSERTING AND :NEW.D_CONTROL_CHART_ID IS NULL THEN 
  SELECT SEQ_D_CONTROL_CHART.NEXTVAL INTO :NEW.D_CONTROL_CHART_ID FROM DUAL;    
	:NEW.CREATE_DATE := SYSDATE;  
	:NEW.CREATED_BY := USER;
END IF;
:NEW.UPDATED_BY := USER;
:NEW.LAST_MODIFIED_DATE := SYSDATE;
END; 
/

CREATE TABLE BPM_D_REPORTING_PERIOD
  ( D_REPORTING_PERIOD_ID NUMBER (19) NOT NULL ,
    TYPE                  VARCHAR2 (50) ,
    START_DATE            DATE ,
    END_DATE              DATE ,
    MONTH                 VARCHAR2 (50) ,
    YEAR                  NUMBER (19) ,
    CREATE_DATE           DATE ,
    CREATED_BY            VARCHAR2 (50) ,
    LAST_MODIFIED_DATE    DATE ,
    UPDATED_BY            VARCHAR2 (50)  )
  TABLESPACE MAXDAT_DATA LOGGING ENABLE ROW MOVEMENT ;
  
CREATE UNIQUE INDEX D_REPORTING_PERIOD_IDX ON BPM_D_REPORTING_PERIOD
  (  TYPE ASC , END_DATE DESC  )  TABLESPACE MAXDAT_INDX LOGGING ;
  ALTER TABLE BPM_D_REPORTING_PERIOD ADD CONSTRAINT D_REPORTING_PERIOD_PK PRIMARY KEY  ( D_REPORTING_PERIOD_ID )  ;
  ALTER TABLE BPM_D_REPORTING_PERIOD ADD CONSTRAINT D_REPORTING_PERIOD__UN UNIQUE  (START_DATE , END_DATE ) ;
  
CREATE SEQUENCE SEQ_D_REPORTING_PERIOD START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE OR REPLACE TRIGGER BIU_D_REPORTING_PERIOD 
    BEFORE INSERT OR UPDATE ON BPM_D_REPORTING_PERIOD 
    FOR EACH ROW 
    ENABLE 
BEGIN
IF INSERTING AND :NEW.D_REPORTING_PERIOD_ID IS NULL THEN 
          SELECT SEQ_D_REPORTING_PERIOD.NEXTVAL INTO :NEW.D_REPORTING_PERIOD_ID FROM DUAL;    
	:NEW.CREATE_DATE := SYSDATE;  
	:NEW.CREATED_BY := USER;
END IF;
:NEW.UPDATED_BY := USER;
:NEW.LAST_MODIFIED_DATE := SYSDATE;
END; 
/

CREATE TABLE BPM_D_METRIC_DEFINITION
  (
    D_METRIC_DEFINITION_ID NUMBER NOT NULL ,    
    NAME                   VARCHAR2 (50) ,
    LABEL                  VARCHAR2 (100) ,
    RECORD_EFF_DT          DATE ,
    RECORD_END_DT          DATE ,
    CREATE_DATE            DATE ,
    CREATED_BY             VARCHAR2 (50) ,
    LAST_MODIFIED_DATE     DATE ,
    UPDATED_BY             VARCHAR2 (50)
  )
  TABLESPACE MAXDAT_DATA;
  
  CREATE UNIQUE INDEX D_METRIC_DEFINITIONS_UK ON BPM_D_METRIC_DEFINITION
  ( D_METRIC_DEFINITION_ID ASC  )  TABLESPACE MAXDAT_INDX LOGGING ;  
  ALTER TABLE BPM_D_METRIC_DEFINITION ADD CONSTRAINT D_METRIC_DEFINITION_PK PRIMARY KEY(  D_METRIC_DEFINITION_ID);  
  ALTER TABLE BPM_D_METRIC_DEFINITION ADD CONSTRAINT D_METRIC_DEFINITION_NAME_UN UNIQUE(NAME);

CREATE SEQUENCE SEQ_D_METRIC_DEFINITION START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE OR REPLACE TRIGGER BIU_D_METRIC_DEFINITION 
    BEFORE INSERT OR UPDATE ON BPM_D_METRIC_DEFINITION 
    FOR EACH ROW 
    ENABLE 
BEGIN
IF INSERTING AND :NEW.D_METRIC_DEFINITION_ID IS NULL THEN 
	SELECT SEQ_D_METRIC_DEFINITION.NEXTVAL INTO :NEW.D_METRIC_DEFINITION_ID FROM DUAL;
	:NEW.CREATE_DATE := SYSDATE;  
	:NEW.CREATED_BY := USER;
END IF;
:NEW.UPDATED_BY := USER;
:NEW.LAST_MODIFIED_DATE := SYSDATE;
END; 
/

CREATE TABLE BPM_D_PROCESS_DEFINITION
  (
    D_PROCESS_DEFINITION_ID NUMBER NOT NULL ,        
    PROCESS_NAME      VARCHAR2 (100) ,
    LABEL             VARCHAR2 (100) ,
    RECORD_EFF_DT          DATE ,
    RECORD_END_DT          DATE ,
    CREATE_DATE            DATE ,
    CREATED_BY             VARCHAR2 (50) ,
    LAST_MODIFIED_DATE     DATE ,
    UPDATED_BY             VARCHAR2 (50)
  )
  TABLESPACE MAXDAT_DATA;

 CREATE UNIQUE INDEX D_PROCESS_DEFINITION_UK ON BPM_D_PROCESS_DEFINITION
  ( D_PROCESS_DEFINITION_ID ASC  )  TABLESPACE MAXDAT_INDX LOGGING ;  
  ALTER TABLE BPM_D_PROCESS_DEFINITION ADD CONSTRAINT D_PROCESS_DEFINITION_PK PRIMARY KEY(D_PROCESS_DEFINITION_ID);  
  ALTER TABLE BPM_D_PROCESS_DEFINITION ADD CONSTRAINT D_PROCESS_DEFINITION_UN UNIQUE(PROCESS_NAME);

CREATE SEQUENCE SEQ_D_PROCESS_DEFINITION START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE OR REPLACE TRIGGER BIU_D_PROCESS_DEFINITION 
    BEFORE INSERT OR UPDATE ON BPM_D_PROCESS_DEFINITION 
    FOR EACH ROW 
    ENABLE 
BEGIN
IF INSERTING AND :NEW.D_PROCESS_DEFINITION_ID IS NULL THEN 
	SELECT SEQ_D_PROCESS_DEFINITION.NEXTVAL INTO :NEW.D_PROCESS_DEFINITION_ID FROM DUAL;
	:NEW.CREATE_DATE := SYSDATE;  
	:NEW.CREATED_BY := USER;
END IF;
:NEW.UPDATED_BY := USER;
:NEW.LAST_MODIFIED_DATE := SYSDATE;
END; 
/

CREATE TABLE BPM_D_PROCESS_GROUP
  (
    D_PROCESS_GROUP_ID NUMBER NOT NULL ,            
    GROUP_NAME         VARCHAR2 (100) ,
    LABEL              VARCHAR2 (100) ,
    RECORD_EFF_DT      DATE ,
    RECORD_END_DT      DATE ,
    CREATE_DATE        DATE ,
    CREATED_BY         VARCHAR2 (50) ,
    LAST_MODIFIED_DATE  DATE ,
    UPDATED_BY         VARCHAR2 (50)
  )
  TABLESPACE MAXDAT_DATA;

 CREATE UNIQUE INDEX D_PROCESS_GROUP_UK ON BPM_D_PROCESS_GROUP
  ( D_PROCESS_GROUP_ID ASC  )  TABLESPACE MAXDAT_INDX LOGGING ;  
  ALTER TABLE BPM_D_PROCESS_GROUP ADD CONSTRAINT D_PROCESS_GROUP_PK PRIMARY KEY(D_PROCESS_GROUP_ID);  
  ALTER TABLE BPM_D_PROCESS_GROUP ADD CONSTRAINT D_PROCESS_GROUP_UN UNIQUE(GROUP_NAME);

CREATE SEQUENCE SEQ_D_PROCESS_GROUP START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE OR REPLACE TRIGGER BIU_D_PROCESS_GROUP
    BEFORE INSERT OR UPDATE ON BPM_D_PROCESS_GROUP
    FOR EACH ROW 
    ENABLE 
BEGIN
IF INSERTING AND :NEW.D_PROCESS_GROUP_ID IS NULL THEN 
	SELECT SEQ_D_PROCESS_GROUP.NEXTVAL INTO :NEW.D_PROCESS_GROUP_ID FROM DUAL;
	:NEW.CREATE_DATE := SYSDATE;  
	:NEW.CREATED_BY := USER;
END IF;
:NEW.UPDATED_BY := USER;
:NEW.LAST_MODIFIED_DATE := SYSDATE;
END; 
/

CREATE TABLE BPM_D_PROCESS_GROUP_DETAIL
  (
    D_PROCESS_GROUP_DETAIL_ID NUMBER NOT NULL ,            
    D_PROCESS_DEFINITION_ID NUMBER NOT NULL,
    D_PROCESS_GROUP_ID NUMBER NOT NULL,
    NAME               VARCHAR2 (100) ,
    LABEL              VARCHAR2 (100) ,
    RECORD_EFF_DT      DATE ,
    RECORD_END_DT      DATE ,
    CREATE_DATE        DATE ,
    CREATED_BY         VARCHAR2 (50) ,
    LAST_MODIFIED_DATE  DATE ,
    UPDATED_BY         VARCHAR2 (50)
  )
  TABLESPACE MAXDAT_DATA;


 CREATE UNIQUE INDEX D_PROCESS_GROUP_DETAIL_UK ON BPM_D_PROCESS_GROUP_DETAIL
  ( D_PROCESS_GROUP_DETAIL_ID ASC  )  TABLESPACE MAXDAT_INDX LOGGING ;  
  ALTER TABLE BPM_D_PROCESS_GROUP_DETAIL ADD CONSTRAINT D_PROCESS_GROUP_DETAIL_PK PRIMARY KEY(D_PROCESS_GROUP_DETAIL_ID);  
  ALTER TABLE BPM_D_PROCESS_GROUP_DETAIL ADD CONSTRAINT D_PROCESS_GROUP_DETAIL_UN UNIQUE(D_PROCESS_DEFINITION_ID,D_PROCESS_GROUP_ID,NAME);

  ALTER TABLE BPM_D_PROCESS_GROUP_DETAIL ADD CONSTRAINT D_PROCESS_PROCESS_DEF_FK FOREIGN KEY ( D_PROCESS_DEFINITION_ID ) REFERENCES BPM_D_PROCESS_DEFINITION ( D_PROCESS_DEFINITION_ID ) NOT DEFERRABLE ;
  ALTER TABLE BPM_D_PROCESS_GROUP_DETAIL ADD CONSTRAINT D_PROCESS_PROCESS_GRP_FK FOREIGN KEY ( D_PROCESS_GROUP_ID ) REFERENCES BPM_D_PROCESS_GROUP ( D_PROCESS_GROUP_ID ) NOT DEFERRABLE ;


CREATE SEQUENCE SEQ_D_PROCESS_GROUP_DETAIL START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE OR REPLACE TRIGGER BIU_D_PROCESS_GROUP_DETAIL
    BEFORE INSERT OR UPDATE ON BPM_D_PROCESS_GROUP_DETAIL
    FOR EACH ROW 
    ENABLE 
BEGIN
IF INSERTING AND :NEW.D_PROCESS_GROUP_DETAIL_ID IS NULL THEN 
	SELECT SEQ_D_PROCESS_GROUP_DETAIL.NEXTVAL INTO :NEW.D_PROCESS_GROUP_DETAIL_ID FROM DUAL;
	:NEW.CREATE_DATE := SYSDATE;  
	:NEW.CREATED_BY := USER;
END IF;
:NEW.UPDATED_BY := USER;
:NEW.LAST_MODIFIED_DATE := SYSDATE;
END; 
/

CREATE TABLE BPM_D_PROCESS_GROUP_METRIC
  (
    D_PROCESS_GROUP_METRIC_ID   NUMBER (19) NOT NULL ,        
    D_METRIC_DEFINITION_ID      NUMBER NOT NULL , 
    D_PROCESS_GROUP_DETAIL_ID   NUMBER NOT NULL,
    UPPER_SPECIFICATION_LIMIT   NUMBER (19,6) ,
    LOWER_SPECIFICATION_LIMIT   NUMBER (19,6) ,
    CALCULATE_CONTROL_CHART_IND VARCHAR2 (1) ,
    TREND_INDICATOR_CALCULATION VARCHAR2 (20) ,    
    RECORD_EFF_DT               DATE ,
    RECORD_END_DT               DATE ,
    CREATE_DATE                 DATE ,
    CREATED_BY                  VARCHAR2 (50) ,
    LAST_MODIFIED_DATE          DATE ,
    UPDATED_BY                  VARCHAR2 (50)
  )
  TABLESPACE MAXDAT_DATA;

 CREATE UNIQUE INDEX D_PROCESS_GROUP_METRIC_UK ON BPM_D_PROCESS_GROUP_METRIC
  ( D_PROCESS_GROUP_METRIC_ID ASC  )  TABLESPACE MAXDAT_INDX LOGGING ;  
  
CREATE INDEX D_PROCESS_METRIC_IDXv1 ON BPM_D_PROCESS_GROUP_METRIC (D_METRIC_DEFINITION_ID ASC )TABLESPACE MAXDAT_INDX LOGGING ;
CREATE INDEX D_PROCESS_METRIC_IDXv2 ON BPM_D_PROCESS_GROUP_METRIC (D_PROCESS_GROUP_DETAIL_ID ASC )TABLESPACE MAXDAT_INDX LOGGING ;
ALTER TABLE BPM_D_PROCESS_GROUP_METRIC ADD CONSTRAINT D_PROCESS_METRIC_PK PRIMARY KEY(D_PROCESS_GROUP_METRIC_ID);
ALTER TABLE BPM_D_PROCESS_GROUP_METRIC ADD CONSTRAINT D_PROCESS_METRIC_UN UNIQUE( D_METRIC_DEFINITION_ID , D_PROCESS_GROUP_DETAIL_ID, RECORD_EFF_DT);

ALTER TABLE BPM_D_CONTROL_CHART_PARAMETERS ADD CONSTRAINT D_CCP_METRIC_PROCESS_FK FOREIGN KEY ( D_PROCESS_GROUP_METRIC_ID ) REFERENCES BPM_D_PROCESS_GROUP_METRIC ( D_PROCESS_GROUP_METRIC_ID ) NOT DEFERRABLE ;
ALTER TABLE BPM_D_PROCESS_GROUP_METRIC ADD CONSTRAINT D_PROCESS_METRIC_MDEF_FK FOREIGN KEY ( D_METRIC_DEFINITION_ID ) REFERENCES BPM_D_METRIC_DEFINITION ( D_METRIC_DEFINITION_ID ) NOT DEFERRABLE ;
ALTER TABLE BPM_D_PROCESS_GROUP_METRIC ADD CONSTRAINT D_PROCESS_METRIC_GRPDTL_FK FOREIGN KEY ( D_PROCESS_GROUP_DETAIL_ID ) REFERENCES BPM_D_PROCESS_GROUP_DETAIL ( D_PROCESS_GROUP_DETAIL_ID ) NOT DEFERRABLE ;

CREATE SEQUENCE SEQ_D_PROCESS_GROUP_METRIC START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE OR REPLACE TRIGGER BIU_D_PROCESS_GROUP_METRIC
    BEFORE INSERT OR UPDATE ON BPM_D_PROCESS_GROUP_METRIC
    FOR EACH ROW 
    ENABLE 
BEGIN
IF INSERTING AND :NEW.D_PROCESS_GROUP_METRIC_ID IS NULL THEN 
	SELECT SEQ_D_PROCESS_GROUP_METRIC.NEXTVAL INTO :NEW.D_PROCESS_GROUP_METRIC_ID FROM DUAL;
	:NEW.CREATE_DATE := SYSDATE;  
	:NEW.CREATED_BY := USER;
END IF;
:NEW.UPDATED_BY := USER;
:NEW.LAST_MODIFIED_DATE := SYSDATE;
END; 
/

CREATE TABLE BPM_F_PROCESS_METRIC
  (
    F_PROCESS_METRIC_ID         NUMBER (19) NOT NULL ,
    D_PROCESS_GROUP_METRIC_ID   NUMBER (19) NOT NULL ,
    D_REPORTING_PERIOD_ID         NUMBER (19) NOT NULL ,
    ACTUAL_VALUE                  NUMBER (19,6) ,
    ACTUAL_TREND_INDICATOR        NUMBER (1) ,
    IS_TREND_INDICATOR_CALCULATED VARCHAR2(1) ,
    CREATE_DATE                   DATE ,
    CREATED_BY                    VARCHAR2 (50) ,
    LAST_MODIFIED_DATE            DATE ,
    UPDATED_BY                    VARCHAR2 (50)
  )
  TABLESPACE MAXDAT_DATA LOGGING ENABLE ROW MOVEMENT ;
  
CREATE SEQUENCE SEQ_F_PROCESS_METRIC START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE INDEX F_PROCESS_METRIC_IDXv2 ON BPM_F_PROCESS_METRIC (D_PROCESS_GROUP_METRIC_ID ASC )TABLESPACE MAXDAT_INDX LOGGING ;
CREATE INDEX F_PROCESS_METRIC_IDXv3 ON BPM_F_PROCESS_METRIC (D_REPORTING_PERIOD_ID ASC) TABLESPACE MAXDAT_INDX LOGGING ;  
ALTER TABLE BPM_F_PROCESS_METRIC ADD CONSTRAINT F_PROCESS_METRIC_PK PRIMARY KEY (F_PROCESS_METRIC_ID);
ALTER TABLE BPM_F_PROCESS_METRIC ADD CONSTRAINT F_PROCESS_METRIC_UN UNIQUE(D_PROCESS_GROUP_METRIC_ID , D_REPORTING_PERIOD_ID);

ALTER TABLE BPM_F_PROCESS_METRIC ADD CONSTRAINT F_PROCESS_METRIC_PGM_FK FOREIGN KEY ( D_PROCESS_GROUP_METRIC_ID ) REFERENCES BPM_D_PROCESS_GROUP_METRIC ( D_PROCESS_GROUP_METRIC_ID ) NOT DEFERRABLE ;
ALTER TABLE BPM_F_PROCESS_METRIC ADD CONSTRAINT F_PROCESS_METRIC_RPT_FK FOREIGN KEY ( D_REPORTING_PERIOD_ID ) REFERENCES BPM_D_REPORTING_PERIOD ( D_REPORTING_PERIOD_ID ) NOT DEFERRABLE ;

CREATE OR REPLACE TRIGGER BIU_F_PROCESS_METRIC 
    BEFORE INSERT OR UPDATE ON BPM_F_PROCESS_METRIC 
    FOR EACH ROW 
    ENABLE 
BEGIN
IF INSERTING AND :NEW.F_PROCESS_METRIC_ID IS NULL THEN 
          SELECT SEQ_F_PROCESS_METRIC.NEXTVAL INTO :NEW.F_PROCESS_METRIC_ID FROM DUAL;
	:NEW.CREATE_DATE := SYSDATE;
	:NEW.CREATED_BY := USER;
END IF;
:NEW.UPDATED_BY := USER;
:NEW.LAST_MODIFIED_DATE := SYSDATE;
END;
/

