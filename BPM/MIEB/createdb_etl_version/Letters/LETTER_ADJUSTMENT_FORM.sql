CREATE SEQUENCE  "SEQ_LAFORM_ID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 581 CACHE 5 NOORDER  NOCYCLE ;

GRANT SELECT ON "SEQ_LAFORM_ID" TO &role_name;

CREATE TABLE LETTER_ADJUSTMENT_FORM
  (
  LETTER_ADJUSTMENT_FORM_ID   NUMBER(32)
,LMDEF_ID          NUMBER(32)
,PROGRAM_CON_XWALK_CODE        VARCHAR2(32)
--,LETTER_TYPE_NAME              VARCHAR2(100)
,ADJUSTMENT_DATE               DATE
,LETTER_ADJUST_REASON_CODE     VARCHAR2(32)
,ADJUSTMENT_COUNT              NUMBER(15)
,COMMENTS                      VARCHAR2(2000)
,CREATED_BY                    VARCHAR2(100)
,CREATION_DATE                 DATE
,UPDATED_BY                    VARCHAR2(100)
,UPDATED_DATE                  DATE
,DB_CREATED_BY                 VARCHAR2(100)
,DB_CREATION_DATE              DATE
,DB_UPDATED_BY                 VARCHAR2(100)
,DB_UPDATED_DATE               DATE
) TABLESPACE &tablespace_name ;

ALTER TABLE "LETTER_ADJUSTMENT_FORM" ADD CONSTRAINT "ADJUST_PK" PRIMARY KEY ("LETTER_ADJUSTMENT_FORM_ID") USING INDEX TABLESPACE &tablespace_name  ENABLE;
  
GRANT SELECT ON "LETTER_ADJUSTMENT_FORM" TO &role_name;

CREATE OR REPLACE TRIGGER "BIU_LETTER_ADJUST_FORM" 
 BEFORE INSERT OR UPDATE
 ON LETTER_ADJUSTMENT_FORM
 FOR EACH ROW
DECLARE
    v_seq_id     LETTER_ADJUSTMENT_FORM.LETTER_ADJUSTMENT_FORM_ID%TYPE;
BEGIN
  IF INSERTING THEN
    IF :NEW.LETTER_ADJUSTMENT_FORM_ID IS NULL THEN
      SElECT SEQ_LAFORM_ID.NEXTVAL
      INTO v_seq_id
      FROM dual;

      :NEW.LETTER_ADJUSTMENT_FORM_ID       := v_seq_id;
      :NEW.DB_CREATED_BY := USER;
      :NEW.DB_CREATION_DATE := SYSDATE;
    END IF;
  END IF;
  IF UPDATING OR INSERTING THEN
     :NEW.DB_UPDATED_BY := USER;
     :NEW.DB_UPDATED_DATE := SYSDATE;
  END IF;
    
END BIU_LETTER_ADJUST_FORM;
/
ALTER TRIGGER "BIU_LETTER_ADJUST_FORM" ENABLE;
/

CREATE OR REPLACE VIEW LETTER_ADJUSTMENT_FORM_BASIC_SV
AS
SELECT 
  LETTER_ADJUSTMENT_FORM_ID   
,  LMDEF_ID    LETTER_DEFINITION_ID 
,  PROGRAM_CON_XWALK_CODE        
--,  LETTER_TYPE_NAME              
,  ADJUSTMENT_DATE               
,  LETTER_ADJUST_REASON_CODE     
,  ADJUSTMENT_COUNT              
,  COMMENTS                      
,  CREATED_BY                    
,  CREATION_DATE                 
,  UPDATED_BY                    
,  UPDATED_DATE
FROM LETTER_ADJUSTMENT_FORM;

GRANT SELECT ON "LETTER_ADJUSTMENT_FORM_BASIC_SV" TO &role_name;

CREATE OR REPLACE VIEW LETTER_ADJUSTMENT_FORM_SV
AS
SELECT 
 LAF.LETTER_ADJUSTMENT_FORM_ID 
, LIG.REPORT_LABEL INVOICE_GROUP
, LAF.ADJUSTMENT_DATE
, LAF.CREATED_BY
, LAF.CREATION_DATE
, LAF.UPDATED_BY
, LAF.UPDATED_DATE
, LT.REPORT_LABEL LETTER_TYPE
, LAF.ADJUSTMENT_COUNT
, LAR.REPORT_LABEL ADJUSTMENT_REASON
, PSX.REPORT_LABEL PROGRAM_CON_XWALK
, LAF.COMMENTS
, LT.LETTER_TYPE_NAME
, LAR.LETTER_ADJUST_REASON_CODE
, LIG.LETTER_INVOICE_GROUP_CODE
, LAF.PROGRAM_CON_XWALK_CODE
, LAF.LMDEF_ID
, LD.PROJECT_CODE
, LD.PROGRAM_CODE
FROM LETTER_ADJUSTMENT_FORM LAF
LEFT JOIN D_LETTER_TYPE_SV LT ON LT.LETTER_DEFINITION_ID = LAF.LMDEF_ID AND (LT.PROGRAM_CON_XWALK_CODE = LAF.PROGRAM_CON_XWALK_CODE OR LAF.PROGRAM_CON_XWALK_CODE IS NULL)
LEFT JOIN D_LETTER_DEFINITION LD ON LD.LMDEF_ID = LAF.LMDEF_ID
LEFT JOIN D_LETTER_INVOICE_GROUP LIG ON LIG.LETTER_INVOICE_GROUP_CODE = LD.LETTER_INVOICE_GROUP_CODE
LEFT JOIN D_LETTER_ADJUST_REASON LAR ON LAR.LETTER_ADJUST_REASON_CODE = LAF.LETTER_ADJUST_REASON_CODE
LEFT JOIN D_SUBPROGRAM_CON_XWALK PSX ON PSX.PROGRAM_CON_XWALK_CODE = LAF.PROGRAM_CON_XWALK_CODE 
WHERE SYSDATE BETWEEN LD.EFFECTIVE_FROM_DATE AND LD.EFFECTIVE_THRU_DATE
AND SYSDATE BETWEEN LIG.EFFECTIVE_FROM_DATE AND LIG.EFFECTIVE_THRU_DATE
AND LD.PROJECT_CODE = 'MIEB'
AND LD.PROGRAM_CODE = 'MEDICAID'
AND (LAR.LETTER_ADJUST_REASON_CODE IS NULL OR SYSDATE BETWEEN LAR.EFFECTIVE_FROM_DATE AND LAR.EFFECTIVE_THRU_DATE)
;

GRANT SELECT ON "LETTER_ADJUSTMENT_FORM_SV" TO &role_name;

