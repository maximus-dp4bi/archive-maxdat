CREATE TABLE D_LETTER_REQUEST_LINK 
(
  DP_LETTER_LINK_ID NUMBER NOT NULL 
, LMLINK_ID NUMBER(18, 0) 
, LETTER_REQUEST_ID NUMBER(18, 0) 
, REFERENCE_TYPE VARCHAR2(40 BYTE) 
, REFERENCE_ID NUMBER(18, 0) 
, CREATED_BY VARCHAR2(80 BYTE) 
, CREATE_TS DATE 
, UPDATED_BY VARCHAR2(80 BYTE) 
, UPDATE_TS DATE 
, ADDITIONAL_REFERENCE_TYPE VARCHAR2(30 BYTE) 
, ADDITIONAL_REFERENCE_ID NUMBER(18, 0) 
, CLIENT_ID NUMBER(18, 0) 
, CLIENT_ENROLL_STATUS_ID NUMBER(18, 0) 
, DP_UPDATED_BY VARCHAR2(80 BYTE) 
, DP_DATE_UPDATED DATE 
, DP_CREATED_BY VARCHAR2(80 BYTE) 
, DP_DATE_CREATED DATE 
) 
TABLESPACE MAXDAT_MIEB_DATA;

CREATE UNIQUE INDEX D_LETTER_REQUEST_LINK_PK ON D_LETTER_REQUEST_LINK (DP_LETTER_LINK_ID ASC) TABLESPACE MAXDAT_MIEB_DATA;
ALTER TABLE D_LETTER_REQUEST_LINK ADD CONSTRAINT D_LETTER_REQUEST_LINK_PK PRIMARY KEY (DP_LETTER_LINK_ID) USING INDEX D_LETTER_REQUEST_LINK_PK ENABLE;

CREATE UNIQUE INDEX D_LETTER_REQUEST_LINK_UK ON D_LETTER_REQUEST_LINK (LMLINK_ID ASC) TABLESPACE MAXDAT_MIEB_DATA;

CREATE SEQUENCE D_SEQ_LETTERLINK_ID INCREMENT BY 1 MAXVALUE 9999999999999999999999999999 MINVALUE 1 CACHE 20;

create or replace trigger BUIR_LETTERLINK
 BEFORE INSERT OR UPDATE
 ON d_letter_request_link
 FOR EACH ROW
DECLARE
    v_seq_id     D_LETTER_REQUEST_LINK.dp_letter_link_id%TYPE;
BEGIN

  IF INSERTING THEN

      IF :NEW.dp_letter_link_id IS NULL THEN
        SElECT D_SEQ_LETTERLINK_ID.NEXTVAL
        INTO v_seq_id
        FROM dual;

        :NEW.dp_letter_link_id       := v_seq_id;
      END IF;

    :NEW.dp_created_by := user;
    :NEW.dp_date_created := sysdate;

  END IF;

  :NEW.dp_updated_by := user;
  :NEW.dp_date_updated := sysdate;
  
END BUIR_LETTERLINK;
/

GRANT SELECT ON D_LETTER_REQUEST_LINK TO MAXDAT_MIEB_READ_ONLY;

