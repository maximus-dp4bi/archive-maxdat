DROP TABLE MI_JOB;
CREATE TABLE MI_JOB (
  JOB_ID NUMBER(38) NOT NULL
, JOB_NAME VARCHAR2(100) NOT NULL
, JOB_DESCRIPTION VARCHAR2(500)
, DAILY_RUN_ENABLED     VARCHAR2(1)
, DAILY_RUN_SCRIPT VARCHAR2(1000)
, ENABLED VARCHAR2(1)
, CREATE_DT DATE NOT NULL
, CREATED_BY VARCHAR2(50) NOT NULL
, UPDATE_DT DATE NOT NULL
, UPDATED_BY VARCHAR2(50) NOT NULL
)
       TABLESPACE MAXDAT_MIEB_DATA 
        LOGGING 
;        

ALTER TABLE MI_JOB 
    ADD CONSTRAINT MI_JOB_PK PRIMARY KEY ( JOB_ID ) ;

ALTER TABLE MI_JOB 
    ADD CONSTRAINT MI_JOB_UN UNIQUE ( JOB_NAME ) ;

DROP SEQUENCE SEQ_MI_JOB_ID;
CREATE SEQUENCE SEQ_MI_JOB_ID;  

CREATE OR REPLACE TRIGGER BIU_MI_JOB
    BEFORE INSERT OR UPDATE ON MI_JOB 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.JOB_ID IS NULL THEN 
          SELECT SEQ_MI_JOB_ID.NEXTVAL INTO :NEW.JOB_ID FROM DUAL;
END IF;
    IF :NEW.CREATE_DT IS NULL THEN
      :NEW.CREATE_DT := SYSDATE;
    END IF;
    
    IF :NEW.CREATED_BY IS NULL THEN
       :NEW.CREATED_BY := USER;
    END IF;
    
  IF :NEW.ENABLED IS NULL THEN
    :NEW.ENABLED := 'N';
  END IF;
  :NEW.ENABLED := UPPER(:NEW.ENABLED);
  IF :NEW.DAILY_RUN_ENABLED IS NULL THEN
    :NEW.DAILY_RUN_ENABLED := 'N';
  END IF;
  :NEW.DAILY_RUN_ENABLED := UPPER(:NEW.DAILY_RUN_ENABLED);
  :NEW.UPDATED_BY := USER;
  :NEW.UPDATE_DT := SYSDATE;
END;
/

CREATE OR REPLACE VIEW MI_JOB_SV AS 
SELECT * FROM MI_JOB;

-- select * from MI_JOB
-- TRUNCATE TABLE MI_JOB

GRANT SELECT, INSERT, UPDATE, DELETE ON MI_JOB TO SD25802, SR18956, LG74078, TM151500;
GRANT SELECT ON MI_JOB TO MAXDAT_MIEB_READ_ONLY;
GRANT SELECT ON MI_JOB_SV TO MAXDAT_MIEB_READ_ONLY;

