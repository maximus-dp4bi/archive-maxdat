CREATE OR REPLACE TRIGGER "BIU_LAF_RECORD_HIST"
 AFTER INSERT OR UPDATE
 ON LETTER_ADJUSTMENT_FORM
 FOR EACH ROW
DECLARE
V_CHANGES VARCHAR2(4000);
V_COMMENTS VARCHAR2(4000);
V_LETTER_TYPE VARCHAR2(100);
V_CHRONO_CHANGES VARCHAR2(4000);
V_CHRONO_COMMENTS VARCHAR2(4000);
V_SEQ_ID NUMBER;
BEGIN
  BEGIN
  SELECT REPORT_LABEL
  INTO V_LETTER_TYPE FROM D_LETTER_TYPE_SV LT
  WHERE LT.LETTER_DEFINITION_ID = :NEW.LMDEF_ID
        AND (LT.PROGRAM_CON_XWALK_CODE = :NEW.PROGRAM_CON_XWALK_CODE OR :NEW.PROGRAM_CON_XWALK_CODE IS NULL)
        AND ROWNUM = 1;
  EXCEPTION WHEN NO_DATA_FOUND THEN
       V_LETTER_TYPE := NULL;
  END;

  IF UPDATING THEN
    IF :NEW.COMMENTS <> :OLD.COMMENTS THEN
        V_COMMENTS := 'By ' || :NEW.UPDATED_BY || ' on ' || TO_CHAR(:NEW.UPDATED_DATE,'dd-Mon-yyyy hh24:mi:ss') || ':' || chr(10) || :NEW.COMMENTS || chr(10) ;
        V_CHRONO_COMMENTS := SUBSTR(V_COMMENTS, 1, 3999);
    END IF;

    V_CHANGES := 'Changes:';
    IF :OLD.ADJUSTMENT_DATE <> :NEW.ADJUSTMENT_DATE THEN
        V_CHANGES := V_CHANGES ||'Adjustment Date: ' || TO_CHAR(:NEW.ADJUSTMENT_DATE,'dd-Mon-yyyy hh24:mi:ss') || CHR(10);
    END IF;
    IF :OLD.LMDEF_ID <> :NEW.LMDEF_ID OR :OLD.PROGRAM_CON_XWALK_CODE <> :NEW.PROGRAM_CON_XWALK_CODE THEN
      V_CHANGES := V_CHANGES || 'Letter Type: ' ||V_LETTER_TYPE || CHR(10);
    END IF;
    IF :OLD.ADJUSTMENT_COUNT <> :NEW.ADJUSTMENT_COUNT THEN
      V_CHANGES := V_CHANGES || 'Amount: ' ||:NEW.ADJUSTMENT_COUNT || CHR(10);
    END IF;
    IF :OLD.LETTER_ADJUST_REASON_CODE <> :NEW.LETTER_ADJUST_REASON_CODE THEN
      V_CHANGES := V_CHANGES || 'Reason: ' ||:NEW.LETTER_ADJUST_REASON_CODE || CHR(10);
    END IF;
    V_CHANGES := V_CHANGES || 'Comments: ' || :NEW.COMMENTS || CHR(10);
    IF V_CHANGES <> 'Changes:' then
      V_CHANGES := 'Changes by ' || :NEW.UPDATED_BY || ' on ' || TO_CHAR(:NEW.UPDATED_DATE,'dd-Mon-yyyy hh24:mi:ss') || ':' || chr(10) || SUBSTR(V_CHANGES,9) || CHR(10);
    END IF;
  END IF;
  IF INSERTING THEN
    V_COMMENTS := 'By ' || :NEW.UPDATED_BY || ' on ' || TO_CHAR(:NEW.UPDATED_DATE,'dd-Mon-yyyy hh24:mi:ss') || ':' || chr(10) || :NEW.COMMENTS || chr(10) ;
    V_COMMENTS := SUBSTR(V_COMMENTS, 1, 3999);
    V_CHANGES := 'First Entry by ' || :NEW.UPDATED_BY || ' on ' || TO_CHAR(:NEW.UPDATED_DATE,'dd-Mon-yyyy hh24:mi:ss') || ':' || chr(10);
    V_CHANGES := V_CHANGES ||'Adjustment Date: ' || TO_CHAR(:NEW.ADJUSTMENT_DATE,'dd-Mon-yyyy hh24:mi:ss') || CHR(10);
    V_CHANGES := V_CHANGES || 'Letter Type: ' ||V_LETTER_TYPE || CHR(10);
    V_CHANGES := V_CHANGES || 'Amount: ' ||:NEW.ADJUSTMENT_COUNT || CHR(10);
    V_CHANGES := V_CHANGES || 'Reason: ' ||:NEW.LETTER_ADJUST_REASON_CODE || CHR(10);
    V_CHANGES := V_CHANGES || 'Comments: ' || :NEW.COMMENTS || CHR(10);
    V_CHANGES := SUBSTR(V_CHANGES,1,3999);
  END IF;

  IF V_CHANGES IS NOT NULL OR V_COMMENTS IS NOT NULL THEN
      SElECT SEQ_LAFORM_HIST_ID.NEXTVAL
      INTO v_seq_id
      FROM dual;
      IF UPDATING THEN
        BEGIN
          SELECT CHRONO_CHANGES,CHRONO_COMMENTS INTO V_CHRONO_CHANGES, V_CHRONO_COMMENTS
           FROM
            (SELECT
            LETTER_ADJUSTMENT_FORM_ID
            , HIST_CREATION_DATE
            , CHRONO_CHANGES
            , CHRONO_COMMENTS
            , ROW_NUMBER() OVER (PARTITION BY LETTER_ADJUSTMENT_FORM_ID ORDER BY LETTER_ADJUSTMENT_FORM_HIST_ID DESC) ROWN
            FROM LETTER_ADJUSTMENT_FORM_HIST ) LAFH
            WHERE ROWN = 1
            AND LAFH.LETTER_ADJUSTMENT_FORM_ID = :NEW.LETTER_ADJUSTMENT_FORM_ID;
         EXCEPTION WHEN NO_dATA_FOUND THEN
           NULL;
         END;
       END IF;

    INSERT INTO LETTER_ADJUSTMENT_FORM_HIST
    (
        LETTER_ADJUSTMENT_FORM_HIST_ID
    ,LETTER_ADJUSTMENT_FORM_ID
    ,LMDEF_ID
    ,PROGRAM_CON_XWALK_CODE
    --,LETTER_TYPE_NAME
    ,ADJUSTMENT_DATE
    ,LETTER_ADJUST_REASON_CODE
    ,ADJUSTMENT_COUNT
    ,COMMENTS
    ,CREATED_BY
    ,CREATION_DATE
    ,UPDATED_BY
    ,UPDATED_DATE
    ,DB_CREATED_BY
    ,DB_CREATION_DATE
    ,DB_UPDATED_BY
    ,DB_UPDATED_DATE
    ,HIST_CREATION_DATE
    ,CHRONO_CHANGES
    ,CHRONO_COMMENTS
    )
    VALUES
    (
        v_seq_id
    ,:NEW.LETTER_ADJUSTMENT_FORM_ID
    ,:NEW.LMDEF_ID
    ,:NEW.PROGRAM_CON_XWALK_CODE
    ,:NEW.ADJUSTMENT_DATE
    ,:NEW.LETTER_ADJUST_REASON_CODE
    ,:NEW.ADJUSTMENT_COUNT
    ,:NEW.COMMENTS
    ,:NEW.CREATED_BY
    ,:NEW.CREATION_DATE
    ,:NEW.UPDATED_BY
    ,:NEW.UPDATED_DATE
    ,:NEW.DB_CREATED_BY
    ,:NEW.DB_CREATION_DATE
    ,:NEW.DB_UPDATED_BY
    ,:NEW.DB_UPDATED_DATE
    ,SYSDATE
    ,SUBSTR(V_CHANGES || V_CHRONO_CHANGES,1,3999)
    ,SUBSTR(V_COMMENTS || V_CHRONO_COMMENTS,1,3999)
    );
  END IF;
EXCEPTION WHEN OTHERS THEN
    DECLARE
      V_CODE VARCHAR2(30);
      V_ERROR VARCHAR2(200);
    BEGIN
        V_CODE := SQLCODE;
        V_ERROR := SUBSTR(SQLERRM,1,200);
              INSERT INTO  CORP_ETL_ERROR_LOG(ERR_DATE
          ,ERR_LEVEL
          ,PROCESS_NAME
          ,JOB_NAME
          ,NR_OF_ERROR
          ,ERROR_DESC
          ,ERROR_CODES
          ,DRIVER_TABLE_NAME
          ,DRIVER_KEY_NUMBER
      ) VALUES (
          SYSDATE
          , 'CRITICAL'
          , 'BIU_LAF_RECORD_HIST'
          , 'BIU_LAF_RECORD_HIST'
          , 1
          , V_ERROR
          , V_CODE
          , 'LETTER_ADJUSTMENT_FORM_HIST'
          , :NEW.LETTER_ADJUSTMENT_FORM_ID
      );
    END;
END BIU_LAF_RECORD_HIST;
/

