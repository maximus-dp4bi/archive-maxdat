CREATE OR REPLACE VIEW F_MW_DAILY_SUMMARY_SV
AS
  SELECT SI.STEP_INSTANCE_ID MW_BI_ID ,
    SI.STEP_DEFINITION_ID AS TASK_TYPE_ID ,
    D.D_DATE ,
    DECODE(SI.ESCALATED_IND, 1, 'Y', 'N') AS ESCALATED_FLAG ,
    CASE
      WHEN SI.STATUS = 'COMPLETED'
      THEN SI.COMPLETED_TS
      ELSE NULL
    END COMPLETE_DATE ,
    CASE
      WHEN SI.STATUS = 'TERMINATED'
      THEN SI.COMPLETED_TS
      ELSE NULL
    END CANCEL_WORK_DATE ,
    SI.CREATE_TS CREATE_DATE ,
    SI.CREATE_TS INSTANCE_START_DATE ,
    SI.COMPLETED_TS INSTANCE_END_DATE ,
    SI.STATUS AS CURR_TASK_STATUS ,
    CASE
      WHEN D.D_DATE = TRUNC(SI.CREATE_TS)
      THEN 1
      ELSE 0
    END AS CREATION_COUNT ,
    CASE
      WHEN D.D_DATE = TRUNC(SI.COMPLETED_TS)
      THEN 0
      ELSE 1
    END AS INVENTORY_COUNT ,
    CASE
      WHEN SI.STATUS IN ('TERMINATED', 'COMPLETED')
      AND D.D_DATE = TRUNC(SI.COMPLETED_TS)
      THEN 1
      ELSE 0
    END AS COMPLETION_COUNT
  FROM maxdat_support.D_DATES D
  JOIN EB.STEP_INSTANCE SI ON (D_DATE BETWEEN TRUNC(SI.CREATE_TS) AND COALESCE(TRUNC(SI.COMPLETED_TS),TRUNC(sysdate)))
  JOIN step_definition sd  ON (si.step_definition_id = sd.step_definition_id AND sd.step_type_cd IN ('VIRTUAL_HUMAN_TASK','HUMAN_TASK')); 
  
  GRANT SELECT ON MAXDAT_SUPPORT.F_MW_DAILY_SUMMARY_SV TO MAXDAT_REPORTS ;