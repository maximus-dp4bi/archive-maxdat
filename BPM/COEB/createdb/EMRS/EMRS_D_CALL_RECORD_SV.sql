CREATE OR REPLACE VIEW EMRS_D_CALL_RECORD_SV AS
SELECT 
CA.CALL_DATE
, CA.CALL_TYPE_CD
, CA.call_type
, CA.CALLER_TYPE_CD
, CA.caller_type
, CA.CALL_ACTION
, CA.CALLER_PHONE
, CA.ext_telephony_ref
, CA.caller_first_name
, CA.caller_last_name
, CA.parent_call_record_id
, CA.CREATE_TS
, CA.UPDATE_TS
, CA.created_by
, CA.updated_by
, CA.note_ref_id
, CA.CALL_sTART_TS
, CA.CALL_END_TS
, CA.RECORD_NAME
, CA.CALL_RECORD_ID
, CA.EVENT_ID
, CA.EVENT_TYPE_CD
, CA.CONTEXT
, CA.SELECTION_TXN_ID
, CA.SELECTION_SEGMENT_ID
, CA.WORKER_ID
, CA.WORKER_USERNAME
, CA.CASE_ID
, CA.CLIENT_ID
, CA.TRANSACTION_TYPE_CD
, CASE WHEN CA.CONTEXT IN ('INFO_REQUEST','HANDBOOK_REQUEST','DOCT_NOT_IN_PLAN', 'MATERIAL_REQUEST', 'MAIL_RETURNED') AND COALESCE(CON.PLAN_SERVICE_TYPE_CD,CA.PLAN_SERVICE_TYPE_CD,'ACC') = 'ACC' THEN nvl(CA.PLAN_ID,0)
       WHEN CA.CONTEXT IN ('CHP_INFO_REQUEST') THEN NVL(CA.PLAN_ID,'1')
       WHEN COALESCE(CON.PLAN_SERVICE_TYPE_CD,CA.PLAN_SERVICE_TYPE_CD,'ACC') = 'ACC' THEN NVL(CA.PLAN_ID,0)
       WHEN COALESCE(CON.PLAN_SERVICE_TYPE_CD,CA.PLAN_SERVICE_TYPE_CD, 'ACC') = 'CHP' THEN NVL(CA.PLAN_ID,1)
       ELSE NVL(CA.PLAN_ID,0)
       END PLAN_ID
, CASE WHEN CA.CONTEXT IN ('INFO_REQUEST','HANDBOOK_REQUEST') AND COALESCE(CON.PLAN_SERVICE_TYPE_CD,CA.PLAN_SERVICE_TYPE_CD) = 'ACC' THEN nvl(CA.PLAN_ID_EXT,'0')
       WHEN CA.CONTEXT IN ('CHP_INFO_REQUEST') THEN nvl(CA.PLAN_ID_EXT,'1')
       WHEN COALESCE(CON.PLAN_SERVICE_TYPE_CD,CA.PLAN_SERVICE_TYPE_CD) = 'ACC' THEN nvl(CA.PLAN_ID_EXT,'0')
       WHEN COALESCE(CON.PLAN_SERVICE_TYPE_CD,CA.PLAN_SERVICE_TYPE_CD) = 'CHP' THEN nvl(CA.PLAN_ID_EXT,'1')
       ELSE nvl(CA.PLAN_ID_EXT,'0')
       END PLAN_ID_EXT
, CA.CONTRACT_ID
, CA.PROVIDER_ID
, CA.PROVIDER_ID_EXT
, CA.TO_PLAN_ID
, CA.TO_PLAN_ID_EXT
, CA.TO_CONTRACT_ID
, CA.TO_PROVIDER_ID
, CA.TO_PROVIDER_ID_EXT
, CASE WHEN CA.CONTEXT IN ('INFO_REQUEST','HANDBOOK_REQUEST','DOCT_NOT_IN_PLAN', 'MATERIAL_REQUEST', 'MAIL_RETURNED') THEN COALESCE(CON.PLAN_SERVICE_TYPE_CD,CA.PLAN_SERVICE_TYPE_CD,'ACC')
       WHEN CA.CONTEXT IN ('CHP_INFO_REQUEST') THEN COALESCE(CON.PLAN_SERVICE_TYPE_CD,CA.PLAN_SERVICE_TYPE_CD,'CHP')
       ELSE COALESCE(CON.PLAN_SERVICE_TYPE_CD,CA.PLAN_SERVICE_TYPE_CD,'ACC')
       END PLAN_sERVICE_TYPE_CD
, CA.SELECTION_START_DATE
, CA.SELECTION_END_DATE
, CA.DISENROLL_REASON_CD_1
, CA.DISENROLL_REASON_CD_2
, CA.SELECTION_SOURCE_CD
, CA.CHOICE_REASON_CD
, CA.ERROR_CODE
, CA.ACCEPTED_DATE
FROM
(
SELECT /*+ INDEX_DESC(CR) INDEX_desc(SELC) INDEX_DESC(ST) index_desc(crl) index_desc(CSCL) index_desc(SMID) */
CR.CALL_RECORD_ID
, CR.CALL_TYPE_CD
, ct.report_label call_type 
, CR.CALLER_TYPE_CD
, crt.report_label caller_type 
, CASE WHEN E2.EVENT_ID IS NULL THEN E.CONTEXT ELSE E2.CONTEXT END CALL_ACTION
, CR.WORKER_ID
, CR.WORKER_USERNAME
, CR.LANGUAGE_CD
, CR.CALL_START_TS
, CR.CALL_END_TS
, TRUNC(CR.CALL_START_TS) CALL_DATE
, CR.CALLER_PHONE
, cr.ext_telephony_ref 
, cr.caller_first_name 
, cr.caller_last_name
, cr.parent_call_record_id
, CR.CREATE_TS
, CR.UPDATE_TS
, cr.created_by 
, cr.updated_by
, null note_ref_id
, CRL.CASE_ID
, CRL.EXT_CASE_NUM
, CRL.CLIENT_ID
, CRL.EXT_CLIENT_NUM
, CRL.CLIENT_LAST_NAME
, CRL.CLIENT_FIRST_NAME
, CRL.CLIENT_MI
, CASE WHEN E2.EVENT_ID IS NULL THEN E.EVENT_ID ELSE E2.EVENT_ID END EVENT_ID
, CASE WHEN E2.EVENT_ID IS NULL THEN E.EVENT_TYPE_CD ELSE E2.EVENT_TYPE_CD END EVENT_TYPE_CD
, CASE WHEN E2.EVENT_ID IS NULL THEN E.CONTEXT ELSE E2.CONTEXT END CONTEXT
, CASE WHEN E2.EVENT_ID IS NULL THEN E.COMMENTS ELSE E2.COMMENTS END COMMENTS
, CASE WHEN E2.EVENT_ID IS NULL THEN E.CREATE_TS ELSE E2.CREATE_TS END EVENT_CREATE_TS
, CASE WHEN E2.EVENT_ID IS NULL THEN E.REF_TYPE ELSE E2.REF_TYPE END EVENT_REF_TYPE
, CASE WHEN E2.EVENT_ID IS NULL THEN E.REF_ID ELSE E2.REF_ID END EVENT_REF_ID
, CR.CREATED_BY RECORD_NAME
, COALESCE(CASE WHEN ST.TRANSACTION_TYPE_CD IN ('NewEnrollment') then ST.SELECTION_SEGMENT_ID ELSE ST.PRIOR_SELECTION_SEGMENT_ID END, SELC.SELECTION_SEGMENT_ID) SELECTION_SEGMENT_ID
, ST.PRIOR_SELECTION_SEGMENT_ID SELP_SELECTION_SEGMENT_ID
, SELC.SELECTION_SEGMENT_ID SELC_SELECTION_SEGMENT_ID
, COALESCE(CASE WHEN ST.TRANSACTION_TYPE_CD IN ('NewEnrollment') then ST.START_DATE ELSE ST.PRIOR_SELECTION_START_DATE END, SELC.START_DATE) SELECTION_START_DATE
, COALESCE(CASE WHEN ST.TRANSACTION_TYPE_CD IN ('NewEnrollment') then ST.END_DATE ELSE ST.PRIOR_SELECTION_END_DATE END, SELC.END_DATE) SELECTION_END_DATE
, ST.SELECTION_TXN_ID
, ST.TRANSACTION_TYPE_CD
, ST.SELECTION_SOURCE_CD
, COALESCE(CASE WHEN ST.TRANSACTION_TYPE_CD IN ('NewEnrollment') then ST.CONTRACT_ID else ST.PRIOR_CONTRACT_ID END, SELC.CONTRACT_ID) CONTRACT_ID
, COALESCE(CASE WHEN ST.TRANSACTION_TYPE_CD IN ('NewEnrollment') then ST.PLAN_ID ELSE ST.PRIOR_PLAN_ID END, SELC.PLAN_ID) PLAN_ID
, COALESCE(CASE WHEN ST.TRANSACTION_TYPE_CD IN ('NewEnrollment') then ST.PLAN_ID_EXT ELSE ST.PRIOR_PLAN_ID_EXT END, SELC.PLAN_ID_EXT) PLAN_ID_EXT
, CASE WHEN ST.TRANSACTION_TYPE_CD IN ('NewEnrollment') then ST.PROVIDER_ID else ST.PRIOR_PROVIDER_ID END PROVIDER_ID
, COALESCE(CASE WHEN ST.TRANSACTION_TYPE_CD IN ('NewEnrollment') then ST.PROVIDER_ID_EXT ELSE ST.PRIOR_PROVIDER_ID_EXT END, SELC.PROVIDER_ID_EXT) PROVIDER_ID_EXT
, CASE WHEN ST.TRANSACTION_TYPE_CD IN ('Transfer','PCPTransfer') then ST.PLAN_ID else null end TO_PLAN_ID
, CASE WHEN ST.TRANSACTION_TYPE_CD IN ('Transfer','PCPTransfer') then ST.PLAN_ID_EXT else null end TO_PLAN_ID_EXT
, CASE WHEN ST.TRANSACTION_TYPE_CD IN ('Transfer','PCPTransfer') then ST.CONTRACT_ID else null end TO_CONTRACT_ID
, CASE WHEN ST.TRANSACTION_TYPE_CD IN ('Transfer','PCPTransfer') then ST.PROVIDER_ID else null end TO_PROVIDER_ID
, CASE WHEN ST.TRANSACTION_TYPE_CD IN ('Transfer','PCPTransfer') then ST.PROVIDER_ID_EXT else null end TO_PROVIDER_ID_EXT
, ST.PRIOR_PROVIDER_ID TO_
, EAID.SUBPROGRAM_CODES PLAN_SERVICE_TYPE_CD
, SMID.ERROR_CODE 
, ST.CHOICE_REASON_CD
, ST.DISENROLL_REASON_CD_1
, ST.DISENROLL_REASON_CD_2
, CSCL.CSCL_CLNT_CLIENT_ID
, (SELECT MAX(TRUNC(sh.create_ts))
      FROM &schema_name..selection_txn_status_history sh
      WHERE sh.selection_txn_id = st.selection_txn_id AND sh.status_cd = 'acceptedByState'
      ) ACCEPTED_DATE
, ROW_NUMBER() OVER(PARTITION BY NVL(E2.EVENT_ID,E.EVENT_ID) ORDER BY ABS(SELC.CLIENT_ID - CRL.CLIENT_ID), (SELC.CREATE_TS - CR.CALL_START_TS)) ROWN
FROM &schema_name..CALL_RECORD CR
JOIN &schema_name..enum_call_type ct                     ON (cr.call_type_cd = ct.value)
LEFT JOIN &schema_name..enum_caller_type crt       ON (cr.caller_type_cd = crt.value)
LEFT JOIN &schema_name..CALL_RECORD_LINK CRL ON CRL.CALL_RECORD_ID = CR.CALL_RECORD_ID
LEFT JOIN &schema_name..EVENT E ON E.CALL_RECORD_ID = CR.CALL_RECORD_ID AND E.EVENT_TYPE_CD = 'INBOUND_CALL'
LEFT JOIN &schema_name..EVENT E2 ON E2.CALL_RECORD_ID = CR.CALL_RECORD_ID AND E2.EVENT_TYPE_CD NOT IN ( 'INBOUND_CALL','LINK_TO_CALL')
LEFT JOIN &schema_name..CASE_CLIENT CSCL ON CSCL.CSCL_CASE_ID = CRL.CASE_ID 
                              AND CSCL.STATUS_BEGIN_NDT < CSCL.STATUS_END_NDT 
                              AND CSCL.STATUS_BEGIN_NDT <= CR.CALL_START_NDT 
                              AND CSCL.STATUS_END_NDT > CR.CALL_START_NDT
LEFT JOIN &schema_name..ENUM_AID_CATEGORY EAID ON EAID.VALUE = CSCL.CSCL_ADLK_ID
LEFT JOIN &schema_name..SELECTION_SEGMENT SELC ON (SELC.CLIENT_ID = CSCL.CSCL_CLNT_CLIENT_ID AND SELC.PROGRAM_TYPE_CD = 'MEDICAID' 
                                AND SELC.PLAN_TYPE_CD = 'MEDICAL'
                                AND (LEAST(SELC.CREATE_TS, SELC.START_DATE) <= CR.CALL_sTART_TS)
                                )
LEFT JOIN &schema_name..SELECTION_TXN ST ON NVL(E2.REF_TYPE,e.ref_type) = 'SELECTION_TXN' and NVL(E2.REF_ID,e.ref_id) = st.selection_txn_id
LEFT JOIN &schema_name..SELECTION_MISSING_INFO_DETAILS SMID ON SMID.MISSING_INFO_ID = ST.MISSING_INFO_ID AND SMID.ERROR_CODE = 'M028' 
WHERE 1=1
AND CR.CALL_RECORD_ID >= 26100000
AND CR.CALL_END_TS IS NOT NULL
--AND CR.CALL_RECORD_ID = 26051113--26051085
) CA
LEFT JOIN &schema_name..CONTRACT CON ON CON.CONTRACT_ID = CA.CONTRACT_ID
WHERE CA.ROWN = 1
AND CA.CALL_DATE >= GREATEST(TO_DATE('8/1/2018','MM/DD/YYYY'), ADD_MONTHS(TRUNC(SYSDATE), -13))
;

GRANT SELECT ON maxdat_support.EMRS_D_CALL_RECORD_SV TO MAXDAT_REPORTS;
