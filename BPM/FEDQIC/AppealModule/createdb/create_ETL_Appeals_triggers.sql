alter session set plsql_code_type = native;

create or replace trigger TRG_BIU_CORP_ETL_APPEAL
before insert or update on CORP_ETL_APPEAL_WIP
for each row
declare
  v_instance_start_date date := null;
  v_instance_end_date date := null;

begin

  if inserting then

    if
	  :new.CEAP_ID is null then  :new.CEAP_ID := SEQ_CEAP_ID.nextval;
    end if;

    if
	   :new.STG_EXTRACT_DATE is null then :new.STG_EXTRACT_DATE  := sysdate;
    end if;

	/*
	If inserting and :new.change_flag is null, then ‘N’
    If updating  and :new.change_flag is null and :old.change_flag not ‘I’,  then ‘U’

    Then when you are inserting new records (MW_Insert.ktr) you force it to ‘I’

    When you are inserting the records that may be updated (while moving Active instances from BPM to WIP), you let the trigger set it to ‘N’

    Then when the update rules fire,  for an insert, it stays as I, for records that are not inserts, it will update it to ‘U’
	*/  
	--if
    --This condition applies to Active instances moved from BPM to WIP stage table.
	 -- :new.CHANGE_FLAG is null then :new.CHANGE_FLAG := 'N';
	--end if;

  end if;

  :new.STG_LAST_UPDATE_DATE := sysdate;
 -- if updating then
     --This condition applies to Active instances taht are updated only; Not for new inserts that get updated later.
--     if coalesce(:new.CHANGE_FLAG,'Z') <> 'I' and coalesce(:old.CHANGE_FLAG,'Z') <> 'I' then :new.CHANGE_FLAG := 'U';
--	   end if;
--  end if;

--  :new.instance_start_date := :new.CREATE_DATE;
--  :new.instance_end_date := coalesce(:new.COMPLETE_DATE, :new.CANCEL_WORK_DATE);

end;
/

create or replace trigger TRG_AI_CORP_ETL_APPEAL_Q
after insert on CORP_ETL_APPEAL
for each row

declare

  v_bsl_id number := 2004; -- 'FEDQIC_ETL'
  v_bil_id number := 3; -- 'Task ID'
  v_data_version number := 3; -- CDATA for varchar2 only and added STG_LAST_UPDATE_DATE

  v_identifier varchar2(100) := null;
  v_xml_string_new clob := null;
  v_sql_code number := null;
  v_log_message clob := null;
  v_event_date date := null;

begin

  v_event_date := :new.STG_LAST_UPDATE_DATE;
  v_identifier := :new.APPEAL_ID;

  /*
  Include:
    CEAP_ID
    STG_LAST_UPDATE_DATE
  */
  v_xml_string_new :=
    '<?xml version="1.0"?>
    <ROWSET>
      <ROW>
        <CEAP_ID>' || :new.CEAP_ID || '</CEAP_ID>
         <APPEAL_ID><![CDATA[' || :new.APPEAL_ID || ']]></APPEAL_ID>
<CREATE_DATE>' || to_char(:new.CREATE_DATE,BPM_COMMON.GET_DATE_FMT) || '</CREATE_DATE>
<COMPLETE_DATE>' || to_char(:new.COMPLETE_DATE,BPM_COMMON.GET_DATE_FMT) || '</COMPLETE_DATE>
<CANCELLED_DATE>' || to_char(:new.CANCELLED_DATE,BPM_COMMON.GET_DATE_FMT) || '</CANCELLED_DATE>
<ADJUDICATOR><![CDATA[' || :new.ADJUDICATOR || ']]></ADJUDICATOR> 
<DEADLINE_DATE>' || to_char(:new.DEADLINE_DATE,BPM_COMMON.GET_DATE_FMT) || '</DEADLINE_DATE> 
<APPEAL_ISSUE><![CDATA[' || :new.APPEAL_ISSUE || ']]></APPEAL_ISSUE>
<APPEAL_ITEM><![CDATA[' || :new.APPEAL_ITEM || ']]></APPEAL_ITEM>  
<APPEAL_NUMBER><![CDATA[' || :new.APPEAL_NUMBER || ']]></APPEAL_NUMBER> 
<APPEAL_PRIORITY_ID><![CDATA[' || :new.APPEAL_PRIORITY_ID || ']]></APPEAL_PRIORITY_ID>
<REQUEST_RECEIVED>' || to_char(:new.REQUEST_RECEIVED,BPM_COMMON.GET_DATE_FMT) || '</REQUEST_RECEIVED> 
<APPEAL_STAGE><![CDATA[' || :new.APPEAL_STAGE || ']]></APPEAL_STAGE>  
<APPEAL_STATUS><![CDATA[' || :new.APPEAL_STATUS || ']]></APPEAL_STATUS> 
<APPEAL_TYPE><![CDATA[' || :new.APPEAL_TYPE || ']]></APPEAL_TYPE>
<APPEAL_DISMISSAL><![CDATA[' || :new.APPEAL_DISMISSAL || ']]></APPEAL_DISMISSAL>
<APPEAL_DISMISSAL_REASON><![CDATA[' || :new.APPEAL_DISMISSAL_REASON || ']]></APPEAL_DISMISSAL_REASON>
<AUTO_FORWARD><![CDATA[' || :new.AUTO_FORWARD || ']]></AUTO_FORWARD>
<CASE_FILE_REQUEST_DATE>' || to_char(:new.CASE_FILE_REQUEST_DATE,BPM_COMMON.GET_DATE_FMT) || '</CASE_FILE_REQUEST_DATE> 
<ACKNOWLEDGEMENT_LETTER_DATE>' || to_char(:new.ACKNOWLEDGEMENT_LETTER_DATE,BPM_COMMON.GET_DATE_FMT) || '</ACKNOWLEDGEMENT_LETTER_DATE>
<DECISION_MAILED_DATE>' || to_char(:new.DECISION_MAILED_DATE,BPM_COMMON.GET_DATE_FMT) || '</DECISION_MAILED_DATE>
<DECISION_SENT_PLAN_DATE>' || to_char(:new.DECISION_SENT_PLAN_DATE,BPM_COMMON.GET_DATE_FMT) || '</DECISION_SENT_PLAN_DATE>
<MEDICAL_REVIEW_CHECK><![CDATA[' || :new.MEDICAL_REVIEW_CHECK || ']]></MEDICAL_REVIEW_CHECK>
<APPEAL_PART_ID><![CDATA[' || :new.APPEAL_PART_ID || ']]></APPEAL_PART_ID>
<APPEAL_REASON><![CDATA[' || :new.APPEAL_REASON || ']]></APPEAL_REASON> 
<APPEAL_TOLLING_DATE>' || to_char(:new.APPEAL_TOLLING_DATE,BPM_COMMON.GET_DATE_FMT) || '</APPEAL_TOLLING_DATE>
<APPEAL_NOTICE_DATE>' || to_char(:new.APPEAL_NOTICE_DATE,BPM_COMMON.GET_DATE_FMT) || '</APPEAL_NOTICE_DATE>
<CASE_FILE_RECEIVED_DATE>' || to_char(:new.CASE_FILE_RECEIVED_DATE,BPM_COMMON.GET_DATE_FMT) || '</CASE_FILE_RECEIVED_DATE>  
<CLAIMED_DATE>' || to_char(:new.CLAIMED_DATE,BPM_COMMON.GET_DATE_FMT) || '</CLAIMED_DATE>
<DECISION><![CDATA[' || :new.DECISION || ']]></DECISION>
<DECISION_NOTIFICATION_METHOD><![CDATA[' || :new.DECISION_NOTIFICATION_METHOD || ']]></DECISION_NOTIFICATION_METHOD>
<HPMS><![CDATA[' || :new.HPMS || ']]></HPMS>
<HPMS_REQUESTED_DATE>' || to_char(:new.HPMS_REQUESTED_DATE,BPM_COMMON.GET_DATE_FMT) || '</HPMS_REQUESTED_DATE>
<IS_REQUEST_FOR_INFORMATION_P><![CDATA[' || :new.IS_REQUEST_FOR_INFORMATION_P || ']]></IS_REQUEST_FOR_INFORMATION_P>
<MAC><![CDATA[' || :new.MAC || ']]></MAC>
<MEDICARE_TYPE><![CDATA[' || :new.MEDICARE_TYPE || ']]></MEDICARE_TYPE>
<MSP><![CDATA[' || :new.MSP || ']]></MSP>
<NEW_DOCUMENTATION_REVIEWED><![CDATA[' || :new.NEW_DOCUMENTATION_REVIEWED || ']]></NEW_DOCUMENTATION_REVIEWED>
<PHYSICIAN_SPECIALTY><![CDATA[' || :new.PHYSICIAN_SPECIALTY || ']]></PHYSICIAN_SPECIALTY>
<PRECHECK_COMPLETED><![CDATA[' || :new.PRECHECK_COMPLETED || ']]></PRECHECK_COMPLETED>
<REASON_FOR_APPEAL><![CDATA[' || :new.REASON_FOR_APPEAL || ']]></REASON_FOR_APPEAL>
<WITHDRAWAL><![CDATA[' || :new.WITHDRAWAL || ']]></WITHDRAWAL>
<WITHDRAWAL_REQUEST_SUBMITTED><![CDATA[' || :new.WITHDRAWAL_REQUEST_SUBMITTED || ']]></WITHDRAWAL_REQUEST_SUBMITTED>
<NON_ENGLISH><![CDATA[' || :new.NON_ENGLISH || ']]></NON_ENGLISH>
<NON_ENGLISH_OTHER><![CDATA[' || :new.NON_ENGLISH_OTHER || ']]></NON_ENGLISH_OTHER>
<DISPOSITION><![CDATA[' || :new.DISPOSITION || ']]></DISPOSITION>
<DISPOSITION_EXPLANATION><![CDATA[' || :new.DISPOSITION_EXPLANATION || ']]></DISPOSITION_EXPLANATION>
<PROCEDURAL_DECISION_REASON><![CDATA[' || :new.PROCEDURAL_DECISION_REASON || ']]></PROCEDURAL_DECISION_REASON>
<SUBSTANTIVE_REASON><![CDATA[' || :new.SUBSTANTIVE_REASON || ']]></SUBSTANTIVE_REASON>
<FIRST_REVIEW_CASE_ATTESTATIO>' || to_char(:new.FIRST_REVIEW_CASE_ATTESTATIO,BPM_COMMON.GET_DATE_FMT) || '</FIRST_REVIEW_CASE_ATTESTATIO>
<FIRST_MEDICAL_REVIEW_DECISIO><![CDATA[' || :new.FIRST_MEDICAL_REVIEW_DECISIO || ']]></FIRST_MEDICAL_REVIEW_DECISIO>
<FIRST_REVIEWER><![CDATA[' || :new.FIRST_REVIEWER || ']]></FIRST_REVIEWER>
<THIRD_MEDICAL_REVIEW_DECISIO><![CDATA[' || :new.THIRD_MEDICAL_REVIEW_DECISIO || ']]></THIRD_MEDICAL_REVIEW_DECISIO>
<THIRD_REVIEW_CASE_ATTESTATIO>' || to_char(:new.THIRD_REVIEW_CASE_ATTESTATIO,BPM_COMMON.GET_DATE_FMT) || '</THIRD_REVIEW_CASE_ATTESTATIO>
<THIRD_REVIEWER><![CDATA[' || :new.THIRD_REVIEWER || ']]></THIRD_REVIEWER>
<EXPERT_REVIEW_CASE_ATTESTATI>' || to_char(:new.EXPERT_REVIEW_CASE_ATTESTATI,BPM_COMMON.GET_DATE_FMT) || '</EXPERT_REVIEW_CASE_ATTESTATI>
<EXPERT_REVIEW_CITATION><![CDATA[' || :new.EXPERT_REVIEW_CITATION  || ']]></EXPERT_REVIEW_CITATION>
<EXPERT_REVIEWER_MD_ID><![CDATA[' || :new.EXPERT_REVIEWER_MD_ID || ']]></EXPERT_REVIEWER_MD_ID>
<STG_EXTRACT_DATE>' || to_char(:new.STG_EXTRACT_DATE,BPM_COMMON.GET_DATE_FMT) || '</STG_EXTRACT_DATE>
<STG_LAST_UPDATE_DATE>' || to_char(:new.STG_LAST_UPDATE_DATE,BPM_COMMON.GET_DATE_FMT) || '</STG_LAST_UPDATE_DATE>
<CLOSED_DATE>' || to_char(:new.CLOSED_DATE,BPM_COMMON.GET_DATE_FMT) || '</CLOSED_DATE>
<WITHDRAWN_DATE>' || to_char(:new.WITHDRAWN_DATE,BPM_COMMON.GET_DATE_FMT) || '</WITHDRAWN_DATE>

<DEMO_REOPENING_TYPE><![CDATA[' || :new.DEMO_REOPENING_TYPE || ']]></DEMO_REOPENING_TYPE>
<OTHER_REOPENING_TYPE><![CDATA[' || :new.OTHER_REOPENING_TYPE || ']]></OTHER_REOPENING_TYPE>
<CASE_CURRENTLY_WITH_ALJ><![CDATA[' || :new.CASE_CURRENTLY_WITH_ALJ || ']]></CASE_CURRENTLY_WITH_ALJ>
<DATE_OF_REQUEST_TO_ALJ>' || to_char(:new.DATE_OF_REQUEST_TO_ALJ,BPM_COMMON.GET_DATE_FMT) || '</DATE_OF_REQUEST_TO_ALJ>
<DEMO_REOPENING_DUE_DATE>' || to_char(:new.DEMO_REOPENING_DUE_DATE,BPM_COMMON.GET_DATE_FMT) || '</DEMO_REOPENING_DUE_DATE>
<DEMO_REO_SENT_TO_OMHA_DATE>' || to_char(:new.DEMO_REO_SENT_TO_OMHA_DATE,BPM_COMMON.GET_DATE_FMT) || '</DEMO_REO_SENT_TO_OMHA_DATE>
<OMHA_RESPONSE_RECEIVED>' || to_char(:new.OMHA_RESPONSE_RECEIVED,BPM_COMMON.GET_DATE_FMT) || '</OMHA_RESPONSE_RECEIVED>
<RESPONSE_FROM_OMHA><![CDATA[' || :new.RESPONSE_FROM_OMHA || ']]></RESPONSE_FROM_OMHA>
<ADDITIONAL_INFO_REQUESTED>' || to_char(:new.ADDITIONAL_INFO_REQUESTED,BPM_COMMON.GET_DATE_FMT) || '</ADDITIONAL_INFO_REQUESTED>
<REQUESTED_INFORMATION_DUE>' || to_char(:new.REQUESTED_INFORMATION_DUE,BPM_COMMON.GET_DATE_FMT) || '</REQUESTED_INFORMATION_DUE>
<DEMO_REOPEN_FOLLOW_UP>' || to_char(:new.DEMO_REOPEN_FOLLOW_UP,BPM_COMMON.GET_DATE_FMT) || '</DEMO_REOPEN_FOLLOW_UP>
<ADDITIONAL_INFO_RECEIVED>' || to_char(:new.ADDITIONAL_INFO_RECEIVED,BPM_COMMON.GET_DATE_FMT) || '</ADDITIONAL_INFO_RECEIVED>
<REOPENING_DECISION_RESULTS><![CDATA[' || :new.REOPENING_DECISION_RESULTS || ']]></REOPENING_DECISION_RESULTS>REOPENING_DECISION_RESULTS>
<NOT_REOPENED_REASON><![CDATA[' || :new.NOT_REOPENED_REASON || ']]></NOT_REOPENED_REASON>
<OMHA_REMAND_REQUEST>' || to_char(:new.OMHA_REMAND_REQUEST,BPM_COMMON.GET_DATE_FMT) || '</OMHA_REMAND_REQUEST>
<REMAND_ELIGIBILITY_RESPONSE>' || to_char(:new.REMAND_ELIGIBILITY_RESPONSE,BPM_COMMON.GET_DATE_FMT) || '</REMAND_ELIGIBILITY_RESPONSE>
<REMAND_RECEIVED_DATE>' || to_char(:new.REMAND_RECEIVED_DATE,BPM_COMMON.GET_DATE_FMT) || '</REMAND_RECEIVED_DATE>
<OMHA_REMAND_REQUEST_RESPONSE><![CDATA[' || :new.OMHA_REMAND_REQUEST_RESPONSE || ']]></OMHA_REMAND_REQUEST_RESPONSE>
<OMHA_WITHDRAW_FORM_SENT>' || to_char(:new.OMHA_WITHDRAW_FORM_SENT,BPM_COMMON.GET_DATE_FMT) || '</OMHA_WITHDRAW_FORM_SENT>
<OMHA_WITHDRAW_FORM_RETURNED>' || to_char(:new.OMHA_WITHDRAW_FORM_RETURNED,BPM_COMMON.GET_DATE_FMT) || '</OMHA_WITHDRAW_FORM_RETURNED>
<OMHA_NOTIFIED_OF_WITHDRAWL>' || to_char(:new.OMHA_NOTIFIED_OF_WITHDRAWL,BPM_COMMON.GET_DATE_FMT) || '</OMHA_NOTIFIED_OF_WITHDRAWL>
<ALJ_WITHDRAWAL>' || to_char(:new.ALJ_WITHDRAWAL,BPM_COMMON.GET_DATE_FMT) || '</ALJ_WITHDRAWAL>
<DEMO_REOPENING_APPEAL_NUMBER><![CDATA[' || :new.DEMO_REOPENING_APPEAL_NUMBER || ']]></DEMO_REOPENING_APPEAL_NUMBER>
<REOPENING_ANALYSIS_COMPLETED>' || to_char(:new.REOPENING_ANALYSIS_COMPLETED,BPM_COMMON.GET_DATE_FMT) || '</REOPENING_ANALYSIS_COMPLETED>
<REOPENING_ANALYSIS_OUTCOME><![CDATA[' || :new.REOPENING_ANALYSIS_OUTCOME || ']]></REOPENING_ANALYSIS_OUTCOME>
<NOT_PURSUED_BY_CONTR_REASON><![CDATA[' || :new.NOT_PURSUED_BY_CONTR_REASON || ']]></NOT_PURSUED_BY_CONTR_REASON>
<ACK_LETTER_MAILED>' || to_char(:new.ACK_LETTER_MAILED,BPM_COMMON.GET_DATE_FMT) || '</ACK_LETTER_MAILED>
<REO_DECISION_LETTER_MAILED>' || to_char(:new.REO_DECISION_LETTER_MAILED,BPM_COMMON.GET_DATE_FMT) || '</REO_DECISION_LETTER_MAILED>
<REOPENING_OUTCOME><![CDATA[' || :new.REOPENING_OUTCOME || ']]></REOPENING_OUTCOME>
<DECLINE_TO_REOPEN_DECISION>' || to_char(:new.DECLINE_TO_REOPEN_DECISION,BPM_COMMON.GET_DATE_FMT) || '</DECLINE_TO_REOPEN_DECISION>
<APPEAL_ATTESTATION_DATE>' || to_char(:new.APPEAL_ATTESTATION_DATE,BPM_COMMON.GET_DATE_FMT) || '</APPEAL_ATTESTATION_DATE>
<APPEAL_ATTESTATION><![CDATA[' || :new.APPEAL_ATTESTATION || ']]></APPEAL_ATTESTATION>
<DEMO_SCHEDULED>' || to_char(:new.DEMO_SCHEDULED,BPM_COMMON.GET_DATE_FMT) || '</DEMO_SCHEDULED>
<DEMO_NOTIFICATION_LETTER_SENT>' || to_char(:new.DEMO_NOTIFICATION_LETTER_SENT,BPM_COMMON.GET_DATE_FMT) || '</DEMO_NOTIFICATION_LETTER_SENT>
<RESPONSE_DUE>' || to_char(:new.RESPONSE_DUE,BPM_COMMON.GET_DATE_FMT) || '</RESPONSE_DUE>
<RESPONSE_RECEIVED>' || to_char(:new.RESPONSE_RECEIVED,BPM_COMMON.GET_DATE_FMT) || '</RESPONSE_RECEIVED>
<DEMO_ACCEPTANCE_STATUS><![CDATA[' || :new.DEMO_ACCEPTANCE_STATUS || ']]></DEMO_ACCEPTANCE_STATUS>
<TELE_DEMO_FOLLOW_UP>' || to_char(:new.TELE_DEMO_FOLLOW_UP,BPM_COMMON.GET_DATE_FMT) || '</TELE_DEMO_FOLLOW_UP>
<DEMO_NOTIFICATION_LTR_RESENT>' || to_char(:new.DEMO_NOTIFICATION_LTR_RESENT,BPM_COMMON.GET_DATE_FMT) || '</DEMO_NOTIFICATION_LTR_RESENT>
<RESCHEDULED_RESPONSE_DUE>' || to_char(:new.RESCHEDULED_RESPONSE_DUE,BPM_COMMON.GET_DATE_FMT) || '</RESCHEDULED_RESPONSE_DUE>
<RESCHEDULE_RESPONSE_RECEIVED>' || to_char(:new.RESCHEDULE_RESPONSE_RECEIVED,BPM_COMMON.GET_DATE_FMT) || '</RESCHEDULE_RESPONSE_RECEIVED>
<VERBAL_CONFIRMATION>' || to_char(:new.VERBAL_CONFIRMATION,BPM_COMMON.GET_DATE_FMT) || '</VERBAL_CONFIRMATION>
<RESCHEDULED_DEMO_STATUS><![CDATA[' || :new.RESCHEDULED_DEMO_STATUS || ']]></RESCHEDULED_DEMO_STATUS>
<PROVIDER_OR_SUPPLIER_NAME><![CDATA[' || :new.PROVIDER_OR_SUPPLIER_NAME || ']]></PROVIDER_OR_SUPPLIER_NAME>	
<DEMO_CONFERENCE_STATUS><![CDATA[' || :new.DEMO_CONFERENCE_STATUS || ']]></DEMO_CONFERENCE_STATUS>
<REVIEW_TYPE><![CDATA[' || :new.REVIEW_TYPE || ']]></REVIEW_TYPE>
<EXPERT_REVIEW_DECISION><![CDATA[' || :new.EXPERT_REVIEW_DECISION || ']]></EXPERT_REVIEW_DECISION>		
<REVIEW_NUMBER><![CDATA[' || :new.REVIEW_NUMBER || ']]></REVIEW_NUMBER>

    </ROW>
    </ROWSET>
    ';

  insert into BPM_UPDATE_EVENT_QUEUE
    (BUEQ_ID,BSL_ID,BIL_ID,IDENTIFIER,EVENT_DATE,QUEUE_DATE,DATA_VERSION,OLD_DATA,NEW_DATA)
  values (SEQ_BUEQ_ID.nextval,v_bsl_id,v_bil_id,v_identifier,v_event_date,sysdate,v_data_version,null,xmltype(v_xml_string_new));

exception

  when OTHERS then
    v_sql_code := SQLCODE;
    v_log_message := SQLERRM || '
      XML:
      ' || v_xml_string_new;
    BPM_COMMON.LOGGER(BPM_COMMON.LOG_LEVEL_SEVERE,null,$$PLSQL_UNIT,v_bsl_id,v_bil_id,v_identifier,null,v_log_message,v_sql_code);
    raise;

end;
/


create or replace trigger TRG_AU_CORP_ETL_APPEAL_Q
after update on CORP_ETL_APPEAL
for each row

declare

  v_bsl_id number := 2004; -- 'FEDQIC_ETL'
  v_bil_id number := 3; -- 'Task ID'
  v_data_version number := 3; -- CDATA for varchar2 only and added STG_LAST_UPDATE_DATE

  v_identifier varchar2(100) := null;

  v_xml_string_old clob := null;
  v_xml_string_new clob := null;

  v_sql_code number := null;
  v_log_message clob := null;

  v_event_date date := null;

begin

  v_event_date := :new.STG_LAST_UPDATE_DATE;
  v_identifier := :new.APPEAL_ID;

  /*
  Include:
    STG_LAST_UPDATE_DATE
  */
  v_xml_string_old :=
    '<?xml version="1.0"?>
    <ROWSET>
      <ROW>
 <APPEAL_ID><![CDATA[' || :old.APPEAL_ID || ']]></APPEAL_ID>
<CREATE_DATE>' || to_char(:old.CREATE_DATE,BPM_COMMON.GET_DATE_FMT) || '</CREATE_DATE>
<COMPLETE_DATE>' || to_char(:old.COMPLETE_DATE,BPM_COMMON.GET_DATE_FMT) || '</COMPLETE_DATE>
<CANCELLED_DATE>' || to_char(:old.CANCELLED_DATE,BPM_COMMON.GET_DATE_FMT) || '</CANCELLED_DATE>
<ADJUDICATOR><![CDATA[' || :old.ADJUDICATOR || ']]></ADJUDICATOR> 
<DEADLINE_DATE>' || to_char(:old.DEADLINE_DATE,BPM_COMMON.GET_DATE_FMT) || '</DEADLINE_DATE> 
<APPEAL_ISSUE><![CDATA[' || :old.APPEAL_ISSUE || ']]></APPEAL_ISSUE>
<APPEAL_ITEM><![CDATA[' || :old.APPEAL_ITEM || ']]></APPEAL_ITEM>  
<APPEAL_NUMBER><![CDATA[' || :old.APPEAL_NUMBER || ']]></APPEAL_NUMBER> 
<APPEAL_PRIORITY_ID><![CDATA[' || :old.APPEAL_PRIORITY_ID || ']]></APPEAL_PRIORITY_ID>
<REQUEST_RECEIVED>' || to_char(:old.REQUEST_RECEIVED,BPM_COMMON.GET_DATE_FMT) || '</REQUEST_RECEIVED> 
<APPEAL_STAGE><![CDATA[' || :old.APPEAL_STAGE || ']]></APPEAL_STAGE>  
<APPEAL_STATUS><![CDATA[' || :old.APPEAL_STATUS || ']]></APPEAL_STATUS> 
<APPEAL_TYPE><![CDATA[' || :old.APPEAL_TYPE || ']]></APPEAL_TYPE>
<APPEAL_DISMISSAL><![CDATA[' || :old.APPEAL_DISMISSAL || ']]></APPEAL_DISMISSAL>
<APPEAL_DISMISSAL_REASON><![CDATA[' || :old.APPEAL_DISMISSAL_REASON || ']]></APPEAL_DISMISSAL_REASON>
<AUTO_FORWARD><![CDATA[' || :old.AUTO_FORWARD || ']]></AUTO_FORWARD>
<CASE_FILE_REQUEST_DATE>' || to_char(:old.CASE_FILE_REQUEST_DATE,BPM_COMMON.GET_DATE_FMT) || '</CASE_FILE_REQUEST_DATE> 
<ACKNOWLEDGEMENT_LETTER_DATE>' || to_char(:old.ACKNOWLEDGEMENT_LETTER_DATE,BPM_COMMON.GET_DATE_FMT) || '</ACKNOWLEDGEMENT_LETTER_DATE>
<DECISION_MAILED_DATE>' || to_char(:old.DECISION_MAILED_DATE,BPM_COMMON.GET_DATE_FMT) || '</DECISION_MAILED_DATE>
<DECISION_SENT_PLAN_DATE>' || to_char(:old.DECISION_SENT_PLAN_DATE,BPM_COMMON.GET_DATE_FMT) || '</DECISION_SENT_PLAN_DATE>
<MEDICAL_REVIEW_CHECK><![CDATA[' || :old.MEDICAL_REVIEW_CHECK || ']]></MEDICAL_REVIEW_CHECK>
<APPEAL_PART_ID><![CDATA[' || :old.APPEAL_PART_ID || ']]></APPEAL_PART_ID>
<APPEAL_REASON><![CDATA[' || :old.APPEAL_REASON || ']]></APPEAL_REASON> 
<APPEAL_TOLLING_DATE>' || to_char(:old.APPEAL_TOLLING_DATE,BPM_COMMON.GET_DATE_FMT) || '</APPEAL_TOLLING_DATE>
<APPEAL_NOTICE_DATE>' || to_char(:old.APPEAL_NOTICE_DATE,BPM_COMMON.GET_DATE_FMT) || '</APPEAL_NOTICE_DATE>
<CASE_FILE_RECEIVED_DATE>' || to_char(:old.CASE_FILE_RECEIVED_DATE,BPM_COMMON.GET_DATE_FMT) || '</CASE_FILE_RECEIVED_DATE>  
<CLAIMED_DATE>' || to_char(:old.CLAIMED_DATE,BPM_COMMON.GET_DATE_FMT) || '</CLAIMED_DATE>
<DECISION><![CDATA[' || :old.DECISION || ']]></DECISION>
<DECISION_NOTIFICATION_METHOD><![CDATA[' || :old.DECISION_NOTIFICATION_METHOD || ']]></DECISION_NOTIFICATION_METHOD>
<HPMS><![CDATA[' || :old.HPMS || ']]></HPMS>
<HPMS_REQUESTED_DATE>' || to_char(:old.HPMS_REQUESTED_DATE,BPM_COMMON.GET_DATE_FMT) || '</HPMS_REQUESTED_DATE>
<IS_REQUEST_FOR_INFORMATION_P><![CDATA[' || :old.IS_REQUEST_FOR_INFORMATION_P || ']]></IS_REQUEST_FOR_INFORMATION_P>
<MAC><![CDATA[' || :old.MAC || ']]></MAC>
<MEDICARE_TYPE><![CDATA[' || :old.MEDICARE_TYPE || ']]></MEDICARE_TYPE>
<MSP><![CDATA[' || :old.MSP || ']]></MSP>
<NEW_DOCUMENTATION_REVIEWED><![CDATA[' || :old.NEW_DOCUMENTATION_REVIEWED || ']]></NEW_DOCUMENTATION_REVIEWED>
<PHYSICIAN_SPECIALTY><![CDATA[' || :old.PHYSICIAN_SPECIALTY || ']]></PHYSICIAN_SPECIALTY>
<PRECHECK_COMPLETED><![CDATA[' || :old.PRECHECK_COMPLETED || ']]></PRECHECK_COMPLETED>
<REASON_FOR_APPEAL><![CDATA[' || :old.REASON_FOR_APPEAL || ']]></REASON_FOR_APPEAL>
<WITHDRAWAL><![CDATA[' || :old.WITHDRAWAL || ']]></WITHDRAWAL>
<WITHDRAWAL_REQUEST_SUBMITTED><![CDATA[' || :old.WITHDRAWAL_REQUEST_SUBMITTED || ']]></WITHDRAWAL_REQUEST_SUBMITTED>
<NON_ENGLISH><![CDATA[' || :old.NON_ENGLISH || ']]></NON_ENGLISH>
<NON_ENGLISH_OTHER><![CDATA[' || :old.NON_ENGLISH_OTHER || ']]></NON_ENGLISH_OTHER>
<DISPOSITION><![CDATA[' || :old.DISPOSITION || ']]></DISPOSITION>
<DISPOSITION_EXPLANATION><![CDATA[' || :old.DISPOSITION_EXPLANATION || ']]></DISPOSITION_EXPLANATION>
<PROCEDURAL_DECISION_REASON><![CDATA[' || :old.PROCEDURAL_DECISION_REASON || ']]></PROCEDURAL_DECISION_REASON>
<SUBSTANTIVE_REASON><![CDATA[' || :old.SUBSTANTIVE_REASON || ']]></SUBSTANTIVE_REASON>
<FIRST_REVIEW_CASE_ATTESTATIO>' || to_char(:old.FIRST_REVIEW_CASE_ATTESTATIO,BPM_COMMON.GET_DATE_FMT) || '</FIRST_REVIEW_CASE_ATTESTATIO>
<FIRST_MEDICAL_REVIEW_DECISIO><![CDATA[' || :old.FIRST_MEDICAL_REVIEW_DECISIO || ']]></FIRST_MEDICAL_REVIEW_DECISIO>
<FIRST_REVIEWER><![CDATA[' || :old.FIRST_REVIEWER || ']]></FIRST_REVIEWER>
<THIRD_MEDICAL_REVIEW_DECISIO><![CDATA[' || :old.THIRD_MEDICAL_REVIEW_DECISIO || ']]></THIRD_MEDICAL_REVIEW_DECISIO>
<THIRD_REVIEW_CASE_ATTESTATIO>' || to_char(:old.THIRD_REVIEW_CASE_ATTESTATIO,BPM_COMMON.GET_DATE_FMT) || '</THIRD_REVIEW_CASE_ATTESTATIO>
<THIRD_REVIEWER><![CDATA[' || :old.THIRD_REVIEWER || ']]></THIRD_REVIEWER>
<EXPERT_REVIEW_CASE_ATTESTATI>' || to_char(:old.EXPERT_REVIEW_CASE_ATTESTATI,BPM_COMMON.GET_DATE_FMT) || '</EXPERT_REVIEW_CASE_ATTESTATI>
<EXPERT_REVIEW_CITATION><![CDATA[' || :old.EXPERT_REVIEW_CITATION || ']]></EXPERT_REVIEW_CITATION>
<EXPERT_REVIEWER_MD_ID><![CDATA[' || :old.EXPERT_REVIEWER_MD_ID || ']]></EXPERT_REVIEWER_MD_ID>	
<STG_EXTRACT_DATE>' || to_char(:old.STG_EXTRACT_DATE,BPM_COMMON.GET_DATE_FMT) || '</STG_EXTRACT_DATE>
<STG_LAST_UPDATE_DATE>' || to_char(:old.STG_LAST_UPDATE_DATE,BPM_COMMON.GET_DATE_FMT) || '</STG_LAST_UPDATE_DATE>
<CLOSED_DATE>' || to_char(:old.CLOSED_DATE,BPM_COMMON.GET_DATE_FMT) || '</CLOSED_DATE>
<WITHDRAWN_DATE>' || to_char(:old.WITHDRAWN_DATE,BPM_COMMON.GET_DATE_FMT) || '</WITHDRAWN_DATE>

<DEMO_REOPENING_TYPE><![CDATA[' || :old.DEMO_REOPENING_TYPE || ']]></DEMO_REOPENING_TYPE>
<OTHER_REOPENING_TYPE><![CDATA[' || :old.OTHER_REOPENING_TYPE || ']]></OTHER_REOPENING_TYPE>
<CASE_CURRENTLY_WITH_ALJ><![CDATA[' || :old.CASE_CURRENTLY_WITH_ALJ || ']]></CASE_CURRENTLY_WITH_ALJ>
<DATE_OF_REQUEST_TO_ALJ>' || to_char(:old.DATE_OF_REQUEST_TO_ALJ,BPM_COMMON.GET_DATE_FMT) || '</DATE_OF_REQUEST_TO_ALJ>
<DEMO_REOPENING_DUE_DATE>' || to_char(:old.DEMO_REOPENING_DUE_DATE,BPM_COMMON.GET_DATE_FMT) || '</DEMO_REOPENING_DUE_DATE>
<DEMO_REO_SENT_TO_OMHA_DATE>' || to_char(:old.DEMO_REO_SENT_TO_OMHA_DATE,BPM_COMMON.GET_DATE_FMT) || '</DEMO_REO_SENT_TO_OMHA_DATE>
<OMHA_RESPONSE_RECEIVED>' || to_char(:old.OMHA_RESPONSE_RECEIVED,BPM_COMMON.GET_DATE_FMT) || '</OMHA_RESPONSE_RECEIVED>
<RESPONSE_FROM_OMHA><![CDATA[' || :old.RESPONSE_FROM_OMHA || ']]></RESPONSE_FROM_OMHA>
<ADDITIONAL_INFO_REQUESTED>' || to_char(:old.ADDITIONAL_INFO_REQUESTED,BPM_COMMON.GET_DATE_FMT) || '</ADDITIONAL_INFO_REQUESTED>
<REQUESTED_INFORMATION_DUE>' || to_char(:old.REQUESTED_INFORMATION_DUE,BPM_COMMON.GET_DATE_FMT) || '</REQUESTED_INFORMATION_DUE>
<DEMO_REOPEN_FOLLOW_UP>' || to_char(:old.DEMO_REOPEN_FOLLOW_UP,BPM_COMMON.GET_DATE_FMT) || '</DEMO_REOPEN_FOLLOW_UP>
<ADDITIONAL_INFO_RECEIVED>' || to_char(:old.ADDITIONAL_INFO_RECEIVED,BPM_COMMON.GET_DATE_FMT) || '</ADDITIONAL_INFO_RECEIVED>
<REOPENING_DECISION_RESULTS><![CDATA[' || :old.REOPENING_DECISION_RESULTS || ']]></REOPENING_DECISION_RESULTS>REOPENING_DECISION_RESULTS>
<NOT_REOPENED_REASON><![CDATA[' || :old.NOT_REOPENED_REASON || ']]></NOT_REOPENED_REASON>
<OMHA_REMAND_REQUEST>' || to_char(:old.OMHA_REMAND_REQUEST,BPM_COMMON.GET_DATE_FMT) || '</OMHA_REMAND_REQUEST>
<REMAND_ELIGIBILITY_RESPONSE>' || to_char(:old.REMAND_ELIGIBILITY_RESPONSE,BPM_COMMON.GET_DATE_FMT) || '</REMAND_ELIGIBILITY_RESPONSE>
<REMAND_RECEIVED_DATE>' || to_char(:old.REMAND_RECEIVED_DATE,BPM_COMMON.GET_DATE_FMT) || '</REMAND_RECEIVED_DATE>
<OMHA_REMAND_REQUEST_RESPONSE><![CDATA[' || :old.OMHA_REMAND_REQUEST_RESPONSE || ']]></OMHA_REMAND_REQUEST_RESPONSE>
<OMHA_WITHDRAW_FORM_SENT>' || to_char(:old.OMHA_WITHDRAW_FORM_SENT,BPM_COMMON.GET_DATE_FMT) || '</OMHA_WITHDRAW_FORM_SENT>
<OMHA_WITHDRAW_FORM_RETURNED>' || to_char(:old.OMHA_WITHDRAW_FORM_RETURNED,BPM_COMMON.GET_DATE_FMT) || '</OMHA_WITHDRAW_FORM_RETURNED>
<OMHA_NOTIFIED_OF_WITHDRAWL>' || to_char(:old.OMHA_NOTIFIED_OF_WITHDRAWL,BPM_COMMON.GET_DATE_FMT) || '</OMHA_NOTIFIED_OF_WITHDRAWL>
<ALJ_WITHDRAWAL>' || to_char(:old.ALJ_WITHDRAWAL,BPM_COMMON.GET_DATE_FMT) || '</ALJ_WITHDRAWAL>
<DEMO_REOPENING_APPEAL_NUMBER><![CDATA[' || :old.DEMO_REOPENING_APPEAL_NUMBER || ']]></DEMO_REOPENING_APPEAL_NUMBER>
<REOPENING_ANALYSIS_COMPLETED>' || to_char(:old.REOPENING_ANALYSIS_COMPLETED,BPM_COMMON.GET_DATE_FMT) || '</REOPENING_ANALYSIS_COMPLETED>
<REOPENING_ANALYSIS_OUTCOME><![CDATA[' || :old.REOPENING_ANALYSIS_OUTCOME || ']]></REOPENING_ANALYSIS_OUTCOME>
<NOT_PURSUED_BY_CONTR_REASON><![CDATA[' || :old.NOT_PURSUED_BY_CONTR_REASON || ']]></NOT_PURSUED_BY_CONTR_REASON>
<ACK_LETTER_MAILED>' || to_char(:old.ACK_LETTER_MAILED,BPM_COMMON.GET_DATE_FMT) || '</ACK_LETTER_MAILED>
<REO_DECISION_LETTER_MAILED>' || to_char(:old.REO_DECISION_LETTER_MAILED,BPM_COMMON.GET_DATE_FMT) || '</REO_DECISION_LETTER_MAILED>
<REOPENING_OUTCOME><![CDATA[' || :old.REOPENING_OUTCOME || ']]></REOPENING_OUTCOME>
<DECLINE_TO_REOPEN_DECISION>' || to_char(:old.DECLINE_TO_REOPEN_DECISION,BPM_COMMON.GET_DATE_FMT) || '</DECLINE_TO_REOPEN_DECISION>
<APPEAL_ATTESTATION_DATE>' || to_char(:old.APPEAL_ATTESTATION_DATE,BPM_COMMON.GET_DATE_FMT) || '</APPEAL_ATTESTATION_DATE>
<APPEAL_ATTESTATION><![CDATA[' || :old.APPEAL_ATTESTATION || ']]></APPEAL_ATTESTATION>
<DEMO_SCHEDULED>' || to_char(:old.DEMO_SCHEDULED,BPM_COMMON.GET_DATE_FMT) || '</DEMO_SCHEDULED>
<DEMO_NOTIFICATION_LETTER_SENT>' || to_char(:old.DEMO_NOTIFICATION_LETTER_SENT,BPM_COMMON.GET_DATE_FMT) || '</DEMO_NOTIFICATION_LETTER_SENT>
<RESPONSE_DUE>' || to_char(:old.RESPONSE_DUE,BPM_COMMON.GET_DATE_FMT) || '</RESPONSE_DUE>
<RESPONSE_RECEIVED>' || to_char(:old.RESPONSE_RECEIVED,BPM_COMMON.GET_DATE_FMT) || '</RESPONSE_RECEIVED>
<DEMO_ACCEPTANCE_STATUS><![CDATA[' || :old.DEMO_ACCEPTANCE_STATUS || ']]></DEMO_ACCEPTANCE_STATUS>
<TELE_DEMO_FOLLOW_UP>' || to_char(:old.TELE_DEMO_FOLLOW_UP,BPM_COMMON.GET_DATE_FMT) || '</TELE_DEMO_FOLLOW_UP>
<DEMO_NOTIFICATION_LTR_RESENT>' || to_char(:old.DEMO_NOTIFICATION_LTR_RESENT,BPM_COMMON.GET_DATE_FMT) || '</DEMO_NOTIFICATION_LTR_RESENT>
<RESCHEDULED_RESPONSE_DUE>' || to_char(:old.RESCHEDULED_RESPONSE_DUE,BPM_COMMON.GET_DATE_FMT) || '</RESCHEDULED_RESPONSE_DUE>
<RESCHEDULE_RESPONSE_RECEIVED>' || to_char(:old.RESCHEDULE_RESPONSE_RECEIVED,BPM_COMMON.GET_DATE_FMT) || '</RESCHEDULE_RESPONSE_RECEIVED>
<VERBAL_CONFIRMATION>' || to_char(:old.VERBAL_CONFIRMATION,BPM_COMMON.GET_DATE_FMT) || '</VERBAL_CONFIRMATION>
<RESCHEDULED_DEMO_STATUS><![CDATA[' || :old.RESCHEDULED_DEMO_STATUS || ']]></RESCHEDULED_DEMO_STATUS>
<PROVIDER_OR_SUPPLIER_NAME><![CDATA[' || :old.PROVIDER_OR_SUPPLIER_NAME || ']]></PROVIDER_OR_SUPPLIER_NAME>	
<DEMO_CONFERENCE_STATUS><![CDATA[' || :old.DEMO_CONFERENCE_STATUS || ']]></DEMO_CONFERENCE_STATUS>
<REVIEW_TYPE><![CDATA[' || :old.REVIEW_TYPE || ']]></REVIEW_TYPE>
<EXPERT_REVIEW_DECISION><![CDATA[' || :old.EXPERT_REVIEW_DECISION || ']]></EXPERT_REVIEW_DECISION>		
<REVIEW_NUMBER><![CDATA[' || :old.REVIEW_NUMBER || ']]></REVIEW_NUMBER>

    </ROW>
    </ROWSET>
    ';

  /*
  Include:
    STG_LAST_UPDATE_DATE
  */
  v_xml_string_new :=
    '<?xml version="1.0"?>
    <ROWSET>
      <ROW>
          <APPEAL_ID><![CDATA[' || :new.APPEAL_ID || ']]></APPEAL_ID>
<CREATE_DATE>' || to_char(:new.CREATE_DATE,BPM_COMMON.GET_DATE_FMT) || '</CREATE_DATE>
<COMPLETE_DATE>' || to_char(:new.COMPLETE_DATE,BPM_COMMON.GET_DATE_FMT) || '</COMPLETE_DATE>
<CANCELLED_DATE>' || to_char(:new.CANCELLED_DATE,BPM_COMMON.GET_DATE_FMT) || '</CANCELLED_DATE>
<ADJUDICATOR><![CDATA[' || :new.ADJUDICATOR || ']]></ADJUDICATOR> 
<DEADLINE_DATE>' || to_char(:new.DEADLINE_DATE,BPM_COMMON.GET_DATE_FMT) || '</DEADLINE_DATE> 
<APPEAL_ISSUE><![CDATA[' || :new.APPEAL_ISSUE || ']]></APPEAL_ISSUE>
<APPEAL_ITEM><![CDATA[' || :new.APPEAL_ITEM || ']]></APPEAL_ITEM>  
<APPEAL_NUMBER><![CDATA[' || :new.APPEAL_NUMBER || ']]></APPEAL_NUMBER> 
<APPEAL_PRIORITY_ID><![CDATA[' || :new.APPEAL_PRIORITY_ID || ']]></APPEAL_PRIORITY_ID>
<REQUEST_RECEIVED>' || to_char(:new.REQUEST_RECEIVED,BPM_COMMON.GET_DATE_FMT) || '</REQUEST_RECEIVED> 
<APPEAL_STAGE><![CDATA[' || :new.APPEAL_STAGE || ']]></APPEAL_STAGE>  
<APPEAL_STATUS><![CDATA[' || :new.APPEAL_STATUS || ']]></APPEAL_STATUS> 
<APPEAL_TYPE><![CDATA[' || :new.APPEAL_TYPE || ']]></APPEAL_TYPE>
<APPEAL_DISMISSAL><![CDATA[' || :new.APPEAL_DISMISSAL || ']]></APPEAL_DISMISSAL>
<APPEAL_DISMISSAL_REASON><![CDATA[' || :new.APPEAL_DISMISSAL_REASON || ']]></APPEAL_DISMISSAL_REASON>
<AUTO_FORWARD><![CDATA[' || :new.AUTO_FORWARD || ']]></AUTO_FORWARD>
<CASE_FILE_REQUEST_DATE>' || to_char(:new.CASE_FILE_REQUEST_DATE,BPM_COMMON.GET_DATE_FMT) || '</CASE_FILE_REQUEST_DATE> 
<ACKNOWLEDGEMENT_LETTER_DATE>' || to_char(:new.ACKNOWLEDGEMENT_LETTER_DATE,BPM_COMMON.GET_DATE_FMT) || '</ACKNOWLEDGEMENT_LETTER_DATE>
<DECISION_MAILED_DATE>' || to_char(:new.DECISION_MAILED_DATE,BPM_COMMON.GET_DATE_FMT) || '</DECISION_MAILED_DATE>
<DECISION_SENT_PLAN_DATE>' || to_char(:new.DECISION_SENT_PLAN_DATE,BPM_COMMON.GET_DATE_FMT) || '</DECISION_SENT_PLAN_DATE>
<MEDICAL_REVIEW_CHECK><![CDATA[' || :new.MEDICAL_REVIEW_CHECK || ']]></MEDICAL_REVIEW_CHECK>
<APPEAL_PART_ID><![CDATA[' || :new.APPEAL_PART_ID || ']]></APPEAL_PART_ID>
<APPEAL_REASON><![CDATA[' || :new.APPEAL_REASON || ']]></APPEAL_REASON> 
<APPEAL_TOLLING_DATE>' || to_char(:new.APPEAL_TOLLING_DATE,BPM_COMMON.GET_DATE_FMT) || '</APPEAL_TOLLING_DATE>
<APPEAL_NOTICE_DATE>' || to_char(:new.APPEAL_NOTICE_DATE,BPM_COMMON.GET_DATE_FMT) || '</APPEAL_NOTICE_DATE>
<CASE_FILE_RECEIVED_DATE>' || to_char(:new.CASE_FILE_RECEIVED_DATE,BPM_COMMON.GET_DATE_FMT) || '</CASE_FILE_RECEIVED_DATE>  
<CLAIMED_DATE>' || to_char(:new.CLAIMED_DATE,BPM_COMMON.GET_DATE_FMT) || '</CLAIMED_DATE>
<DECISION><![CDATA[' || :new.DECISION || ']]></DECISION>
<DECISION_NOTIFICATION_METHOD><![CDATA[' || :new.DECISION_NOTIFICATION_METHOD || ']]></DECISION_NOTIFICATION_METHOD>
<HPMS><![CDATA[' || :new.HPMS || ']]></HPMS>
<HPMS_REQUESTED_DATE>' || to_char(:new.HPMS_REQUESTED_DATE,BPM_COMMON.GET_DATE_FMT) || '</HPMS_REQUESTED_DATE>
<IS_REQUEST_FOR_INFORMATION_P><![CDATA[' || :new.IS_REQUEST_FOR_INFORMATION_P || ']]></IS_REQUEST_FOR_INFORMATION_P>
<MAC><![CDATA[' || :new.MAC || ']]></MAC>
<MEDICARE_TYPE><![CDATA[' || :new.MEDICARE_TYPE || ']]></MEDICARE_TYPE>
<MSP><![CDATA[' || :new.MSP || ']]></MSP>
<NEW_DOCUMENTATION_REVIEWED><![CDATA[' || :new.NEW_DOCUMENTATION_REVIEWED || ']]></NEW_DOCUMENTATION_REVIEWED>
<PHYSICIAN_SPECIALTY><![CDATA[' || :new.PHYSICIAN_SPECIALTY || ']]></PHYSICIAN_SPECIALTY>
<PRECHECK_COMPLETED><![CDATA[' || :new.PRECHECK_COMPLETED || ']]></PRECHECK_COMPLETED>
<REASON_FOR_APPEAL><![CDATA[' || :new.REASON_FOR_APPEAL || ']]></REASON_FOR_APPEAL>
<WITHDRAWAL><![CDATA[' || :new.WITHDRAWAL || ']]></WITHDRAWAL>
<WITHDRAWAL_REQUEST_SUBMITTED><![CDATA[' || :new.WITHDRAWAL_REQUEST_SUBMITTED || ']]></WITHDRAWAL_REQUEST_SUBMITTED>
<NON_ENGLISH><![CDATA[' || :new.NON_ENGLISH || ']]></NON_ENGLISH>
<NON_ENGLISH_OTHER><![CDATA[' || :new.NON_ENGLISH_OTHER || ']]></NON_ENGLISH_OTHER>
<DISPOSITION><![CDATA[' || :new.DISPOSITION || ']]></DISPOSITION>
<DISPOSITION_EXPLANATION><![CDATA[' || :new.DISPOSITION_EXPLANATION || ']]></DISPOSITION_EXPLANATION>
<PROCEDURAL_DECISION_REASON><![CDATA[' || :new.PROCEDURAL_DECISION_REASON || ']]></PROCEDURAL_DECISION_REASON>
<SUBSTANTIVE_REASON><![CDATA[' || :new.SUBSTANTIVE_REASON || ']]></SUBSTANTIVE_REASON>
<FIRST_REVIEW_CASE_ATTESTATIO>' || to_char(:new.FIRST_REVIEW_CASE_ATTESTATIO,BPM_COMMON.GET_DATE_FMT) || '</FIRST_REVIEW_CASE_ATTESTATIO>
<FIRST_MEDICAL_REVIEW_DECISIO><![CDATA[' || :new.FIRST_MEDICAL_REVIEW_DECISIO || ']]></FIRST_MEDICAL_REVIEW_DECISIO>
<FIRST_REVIEWER><![CDATA[' || :new.FIRST_REVIEWER || ']]></FIRST_REVIEWER>
<THIRD_MEDICAL_REVIEW_DECISIO><![CDATA[' || :new.THIRD_MEDICAL_REVIEW_DECISIO || ']]></THIRD_MEDICAL_REVIEW_DECISIO>
<THIRD_REVIEW_CASE_ATTESTATIO>' || to_char(:new.THIRD_REVIEW_CASE_ATTESTATIO,BPM_COMMON.GET_DATE_FMT) || '</THIRD_REVIEW_CASE_ATTESTATIO>
<THIRD_REVIEWER><![CDATA[' || :new.THIRD_REVIEWER || ']]></THIRD_REVIEWER>
<EXPERT_REVIEW_CASE_ATTESTATI>' || to_char(:new.EXPERT_REVIEW_CASE_ATTESTATI,BPM_COMMON.GET_DATE_FMT) || '</EXPERT_REVIEW_CASE_ATTESTATI>
<EXPERT_REVIEW_CITATION><![CDATA[' || :new.EXPERT_REVIEW_CITATION || ']]></EXPERT_REVIEW_CITATION>
<EXPERT_REVIEWER_MD_ID><![CDATA[' || :new.EXPERT_REVIEWER_MD_ID || ']]></EXPERT_REVIEWER_MD_ID>
<STG_EXTRACT_DATE>' || to_char(:new.STG_EXTRACT_DATE,BPM_COMMON.GET_DATE_FMT) || '</STG_EXTRACT_DATE>
<STG_LAST_UPDATE_DATE>' || to_char(:new.STG_LAST_UPDATE_DATE,BPM_COMMON.GET_DATE_FMT) || '</STG_LAST_UPDATE_DATE>
<CLOSED_DATE>' || to_char(:new.CLOSED_DATE,BPM_COMMON.GET_DATE_FMT) || '</CLOSED_DATE>
<WITHDRAWN_DATE>' || to_char(:new.WITHDRAWN_DATE,BPM_COMMON.GET_DATE_FMT) || '</WITHDRAWN_DATE>

<DEMO_REOPENING_TYPE><![CDATA[' || :new.DEMO_REOPENING_TYPE || ']]></DEMO_REOPENING_TYPE>
<OTHER_REOPENING_TYPE><![CDATA[' || :new.OTHER_REOPENING_TYPE || ']]></OTHER_REOPENING_TYPE>
<CASE_CURRENTLY_WITH_ALJ><![CDATA[' || :new.CASE_CURRENTLY_WITH_ALJ || ']]></CASE_CURRENTLY_WITH_ALJ>
<DATE_OF_REQUEST_TO_ALJ>' || to_char(:new.DATE_OF_REQUEST_TO_ALJ,BPM_COMMON.GET_DATE_FMT) || '</DATE_OF_REQUEST_TO_ALJ>
<DEMO_REOPENING_DUE_DATE>' || to_char(:new.DEMO_REOPENING_DUE_DATE,BPM_COMMON.GET_DATE_FMT) || '</DEMO_REOPENING_DUE_DATE>
<DEMO_REO_SENT_TO_OMHA_DATE>' || to_char(:new.DEMO_REO_SENT_TO_OMHA_DATE,BPM_COMMON.GET_DATE_FMT) || '</DEMO_REO_SENT_TO_OMHA_DATE>
<OMHA_RESPONSE_RECEIVED>' || to_char(:new.OMHA_RESPONSE_RECEIVED,BPM_COMMON.GET_DATE_FMT) || '</OMHA_RESPONSE_RECEIVED>
<RESPONSE_FROM_OMHA><![CDATA[' || :new.RESPONSE_FROM_OMHA || ']]></RESPONSE_FROM_OMHA>
<ADDITIONAL_INFO_REQUESTED>' || to_char(:new.ADDITIONAL_INFO_REQUESTED,BPM_COMMON.GET_DATE_FMT) || '</ADDITIONAL_INFO_REQUESTED>
<REQUESTED_INFORMATION_DUE>' || to_char(:new.REQUESTED_INFORMATION_DUE,BPM_COMMON.GET_DATE_FMT) || '</REQUESTED_INFORMATION_DUE>
<DEMO_REOPEN_FOLLOW_UP>' || to_char(:new.DEMO_REOPEN_FOLLOW_UP,BPM_COMMON.GET_DATE_FMT) || '</DEMO_REOPEN_FOLLOW_UP>
<ADDITIONAL_INFO_RECEIVED>' || to_char(:new.ADDITIONAL_INFO_RECEIVED,BPM_COMMON.GET_DATE_FMT) || '</ADDITIONAL_INFO_RECEIVED>
<REOPENING_DECISION_RESULTS><![CDATA[' || :new.REOPENING_DECISION_RESULTS || ']]></REOPENING_DECISION_RESULTS>REOPENING_DECISION_RESULTS>
<NOT_REOPENED_REASON><![CDATA[' || :new.NOT_REOPENED_REASON || ']]></NOT_REOPENED_REASON>
<OMHA_REMAND_REQUEST>' || to_char(:new.OMHA_REMAND_REQUEST,BPM_COMMON.GET_DATE_FMT) || '</OMHA_REMAND_REQUEST>
<REMAND_ELIGIBILITY_RESPONSE>' || to_char(:new.REMAND_ELIGIBILITY_RESPONSE,BPM_COMMON.GET_DATE_FMT) || '</REMAND_ELIGIBILITY_RESPONSE>
<REMAND_RECEIVED_DATE>' || to_char(:new.REMAND_RECEIVED_DATE,BPM_COMMON.GET_DATE_FMT) || '</REMAND_RECEIVED_DATE>
<OMHA_REMAND_REQUEST_RESPONSE><![CDATA[' || :new.OMHA_REMAND_REQUEST_RESPONSE || ']]></OMHA_REMAND_REQUEST_RESPONSE>
<OMHA_WITHDRAW_FORM_SENT>' || to_char(:new.OMHA_WITHDRAW_FORM_SENT,BPM_COMMON.GET_DATE_FMT) || '</OMHA_WITHDRAW_FORM_SENT>
<OMHA_WITHDRAW_FORM_RETURNED>' || to_char(:new.OMHA_WITHDRAW_FORM_RETURNED,BPM_COMMON.GET_DATE_FMT) || '</OMHA_WITHDRAW_FORM_RETURNED>
<OMHA_NOTIFIED_OF_WITHDRAWL>' || to_char(:new.OMHA_NOTIFIED_OF_WITHDRAWL,BPM_COMMON.GET_DATE_FMT) || '</OMHA_NOTIFIED_OF_WITHDRAWL>
<ALJ_WITHDRAWAL>' || to_char(:new.ALJ_WITHDRAWAL,BPM_COMMON.GET_DATE_FMT) || '</ALJ_WITHDRAWAL>
<DEMO_REOPENING_APPEAL_NUMBER><![CDATA[' || :new.DEMO_REOPENING_APPEAL_NUMBER || ']]></DEMO_REOPENING_APPEAL_NUMBER>
<REOPENING_ANALYSIS_COMPLETED>' || to_char(:new.REOPENING_ANALYSIS_COMPLETED,BPM_COMMON.GET_DATE_FMT) || '</REOPENING_ANALYSIS_COMPLETED>
<REOPENING_ANALYSIS_OUTCOME><![CDATA[' || :new.REOPENING_ANALYSIS_OUTCOME || ']]></REOPENING_ANALYSIS_OUTCOME>
<NOT_PURSUED_BY_CONTR_REASON><![CDATA[' || :new.NOT_PURSUED_BY_CONTR_REASON || ']]></NOT_PURSUED_BY_CONTR_REASON>
<ACK_LETTER_MAILED>' || to_char(:new.ACK_LETTER_MAILED,BPM_COMMON.GET_DATE_FMT) || '</ACK_LETTER_MAILED>
<REO_DECISION_LETTER_MAILED>' || to_char(:new.REO_DECISION_LETTER_MAILED,BPM_COMMON.GET_DATE_FMT) || '</REO_DECISION_LETTER_MAILED>
<REOPENING_OUTCOME><![CDATA[' || :new.REOPENING_OUTCOME || ']]></REOPENING_OUTCOME>
<DECLINE_TO_REOPEN_DECISION>' || to_char(:new.DECLINE_TO_REOPEN_DECISION,BPM_COMMON.GET_DATE_FMT) || '</DECLINE_TO_REOPEN_DECISION>
<APPEAL_ATTESTATION_DATE>' || to_char(:new.APPEAL_ATTESTATION_DATE,BPM_COMMON.GET_DATE_FMT) || '</APPEAL_ATTESTATION_DATE>
<APPEAL_ATTESTATION><![CDATA[' || :new.APPEAL_ATTESTATION || ']]></APPEAL_ATTESTATION>
<DEMO_SCHEDULED>' || to_char(:new.DEMO_SCHEDULED,BPM_COMMON.GET_DATE_FMT) || '</DEMO_SCHEDULED>
<DEMO_NOTIFICATION_LETTER_SENT>' || to_char(:new.DEMO_NOTIFICATION_LETTER_SENT,BPM_COMMON.GET_DATE_FMT) || '</DEMO_NOTIFICATION_LETTER_SENT>
<RESPONSE_DUE>' || to_char(:new.RESPONSE_DUE,BPM_COMMON.GET_DATE_FMT) || '</RESPONSE_DUE>
<RESPONSE_RECEIVED>' || to_char(:new.RESPONSE_RECEIVED,BPM_COMMON.GET_DATE_FMT) || '</RESPONSE_RECEIVED>
<DEMO_ACCEPTANCE_STATUS><![CDATA[' || :new.DEMO_ACCEPTANCE_STATUS || ']]></DEMO_ACCEPTANCE_STATUS>
<TELE_DEMO_FOLLOW_UP>' || to_char(:new.TELE_DEMO_FOLLOW_UP,BPM_COMMON.GET_DATE_FMT) || '</TELE_DEMO_FOLLOW_UP>
<DEMO_NOTIFICATION_LTR_RESENT>' || to_char(:new.DEMO_NOTIFICATION_LTR_RESENT,BPM_COMMON.GET_DATE_FMT) || '</DEMO_NOTIFICATION_LTR_RESENT>
<RESCHEDULED_RESPONSE_DUE>' || to_char(:new.RESCHEDULED_RESPONSE_DUE,BPM_COMMON.GET_DATE_FMT) || '</RESCHEDULED_RESPONSE_DUE>
<RESCHEDULE_RESPONSE_RECEIVED>' || to_char(:new.RESCHEDULE_RESPONSE_RECEIVED,BPM_COMMON.GET_DATE_FMT) || '</RESCHEDULE_RESPONSE_RECEIVED>
<VERBAL_CONFIRMATION>' || to_char(:new.VERBAL_CONFIRMATION,BPM_COMMON.GET_DATE_FMT) || '</VERBAL_CONFIRMATION>
<RESCHEDULED_DEMO_STATUS><![CDATA[' || :new.RESCHEDULED_DEMO_STATUS || ']]></RESCHEDULED_DEMO_STATUS>
<PROVIDER_OR_SUPPLIER_NAME><![CDATA[' || :new.PROVIDER_OR_SUPPLIER_NAME || ']]></PROVIDER_OR_SUPPLIER_NAME>	
<DEMO_CONFERENCE_STATUS><![CDATA[' || :new.DEMO_CONFERENCE_STATUS || ']]></DEMO_CONFERENCE_STATUS>
<REVIEW_TYPE><![CDATA[' || :new.REVIEW_TYPE || ']]></REVIEW_TYPE>
<EXPERT_REVIEW_DECISION><![CDATA[' || :new.EXPERT_REVIEW_DECISION || ']]></EXPERT_REVIEW_DECISION>		
<REVIEW_NUMBER><![CDATA[' || :new.REVIEW_NUMBER || ']]></REVIEW_NUMBER>

     </ROW>
    </ROWSET>
    ';

  insert into BPM_UPDATE_EVENT_QUEUE
    (BUEQ_ID,BSL_ID,BIL_ID,IDENTIFIER,EVENT_DATE,QUEUE_DATE,DATA_VERSION,OLD_DATA,NEW_DATA)
    values (SEQ_BUEQ_ID.nextval,v_bsl_id,v_bil_id,v_identifier,v_event_date,sysdate,v_data_version,xmltype(v_xml_string_old),xmltype(v_xml_string_new));

exception

  when OTHERS then
    v_sql_code := SQLCODE;
    v_log_message := SQLERRM || '
      XML (old):
      ' || v_xml_string_old || '
      XML (new):
      ' || v_xml_string_new;
    BPM_COMMON.LOGGER(BPM_COMMON.LOG_LEVEL_SEVERE,null,$$PLSQL_UNIT,v_bsl_id,v_bil_id,v_identifier,null,v_log_message,v_sql_code);
    raise;

end;
/

alter session set plsql_code_type = interpreted;
