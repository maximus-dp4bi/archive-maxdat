
CREATE TABLE FEDQIC_DOCUMENT_STG 
(
  ID_PARENT NUMBER(19, 0)
, ID NUMBER(19, 0) NOT NULL
, C_DOCUMENT_TYPE NUMBER(10, 0) 
, C_ICN VARCHAR2(255 CHAR) 
, C_SOURCE NUMBER(10, 0)  
, C_MAILED_DATE DATE  
, C_DUE_DATE DATE 
, C_UPLOADED_DATE DATE  
, C_DOCUMENT_CLAIMED_DATE TIMESTAMP(6)
, C_DATE_SCANNED TIMESTAMP(6) 
, C_CLASSIFIED_DATE TIMESTAMP(6) 
, C_ASSOCIATED_DATE TIMESTAMP(6)  
, C_DATE_RECEIVED TIMESTAMP(6) 
, C_REQUESTED_INFORMATION NUMBER(10, 0)  
, C_REQUEST_SENT_TO NUMBER(10, 0) 
, C_REQUESTOR NUMBER(10, 0)   
, C_DATE_OF_REQUEST DATE  
)   tablespace MAXDAT_DATA; 

  alter table FEDQIC_DOCUMENT_STG add constraint DOC_STG_PK primary key (ID)
  using index tablespace MAXDAT_INDX;

Grant select on FEDQIC_DOCUMENT_STG to MAXDAT_READ_ONLY;

CREATE TABLE CORP_ETL_DOCUMENT 
(
CEDOC_ID NUMBER NOT NULL
, APPEAL_ID NUMBER(19, 0)
, DOCUMENT_ID NUMBER(19, 0) NOT NULL
, DOCUMENT_TYPE NUMBER(10, 0) 
, ICN VARCHAR2(255 CHAR) 
, SOURCE NUMBER(10, 0)  
, MAILED_DATE DATE  
, DUE_DATE DATE 
, UPLOADED_DATE DATE  
, DOCUMENT_CLAIMED_DATE TIMESTAMP(6)
, SCANNED_DATE TIMESTAMP(6) 
, CLASSIFIED_DATE TIMESTAMP(6) 
, ASSOCIATED_DATE TIMESTAMP(6)  
, DATE_RECEIVED TIMESTAMP(6) 
, REQUEST_INFORMATION NUMBER(10, 0)  
, REQUEST_SENT_TO NUMBER(10, 0) 
, REQUESTOR NUMBER(10, 0)   
, DATE_OF_REQUEST DATE  
, STG_EXTRACT_DATE DATE
, STG_LAST_UPDATE_DATE DATE
)   tablespace MAXDAT_DATA; 

  alter table CORP_ETL_DOCUMENT add constraint CORP_ETL_DOCUMENT_PK primary key (CEDOC_ID)
  using index tablespace MAXDAT_INDX;

create unique index CEDOC_UIX1 on CORP_ETL_DOCUMENT ("DOCUMENT_ID") online tablespace MAXDAT_INDX parallel compute statistics;

   CREATE SEQUENCE  SEQ_CEDOC_ID  
   MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 10 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL;

Grant select on CORP_ETL_DOCUMENT to MAXDAT_READ_ONLY;


CREATE TABLE CORP_ETL_DOCUMENT_WIP 
(
CEDOC_ID NUMBER NOT NULL
, APPEAL_ID NUMBER(19, 0)
, DOCUMENT_ID NUMBER(19, 0) NOT NULL
, DOCUMENT_TYPE NUMBER(10, 0) 
, ICN VARCHAR2(255 CHAR) 
, SOURCE NUMBER(10, 0)  
, MAILED_DATE DATE  
, DUE_DATE DATE 
, UPLOADED_DATE DATE  
, DOCUMENT_CLAIMED_DATE TIMESTAMP(6)
, SCANNED_DATE TIMESTAMP(6) 
, CLASSIFIED_DATE TIMESTAMP(6) 
, ASSOCIATED_DATE TIMESTAMP(6)  
, DATE_RECEIVED TIMESTAMP(6) 
, REQUEST_INFORMATION NUMBER(10, 0)  
, REQUEST_SENT_TO NUMBER(10, 0) 
, REQUESTOR NUMBER(10, 0)   
, DATE_OF_REQUEST DATE  
, STG_EXTRACT_DATE DATE
, STG_LAST_UPDATE_DATE DATE
, change_flag varchar2(1)
)   tablespace MAXDAT_DATA; 

create unique index CEDOCWP_UIX1 on CORP_ETL_DOCUMENT_WIP ("DOCUMENT_ID") online tablespace MAXDAT_INDX parallel compute statistics;
create unique index CEDOCWP_UIX2 on CORP_ETL_DOCUMENT_WIP ("CEDOC_ID") online tablespace MAXDAT_INDX parallel compute statistics;

Grant select on CORP_ETL_DOCUMENT_WIP to MAXDAT_READ_ONLY;

CREATE TABLE D_QIC_DOCUMENT 
(
DOC_BI_ID NUMBER NOT NULL
, APPEAL_ID NUMBER(19, 0)
, DOCUMENT_ID NUMBER(19, 0) NOT NULL
, DOCUMENT_TYPE NUMBER(10, 0) 
, ICN VARCHAR2(255 CHAR) 
, SOURCE NUMBER(10, 0)  
, MAILED_DATE DATE  
, DUE_DATE DATE 
, UPLOADED_DATE DATE  
, DOCUMENT_CLAIMED_DATE TIMESTAMP(6)
, SCANNED_DATE TIMESTAMP(6) 
, CLASSIFIED_DATE TIMESTAMP(6) 
, ASSOCIATED_DATE TIMESTAMP(6)  
, DATE_RECEIVED TIMESTAMP(6) 
, REQUEST_INFORMATION NUMBER(10, 0)  
, REQUEST_SENT_TO NUMBER(10, 0) 
, REQUESTOR NUMBER(10, 0)   
, DATE_OF_REQUEST DATE  
, STG_EXTRACT_DATE DATE
, STG_LAST_UPDATE_DATE DATE
)   tablespace MAXDAT_DATA; 

  alter table D_QIC_DOCUMENT add constraint DOC_PK primary key (DOC_BI_ID)
  using index tablespace MAXDAT_INDX;

create unique index DDOC_UIX1 on D_QIC_DOCUMENT ("DOCUMENT_ID") online tablespace MAXDAT_INDX parallel compute statistics;
create index DDOC_TYPE on D_QIC_DOCUMENT ("DOCUMENT_TYPE") online tablespace MAXDAT_INDX parallel compute statistics;
create index DDOC_APP on D_QIC_DOCUMENT ("APPEAL_ID") online tablespace MAXDAT_INDX parallel compute statistics;
create index DDOC_ICN on D_QIC_DOCUMENT ("ICN") online tablespace MAXDAT_INDX parallel compute statistics;
create index DDOC_SCE on D_QIC_DOCUMENT ("SOURCE") online tablespace MAXDAT_INDX parallel compute statistics;
create index DDOC_MAILED_DT on D_QIC_DOCUMENT ("MAILED_DATE") online tablespace MAXDAT_INDX parallel compute statistics;
create index DDOC_DUE_DT on D_QIC_DOCUMENT ("DUE_DATE") online tablespace MAXDAT_INDX parallel compute statistics;
create index DDOC_UPL_DT on D_QIC_DOCUMENT ("UPLOADED_DATE") online tablespace MAXDAT_INDX parallel compute statistics;
create index DDOC_DOC_CLMD_DT on D_QIC_DOCUMENT ("DOCUMENT_CLAIMED_DATE") online tablespace MAXDAT_INDX parallel compute statistics;
create index DDOC_SCN_DT on D_QIC_DOCUMENT ("SCANNED_DATE") online tablespace MAXDAT_INDX parallel compute statistics;
create index DDOC_CLS_DT on D_QIC_DOCUMENT ("CLASSIFIED_DATE") online tablespace MAXDAT_INDX parallel compute statistics;
create index DDOC_ASS_DT on D_QIC_DOCUMENT ("ASSOCIATED_DATE") online tablespace MAXDAT_INDX parallel compute statistics;
create index DDOC_DT_RC on D_QIC_DOCUMENT ("DATE_RECEIVED") online tablespace MAXDAT_INDX parallel compute statistics;
create index DDOC_RIN on D_QIC_DOCUMENT ("REQUEST_INFORMATION") online tablespace MAXDAT_INDX parallel compute statistics;
create index DDOC_RST on D_QIC_DOCUMENT ("REQUEST_SENT_TO") online tablespace MAXDAT_INDX parallel compute statistics;
create index DDOC_RQR on D_QIC_DOCUMENT ("REQUESTOR") online tablespace MAXDAT_INDX parallel compute statistics;
create index DDOC_DT_RQ on D_QIC_DOCUMENT ("DATE_OF_REQUEST") online tablespace MAXDAT_INDX parallel compute statistics;

Grant select on D_QIC_DOCUMENT to MAXDAT_READ_ONLY;

CREATE SEQUENCE  SEQ_DOC_BI_ID  
MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL;

  CREATE TABLE D_DOC_TYPES
   (
        D_DT_ID NUMBER NOT NULL,
        DOC_TYPE_ID NUMBER(19,0) NOT NULL,
        DOC_TYPE_NAME VARCHAR2(255 CHAR),
        DOC_TYPE_DESCRIPTION VARCHAR2(255 CHAR),
        START_DATE DATE,
        END_DATE DATE
    )   tablespace MAXDAT_DATA;

  alter table D_DOC_TYPES add constraint DDOCDT_PK primary key (D_DT_ID)
  using index tablespace MAXDAT_INDX;
create unique index DDOCDT_UIX1 on D_DOC_TYPES ("DOC_TYPE_ID") online tablespace MAXDAT_INDX parallel compute statistics;
Grant select on D_DOC_TYPES to MAXDAT_READ_ONLY;
CREATE SEQUENCE  SEQ_DOC_DTS_ID  
MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL;


CREATE TABLE D_DOC_REQ_INFORMATION
   (
        D_DRI_ID NUMBER NOT NULL,
        DOC_REQ_INFORMATION_ID NUMBER(19,0) NOT NULL,
        DOC_REQ_INFORMATION_NAME VARCHAR2(255 CHAR),
        DOC_REQ_INFORMATION_DESCRIPTION VARCHAR2(255 CHAR),
        START_DATE DATE,
        END_DATE DATE
    )   tablespace MAXDAT_DATA;

  alter table D_DOC_REQ_INFORMATION add constraint DDOCRI_PK primary key (D_DRI_ID)
  using index tablespace MAXDAT_INDX;
create unique index DDOCRI_UIX1 on D_DOC_REQ_INFORMATION ("DOC_REQ_INFORMATION_ID") online tablespace MAXDAT_INDX parallel compute statistics;
Grant select on D_DOC_REQ_INFORMATION to MAXDAT_READ_ONLY;
CREATE SEQUENCE  SEQ_DOC_DRI_ID  
MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL;

CREATE TABLE D_DOC_SOURCE
   (
        D_DSC_ID NUMBER NOT NULL,
        DOC_SOURCE_ID NUMBER(19,0) NOT NULL,
        DOC_SOURCE_NAME VARCHAR2(255 CHAR),
        DOC_SOURCE_DESCRIPTION VARCHAR2(255 CHAR),
        START_DATE DATE,
        END_DATE DATE
    )   tablespace MAXDAT_DATA;

  alter table D_DOC_SOURCE add constraint DDOCSC_PK primary key (D_DSC_ID)
  using index tablespace MAXDAT_INDX;
create unique index DDOCSC_UIX1 on D_DOC_SOURCE ("DOC_SOURCE_ID") online tablespace MAXDAT_INDX parallel compute statistics;
Grant select on D_DOC_SOURCE to MAXDAT_READ_ONLY;
CREATE SEQUENCE  SEQ_DOC_DSC_ID  
MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL;

CREATE TABLE D_DOC_REQ_SENT_TO
   (
        D_DRS_ID NUMBER NOT NULL,
        DOC_REQ_SENT_TO_ID NUMBER(19,0) NOT NULL,
        DOC_REQ_SENT_TO_NAME VARCHAR2(255 CHAR),
        DOC_REQ_SENT_TO_DESCRIPTION VARCHAR2(255 CHAR),
        START_DATE DATE,
        END_DATE DATE
    )   tablespace MAXDAT_DATA;

  alter table D_DOC_REQ_SENT_TO add constraint DDOCRS_PK primary key (D_DRS_ID)
  using index tablespace MAXDAT_INDX;
create unique index DDOCRS_UIX1 on D_DOC_REQ_SENT_TO ("DOC_REQ_SENT_TO_ID") online tablespace MAXDAT_INDX parallel compute statistics;
Grant select on D_DOC_REQ_SENT_TO to MAXDAT_READ_ONLY;
CREATE SEQUENCE  SEQ_DOC_DRS_ID  
MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL;



CREATE OR REPLACE VIEW D_QIC_DOCUMENT_SV
AS
SELECT
d.APPEAL_ID
, d.DOCUMENT_ID
, dt.doc_type_name as document_type
, d.ICN 
, ds.doc_source_name as source 
, d.MAILED_DATE  
, d.DUE_DATE 
, d.UPLOADED_DATE  
, d.DOCUMENT_CLAIMED_DATE
, d.SCANNED_DATE 
, d.CLASSIFIED_DATE 
, d.ASSOCIATED_DATE  
, d.DATE_RECEIVED 
, dri.doc_req_information_name as request_information  
, drs.doc_req_sent_to_name  as request_sent_to
, (select trim(st.first_name) || ' ' || (case when st.middle_name is not null then (trim(st.middle_name) || ' ') else '' end) || trim(st.last_name) from d_staff st where st.staff_id = d.REQUESTOR) as REQUESTOR  
, d.DATE_OF_REQUEST
, ap.part_name as APPEAL_PART
, d.STG_LAST_UPDATE_DATE
from D_QIC_DOCUMENT d
LEFT OUTER JOIN D_DOC_TYPES dt 
ON d.document_type = dt.doc_type_id
LEFT OUTER JOIN D_DOC_SOURCE ds 
ON d.SOURCE = ds.DOC_SOURCE_ID
LEFT OUTER JOIN D_DOC_REQ_INFORMATION dri 
ON d.request_information = dri.doc_req_information_id
LEFT OUTER JOIN D_DOC_REQ_SENT_TO drs ON d.REQUEST_SENT_TO = drs.DOC_REQ_SENT_TO_ID
LEFT OUTER JOIN D_MW_APPEAL_INSTANCE A ON d.APPEAL_ID = A.APPEAL_ID
LEFT OUTER JOIN D_APPEAL_PARTS ap ON A.APPEAL_PART_ID = ap.PART_ID
with read only;

GRANT SELECT ON D_QIC_DOCUMENT_SV TO MAXDAT_READ_ONLY;


CREATE TABLE FEDQIC_CLAIM_STG 
(
ID_PARENT NUMBER(19, 0)
, ID NUMBER(19, 0) NOT NULL 
, C_CLAIM_NUMBER VARCHAR2(20 CHAR)  
, C_HCPCS_CPT_CODE VARCHAR2(255 CHAR)  
, C_VMS_REASON_CODE VARCHAR2(20 CHAR)   
, C_APPELLANT_ARGUMENT NUMBER(10, 0)  
, C_DISPOSITION NUMBER(10, 0) 
, C_DISPOSITION_EXPLANATION NUMBER(10, 0)     
, C_REVERSAL_REASON VARCHAR2(100 CHAR) 
, C_PROCEDURAL_DECISION_REASON NUMBER(10, 0)   
, C_SUBSTANTIVE_REASON NUMBER(10, 0)  
, C_CITATION_SOURCE NUMBER(10,0)  
, C_PROVIDER VARCHAR2(100 CHAR)
, C_PROVIDER_NAME VARCHAR2(100 CHAR)
, C_DIAGNOSIS_CODE VARCHAR2(255 CHAR)
, C_PROCEDURE_CODE VARCHAR2(20 BYTE)
, C_CLAIM_STATUS_CODE VARCHAR2(20 CHAR)
, C_CLAIM_ADJUSTMENT_CODE VARCHAR2(20 CHAR)
, C_NATIONAL_DRUG_CODE VARCHAR2(10 CHAR)
, C_TYPE_OF_COVERAGE NUMBER(10,0)
)   tablespace MAXDAT_DATA; 

alter table FEDQIC_CLAIM_STG add constraint CLM_STG_PK primary key (ID)
using index tablespace MAXDAT_INDX;


Grant select on FEDQIC_CLAIM_STG to MAXDAT_READ_ONLY;

CREATE TABLE FEDQIC_CLAIM_LINE_ITEM_STG 
(
ID_PARENT NUMBER(19, 0)
, ID NUMBER(19, 0) NOT NULL 
, LI_C_CLAIM_LINE_ITEM_NUMBER VARCHAR2(20 CHAR)
, LI_C_MSG_ACTION_CODE VARCHAR2(20 CHAR)
, LI_C_CLAIM_ADJUSTMENT_CODE VARCHAR2(20 CHAR)
, LI_C_PROCEDURE_CODE VARCHAR2(20 CHAR)
, LI_C_DRG_CODE VARCHAR2(20 BYTE)
, LI_C_HIPPS_CODE VARCHAR2(20 CHAR)
, LI_C_DIAGNOSIS_CODE VARCHAR2(20 BYTE)
, LI_C_MISC_CODES VARCHAR2(50 CHAR)
, LI_C_DISPOSITION NUMBER(10,0)
, LI_C_DISPOSITION_EXPLANATION NUMBER(10,0)
, LI_C_PROCEDURAL_DECISION_REASON NUMBER(10,0)
, LI_C_SUBSTANTIVE_REASON NUMBER(10,0)
)   tablespace MAXDAT_DATA; 

alter table FEDQIC_CLAIM_LINE_ITEM_STG add constraint CLM_LI_STG_PK primary key (ID)
using index tablespace MAXDAT_INDX;


Grant select on FEDQIC_CLAIM_LINE_ITEM_STG to MAXDAT_READ_ONLY;


CREATE TABLE CORP_ETL_CLAIM 
(
CECLM_ID NUMBER NOT NULL
, APPEAL_ID NUMBER(19, 0)
, CLAIM_ID NUMBER(19, 0) NOT NULL 
, CLAIM_NUMBER VARCHAR2(20 CHAR)  
, HCPCS_CODE VARCHAR2(255 CHAR)  
, ACTION_CODE VARCHAR2(20 CHAR)   
, APPELLANT_ARGUMENT NUMBER(10, 0)  
, DISPOSITION NUMBER(10, 0) 
, DISPOSITION_EXPLANATION NUMBER(10, 0)     
, REVERSAL_REASON VARCHAR2(100 CHAR) 
, PROCEDURAL_DECISION_REASON NUMBER(10, 0)   
, SUBSTANTIVE_REASON NUMBER(10, 0)  
, CITATION_SOURCE NUMBER(10,0)  
, PROVIDER VARCHAR2(100 CHAR)
, PROVIDER_NAME VARCHAR2(100 CHAR)
, CLAIM_DIAGNOSIS_CODES VARCHAR2(255 CHAR)
, CLAIM_PROCEDURE_CODES VARCHAR2(20 BYTE)
, CLAIM_STATUS_CODE VARCHAR2(20 CHAR)
, CLAIM_ADJUSTMENT_CODE VARCHAR2(20 CHAR)
, NATIONAL_DRUG_CODE VARCHAR2(10 CHAR)
, TYPE_OF_COVERAGE NUMBER(10,0)
, STG_EXTRACT_DATE DATE
, STG_LAST_UPDATE_DATE DATE
)   tablespace MAXDAT_DATA; 

  alter table CORP_ETL_CLAIM add constraint CORP_ETL_CLAIM_PK primary key (CECLM_ID)
  using index tablespace MAXDAT_INDX;

create unique index CECLM_UIX1 on CORP_ETL_CLAIM ("CLAIM_ID") online tablespace MAXDAT_INDX parallel compute statistics;

   CREATE SEQUENCE  SEQ_CECLM_ID  
   MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 10 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL;

Grant select on CORP_ETL_CLAIM to MAXDAT_READ_ONLY;


CREATE TABLE CORP_ETL_CLAIM_LINE_ITEM 
(
CECLI_ID NUMBER NOT NULL
, CLAIM_ID NUMBER(19, 0) NOT NULL
, CLAIM_LINE_ITEM_ID NUMBER(19, 0) NOT NULL 
, CLAIM_LINE_ITEM_NUMBER VARCHAR2(20 CHAR)
, MSG_ACTION_CODE VARCHAR2(20 CHAR)
, CLAIM_LINE_ADJUSTMENT_CODE VARCHAR2(20 CHAR)
, CLAIM_LINE_PROCEDURE_CODES VARCHAR2(20 CHAR)
, CLAIM_LINE_DRUG_CODES VARCHAR2(20 BYTE)
, HIPPS_CODE VARCHAR2(20 CHAR)
, DIAGNOSIS_CODE VARCHAR2(20 BYTE)
, MISC_CODES VARCHAR2(50 CHAR)
, CLAIM_LINE_DISPOSITION NUMBER(10,0)
, CLAIM_LINE_DISPOSITION_EXPLANATION NUMBER(10,0)
, CLAIM_LINE_PROCEDURAL_DECISION_REASON NUMBER(10,0)
, CLAIM_LINE_SUBSTANTIVE_REASON NUMBER(10,0)
, STG_EXTRACT_DATE DATE
, STG_LAST_UPDATE_DATE DATE
)   tablespace MAXDAT_DATA; 

  alter table CORP_ETL_CLAIM_LINE_ITEM add constraint CORP_ETL_CLAIM_LI_PK primary key (CECLI_ID)
  using index tablespace MAXDAT_INDX;

create unique index CECLI_UIX1 on CORP_ETL_CLAIM_LINE_ITEM ("CLAIM_LINE_ITEM_ID") online tablespace MAXDAT_INDX parallel compute statistics;

   CREATE SEQUENCE  SEQ_CECLI_ID  
   MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 10 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL;

Grant select on CORP_ETL_CLAIM_LINE_ITEM to MAXDAT_READ_ONLY;


CREATE TABLE CORP_ETL_CLAIM_WIP 
(
CECLM_ID NUMBER NOT NULL
, APPEAL_ID NUMBER(19, 0)
, CLAIM_ID NUMBER(19, 0) NOT NULL 
, CLAIM_NUMBER VARCHAR2(20 CHAR)  
, HCPCS_CODE VARCHAR2(255 CHAR)  
, ACTION_CODE VARCHAR2(20 CHAR)   
, APPELLANT_ARGUMENT NUMBER(10, 0)  
, DISPOSITION NUMBER(10, 0) 
, DISPOSITION_EXPLANATION NUMBER(10, 0)     
, REVERSAL_REASON VARCHAR2(100 CHAR) 
, PROCEDURAL_DECISION_REASON NUMBER(10, 0)   
, SUBSTANTIVE_REASON NUMBER(10, 0)  
, CITATION_SOURCE NUMBER(10,0)  
, PROVIDER VARCHAR2(100 CHAR)
, PROVIDER_NAME VARCHAR2(100 CHAR)
, CLAIM_DIAGNOSIS_CODES VARCHAR2(255 CHAR)
, CLAIM_PROCEDURE_CODES VARCHAR2(20 BYTE)
, CLAIM_STATUS_CODE VARCHAR2(20 CHAR)
, CLAIM_ADJUSTMENT_CODE VARCHAR2(20 CHAR)
, NATIONAL_DRUG_CODE VARCHAR2(10 CHAR)
, TYPE_OF_COVERAGE NUMBER(10,0)
, STG_EXTRACT_DATE DATE
, STG_LAST_UPDATE_DATE DATE
, change_flag varchar2(1)
)   tablespace MAXDAT_DATA; 


create unique index CECLMWP_UIX1 on CORP_ETL_CLAIM_WIP ("CLAIM_ID") online tablespace MAXDAT_INDX parallel compute statistics;
create unique index CECLMWP_UIX2 on CORP_ETL_CLAIM_WIP ("CECLM_ID") online tablespace MAXDAT_INDX parallel compute statistics;

Grant select on CORP_ETL_CLAIM_WIP to MAXDAT_READ_ONLY;


CREATE TABLE CORP_ETL_CLAIM_LINE_ITEM_WIP 
(
CECLI_ID NUMBER NOT NULL
, CLAIM_ID NUMBER(19, 0) NOT NULL
, CLAIM_LINE_ITEM_ID NUMBER(19, 0) NOT NULL 
, CLAIM_LINE_ITEM_NUMBER VARCHAR2(20 CHAR)
, MSG_ACTION_CODE VARCHAR2(20 CHAR)
, CLAIM_LINE_ADJUSTMENT_CODE VARCHAR2(20 CHAR)
, CLAIM_LINE_PROCEDURE_CODES VARCHAR2(20 CHAR)
, CLAIM_LINE_DRUG_CODES VARCHAR2(20 BYTE)
, HIPPS_CODE VARCHAR2(20 CHAR)
, DIAGNOSIS_CODE VARCHAR2(20 BYTE)
, MISC_CODES VARCHAR2(50 CHAR)
, CLAIM_LINE_DISPOSITION NUMBER(10,0)
, CLAIM_LINE_DISPOSITION_EXPLANATION NUMBER(10,0)
, CLAIM_LINE_PROCEDURAL_DECISION_REASON NUMBER(10,0)
, CLAIM_LINE_SUBSTANTIVE_REASON NUMBER(10,0)
, STG_EXTRACT_DATE DATE
, STG_LAST_UPDATE_DATE DATE
, change_flag varchar2(1)
)   tablespace MAXDAT_DATA; 


create unique index CECLMIWP_UIX1 on CORP_ETL_CLAIM_LINE_ITEM_WIP ("CLAIM_LINE_ITEM_ID") online tablespace MAXDAT_INDX parallel compute statistics;
create unique index CECLMIWP_UIX2 on CORP_ETL_CLAIM_LINE_ITEM_WIP ("CECLI_ID") online tablespace MAXDAT_INDX parallel compute statistics;


Grant select on CORP_ETL_CLAIM_LINE_ITEM_WIP to MAXDAT_READ_ONLY;


CREATE TABLE D_QIC_CLAIM 
(
CLM_BI_ID NUMBER NOT NULL
, APPEAL_ID NUMBER(19, 0)
, CLAIM_ID NUMBER(19, 0) NOT NULL 
, CLAIM_NUMBER VARCHAR2(20 CHAR)  
, HCPCS_CODE VARCHAR2(255 CHAR)  
, ACTION_CODE VARCHAR2(20 CHAR)   
, APPELLANT_ARGUMENT NUMBER(10, 0)  
, DISPOSITION NUMBER(10, 0) 
, DISPOSITION_EXPLANATION NUMBER(10, 0)     
, REVERSAL_REASON VARCHAR2(100 CHAR) 
, PROCEDURAL_DECISION_REASON NUMBER(10, 0)   
, SUBSTANTIVE_REASON NUMBER(10, 0)  
, CITATION_SOURCE NUMBER(10,0)
, PROVIDER VARCHAR2(100 CHAR)
, PROVIDER_NAME VARCHAR2(100 CHAR)
, CLAIM_DIAGNOSIS_CODES VARCHAR2(255 CHAR)
, CLAIM_PROCEDURE_CODES VARCHAR2(20 BYTE)
, CLAIM_STATUS_CODE VARCHAR2(20 CHAR)
, CLAIM_ADJUSTMENT_CODE VARCHAR2(20 CHAR)
, NATIONAL_DRUG_CODE VARCHAR2(10 CHAR)
, TYPE_OF_COVERAGE NUMBER(10,0)
, STG_EXTRACT_DATE DATE
, STG_LAST_UPDATE_DATE DATE
)   tablespace MAXDAT_DATA; 

  alter table D_QIC_CLAIM add constraint CLM_PK primary key (CLM_BI_ID)
  using index tablespace MAXDAT_INDX;


create index DCLM_APP on D_QIC_CLAIM ("APPEAL_ID") online tablespace MAXDAT_INDX parallel compute statistics;
create unique index DCLM_UIX1 on D_QIC_CLAIM ("CLAIM_ID") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLM_NM on D_QIC_CLAIM ("CLAIM_NUMBER") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLM_HCPCS on D_QIC_CLAIM ("HCPCS_CODE") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLM_ACT on D_QIC_CLAIM ("ACTION_CODE") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLM_AA on D_QIC_CLAIM ("APPELLANT_ARGUMENT") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLM_DIS on D_QIC_CLAIM ("DISPOSITION") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLM_DISE on D_QIC_CLAIM ("DISPOSITION_EXPLANATION") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLM_RR on D_QIC_CLAIM ("REVERSAL_REASON") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLM_PDR on D_QIC_CLAIM ("PROCEDURAL_DECISION_REASON") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLM_SR on D_QIC_CLAIM ("SUBSTANTIVE_REASON") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLM_CITS on D_QIC_CLAIM ("CITATION_SOURCE") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLM_PRV on D_QIC_CLAIM ("PROVIDER") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLM_PRVN on D_QIC_CLAIM ("PROVIDER_NAME") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLM_CLMD on D_QIC_CLAIM ("CLAIM_DIAGNOSIS_CODES") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLM_CLMP on D_QIC_CLAIM ("CLAIM_PROCEDURE_CODES") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLM_CLMS on D_QIC_CLAIM ("CLAIM_STATUS_CODE") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLM_CLMA on D_QIC_CLAIM ("CLAIM_ADJUSTMENT_CODE") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLM_NGC on D_QIC_CLAIM ("NATIONAL_DRUG_CODE") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLM_TCOV on D_QIC_CLAIM ("TYPE_OF_COVERAGE") online tablespace MAXDAT_INDX parallel compute statistics;

Grant select on D_QIC_CLAIM to MAXDAT_READ_ONLY;

CREATE SEQUENCE  SEQ_CLM_BI_ID  
MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL;

CREATE TABLE D_QIC_CLAIM_LINE_ITEM 
(
CLI_BI_ID NUMBER NOT NULL
, CLAIM_ID NUMBER(19, 0) NOT NULL
, CLAIM_LINE_ITEM_ID NUMBER(19, 0) NOT NULL 
, CLAIM_LINE_ITEM_NUMBER VARCHAR2(20 CHAR)
, MSG_ACTION_CODE VARCHAR2(20 CHAR)
, CLAIM_LINE_ADJUSTMENT_CODE VARCHAR2(20 CHAR)
, CLAIM_LINE_PROCEDURE_CODES VARCHAR2(20 CHAR)
, CLAIM_LINE_DRUG_CODES VARCHAR2(20 BYTE)
, HIPPS_CODE VARCHAR2(20 CHAR)
, DIAGNOSIS_CODE VARCHAR2(20 BYTE)
, MISC_CODES VARCHAR2(50 CHAR)
, CLAIM_LINE_DISPOSITION NUMBER(10,0)
, CLAIM_LINE_DISPOSITION_EXPLANATION NUMBER(10,0)
, CLAIM_LINE_PROCEDURAL_DECISION_REASON NUMBER(10,0)
, CLAIM_LINE_SUBSTANTIVE_REASON NUMBER(10,0)
, STG_EXTRACT_DATE DATE
, STG_LAST_UPDATE_DATE DATE
)   tablespace MAXDAT_DATA; 

  alter table D_QIC_CLAIM_LINE_ITEM add constraint CLI_PK primary key (CLI_BI_ID)
  using index tablespace MAXDAT_INDX;

create unique index DCLI_UIX1 on D_QIC_CLAIM_LINE_ITEM ("CLAIM_LINE_ITEM_ID") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLI_CLM on D_QIC_CLAIM_LINE_ITEM ("CLAIM_ID") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLI_MSG on D_QIC_CLAIM_LINE_ITEM ("MSG_ACTION_CODE") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLI_ADJ on D_QIC_CLAIM_LINE_ITEM ("CLAIM_LINE_ADJUSTMENT_CODE") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLI_PRC on D_QIC_CLAIM_LINE_ITEM ("CLAIM_LINE_PROCEDURE_CODES") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLI_DRG on D_QIC_CLAIM_LINE_ITEM ("CLAIM_LINE_DRUG_CODES") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLI_HPS on D_QIC_CLAIM_LINE_ITEM ("HIPPS_CODE") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLI_DGN on D_QIC_CLAIM_LINE_ITEM ("DIAGNOSIS_CODE") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLI_MSC on D_QIC_CLAIM_LINE_ITEM ("MISC_CODES") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLI_DSP on D_QIC_CLAIM_LINE_ITEM ("CLAIM_LINE_DISPOSITION") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLI_DSPE on D_QIC_CLAIM_LINE_ITEM ("CLAIM_LINE_DISPOSITION_EXPLANATION") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLI_PDR on D_QIC_CLAIM_LINE_ITEM ("CLAIM_LINE_PROCEDURAL_DECISION_REASON") online tablespace MAXDAT_INDX parallel compute statistics;
create index DCLI_SUR on D_QIC_CLAIM_LINE_ITEM ("CLAIM_LINE_SUBSTANTIVE_REASON") online tablespace MAXDAT_INDX parallel compute statistics;

ALTER TABLE D_QIC_CLAIM ADD CONSTRAINT UNC_CLAIM_ID UNIQUE (CLAIM_ID);
ALTER TABLE D_QIC_CLAIM_LINE_ITEM ADD CONSTRAINT FK_CLAIM_ID FOREIGN KEY(CLAIM_ID) REFERENCES D_QIC_CLAIM(CLAIM_ID);


Grant select on D_QIC_CLAIM_LINE_ITEM to MAXDAT_READ_ONLY;

CREATE SEQUENCE  SEQ_CLI_BI_ID  
MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL;

  CREATE TABLE D_CLAIM_APPELLANT_ARGUMENT 
   (
        APPELLANT_ARG_ID NUMBER(19,0) NOT NULL,
        APPELLANT_ARG_NAME VARCHAR2(255 CHAR),
        APPELLANT_ARG_DESCRIPTION VARCHAR2(255 CHAR)
    )   tablespace MAXDAT_DATA;

  alter table D_CLAIM_APPELLANT_ARGUMENT add constraint DCAA_PK primary key (APPELLANT_ARG_ID)
  using index tablespace MAXDAT_INDX;

Grant select on D_CLAIM_APPELLANT_ARGUMENT to MAXDAT_READ_ONLY;


  CREATE TABLE D_CLAIM_CITATION_SOURCE 
   (
        CITATION_SRC_ID NUMBER(19,0) NOT NULL,
        CITATION_SRC_NAME VARCHAR2(255 CHAR),
        CITATION_SRC_DESCRIPTION VARCHAR2(255 CHAR)
    )   tablespace MAXDAT_DATA;

  alter table D_CLAIM_CITATION_SOURCE add constraint DCCS_PK primary key (CITATION_SRC_ID)
  using index tablespace MAXDAT_INDX;

Grant select on D_CLAIM_CITATION_SOURCE to MAXDAT_READ_ONLY;

  CREATE TABLE D_CLAIM_TYPE_COVERAGE 
   (
        D_TC_ID NUMBER NOT NULL,
        TYPE_COVERAGE_ID NUMBER(19,0) NOT NULL,
        TYPE_COVERAGE_NAME VARCHAR2(255 CHAR),
        TYPE_COVERAGE_DESCRIPTION VARCHAR2(255 CHAR),
        START_DATE DATE,
        END_DATE DATE
    )   tablespace MAXDAT_DATA;

  alter table D_CLAIM_TYPE_COVERAGE add constraint DCLTC_PK primary key (D_TC_ID)
  using index tablespace MAXDAT_INDX;

create unique index DCLTC_UIX1 on D_CLAIM_TYPE_COVERAGE ("TYPE_COVERAGE_ID") online tablespace MAXDAT_INDX parallel compute statistics;
Grant select on D_CLAIM_TYPE_COVERAGE to MAXDAT_READ_ONLY;

CREATE SEQUENCE  SEQ_CL_TC_ID  
MINVALUE 1 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL;


  CREATE TABLE D_CLAIM_REVERSAL_REASON 
   (
        REVERSAL_REASON_ID NUMBER(19,0) NOT NULL,
        REVERSAL_REASON_NAME VARCHAR2(255 CHAR),
        REVERSAL_REASON_DESCRIPTION VARCHAR2(255 CHAR)
    )   tablespace MAXDAT_DATA;

  alter table D_CLAIM_REVERSAL_REASON add constraint DCLRR_PK primary key (REVERSAL_REASON_ID)
  using index tablespace MAXDAT_INDX;

Grant select on D_CLAIM_REVERSAL_REASON to MAXDAT_READ_ONLY;


CREATE OR REPLACE VIEW D_QIC_CLAIM_SV
AS
SELECT
c.APPEAL_ID
, c.CLAIM_ID 
, c.CLAIM_NUMBER  
, c.HCPCS_CODE  
, c.ACTION_CODE   
, app_args.APPELLANT_ARG_NAME as APPELLANT_ARGUMENT   
, disp.DISPOSITION_NAME as CLAIM_DISPOSITION
, disp_exp.DISPOSITION_EXP_NAME as CLAIM_DISPOSITION_EXPLANATION  
, rr.reversal_reason_name as REVERSAL_REASON 
, proc_dec_reason.PROC_DEC_REASON_NAME as CLAIM_PROCEDURAL_DECISION_REASON 
, subst_reason.SUBSTANTIVE_REASON_NAME as CLAIM_SUBSTANTIVE_REASON
, cit_src.CITATION_SRC_NAME as CITATION_SOURCE
, c.PROVIDER
, c.PROVIDER_NAME
, c.CLAIM_DIAGNOSIS_CODES
, c.CLAIM_PROCEDURE_CODES
, c.CLAIM_STATUS_CODE
, c.CLAIM_ADJUSTMENT_CODE
, c.NATIONAL_DRUG_CODE
, cov.type_coverage_name as TYPE_OF_COVERAGE
, cli.CLAIM_LINE_ITEM_NUMBER
, cli.MSG_ACTION_CODE
, cli.CLAIM_LINE_ADJUSTMENT_CODE
, cli.CLAIM_LINE_PROCEDURE_CODES
, cli.CLAIM_LINE_DRUG_CODES
, cli.HIPPS_CODE
, cli.DIAGNOSIS_CODE
, cli.MISC_CODES
, disp2.DISPOSITION_NAME as CLAIM_LINE_DISPOSITION
, disp_exp2.DISPOSITION_EXP_NAME as CLAIM_LINE_DISPOSITION_EXPLANATION
, proc_dec_reason2.PROC_DEC_REASON_NAME as CLAIM_LINE_PROCEDURAL_DECISION_REASON   
, subst_reason2.SUBSTANTIVE_REASON_NAME as CLAIM_LINE_SUBSTANTIVE_REASON
, ap.part_name as APPEAL_PART
, cli.claim_line_item_id
, statuses.STATUS_NAME as APPEAL_STATUS 
, a.REQUEST_RECEIVED 
, macs.MAC_NAME as MAC
from D_QIC_CLAIM c
LEFT OUTER JOIN D_QIC_CLAIM_LINE_ITEM cli
ON c.claim_id = cli.claim_id
LEFT OUTER JOIN D_CLAIM_APPELLANT_ARGUMENT app_args 
ON c.appellant_argument = app_args.appellant_arg_id
LEFT OUTER JOIN D_APPEAL_DISPOSITIONS disp 
ON c.DISPOSITION = disp.DISPOSITION_ID
LEFT OUTER JOIN D_APPEAL_DISPOSITION_EXPS disp_exp 
ON c.DISPOSITION_EXPLANATION = disp_exp.disposition_exp_id
LEFT OUTER JOIN D_APPEAL_PROC_DEC_REASONS proc_dec_reason
ON c.PROCEDURAL_DECISION_REASON = proc_dec_reason.PROC_DEC_REASON_ID
LEFT OUTER JOIN D_APPEAL_SUBSTANTIVE_REASONS subst_reason
ON c.SUBSTANTIVE_REASON = subst_reason.SUBSTANTIVE_REASON_ID
LEFT OUTER JOIN D_CLAIM_CITATION_SOURCE cit_src
ON c.CITATION_SOURCE = cit_src.CITATION_SRC_ID
LEFT OUTER JOIN D_APPEAL_DISPOSITIONS disp2 
ON cli.CLAIM_LINE_DISPOSITION = disp2.DISPOSITION_ID
LEFT OUTER JOIN D_APPEAL_DISPOSITION_EXPS disp_exp2 
ON cli.CLAIM_LINE_DISPOSITION_EXPLANATION = disp_exp2.disposition_exp_id
LEFT OUTER JOIN D_APPEAL_PROC_DEC_REASONS proc_dec_reason2
ON cli.CLAIM_LINE_PROCEDURAL_DECISION_REASON = proc_dec_reason2.PROC_DEC_REASON_ID
LEFT OUTER JOIN D_APPEAL_SUBSTANTIVE_REASONS subst_reason2
ON cli.CLAIM_LINE_SUBSTANTIVE_REASON = subst_reason2.SUBSTANTIVE_REASON_ID
LEFT OUTER JOIN D_CLAIM_TYPE_COVERAGE cov
ON c.type_of_coverage = cov.TYPE_COVERAGE_ID
LEFT OUTER JOIN D_CLAIM_REVERSAL_REASON rr
ON c.reversal_reason = rr.REVERSAL_REASON_ID
LEFT OUTER JOIN D_MW_APPEAL_INSTANCE A ON c.APPEAL_ID = A.APPEAL_ID
LEFT OUTER JOIN D_APPEAL_PARTS ap ON A.APPEAL_PART_ID = ap.PART_ID
LEFT OUTER JOIN D_APPEAL_STATUSES statuses ON a.APPEAL_STATUS = statuses.STATUS_ID
LEFT OUTER JOIN D_APPEAL_MACS macs ON a.MAC = macs.MAC_ID
with read only;

GRANT SELECT ON D_QIC_CLAIM_SV TO MAXDAT_READ_ONLY;

  CREATE TABLE FEDQIC_LOGGING 
   (	START_DATE DATE, 
	END_DATE DATE, 
	MODULE VARCHAR2(20 BYTE)
   ) 
  TABLESPACE MAXDAT_DATA;

  CREATE TABLE FEDQIC_DOCUMENT_LOGGING 
   (	START_DATE DATE, 
	END_DATE DATE, 
	MODULE VARCHAR2(20 BYTE)
   ) 
  TABLESPACE MAXDAT_DATA;

commit;
