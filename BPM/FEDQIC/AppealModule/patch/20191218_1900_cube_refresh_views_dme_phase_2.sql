DROP MATERIALIZED VIEW APPEAL_DETAILS_BY_DAY_MV;
CREATE MATERIALIZED VIEW APPEAL_DETAILS_BY_DAY_MV
BUILD IMMEDIATE 
REFRESH FORCE
ON DEMAND
AS
SELECT A11.D_DATE AS D_DATE,
    A11.APPEAL_TYPE AS APPEAL_TYPE,
    A11.APPEAL_STATUS AS APPEAL_STATUS,
    A11.APPEAL_STAGE AS APPEAL_STAGE,
    A11.APPEAL_REASON AS APPEAL_REASON,
    A11.APPEAL_PRIORITY AS APPEAL_PRIORITY,
    A11.APPEAL_PART AS APPEAL_PART,
    A11.APPEAL_ITEM AS APPEAL_ITEM,
    A11.APPEAL_ISSUE AS APPEAL_ISSUE,
    A11.ADJUDICATOR AS ADJUDICATOR,
    SUM(A11.CANCELLATION_COUNT) AS CANCELLATION_COUNT,
    SUM(A11.COMPLETION_COUNT) AS COMPLETION_COUNT,
    SUM(A11.CREATION_COUNT) AS CREATION_COUNT,
    SUM(A11.INVENTORY_COUNT) AS INVENTORY_COUNT,
SUM(A11.SLA_INVENTORY_COUNT) AS SLA_INVENTORY_COUNT,
    SUM(A11.TERMINATION_COUNT) AS TERMINATION_COUNT,
SUM(A11.CLOSED_COUNT) as CLOSED_COUNT,
SUM(A11.WITHDRAWN_COUNT) as WITHDRAWN_COUNT,
SUM (A11.Timely_Appeals_Count) as TIMELY_APPEALS_COUNT,
SUM(A11.Untimely_Appeals_Count) as UNTIMELY_APPEALS_COUNT,
    SUM(CASE WHEN TRUNC(CAST(A11.DEADLINE_DATE AS DATE)) > TRUNC(SYSDATE) THEN 1 ELSE 0 END) AS DEADLINE_COUNT,
    SUM(CASE WHEN A11.AUTO_FORWARD = 'Y' THEN 1 ELSE 0 END) AS AUTO_FORWARD_COUNT,
    SUM(CASE WHEN A11.MEDICAL_REVIEW_CHECK IS NOT NULL THEN 1 ELSE 0 END) AS MEDICAL_REVIEW_CHECK_COUNT,
    SUM(CASE WHEN A11.PRECHECK_COMPLETED IS NOT NULL THEN 1 ELSE 0 END) AS PRECHECK_COMPLETED_COUNT,
    SUM(CASE WHEN A11.APPEAL_TOLLING_DATE IS NOT NULL THEN 1 ELSE 0 END) AS TOLLING_COUNT,
    SUM(CASE WHEN A11.APPEAL_NOTICE_DATE IS NOT NULL THEN 1 ELSE 0 END) AS VERBAL_NOTICE_COUNT,
    SUM(a11.CLAIM_CREATION_COUNT) as CLAIM_CREATION_COUNT,
    SUM(a11.CLAIMS_CLOSED_COUNT) as CLAIM_CLOSED_COUNT,
A11.MAC as MAC,
ds.doc_source_name as DOCUMENT_SOURCE,
SUM(a11.CASE_FILE_RECEIVED_COUNT) as CASE_FILE_RECEIVED_COUNT,
SUM(a11.CASE_FILE_PENDING_COUNT) as CASE_FILE_PENDING_COUNT,
SUM(CASE WHEN TRUNC(CAST(a11.CASE_FILE_REQUEST_DATE AS DATE)) = A11.D_DATE THEN 1 ELSE 0 END) as CASE_FILE_REQUEST_COUNT,
SUM(CASE WHEN TRUNC(CAST(a11.DEMO_SCHEDULED AS DATE)) = A11.D_DATE THEN 1 ELSE 0 END) as DEMO_SCHEDULED_COUNT,
SUM(CASE WHEN TRUNC(a11.DEMO_NOTIFICATION_LETTER_SENT) = A11.D_DATE THEN 1 ELSE 0 END) as DEMO_NOTIFICATION_LETTER_SENT_COUNT,
SUM(CASE WHEN TRUNC(CAST(a11.FIRST_REVIEW_CASE_ATTESTATIO AS DATE)) = A11.D_DATE THEN 1 ELSE 0 END) as FIRST_REVIEW_CASE_ATTESTATION_COUNT,
SUM(CASE WHEN TRUNC(CAST(a11.EXPERT_REVIEW_CASE_ATTESTATI AS DATE)) = A11.D_DATE THEN 1 ELSE 0 END) as SECOND_REVIEW_CASE_ATTESTATION_COUNT,
SUM(CASE WHEN TRUNC(CAST(a11.DECISION_MAILED_DATE AS DATE)) = A11.D_DATE THEN 1 ELSE 0 END) as DECISION_MAILED_COUNT,
a11.DECISION
FROM MAXDAT.F_MW_APPEAL_INSTANCE_BY_DATE_SV A11
LEFT OUTER JOIN d_qic_document doc ON doc.appeal_id = a11.appeal_id and doc.document_type = 1891
LEFT OUTER JOIN D_DOC_SOURCE ds ON doc.SOURCE = ds.DOC_SOURCE_ID
WHERE A11.D_DATE >= TRUNC((SYSDATE - trunc((select value from corp_etl_control where name = 'APPEAL_CUBE_SPAN')/2)),'MONTH')
AND A11.d_date < TRUNC(sysdate) - (select value from corp_etl_control where name = 'APPEAL_CUBE_LOOK_BACK_DAYS')
GROUP BY A11.D_DATE,
    A11.APPEAL_TYPE,
    A11.APPEAL_STATUS,
    A11.APPEAL_STAGE,
    A11.APPEAL_REASON,
    A11.APPEAL_PRIORITY,
    A11.APPEAL_PART,
    A11.APPEAL_ITEM,
    A11.APPEAL_ISSUE,
    A11.ADJUDICATOR,
A11.MAC,
ds.doc_source_name,
a11.DECISION
union all
SELECT A11.D_DATE AS D_DATE,
    A11.APPEAL_TYPE AS APPEAL_TYPE,
    A11.APPEAL_STATUS AS APPEAL_STATUS,
    A11.APPEAL_STAGE AS APPEAL_STAGE,
    A11.APPEAL_REASON AS APPEAL_REASON,
    A11.APPEAL_PRIORITY AS APPEAL_PRIORITY,
    A11.APPEAL_PART AS APPEAL_PART,
    A11.APPEAL_ITEM AS APPEAL_ITEM,
    A11.APPEAL_ISSUE AS APPEAL_ISSUE,
    A11.ADJUDICATOR AS ADJUDICATOR,
    SUM(A11.CANCELLATION_COUNT) AS CANCELLATION_COUNT,
    SUM(A11.COMPLETION_COUNT) AS COMPLETION_COUNT,
    SUM(A11.CREATION_COUNT) AS CREATION_COUNT,
    SUM(A11.INVENTORY_COUNT) AS INVENTORY_COUNT,
SUM(A11.SLA_INVENTORY_COUNT) AS SLA_INVENTORY_COUNT,
    SUM(A11.TERMINATION_COUNT) AS TERMINATION_COUNT,
SUM(A11.CLOSED_COUNT) as CLOSED_COUNT,
SUM(A11.WITHDRAWN_COUNT) as WITHDRAWN_COUNT,
SUM (A11.Timely_Appeals_Count) as TIMELY_APPEALS_COUNT,
SUM(A11.Untimely_Appeals_Count) as UNTIMELY_APPEALS_COUNT,
    SUM(CASE WHEN TRUNC(CAST(A11.DEADLINE_DATE AS DATE)) > TRUNC(SYSDATE) THEN 1 ELSE 0 END) AS DEADLINE_COUNT,
    SUM(CASE WHEN A11.AUTO_FORWARD = 'Y' THEN 1 ELSE 0 END) AS AUTO_FORWARD_COUNT,
    SUM(CASE WHEN A11.MEDICAL_REVIEW_CHECK IS NOT NULL THEN 1 ELSE 0 END) AS MEDICAL_REVIEW_CHECK_COUNT,
    SUM(CASE WHEN A11.PRECHECK_COMPLETED IS NOT NULL THEN 1 ELSE 0 END) AS PRECHECK_COMPLETED_COUNT,
    SUM(CASE WHEN A11.APPEAL_TOLLING_DATE IS NOT NULL THEN 1 ELSE 0 END) AS TOLLING_COUNT,
    SUM(CASE WHEN A11.APPEAL_NOTICE_DATE IS NOT NULL THEN 1 ELSE 0 END) AS VERBAL_NOTICE_COUNT,
    SUM(a11.CLAIM_CREATION_COUNT) as CLAIM_CREATION_COUNT,
    SUM(a11.CLAIMS_CLOSED_COUNT) as CLAIM_CLOSED_COUNT,
A11.MAC as MAC,
ds.doc_source_name as DOCUMENT_SOURCE,
SUM(a11.CASE_FILE_RECEIVED_COUNT) as CASE_FILE_RECEIVED_COUNT,
SUM(a11.CASE_FILE_PENDING_COUNT) as CASE_FILE_PENDING_COUNT,
SUM(CASE WHEN TRUNC(CAST(a11.CASE_FILE_REQUEST_DATE AS DATE)) = A11.D_DATE THEN 1 ELSE 0 END) as CASE_FILE_REQUEST_COUNT,
SUM(CASE WHEN TRUNC(CAST(a11.DEMO_SCHEDULED AS DATE)) = A11.D_DATE THEN 1 ELSE 0 END) as DEMO_SCHEDULED_COUNT,
SUM(CASE WHEN TRUNC(a11.DEMO_NOTIFICATION_LETTER_SENT) = A11.D_DATE THEN 1 ELSE 0 END) as DEMO_NOTIFICATION_LETTER_SENT_COUNT,
SUM(CASE WHEN TRUNC(CAST(a11.FIRST_REVIEW_CASE_ATTESTATIO AS DATE)) = A11.D_DATE THEN 1 ELSE 0 END) as FIRST_REVIEW_CASE_ATTESTATION_COUNT,
SUM(CASE WHEN TRUNC(CAST(a11.EXPERT_REVIEW_CASE_ATTESTATI AS DATE)) = A11.D_DATE THEN 1 ELSE 0 END) as SECOND_REVIEW_CASE_ATTESTATION_COUNT,
SUM(CASE WHEN TRUNC(CAST(a11.DECISION_MAILED_DATE AS DATE)) = A11.D_DATE THEN 1 ELSE 0 END) as DECISION_MAILED_COUNT,
a11.DECISION
FROM MAXDAT.F_MW_APPEAL_INSTANCE_BY_DATE_SV A11
LEFT OUTER JOIN d_qic_document doc ON doc.appeal_id = a11.appeal_id and doc.document_type = 1891 
LEFT OUTER JOIN D_DOC_SOURCE ds ON doc.SOURCE = ds.DOC_SOURCE_ID
WHERE A11.D_DATE >= TRUNC((SYSDATE - (select value from corp_etl_control where name = 'APPEAL_CUBE_SPAN')),'MONTH')
AND A11.d_date < TRUNC((SYSDATE - trunc((select value from corp_etl_control where name = 'APPEAL_CUBE_SPAN')/2)),'MONTH')
GROUP BY A11.D_DATE,
    A11.APPEAL_TYPE,
    A11.APPEAL_STATUS,
    A11.APPEAL_STAGE,
    A11.APPEAL_REASON,
    A11.APPEAL_PRIORITY,
    A11.APPEAL_PART,
    A11.APPEAL_ITEM,
    A11.APPEAL_ISSUE,
    A11.ADJUDICATOR,
A11.MAC,
ds.doc_source_name,
a11.DECISION;
GRANT SELECT ON APPEAL_DETAILS_BY_DAY_MV TO MAXDAT_READ_ONLY;
             
CREATE OR REPLACE VIEW APPEAL_DETAILS_BY_DAY_VW as    
SELECT A11.D_DATE AS D_DATE,
    A11.APPEAL_TYPE AS APPEAL_TYPE,
    A11.APPEAL_STATUS AS APPEAL_STATUS,
    A11.APPEAL_STAGE AS APPEAL_STAGE,
    A11.APPEAL_REASON AS APPEAL_REASON,
    A11.APPEAL_PRIORITY AS APPEAL_PRIORITY,
    A11.APPEAL_PART AS APPEAL_PART,
    A11.APPEAL_ITEM AS APPEAL_ITEM,
    A11.APPEAL_ISSUE AS APPEAL_ISSUE,
    A11.ADJUDICATOR AS ADJUDICATOR,
    SUM(A11.CANCELLATION_COUNT) AS CANCELLATION_COUNT,
    SUM(A11.COMPLETION_COUNT) AS COMPLETION_COUNT,
    SUM(A11.CREATION_COUNT) AS CREATION_COUNT,
    SUM(A11.INVENTORY_COUNT) AS INVENTORY_COUNT,
SUM(A11.SLA_INVENTORY_COUNT) AS SLA_INVENTORY_COUNT,
    SUM(A11.TERMINATION_COUNT) AS TERMINATION_COUNT,
SUM(A11.CLOSED_COUNT) as CLOSED_COUNT,
SUM(A11.WITHDRAWN_COUNT) as WITHDRAWN_COUNT,
SUM (A11.Timely_Appeals_Count) as TIMELY_APPEALS_COUNT,
SUM(A11.Untimely_Appeals_Count) as UNTIMELY_APPEALS_COUNT,
    SUM(CASE WHEN TRUNC(CAST(A11.DEADLINE_DATE AS DATE)) > TRUNC(SYSDATE) THEN 1 ELSE 0 END) AS DEADLINE_COUNT,
    SUM(CASE WHEN A11.AUTO_FORWARD = 'Y' THEN 1 ELSE 0 END) AS AUTO_FORWARD_COUNT,
    SUM(CASE WHEN A11.MEDICAL_REVIEW_CHECK IS NOT NULL THEN 1 ELSE 0 END) AS MEDICAL_REVIEW_CHECK_COUNT,
    SUM(CASE WHEN A11.PRECHECK_COMPLETED IS NOT NULL THEN 1 ELSE 0 END) AS PRECHECK_COMPLETED_COUNT,
    SUM(CASE WHEN A11.APPEAL_TOLLING_DATE IS NOT NULL THEN 1 ELSE 0 END) AS TOLLING_COUNT,
    SUM(CASE WHEN A11.APPEAL_NOTICE_DATE IS NOT NULL THEN 1 ELSE 0 END) AS VERBAL_NOTICE_COUNT,
    SUM(a11.CLAIM_CREATION_COUNT) as CLAIM_CREATION_COUNT,
    SUM(a11.CLAIMS_CLOSED_COUNT) as CLAIM_CLOSED_COUNT,
A11.MAC as MAC,
ds.doc_source_name as DOCUMENT_SOURCE,
SUM(a11.CASE_FILE_RECEIVED_COUNT) as CASE_FILE_RECEIVED_COUNT,
SUM(a11.CASE_FILE_PENDING_COUNT) as CASE_FILE_PENDING_COUNT,
SUM(CASE WHEN TRUNC(CAST(a11.CASE_FILE_REQUEST_DATE AS DATE)) = A11.D_DATE THEN 1 ELSE 0 END) as CASE_FILE_REQUEST_COUNT,
SUM(CASE WHEN TRUNC(CAST(a11.DEMO_SCHEDULED AS DATE)) = A11.D_DATE THEN 1 ELSE 0 END) as DEMO_SCHEDULED_COUNT,
SUM(CASE WHEN TRUNC(a11.DEMO_NOTIFICATION_LETTER_SENT) = A11.D_DATE THEN 1 ELSE 0 END) as DEMO_NOTIFICATION_LETTER_SENT_COUNT,
SUM(CASE WHEN TRUNC(CAST(a11.FIRST_REVIEW_CASE_ATTESTATIO AS DATE)) = A11.D_DATE THEN 1 ELSE 0 END) as FIRST_REVIEW_CASE_ATTESTATION_COUNT,
SUM(CASE WHEN TRUNC(CAST(a11.EXPERT_REVIEW_CASE_ATTESTATI AS DATE)) = A11.D_DATE THEN 1 ELSE 0 END) as SECOND_REVIEW_CASE_ATTESTATION_COUNT,
SUM(CASE WHEN TRUNC(CAST(a11.DECISION_MAILED_DATE AS DATE)) = A11.D_DATE THEN 1 ELSE 0 END) as DECISION_MAILED_COUNT,
a11.DECISION
FROM MAXDAT.F_MW_APPEAL_INSTANCE_BY_DATE_SV A11
LEFT OUTER JOIN d_qic_document doc ON doc.appeal_id = a11.appeal_id and doc.document_type = 1891
LEFT OUTER JOIN D_DOC_SOURCE ds ON doc.SOURCE = ds.DOC_SOURCE_ID
WHERE A11.d_date >= TRUNC(sysdate) - (select value from corp_etl_control where name = 'APPEAL_CUBE_LOOK_BACK_DAYS')
GROUP BY A11.D_DATE,
    A11.APPEAL_TYPE,
    A11.APPEAL_STATUS,
    A11.APPEAL_STAGE,
    A11.APPEAL_REASON,
    A11.APPEAL_PRIORITY,
    A11.APPEAL_PART,
    A11.APPEAL_ITEM,
    A11.APPEAL_ISSUE,
    A11.ADJUDICATOR,
A11.MAC,
ds.doc_source_name,
a11.DECISION    
    union all
    select * from APPEAL_DETAILS_BY_DAY_MV;

GRANT SELECT ON APPEAL_DETAILS_BY_DAY_VW TO MAXDAT_READ_ONLY; 

commit;