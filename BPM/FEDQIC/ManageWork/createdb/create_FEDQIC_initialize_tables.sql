-- Create  Common tables for run initialization 

drop table fedqic_maxdat_stg;
drop table fedqic_person_stg;
drop table fedqic_user_stg;
drop table fedqic_role_stg;
drop table FEDQIC_MANAGEWORK_LOGGING;

  CREATE TABLE "MAXDAT"."FEDQIC_MAXDAT_STG" 
   (	"ID" NUMBER(19,0), 
	"C_PARENT_PREVIOUS_ACTION_ID" NUMBER(19,0), 
	"C_APPEAL_ID" NUMBER(10,0), 
	"C_APPEAL_NUMBER" VARCHAR2(20 CHAR), 
	"C_APPEAL_PRIORITY" NUMBER(10,0), 
	"C_APPEAL_REQUEST_RECEIVED_DATE" TIMESTAMP (6), 
	"APPEAL_PART" VARCHAR2(255 BYTE), 
	"C_OWNER" NUMBER(10,0), 
	"ROLE_ID" NUMBER(19,0), 
	"C_STATUS" NUMBER(10,0), 
	"C_START_DATE" TIMESTAMP (6), 
	"C_END_DATE" TIMESTAMP (6), 
	"C_ACTION_TYPE" NUMBER(10,0), 
	"STG_EXTRACT_DATE" DATE DEFAULT SYSDATE, 
	"STG_LAST_UPDATE_DATE" DATE DEFAULT SYSDATE, 
	"MW_PROCESSED" VARCHAR2(1 BYTE) DEFAULT 'N', 
	"MW_TASK_ID" NUMBER(19,0),
	"CREATE_TS" TIMESTAMP,
	"LAST_UPDATE_TS" TIMESTAMP
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "MAXDAT_DATA" ;

  alter table FEDQIC_MAXDAT_STG add constraint CMAX_STG_PK primary key (ID)
  using index tablespace MAXDAT_INDX;


Grant select on FEDQIC_MAXDAT_STG to MAXDAT_READ_ONLY;

--------------------------------------------------------
--  DDL for Index FEDQIC_MAXDAT_STG_INDXMWID
--------------------------------------------------------

  CREATE INDEX "MAXDAT"."FEDQIC_MAXDAT_STG_INDXMWID" ON "MAXDAT"."FEDQIC_MAXDAT_STG" ("MW_TASK_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "MAXDAT_INDX" ;
--------------------------------------------------------
--  DDL for Index FEDQIC_MAXDAT_STG_INDXPID
--------------------------------------------------------

  CREATE INDEX "MAXDAT"."FEDQIC_MAXDAT_STG_INDXPID" ON "MAXDAT"."FEDQIC_MAXDAT_STG" ("C_PARENT_PREVIOUS_ACTION_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "MAXDAT_INDX" ;

--------------------------------------------------------
--  DDL for Index FEDQIC_MAXDAT_STG_INDXAID
--------------------------------------------------------

  CREATE INDEX "MAXDAT"."FEDQIC_MAXDAT_STG_INDXAID" ON "MAXDAT"."FEDQIC_MAXDAT_STG" ("C_APPEAL_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "MAXDAT_INDX" ;


--------------------------------------------------------
--  DDL for Index FEDQIC_MAXDAT_STG_INDXSTS
--------------------------------------------------------

  CREATE INDEX "MAXDAT"."FEDQIC_MAXDAT_STG_INDXSTS" ON "MAXDAT"."FEDQIC_MAXDAT_STG" ("C_STATUS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "MAXDAT_INDX" ;


--------------------------------------------------------
--  DDL for Index FEDQIC_MAXDAT_STG_INDXOWN
--------------------------------------------------------

  CREATE INDEX "MAXDAT"."FEDQIC_MAXDAT_STG_INDXOWN" ON "MAXDAT"."FEDQIC_MAXDAT_STG" ("C_OWNER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "MAXDAT_INDX" ;

------------------------------------------------------------------------------------------------------

CREATE TABLE "MAXDAT"."FEDQIC_PERSON_STG" 
   (	"PERSON_ID" NUMBER, 
	"FIRST_NAME" VARCHAR2(50 BYTE), 
	"LAST_NAME" VARCHAR2(50 BYTE), 
	"MIDDLE_NAME" VARCHAR2(50 BYTE), 
	"NAME_TITLE" VARCHAR2(50 BYTE), 
	"NAME_SUFFIX" VARCHAR2(50 BYTE),
      "CREATE_TS" TIMESTAMP,
	"LAST_UPDATE_TS" TIMESTAMP
) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "MAXDAT_DATA" ;

  alter table FEDQIC_PERSON_STG add constraint CPERS_STG_PK primary key (PERSON_ID)
  using index tablespace MAXDAT_INDX;

Grant select on FEDQIC_PERSON_STG to MAXDAT_READ_ONLY;

-------------------------------------------------------------------------------------------

CREATE TABLE "MAXDAT"."FEDQIC_ROLE_STG" 
   (	"ROLE_ID" NUMBER, 
	"NAME" VARCHAR2(50 BYTE), 
	"DESCRIPTION" VARCHAR2(200 BYTE), 
	"BUSINESS_KEY" VARCHAR2(50 BYTE),
      "CREATE_TS" TIMESTAMP,
	"LAST_UPDATE_TS" TIMESTAMP
) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "MAXDAT_DATA" ;

  alter table FEDQIC_ROLE_STG add constraint CROL_STG_PK primary key (ROLE_ID)
  using index tablespace MAXDAT_INDX;

Grant select on FEDQIC_ROLE_STG  to MAXDAT_READ_ONLY;

---------------------------------------------------------------------------------

CREATE TABLE "MAXDAT"."FEDQIC_USER_STG" 
   (	"USER_ID" NUMBER, 
	"LOCKED" NUMBER, 
	"USERNAME" VARCHAR2(50 BYTE), 
	"ACC_ENHANCE" NUMBER, 
	"PERSON_ID" NUMBER, 
	"DEFAULT_ROLE_ID" NUMBER, 
	"DEFAULT_PREFERENCE_ID" NUMBER, 
	"TYPE_OF_USER" NUMBER, 
	"AUTHENTICATION_TYPE" NUMBER,
      "CREATE_TS" TIMESTAMP,
	"LAST_UPDATE_TS" TIMESTAMP
) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "MAXDAT_DATA" ;

  alter table FEDQIC_USER_STG add constraint CUSER_STG_PK primary key (USER_ID)
  using index tablespace MAXDAT_INDX;

Grant select on FEDQIC_USER_STG to MAXDAT_READ_ONLY;

--------------------------------------------------------
--  DDL for Index FEDQIC_USER_STG_INDEX1
--------------------------------------------------------


  CREATE INDEX "MAXDAT"."FEDQIC_USER_STG_INDEX1" ON "MAXDAT"."FEDQIC_USER_STG" ("USER_ID", "PERSON_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "MAXDAT_DATA" ;


------------------------------------------------------------------------

CREATE TABLE "MAXDAT"."FEDQIC_MANAGEWORK_LOGGING" 
   (	"START_DATE" DATE, 
	"END_DATE" DATE, 
	"MODULE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "MAXDAT_DATA" ;

Grant select on FEDQIC_MANAGEWORK_LOGGING to MAXDAT_READ_ONLY;

----------------------------------------------------------------------------------------------------------------------------------

create or replace TRIGGER TRG_BIU_FEDQIC_MAXDAT_STG 
before insert or update on FEDQIC_MAXDAT_STG
for each row 

begin 
  
	if inserting then     
      		:new.CREATE_TS := SYSDATE;
      		:new.LAST_UPDATE_TS := SYSDATE;
    
        end if;
  
   	if updating then 
      		:new.LAST_UPDATE_TS :=SYSDATE;
    	end if;
end;
/
-----------------------------------------------------------------

create or replace TRIGGER TRG_BIU_FEDQIC_PERSON_STG 
before insert or update on FEDQIC_PERSON_STG
for each row 

begin 
  
	if inserting then     
      		:new.CREATE_TS := SYSDATE;
      		:new.LAST_UPDATE_TS := SYSDATE;
    
        end if;
  
   	if updating then 
      		:new.LAST_UPDATE_TS :=SYSDATE;
    	end if;
end;
/
-----------------------------------------------------------------

create or replace TRIGGER TRG_BIU_FEDQIC_USER_STG 
before insert or update on FEDQIC_USER_STG
for each row 

begin 
  
	if inserting then     
      		:new.CREATE_TS := SYSDATE;
      		:new.LAST_UPDATE_TS := SYSDATE;
    
        end if;
  
   	if updating then 
      		:new.LAST_UPDATE_TS :=SYSDATE;
    	end if;
end;
/
----------------------------------------------------------------

create or replace TRIGGER TRG_BIU_FEDQIC_ROLE_STG 
before insert or update on FEDQIC_ROLE_STG
for each row 

begin 
  
	if inserting then     
      		:new.CREATE_TS := SYSDATE;
      		:new.LAST_UPDATE_TS := SYSDATE;
    
        end if;
  
   	if updating then 
      		:new.LAST_UPDATE_TS :=SYSDATE;
    	end if;
end;
/




