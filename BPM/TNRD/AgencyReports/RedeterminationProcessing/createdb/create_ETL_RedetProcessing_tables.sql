alter session set current_schema = MAXDAT;

CREATE TABLE ELIG_OUTCOME_LKUP 
(
  VALUE VARCHAR2(32 BYTE) NOT NULL 
, DESCRIPTION VARCHAR2(256 BYTE) 
, REPORT_LABEL VARCHAR2(64 BYTE) 
, SCOPE VARCHAR2(128 BYTE) 
, CREATED_BY VARCHAR2(50 BYTE) 
, CREATE_TS DATE 
, UPDATED_BY VARCHAR2(50 BYTE) 
, UPDATE_TS DATE 
, ORDER_BY_DEFAULT NUMBER(10, 0) 
, EFFECTIVE_START_DATE DATE 
, EFFECTIVE_END_DATE DATE 
, REASON_REQUIRED_IND NUMBER(1, 0) 
, PROGRAM_REQUIRED_IND NUMBER(1, 0) 
, ERROR_MSG VARCHAR2(64 BYTE) 
, FINAL_OUTCOME_IND NUMBER(1, 0) 
) TABLESPACE MAXDAT_DATA;


COMMENT ON TABLE ELIG_OUTCOME_LKUP IS 'Lists all possible Eligibility outcome codes';
COMMENT ON COLUMN ELIG_OUTCOME_LKUP.VALUE IS 'Eligibility Outcome Code';
COMMENT ON COLUMN ELIG_OUTCOME_LKUP.REPORT_LABEL IS 'The default label for the corresponding code';
COMMENT ON COLUMN ELIG_OUTCOME_LKUP.SCOPE IS 'This is used to categorize values into subsets when needed. This is often needed when, for example, one needs to display a sub-type valuelist based on the type selected in a type valuelist. Multiple scopes may be comma delimited.';
COMMENT ON COLUMN ELIG_OUTCOME_LKUP.CREATED_BY IS 'Contains the staff id (or component) which originally created the record.';
COMMENT ON COLUMN ELIG_OUTCOME_LKUP.CREATE_TS IS 'record creation timestamp';
COMMENT ON COLUMN ELIG_OUTCOME_LKUP.UPDATED_BY IS 'Contains the staff id which most recently updated the record.';
COMMENT ON COLUMN ELIG_OUTCOME_LKUP.UPDATE_TS IS 'timestamp of when the record was last updated';
COMMENT ON COLUMN ELIG_OUTCOME_LKUP.ORDER_BY_DEFAULT IS 'order by value';
COMMENT ON COLUMN ELIG_OUTCOME_LKUP.EFFECTIVE_START_DATE IS 'Contains the date of when this code value became or will become active. Having the value empty implies the code is always active until the effective end date is set.';
COMMENT ON COLUMN ELIG_OUTCOME_LKUP.EFFECTIVE_END_DATE IS 'Contains the date of when this code value will become inactive. Having the value empty implies code will never become inactive in the future.';


CREATE UNIQUE INDEX XPKELIG_OUTCOME_LKUP ON ELIG_OUTCOME_LKUP (VALUE ASC) TABLESPACE MAXDAT_INDX;

CREATE TABLE APP_TYPE_LKUP 
(
  VALUE VARCHAR2(32 BYTE) NOT NULL 
, DESCRIPTION VARCHAR2(256 BYTE) 
, REPORT_LABEL VARCHAR2(64 BYTE) 
, SCOPE VARCHAR2(128 BYTE) 
, CREATED_BY VARCHAR2(50 BYTE) 
, CREATE_TS DATE 
, UPDATED_BY VARCHAR2(50 BYTE) 
, UPDATE_TS DATE 
, ORDER_BY_DEFAULT NUMBER(10, 0) 
, EFFECTIVE_START_DATE DATE 
, EFFECTIVE_END_DATE DATE 
) TABLESPACE MAXDAT_DATA;

CREATE TABLE APP_STATUS_LKUP 
(
  VALUE VARCHAR2(32 BYTE) NOT NULL 
, DESCRIPTION VARCHAR2(256 BYTE) 
, REPORT_LABEL VARCHAR2(64 BYTE) 
, SCOPE VARCHAR2(128 BYTE) 
, CREATED_BY VARCHAR2(50 BYTE) 
, CREATE_TS DATE 
, UPDATED_BY VARCHAR2(50 BYTE) 
, UPDATE_TS DATE 
, ORDER_BY_DEFAULT NUMBER(10, 0) 
, EFFECTIVE_START_DATE DATE 
, EFFECTIVE_END_DATE DATE 
, APP_STATUS_CLASS VARCHAR2(32 BYTE) 
) TABLESPACE MAXDAT_DATA;

COMMENT ON TABLE APP_STATUS_LKUP IS 'Carries possible list of application status codes. These values determine whether an Application is active or not. Possible values are Renewal Initiated, In Process and Completed.';
COMMENT ON COLUMN APP_STATUS_LKUP.VALUE IS 'Application Status Code';
COMMENT ON COLUMN APP_STATUS_LKUP.REPORT_LABEL IS 'The default label for the corresponding code';
COMMENT ON COLUMN APP_STATUS_LKUP.SCOPE IS 'This is used to categorize values into subsets when needed. This is often needed when, for example, one needs to display a sub-type valuelist based on the type selected in a type valuelist. Multiple scopes may be comma delimited.';
COMMENT ON COLUMN APP_STATUS_LKUP.CREATED_BY IS 'Contains the staff id (or component) which originally created the record.';
COMMENT ON COLUMN APP_STATUS_LKUP.CREATE_TS IS 'record creation timestamp';
COMMENT ON COLUMN APP_STATUS_LKUP.UPDATED_BY IS 'Contains the staff id which most recently updated the record.';
COMMENT ON COLUMN APP_STATUS_LKUP.UPDATE_TS IS 'timestamp of when the record was last updated';
COMMENT ON COLUMN APP_STATUS_LKUP.ORDER_BY_DEFAULT IS 'order by value';
COMMENT ON COLUMN APP_STATUS_LKUP.EFFECTIVE_START_DATE IS 'Contains the date of when this code value became or will become active. Having the value empty implies the code is always active until the effective end date is set.';
COMMENT ON COLUMN APP_STATUS_LKUP.EFFECTIVE_END_DATE IS 'Contains the date of when this code value will become inactive. Having the value empty implies code will never become inactive in the future.';

CREATE UNIQUE INDEX XPKAPP_STATUS_LKUP ON APP_STATUS_LKUP (VALUE ASC) TABLESPACE MAXDAT_INDX;

CREATE TABLE APP_EVENT_TYPE_LKUP 
(
  VALUE VARCHAR2(32 BYTE) NOT NULL 
, DESCRIPTION VARCHAR2(256 BYTE) 
, REPORT_LABEL VARCHAR2(64 BYTE) 
, SCOPE VARCHAR2(128 BYTE) 
, CREATED_BY VARCHAR2(80 BYTE) 
, CREATE_TS DATE 
, UPDATED_BY VARCHAR2(80 BYTE) 
, UPDATE_TS DATE 
, ORDER_BY_DEFAULT NUMBER(10, 0) 
, EFFECTIVE_END_DATE DATE 
, EFFECTIVE_START_DATE DATE 
, EVENT_CATEGORY_CD VARCHAR2(32 BYTE) 
)  TABLESPACE MAXDAT_DATA;

CREATE UNIQUE INDEX XPKAPP_EVENT_TYPE_LKUP ON APP_EVENT_TYPE_LKUP (VALUE ASC) TABLESPACE MAXDAT_INDX;


CREATE TABLE APP_HEADER_STG 
(
  APPLICATION_ID NUMBER(18, 0) NOT NULL 
, RECEIPT_DATE DATE 
, STATUS_DATE DATE 
, RENEWAL_DUE_DATE DATE 
, CREATE_TS DATE 
, CREATED_BY VARCHAR2(50 BYTE) 
, UPDATE_TS DATE 
, UPDATED_BY VARCHAR2(50 BYTE) 
, APP_MEDIA_CD VARCHAR2(32 BYTE) 
, CALL_RECORD_ID NUMBER(18, 0) 
, APP_FORM_CD VARCHAR2(32 BYTE) 
, APP_FORM_VERSION VARCHAR2(32 BYTE) 
, EXPEDITED_IND NUMBER(1, 0) 
, PRIORITY NUMBER(2, 0) 
, VERSION_ID NUMBER(18, 0) 
, PENDING_CONFIRMATION_IND NUMBER(1, 0) 
, DOCUMENT_ID NUMBER(18, 0) 
, STATUS_CD VARCHAR2(32 BYTE) 
, MI_IND NUMBER(1, 0) 
, NOTE_REF_ID NUMBER(18, 0) 
, REF_TYPE_1 VARCHAR2(80 BYTE) 
, REF_VALUE_1 VARCHAR2(80 BYTE) 
, REF_TYPE_2 VARCHAR2(80 BYTE) 
, REF_VALUE_2 VARCHAR2(80 BYTE) 
, FIRST_MI_ADDED_DATE DATE 
, OVERALL_MI_IND NUMBER(1, 0) 
, REACTIVATION_IND NUMBER(1, 0) 
, REACTIVATION_TS DATE 
, REACTIVATION_REASON_CD VARCHAR2(32 BYTE) 
, REACTIVATED_BY VARCHAR2(50 BYTE) 
, PRIMARY_PROGRAM_TYPE_CD VARCHAR2(32 BYTE) 
, STG_LAST_UPDATE_DT	DATE
, RCVD_90DAY_INDICATOR VARCHAR2(1)
) TABLESPACE MAXDAT_DATA;

CREATE UNIQUE INDEX XPKAPP_HEADER_STG ON APP_HEADER_STG (APPLICATION_ID ASC) TABLESPACE MAXDAT_INDX;
CREATE INDEX XIAPP_STATUS_CD ON APP_HEADER_STG (STATUS_CD ASC) TABLESPACE MAXDAT_INDX;
CREATE INDEX XIAPP_RECEIPT_DATE ON APP_HEADER_STG (RECEIPT_DATE ASC) TABLESPACE MAXDAT_INDX;
CREATE INDEX XIAPP_HEADER_STG_CREATE_TS ON APP_HEADER_STG (CREATE_TS ASC) TABLESPACE MAXDAT_INDX;
--CREATE INDEX APP_HEADER_STG_IDX04 ON APP_HEADER_STG (STATUS_CD ASC, FIRST_MI_ADDED_DATE ASC, PENDING_CONFIRMATION_IND ASC, OVERALL_MI_IND ASC) TABLESPACE MAXDAT_INDX;

COMMENT ON TABLE APP_HEADER_STG IS 'Application Header table, which holds the parent record an application.';
COMMENT ON COLUMN APP_HEADER_STG.APPLICATION_ID IS 'Application ID (Primary Key), uniquely identifies an application.';
COMMENT ON COLUMN APP_HEADER_STG.RECEIPT_DATE IS 'Date application received.';
COMMENT ON COLUMN APP_HEADER_STG.STATUS_DATE IS 'Status date';
COMMENT ON COLUMN APP_HEADER_STG.RENEWAL_DUE_DATE IS 'Renewal due date for the application. All applicants carry the same due date.';
COMMENT ON COLUMN APP_HEADER_STG.CREATE_TS IS 'Create Date and Time';
COMMENT ON COLUMN APP_HEADER_STG.CREATED_BY IS 'Staff who created the application.';
COMMENT ON COLUMN APP_HEADER_STG.UPDATE_TS IS 'Updated Date and Time';
COMMENT ON COLUMN APP_HEADER_STG.UPDATED_BY IS 'Updated by';
COMMENT ON COLUMN APP_HEADER_STG.APP_MEDIA_CD IS 'Application Media (Like Mail, Phone)';
COMMENT ON COLUMN APP_HEADER_STG.CALL_RECORD_ID IS 'Call record id which initiated the application.';
COMMENT ON COLUMN APP_HEADER_STG.APP_FORM_CD IS 'Application Form Code (FORM ID)';
COMMENT ON COLUMN APP_HEADER_STG.APP_FORM_VERSION IS 'Application Form Version. Time to time application form version changes. This column just tells which revision of application it is.';
COMMENT ON COLUMN APP_HEADER_STG.EXPEDITED_IND IS 'Is this an expedited application, which should be processed immediately.';
COMMENT ON COLUMN APP_HEADER_STG.PRIORITY IS 'Priority of the application as specified in the document release process. All human tasks in the system for this application will take this priority.';
COMMENT ON COLUMN APP_HEADER_STG.VERSION_ID IS 'application update version counter';
COMMENT ON COLUMN APP_HEADER_STG.PENDING_CONFIRMATION_IND IS 'indicates the application is pending confirmation by the QC step for example.';
COMMENT ON COLUMN APP_HEADER_STG.STATUS_CD IS 'Application Status Code';
COMMENT ON COLUMN APP_HEADER_STG.MI_IND IS 'MI Status Flag';
COMMENT ON COLUMN APP_HEADER_STG.FIRST_MI_ADDED_DATE IS 'date that the first MI was added to the application';
COMMENT ON COLUMN APP_HEADER_STG.OVERALL_MI_IND IS 'AT least one MI exists in the application somewhere, either app level, or an individual';

CREATE TABLE APP_INDIVIDUAL_STG 
(
  APP_INDIVIDUAL_ID NUMBER(18, 0) NOT NULL 
, CLIENT_CIN VARCHAR2(32 BYTE) 
, APPLICANT_IND NUMBER(1, 0) 
, HOH_IND NUMBER(1, 0) 
, APPLICATION_ID NUMBER(18, 0) 
, CREATE_TS DATE 
, CREATED_BY VARCHAR2(50 BYTE) 
, UPDATE_TS DATE 
, UPDATED_BY VARCHAR2(50 BYTE) 
, CLIENT_ID NUMBER(18, 0) 
, CUT_OFF_DATE DATE 
, LOAD_CONFLICT_IND NUMBER(1, 0) 
, MI_IND NUMBER(1, 0) 
, ROLE_CD VARCHAR2(32 BYTE) 
, REMOVED_FROM_APP_IND NUMBER(1, 0) 
, SUFFIX VARCHAR2(32 BYTE) 
, REF_TYPE_1 VARCHAR2(80 BYTE) 
, REF_VALUE_1 VARCHAR2(80 BYTE) 
, REF_TYPE_2 VARCHAR2(80 BYTE) 
, REF_VALUE_2 VARCHAR2(80 BYTE) 
, REF_TYPE_3 VARCHAR2(80 BYTE) 
, REF_VALUE_3 VARCHAR2(80 BYTE) 
, CLIENT_FNAME VARCHAR2(40)
, CLIENT_LNAME VARCHAR2(40)
, CLIENT_MI VARCHAR2(25)
,CLIENT_LAST_UPDATE_DATE DATE
,CLIENT_SELECTION_DATE DATE
,SUPPLEMENTAL_NBR VARCHAR2(32)
) TABLESPACE MAXDAT_DATA;

CREATE UNIQUE INDEX XPKAPP_INDIVIDUAL_STG ON APP_INDIVIDUAL_STG (APP_INDIVIDUAL_ID ASC)  TABLESPACE MAXDAT_INDX;
CREATE INDEX XIAPP_INDV_CLIENTID ON APP_INDIVIDUAL_STG (CLIENT_ID ASC) TABLESPACE MAXDAT_INDX;
CREATE INDEX XIAPP_INDV_APPID ON APP_INDIVIDUAL_STG (APPLICATION_ID ASC) TABLESPACE MAXDAT_INDX;
--CREATE INDEX IDX_APP_INDIVIDUAL_STG_REF_VALUE_2 ON APP_INDIVIDUAL_STG (REF_VALUE_2 ASC) TABLESPACE MAXDAT_INDX;
--CREATE INDEX IDX_APP_INDIVIDUAL_STG_REF_VALUE_1 ON APP_INDIVIDUAL_STG (REF_VALUE_1 ASC) TABLESPACE MAXDAT_INDX;

COMMENT ON TABLE APP_INDIVIDUAL_STG IS 'Application Members as listed in the application.';
COMMENT ON COLUMN APP_INDIVIDUAL_STG.APP_INDIVIDUAL_ID IS 'Application member ID (Primary Key)';
COMMENT ON COLUMN APP_INDIVIDUAL_STG.CLIENT_CIN IS 'Client CIN as specified in Application | State system';
COMMENT ON COLUMN APP_INDIVIDUAL_STG.APPLICANT_IND IS 'Is this member applying for benefits ?';
COMMENT ON COLUMN APP_INDIVIDUAL_STG.HOH_IND IS 'Is Member Head of Household?';
COMMENT ON COLUMN APP_INDIVIDUAL_STG.APPLICATION_ID IS 'Application ID (Primary Key), uniquely identifies an application.';
COMMENT ON COLUMN APP_INDIVIDUAL_STG.CLIENT_ID IS 'Client ID from Main CLIENT table.';
COMMENT ON COLUMN APP_INDIVIDUAL_STG.CUT_OFF_DATE IS 'Cut off date';
COMMENT ON COLUMN APP_INDIVIDUAL_STG.LOAD_CONFLICT_IND IS 'Data Load conflict detected flag';
COMMENT ON COLUMN APP_INDIVIDUAL_STG.MI_IND IS 'missing information status of the individual';
COMMENT ON COLUMN APP_INDIVIDUAL_STG.ROLE_CD IS 'Member''s role in the application.';


CREATE TABLE APP_CASE_LINK_STG 
(
  APP_CASE_LINK_ID NUMBER(18, 0) NOT NULL 
, APPLICATION_ID NUMBER(18, 0) 
, CASE_ID NUMBER(18, 0) 
, CREATE_TS DATE 
, CREATED_BY VARCHAR2(50 BYTE) 
, CASE_CIN VARCHAR2(30 BYTE) 
, UPDATE_TS DATE 
, UPDATED_BY VARCHAR2(50 BYTE) 
) TABLESPACE MAXDAT_DATA;

CREATE UNIQUE INDEX XPKAPP_CASE_LINK_STG ON APP_CASE_LINK_STG (APP_CASE_LINK_ID ASC) TABLESPACE MAXDAT_INDX;
CREATE INDEX XIAPP_CASE_LINK_STG_CASEID ON APP_CASE_LINK_STG (CASE_ID ASC) TABLESPACE MAXDAT_INDX;
CREATE INDEX XIAPP_CASE_LINK_STG_CASECIN ON APP_CASE_LINK_STG (CASE_CIN ASC) TABLESPACE MAXDAT_INDX;
CREATE INDEX XIAPP_CASE_LINK_STG_APPID ON APP_CASE_LINK_STG (APPLICATION_ID ASC) TABLESPACE MAXDAT_INDX;


COMMENT ON TABLE APP_CASE_LINK_STG IS 'This table facilitates linking applications with one or more existing cases.';
COMMENT ON COLUMN APP_CASE_LINK_STG.APP_CASE_LINK_ID IS 'Application-Case link ID';
COMMENT ON COLUMN APP_CASE_LINK_STG.APPLICATION_ID IS 'Application ID , uniquely identifies an application.';
COMMENT ON COLUMN APP_CASE_LINK_STG.CASE_ID IS 'Existing Case ID';
COMMENT ON COLUMN APP_CASE_LINK_STG.UPDATE_TS IS 'Update Timestamp of App Case Link record';
COMMENT ON COLUMN APP_CASE_LINK_STG.UPDATED_BY IS 'Staff who updated the record';


CREATE TABLE APP_ELIG_OUTCOME_STG 
(
  APP_ELIG_OUTCOME_ID NUMBER(18, 0) NOT NULL 
, APPLICATION_ID NUMBER(18, 0) 
, APP_INDIVIDUAL_ID NUMBER(18, 0) 
, ELIG_OUTCOME_CD VARCHAR2(32 BYTE) 
, ELIG_OUTCOME_REASON_CD VARCHAR2(32 BYTE) 
, PROGRAM_CD VARCHAR2(32 BYTE) 
, CREATE_TS DATE 
, CREATED_BY VARCHAR2(50 BYTE) 
, UPDATE_TS DATE 
, UPDATED_BY VARCHAR2(50 BYTE) 
, PROGRAM_SUBTYPE_CD VARCHAR2(32 BYTE) 
) TABLESPACE MAXDAT_DATA;

CREATE UNIQUE INDEX XPKAPP_ELIG_OUTCOME_STG ON APP_ELIG_OUTCOME_STG (APP_ELIG_OUTCOME_ID ASC) TABLESPACE MAXDAT_INDX;
CREATE INDEX IDX_APP_ELIG_OUTCOME_INDV_ID ON APP_ELIG_OUTCOME_STG (APP_INDIVIDUAL_ID ASC) TABLESPACE MAXDAT_INDX;
CREATE INDEX IDX_APP_ELIG_OUTCOME_APPLN_ID ON APP_ELIG_OUTCOME_STG (APPLICATION_ID ASC) TABLESPACE MAXDAT_INDX;


CREATE TABLE APP_EVENT_LOG_STG 
(
  APP_EVENT_LOG_ID NUMBER(18, 0) NOT NULL 
, CREATE_TS DATE 
, CREATED_BY VARCHAR2(80 BYTE) 
, ACTION_CD VARCHAR2(32 BYTE) 
, OUTCOME_CD VARCHAR2(32 BYTE) 
, APP_EVENT_CD VARCHAR2(32 BYTE) 
, NOTE VARCHAR2(2500 BYTE) 
, OUTCOME_RESULT_DATE DATE 
, APP_EVENT_CONTEXT VARCHAR2(1000 BYTE) 
, REF_ID NUMBER(18, 0) 
, REF_TYPE VARCHAR2(32 BYTE) 
, APPLICATION_ID NUMBER(18, 0) 
, APP_INDIVIDUAL_ID NUMBER(18, 0) 
, RFE_STATUS_CD VARCHAR2(32 BYTE) 
, APP_STATUS_CD VARCHAR2(32 BYTE) 
, REASON_CD VARCHAR2(32 BYTE) 
) TABLESPACE MAXDAT_DATA;

CREATE UNIQUE INDEX XPKAPP_EVENT_LOG_STG ON APP_EVENT_LOG_STG (APP_EVENT_LOG_ID ASC) TABLESPACE MAXDAT_INDX;
CREATE INDEX XIAPP_EVENT_LOG_STG_APPID ON APP_EVENT_LOG_STG (APPLICATION_ID ASC) TABLESPACE MAXDAT_INDX;
CREATE INDEX IDX_APP_EVENT_LOG_STG_REF_ID ON APP_EVENT_LOG_STG (REF_ID ASC) TABLESPACE MAXDAT_INDX;
CREATE INDEX IDX_APP_EVENT_LOG_APP_INDV_ID ON APP_EVENT_LOG_STG (APP_INDIVIDUAL_ID ASC) TABLESPACE MAXDAT_INDX;
CREATE INDEX APP_EVENT_LOG_STG_IDX03 ON app_event_log_stg(APP_EVENT_CD) TABLESPACE MAXDAT_INDX;
CREATE INDEX APP_EVENT_LOG_STG_IDX02 ON app_event_log_stg(CREATE_TS) TABLESPACE MAXDAT_INDX;


COMMENT ON TABLE APP_EVENT_LOG_STG IS 'Application Event Log';
COMMENT ON COLUMN APP_EVENT_LOG_STG.APP_EVENT_LOG_ID IS 'Application Event Log ID';
COMMENT ON COLUMN APP_EVENT_LOG_STG.ACTION_CD IS 'Action Code';
COMMENT ON COLUMN APP_EVENT_LOG_STG.OUTCOME_CD IS 'Outcome due to action';
COMMENT ON COLUMN APP_EVENT_LOG_STG.APP_EVENT_CD IS 'Application Event code';
COMMENT ON COLUMN APP_EVENT_LOG_STG.NOTE IS 'Notes';
COMMENT ON COLUMN APP_EVENT_LOG_STG.OUTCOME_RESULT_DATE IS 'Outcome date';
COMMENT ON COLUMN APP_EVENT_LOG_STG.APP_EVENT_CONTEXT IS 'Application Event Context';
COMMENT ON COLUMN APP_EVENT_LOG_STG.REF_ID IS 'Reference ID (Relates to REF_TYPE)';
COMMENT ON COLUMN APP_EVENT_LOG_STG.REF_TYPE IS 'Reference Type (If refering to another entity)';
COMMENT ON COLUMN APP_EVENT_LOG_STG.APPLICATION_ID IS 'Application ID';
COMMENT ON COLUMN APP_EVENT_LOG_STG.APP_INDIVIDUAL_ID IS 'Application member ID';
COMMENT ON COLUMN APP_EVENT_LOG_STG.REASON_CD IS 'Reason for the action';

CREATE TABLE APP_EVENT_REASON_LKUP
(
  VALUE VARCHAR2(32 BYTE) NOT NULL 
, DESCRIPTION VARCHAR2(256 BYTE) 
, REPORT_LABEL VARCHAR2(64 BYTE) 
, SCOPE VARCHAR2(128 BYTE) 
, CREATED_BY VARCHAR2(50 BYTE) 
, CREATE_TS DATE 
, UPDATED_BY VARCHAR2(50 BYTE) 
, UPDATE_TS DATE 
, ORDER_BY_DEFAULT NUMBER(10, 0) 
, EFFECTIVE_START_DATE DATE 
, EFFECTIVE_END_DATE DATE 
) 
TABLESPACE MAXDAT_DATA;

COMMENT ON TABLE APP_EVENT_REASON_LKUP IS 'code table to defines the Application event action reasons. For each action related to an application record changes, there will be a reason.';
COMMENT ON COLUMN APP_EVENT_REASON_LKUP.VALUE IS 'Application Event Reason code';
COMMENT ON COLUMN APP_EVENT_REASON_LKUP.DESCRIPTION IS 'description of the code usage';
COMMENT ON COLUMN APP_EVENT_REASON_LKUP.REPORT_LABEL IS 'The default label for the corresponding code';
COMMENT ON COLUMN APP_EVENT_REASON_LKUP.SCOPE IS 'This is used to categorize values into subsets when needed. This is often needed when, for example, one needs to display a sub-type valuelist based on the type selected in a type valuelist. Multiple scopes may be comma delimited.';
COMMENT ON COLUMN APP_EVENT_REASON_LKUP.CREATED_BY IS 'Contains the staff id (or component) which originally created the record.';
COMMENT ON COLUMN APP_EVENT_REASON_LKUP.CREATE_TS IS 'record creation timestamp';
COMMENT ON COLUMN APP_EVENT_REASON_LKUP.UPDATED_BY IS 'Contains the staff id which most recently updated the record.';
COMMENT ON COLUMN APP_EVENT_REASON_LKUP.UPDATE_TS IS 'timestamp of when the record was last updated';
COMMENT ON COLUMN APP_EVENT_REASON_LKUP.ORDER_BY_DEFAULT IS 'order by value';
COMMENT ON COLUMN APP_EVENT_REASON_LKUP.EFFECTIVE_START_DATE IS 'Contains the date of when this code value became or will become active. Having the value empty implies the code is always active until the effective end date is set.';
COMMENT ON COLUMN APP_EVENT_REASON_LKUP.EFFECTIVE_END_DATE IS 'Contains the date of when this code value will become inactive. Having the value empty implies code will never become inactive in the future.';

CREATE UNIQUE INDEX XPKAPP_EVENT_REASON_LKUP ON APP_EVENT_REASON_LKUP(VALUE ASC) TABLESPACE MAXDAT_INDX;

CREATE TABLE APP_EVENT_OUTCOME_LKUP 
(
  DESCRIPTION VARCHAR2(256 BYTE) 
, REPORT_LABEL VARCHAR2(50 BYTE) 
, SCOPE VARCHAR2(50 BYTE) 
, UPDATED_BY VARCHAR2(80 BYTE) 
, UPDATE_TS DATE 
, VALUE VARCHAR2(32 BYTE) NOT NULL 
, CREATED_BY VARCHAR2(80 BYTE) 
, CREATE_TS DATE 
, ORDER_BY_DEFAULT NUMBER(10, 0) 
, EFFECTIVE_START_DATE DATE 
, EFFECTIVE_END_DATE DATE 
) 
TABLESPACE MAXDAT_DATA;

CREATE UNIQUE INDEX PK_APP_EVENT_OUTCOME_LKUP ON APP_EVENT_OUTCOME_LKUP (VALUE ASC) TABLESPACE MAXDAT_INDX;

CREATE TABLE APP_RFE_STATUS_LKUP 
(
  VALUE VARCHAR2(32 BYTE) NOT NULL 
, DESCRIPTION VARCHAR2(256 BYTE) 
, REPORT_LABEL VARCHAR2(64 BYTE) 
, SCOPE VARCHAR2(128 BYTE) 
, CREATED_BY VARCHAR2(50 BYTE) 
, CREATE_TS DATE 
, UPDATED_BY VARCHAR2(50 BYTE) 
, UPDATE_TS DATE 
, ORDER_BY_DEFAULT NUMBER(10, 0) 
, EFFECTIVE_START_DATE DATE 
, EFFECTIVE_END_DATE DATE 
, RFE_STATUS_CLASS VARCHAR2(32 BYTE) 
) 
TABLESPACE MAXDAT_DATA;

COMMENT ON TABLE APP_RFE_STATUS_LKUP IS 'Lists all possible ?request for eligibility? status for a client. Possible values are Renewal Initiated, Awaiting Data Entry, Data Entered, Awaiting MAX-QC, Awaiting MI/MV, Awaiting State-QC, Awaiting Research and Completed.';
COMMENT ON COLUMN APP_RFE_STATUS_LKUP.VALUE IS 'Application Status Code';
COMMENT ON COLUMN APP_RFE_STATUS_LKUP.REPORT_LABEL IS 'The default label for the corresponding code';
COMMENT ON COLUMN APP_RFE_STATUS_LKUP.SCOPE IS 'This is used to categorize values into subsets when needed. This is often needed when, for example, one needs to display a sub-type valuelist based on the type selected in a type valuelist. Multiple scopes may be comma delimited.';
COMMENT ON COLUMN APP_RFE_STATUS_LKUP.CREATED_BY IS 'Contains the staff id (or component) which originally created the record.';
COMMENT ON COLUMN APP_RFE_STATUS_LKUP.CREATE_TS IS 'record creation timestamp';
COMMENT ON COLUMN APP_RFE_STATUS_LKUP.UPDATED_BY IS 'Contains the staff id which most recently updated the record.';
COMMENT ON COLUMN APP_RFE_STATUS_LKUP.UPDATE_TS IS 'timestamp of when the record was last updated';
COMMENT ON COLUMN APP_RFE_STATUS_LKUP.ORDER_BY_DEFAULT IS 'order by value';
COMMENT ON COLUMN APP_RFE_STATUS_LKUP.EFFECTIVE_START_DATE IS 'Contains the date of when this code value became or will become active. Having the value empty implies the code is always active until the effective end date is set.';
COMMENT ON COLUMN APP_RFE_STATUS_LKUP.EFFECTIVE_END_DATE IS 'Contains the date of when this code value will become inactive. Having the value empty implies code will never become inactive in the future.';

CREATE UNIQUE INDEX XPKAPP_RFE_STATUS_LKUP ON APP_RFE_STATUS_LKUP (VALUE ASC) TABLESPACE MAXDAT_INDX;

CREATE TABLE ELIG_OUTCOME_REASON_LKUP 
(
  VALUE VARCHAR2(32 BYTE) NOT NULL 
, DESCRIPTION VARCHAR2(256 BYTE) 
, REPORT_LABEL VARCHAR2(64 BYTE) 
, SCOPE VARCHAR2(128 BYTE) 
, CREATED_BY VARCHAR2(50 BYTE) 
, CREATE_TS DATE 
, UPDATED_BY VARCHAR2(50 BYTE) 
, UPDATE_TS DATE 
, ORDER_BY_DEFAULT NUMBER(10, 0) 
, EFFECTIVE_START_DATE DATE 
, EFFECTIVE_END_DATE DATE 
) 
TABLESPACE MAXDAT_DATA;

COMMENT ON TABLE ELIG_OUTCOME_REASON_LKUP IS 'Lists all possible Eligibility outcome reason codes';
COMMENT ON COLUMN ELIG_OUTCOME_REASON_LKUP.VALUE IS 'Eligibility Outcome Reason Code';
COMMENT ON COLUMN ELIG_OUTCOME_REASON_LKUP.REPORT_LABEL IS 'The default label for the corresponding code';
COMMENT ON COLUMN ELIG_OUTCOME_REASON_LKUP.SCOPE IS 'This is used to categorize values into subsets when needed. This is often needed when, for example, one needs to display a sub-type valuelist based on the type selected in a type valuelist. Multiple scopes may be comma delimited.';
COMMENT ON COLUMN ELIG_OUTCOME_REASON_LKUP.CREATED_BY IS 'Contains the staff id (or component) which originally created the record.';
COMMENT ON COLUMN ELIG_OUTCOME_REASON_LKUP.CREATE_TS IS 'record creation timestamp';
COMMENT ON COLUMN ELIG_OUTCOME_REASON_LKUP.UPDATED_BY IS 'Contains the staff id which most recently updated the record.';
COMMENT ON COLUMN ELIG_OUTCOME_REASON_LKUP.UPDATE_TS IS 'timestamp of when the record was last updated';
COMMENT ON COLUMN ELIG_OUTCOME_REASON_LKUP.ORDER_BY_DEFAULT IS 'order by value';
COMMENT ON COLUMN ELIG_OUTCOME_REASON_LKUP.EFFECTIVE_START_DATE IS 'Contains the date of when this code value became or will become active. Having the value empty implies the code is always active until the effective end date is set.';
COMMENT ON COLUMN ELIG_OUTCOME_REASON_LKUP.EFFECTIVE_END_DATE IS 'Contains the date of when this code value will become inactive. Having the value empty implies code will never become inactive in the future.';

CREATE UNIQUE INDEX XPKELIG_OUTCOME_REASON_LKUP ON ELIG_OUTCOME_REASON_LKUP (VALUE ASC) TABLESPACE MAXDAT_INDX;

CREATE TABLE PROGRAM_TYPE_LKUP 
(
  VALUE VARCHAR2(32 BYTE) NOT NULL 
, DESCRIPTION VARCHAR2(256 BYTE) 
, REPORT_LABEL VARCHAR2(64 BYTE) 
, SCOPE VARCHAR2(128 BYTE) 
, CREATED_BY VARCHAR2(80 BYTE) 
, CREATE_TS DATE 
, UPDATED_BY VARCHAR2(80 BYTE) 
, UPDATE_TS DATE 
, ORDER_BY_DEFAULT NUMBER(10, 0) 
, EFFECTIVE_START_DATE DATE 
, EFFECTIVE_END_DATE DATE 
, HELPLINE_PHONE VARCHAR2(20 BYTE) 
, PMP_CHANGE_BY_PLAN_ONLY_IND NUMBER(1, 0) 
)  TABLESPACE MAXDAT_DATA;

COMMENT ON TABLE PROGRAM_TYPE_LKUP IS 'Enum Program Type is an enumertation table for Program Type Codes';
COMMENT ON COLUMN PROGRAM_TYPE_LKUP.VALUE IS 'Code Value';
COMMENT ON COLUMN PROGRAM_TYPE_LKUP.DESCRIPTION IS 'This is an optional brief description to give more detail about what a value is used for';
COMMENT ON COLUMN PROGRAM_TYPE_LKUP.REPORT_LABEL IS 'Only used by reporting tools which might query the table and need to have a discernable value to be returned. Label values should always be in English with all capital letters';
COMMENT ON COLUMN PROGRAM_TYPE_LKUP.SCOPE IS 'This is used to categorize values into subsets when needed. This is often needed when, for example, one needs to display a sub-type valuelist based on the type selected in a type valuelist. Multiple scopes may be comma delimited.';
COMMENT ON COLUMN PROGRAM_TYPE_LKUP.CREATED_BY IS 'Contains the username or component which originally created the record';
COMMENT ON COLUMN PROGRAM_TYPE_LKUP.CREATE_TS IS 'Contains the timestamp of when the record was originally created';
COMMENT ON COLUMN PROGRAM_TYPE_LKUP.UPDATED_BY IS 'Contains the username or component which most recently updated the record. Updates might occur when the name, report label, scope or active flag is changed';
COMMENT ON COLUMN PROGRAM_TYPE_LKUP.UPDATE_TS IS 'Contains the timestamp of when the record was updated';
COMMENT ON COLUMN PROGRAM_TYPE_LKUP.ORDER_BY_DEFAULT IS 'Optional numerical sort order to indicate how the values in the table should show up in a picklist';
COMMENT ON COLUMN PROGRAM_TYPE_LKUP.EFFECTIVE_START_DATE IS 'Date of when this code becomes active. This will ultimately replace the IS_ACTIVE_IND flag';
COMMENT ON COLUMN PROGRAM_TYPE_LKUP.EFFECTIVE_END_DATE IS 'Date of when this code becomes inactive. This will ultimately replace the IS_ACTIVE_IND flag';

CREATE UNIQUE INDEX XPKPROGRAM_TYPE_LKUP ON PROGRAM_TYPE_LKUP (VALUE ASC)  TABLESPACE MAXDAT_INDX;

CREATE TABLE SUBPROGRAM_TYPE_LKUP 
(
  VALUE VARCHAR2(20 BYTE) NOT NULL 
, DESCRIPTION VARCHAR2(256 BYTE) 
, REPORT_LABEL VARCHAR2(64 BYTE) 
, SCOPE VARCHAR2(128 BYTE) 
, CREATED_BY VARCHAR2(80 BYTE) 
, CREATE_TS DATE 
, UPDATED_BY VARCHAR2(80 BYTE) 
, UPDATE_TS DATE 
, ORDER_BY_DEFAULT NUMBER(10, 0) 
, EFFECTIVE_START_DATE DATE 
, EFFECTIVE_END_DATE DATE 
, PLAN_TYPE VARCHAR2(32 BYTE) 
, ELIG_SEGMENT_TYPE VARCHAR2(32 BYTE) 
) TABLESPACE MAXDAT_DATA;

COMMENT ON COLUMN SUBPROGRAM_TYPE_LKUP.VALUE IS 'Code Value';
COMMENT ON COLUMN SUBPROGRAM_TYPE_LKUP.DESCRIPTION IS 'This is an optional brief description to give more detail about what a value is used for';
COMMENT ON COLUMN SUBPROGRAM_TYPE_LKUP.REPORT_LABEL IS 'Only used by reporting tools which might query the table and need to have a discernable value to be returned. Label values should always be in English with all capital letters';
COMMENT ON COLUMN SUBPROGRAM_TYPE_LKUP.SCOPE IS 'This is used to categorize values into subsets when needed. This is often needed when, for example, one needs to display a sub-type valuelist based on the type selected in a type valuelist. Multiple scopes may be comma delimited';
COMMENT ON COLUMN SUBPROGRAM_TYPE_LKUP.CREATED_BY IS 'Contains the username or component which originally created the record';
COMMENT ON COLUMN SUBPROGRAM_TYPE_LKUP.CREATE_TS IS 'Contains the timestamp of when the record was originally created';
COMMENT ON COLUMN SUBPROGRAM_TYPE_LKUP.UPDATED_BY IS 'Contains the username or component which most recently updated the record';
COMMENT ON COLUMN SUBPROGRAM_TYPE_LKUP.UPDATE_TS IS 'Contains the timestamp of when the record was updated';
COMMENT ON COLUMN SUBPROGRAM_TYPE_LKUP.ORDER_BY_DEFAULT IS 'This is Optional numerical sort order to indicate how the values in the table should show up in a picklist';
COMMENT ON COLUMN SUBPROGRAM_TYPE_LKUP.EFFECTIVE_START_DATE IS 'Date of when this code becomes active. This will ultimately replace the IS_ACTIVE_IND flag';
COMMENT ON COLUMN SUBPROGRAM_TYPE_LKUP.EFFECTIVE_END_DATE IS 'Date of when this code becomes inactive. This will ultimately replace the IS_ACTIVE_IND flag';

CREATE UNIQUE INDEX XPKSUBPROGRAM_TYPE_LKUP ON SUBPROGRAM_TYPE_LKUP (VALUE ASC) TABLESPACE MAXDAT_INDX;

CREATE TABLE APP_ROLE_LKUP 
(
  VALUE VARCHAR2(32 BYTE) NOT NULL 
, DESCRIPTION VARCHAR2(256 BYTE) 
, REPORT_LABEL VARCHAR2(64 BYTE) 
, SCOPE VARCHAR2(128 BYTE) 
, CREATED_BY VARCHAR2(50 BYTE) 
, CREATE_TS DATE 
, UPDATED_BY VARCHAR2(50 BYTE) 
, UPDATE_TS DATE 
, ORDER_BY_DEFAULT NUMBER(10, 0) 
, EFFECTIVE_START_DATE DATE 
, EFFECTIVE_END_DATE DATE 
) TABLESPACE MAXDAT_DATA;

COMMENT ON TABLE APP_ROLE_LKUP IS 'Lists all possible roles a person can perform in an application. Not used for phase 1. Some possible values are Authorized representative, Head of Household, Absent Parent and Legal Guardian.';
COMMENT ON COLUMN APP_ROLE_LKUP.VALUE IS 'Member role in the application.';
COMMENT ON COLUMN APP_ROLE_LKUP.REPORT_LABEL IS 'The default label for the corresponding code';
COMMENT ON COLUMN APP_ROLE_LKUP.SCOPE IS 'This is used to categorize values into subsets when needed. This is often needed when, for example, one needs to display a sub-type valuelist based on the type selected in a type valuelist. Multiple scopes may be comma delimited.';
COMMENT ON COLUMN APP_ROLE_LKUP.CREATED_BY IS 'Contains the staff id (or component) which originally created the record.';
COMMENT ON COLUMN APP_ROLE_LKUP.CREATE_TS IS 'record creation timestamp';
COMMENT ON COLUMN APP_ROLE_LKUP.UPDATED_BY IS 'Contains the staff id which most recently updated the record.';
COMMENT ON COLUMN APP_ROLE_LKUP.UPDATE_TS IS 'timestamp of when the record was last updated';
COMMENT ON COLUMN APP_ROLE_LKUP.ORDER_BY_DEFAULT IS 'order by value';
COMMENT ON COLUMN APP_ROLE_LKUP.EFFECTIVE_START_DATE IS 'Contains the date of when this code value became or will become active. Having the value empty implies the code is always active until the effective end date is set.';
COMMENT ON COLUMN APP_ROLE_LKUP.EFFECTIVE_END_DATE IS 'Contains the date of when this code value will become inactive. Having the value empty implies code will never become inactive in the future.';

CREATE UNIQUE INDEX XPKAPP_ROLE_LKUP ON APP_ROLE_LKUP (VALUE ASC) TABLESPACE MAXDAT_INDX;

CREATE TABLE APP_REACTIVATION_REASON_LKUP 
(
  VALUE VARCHAR2(32 BYTE) NOT NULL 
, DESCRIPTION VARCHAR2(256 BYTE) 
, REPORT_LABEL VARCHAR2(64 BYTE) 
, SCOPE VARCHAR2(128 BYTE) 
, CREATED_BY VARCHAR2(50 BYTE) 
, CREATE_TS DATE 
, UPDATED_BY VARCHAR2(50 BYTE) 
, UPDATE_TS DATE 
, ORDER_BY_DEFAULT NUMBER 
, EFFECTIVE_START_DATE DATE 
, EFFECTIVE_END_DATE DATE 
) TABLESPACE MAXDAT_DATA;

CREATE UNIQUE INDEX APP_REACTIVATION_REASON_LKUPPK ON APP_REACTIVATION_REASON_LKUP (VALUE ASC) TABLESPACE MAXDAT_INDX;

CREATE TABLE DOCUMENT_SOURCE_LKUP 
(
  VALUE VARCHAR2(32 BYTE) NOT NULL 
, DESCRIPTION VARCHAR2(256 BYTE) 
, REPORT_LABEL VARCHAR2(64 BYTE) 
, SCOPE VARCHAR2(128 BYTE) 
, CREATED_BY VARCHAR2(50 BYTE) 
, CREATE_TS DATE 
, UPDATED_BY VARCHAR2(50 BYTE) 
, UPDATE_TS DATE 
, ORDER_BY_DEFAULT NUMBER(10, 0) 
, EFFECTIVE_START_DATE DATE 
, EFFECTIVE_END_DATE DATE 
) TABLESPACE MAXDAT_DATA;

COMMENT ON TABLE DOCUMENT_SOURCE_LKUP IS 'Lists all possible document sources';
COMMENT ON COLUMN DOCUMENT_SOURCE_LKUP.VALUE IS 'Doucment Source';
COMMENT ON COLUMN DOCUMENT_SOURCE_LKUP.REPORT_LABEL IS 'The default label for the corresponding code';
COMMENT ON COLUMN DOCUMENT_SOURCE_LKUP.SCOPE IS 'This is used to categorize values into subsets when needed. This is often needed when, for example, one needs to display a sub-type valuelist based on the type selected in a type valuelist. Multiple scopes may be comma delimited.';
COMMENT ON COLUMN DOCUMENT_SOURCE_LKUP.CREATED_BY IS 'Contains the staff id (or component) which originally created the record.';
COMMENT ON COLUMN DOCUMENT_SOURCE_LKUP.CREATE_TS IS 'record creation timestamp';
COMMENT ON COLUMN DOCUMENT_SOURCE_LKUP.UPDATED_BY IS 'Contains the staff id which most recently updated the record.';
COMMENT ON COLUMN DOCUMENT_SOURCE_LKUP.UPDATE_TS IS 'timestamp of when the record was last updated';
COMMENT ON COLUMN DOCUMENT_SOURCE_LKUP.ORDER_BY_DEFAULT IS 'order by value';
COMMENT ON COLUMN DOCUMENT_SOURCE_LKUP.EFFECTIVE_START_DATE IS 'Contains the date of when this code value became or will become active. Having the value empty implies the code is always active until the effective end date is set.';
COMMENT ON COLUMN DOCUMENT_SOURCE_LKUP.EFFECTIVE_END_DATE IS 'Contains the date of when this code value will become inactive. Having the value empty implies code will never become inactive in the future.';

CREATE UNIQUE INDEX XPKDOCUMENT_SOURCE_LKUP ON DOCUMENT_SOURCE_LKUP (VALUE ASC)  TABLESPACE MAXDAT_INDX;


CREATE TABLE DOCUMENT_SET_STG
(
  DOCUMENT_SET_ID NUMBER(18, 0) NOT NULL 
, ECN VARCHAR2(256 BYTE) 
, DOCUMENT_COUNT NUMBER(18, 0) 
, DOC_SOURCE_CD VARCHAR2(32 BYTE) 
, OPERATOR_ID VARCHAR2(32 BYTE) 
, RECEIVED_DATE DATE 
, CREATED_BY VARCHAR2(80 BYTE) 
, CREATE_TS DATE 
, UPDATED_BY VARCHAR2(80 BYTE) 
, UPDATE_TS DATE 
, LANGUAGE_CD VARCHAR2(32 BYTE) 
, SCAN_STATION VARCHAR2(32 BYTE) 
) TABLESPACE MAXDAT_INDX;

CREATE UNIQUE INDEX DOCUMENT_SET_STG_PK ON DOCUMENT_SET_STG (DOCUMENT_SET_ID ASC) TABLESPACE MAXDAT_INDX;
CREATE INDEX DOCUMENT_SET_STG_IDX01 ON DOCUMENT_SET_STG (ECN ASC) TABLESPACE MAXDAT_INDX;

CREATE TABLE DOC_LINK_STG
(
  DOC_LINK_ID NUMBER(18, 0) NOT NULL 
, DOCUMENT_ID NUMBER(18, 0) 
, LINK_TYPE_CD VARCHAR2(32 BYTE) 
, AUTO_LINKED_IND NUMBER(1, 0) 
, CREATED_BY VARCHAR2(80 BYTE) 
, CREATE_TS DATE 
, UPDATED_BY VARCHAR2(80 BYTE) 
, UPDATE_TS DATE 
, CASE_ID NUMBER(18, 0) 
, CLIENT_ID NUMBER(18, 0) 
, LINK_REF_ID NUMBER(18, 0) 
, MI_TASK_INDICATOR NUMBER
)  TABLESPACE MAXDAT_DATA;

CREATE UNIQUE INDEX DOC_LINK_STG_PK ON DOC_LINK_STG (DOC_LINK_ID ASC) TABLESPACE MAXDAT_INDX;
CREATE INDEX DOC_LINK_STG_UNIQUE_ID ON DOC_LINK_STG (DOCUMENT_ID ASC, LINK_TYPE_CD ASC, CASE_ID ASC, CLIENT_ID ASC, LINK_REF_ID ASC) TABLESPACE MAXDAT_INDX;
CREATE INDEX DOC_LINK_STG_IDX01 ON DOC_LINK_STG (CLIENT_ID ASC) TABLESPACE MAXDAT_INDX;
CREATE INDEX DOC_LINK_STG_IDX02 ON DOC_LINK_STG (CASE_ID ASC) TABLESPACE MAXDAT_INDX;
CREATE INDEX DOC_LINK_STG_IDX03 ON DOC_LINK_STG (LINK_TYPE_CD,LINK_REF_ID)  TABLESPACE MAXDAT_INDX;
CREATE INDEX doc_link_stg_idx04 ON doc_link_stg(mi_task_indicator) TABLESPACE MAXDAT_INDX;

CREATE TABLE DOCUMENT_STG 
(
  DOCUMENT_ID NUMBER(18, 0) NOT NULL 
, DCN VARCHAR2(256 BYTE) 
, DOC_TYPE_CD VARCHAR2(32 BYTE) 
, DOC_STATUS_CD VARCHAR2(32 BYTE) 
, DOCUMENT_SET_ID NUMBER(18, 0) 
, LETTER_REQUEST_ID NUMBER(18, 0) 
, SCAN_DATE DATE 
, RELEASE_DATE DATE 
, LANGUAGE_CD VARCHAR2(32 BYTE) 
, PAGE_COUNT NUMBER(18, 0) 
, IMAGE_ONLY_IND NUMBER(1, 0) 
, BATCH_UPLOAD_IND NUMBER(1, 0) 
, RESCAN_IND NUMBER(1, 0) 
, RETURN_MAIL_IND NUMBER(1, 0) 
, RETURN_MAIL_REASON_CD VARCHAR2(32 BYTE) 
, XML_META_DATA VARCHAR2(4000 BYTE) 
, RESCAN_COUNT NUMBER(18, 0) 
, CREATED_BY VARCHAR2(80 BYTE) 
, CREATE_TS DATE 
, UPDATED_BY VARCHAR2(80 BYTE) 
, UPDATE_TS DATE 
, NOTE_REF_ID VARCHAR2(32 BYTE) 
, TRASHED_DOC_IND NUMBER(1, 0) 
, EXPEDITED_IND NUMBER(1, 0) 
, RESEARCH_REQUESTED_IND NUMBER(1, 0) 
, DOC_FORM_TYPE VARCHAR2(70 BYTE) 
, ORIG_DOC_TYPE_CD VARCHAR2(32 BYTE) 
, ORIG_DOC_FORM_TYPE VARCHAR2(32 BYTE) 
, LAST_TRASHED_BY VARCHAR2(80 BYTE) 
, LAST_TRASHED_TS DATE 
, ACCESS_PERMISSION VARCHAR2(512 BYTE) 
) TABLESPACE MAXDAT_DATA;

CREATE UNIQUE INDEX DOCUMENT_STG_PK ON DOCUMENT_STG (DOCUMENT_ID ASC) TABLESPACE MAXDAT_INDX;
CREATE UNIQUE INDEX DOCUMENT_STG_DCN_INDEX ON DOCUMENT_STG (DCN ASC) TABLESPACE MAXDAT_INDX;
CREATE INDEX DOCUMENT_STG_IDX02 ON DOCUMENT_STG (SCAN_DATE ASC) TABLESPACE MAXDAT_INDX;
CREATE INDEX DOCUMENT_STG_IDX03 ON DOCUMENT_STG (DOCUMENT_SET_ID ASC) TABLESPACE MAXDAT_INDX;
CREATE INDEX DOCUMENT_STG_IDX04 ON DOCUMENT_STG (DOC_TYPE_CD ASC) TABLESPACE MAXDAT_INDX;
CREATE INDEX DOCUMENT_STG_IDX05 ON DOCUMENT_STG (DOC_FORM_TYPE ASC) TABLESPACE MAXDAT_INDX;
CREATE INDEX DOCUMENT_STG_IDX06 ON DOCUMENT_STG (LAST_TRASHED_BY ASC) TABLESPACE MAXDAT_INDX;


CREATE TABLE DOCUMENT_STATUS_LKUP 
(
  VALUE VARCHAR2(32 BYTE) NOT NULL 
, DESCRIPTION VARCHAR2(256 BYTE) 
, REPORT_LABEL VARCHAR2(64 BYTE) 
, SCOPE VARCHAR2(128 BYTE) 
, CREATED_BY VARCHAR2(80 BYTE) 
, CREATE_TS DATE 
, UPDATED_BY VARCHAR2(80 BYTE) 
, UPDATE_TS DATE 
, ORDER_BY_DEFAULT NUMBER(10, 0) 
, EFFECTIVE_START_DATE DATE 
, EFFECTIVE_END_DATE DATE 
, CAN_COMPLETE_IND NUMBER(1, 0) 
) TABLESPACE MAXDAT_DATA;

COMMENT ON TABLE DOCUMENT_STATUS_LKUP IS 'Enum Document Status is an enumertation table for document statuses';
COMMENT ON COLUMN DOCUMENT_STATUS_LKUP.VALUE IS 'Code Value';
COMMENT ON COLUMN DOCUMENT_STATUS_LKUP.DESCRIPTION IS 'This is an optional brief description to give more detail about what a value is used for';
COMMENT ON COLUMN DOCUMENT_STATUS_LKUP.REPORT_LABEL IS 'Only used by reporting tools which might query the table and need to have a discernable value to be returned. Label values should always be in English with all capital letters';
COMMENT ON COLUMN DOCUMENT_STATUS_LKUP.SCOPE IS 'This is used to categorize values into subsets when needed. This is often needed when, for example, one needs to display a sub-type valuelist based on the type selected in a type valuelist. Multiple scopes may be comma delimited.';
COMMENT ON COLUMN DOCUMENT_STATUS_LKUP.CREATED_BY IS 'Contains the username or component which originally created the record';
COMMENT ON COLUMN DOCUMENT_STATUS_LKUP.CREATE_TS IS 'Contains the timestamp of when the record was originally created';
COMMENT ON COLUMN DOCUMENT_STATUS_LKUP.UPDATED_BY IS 'Contains the username or component which most recently updated the record. Updates might occur when the name, report label, scope or active flag is changed';
COMMENT ON COLUMN DOCUMENT_STATUS_LKUP.UPDATE_TS IS 'Contains the timestamp of when the record was updated';
COMMENT ON COLUMN DOCUMENT_STATUS_LKUP.ORDER_BY_DEFAULT IS 'Optional numerical sort order to indicate how the values in the table should show up in a picklist';
COMMENT ON COLUMN DOCUMENT_STATUS_LKUP.EFFECTIVE_START_DATE IS 'Date of when this code becomes active. This will ultimately replace the IS_ACTIVE_IND flag';
COMMENT ON COLUMN DOCUMENT_STATUS_LKUP.EFFECTIVE_END_DATE IS 'Date of when this code becomes inactive. This will ultimately replace the IS_ACTIVE_IND flag';
COMMENT ON COLUMN DOCUMENT_STATUS_LKUP.CAN_COMPLETE_IND IS 'can the imaging task related to this document status be completed from the front end screen';

CREATE UNIQUE INDEX XPKDOCUMENT_STATUS_LKUP ON DOCUMENT_STATUS_LKUP (VALUE ASC) TABLESPACE MAXDAT_INDX;

CREATE TABLE DOCUMENT_TYPE_LKUP 
(
  VALUE VARCHAR2(32 BYTE) NOT NULL 
, DESCRIPTION VARCHAR2(256 BYTE) 
, REPORT_LABEL VARCHAR2(64 BYTE) 
, SCOPE VARCHAR2(128 BYTE) 
, CREATED_BY VARCHAR2(80 BYTE) 
, CREATE_TS DATE 
, UPDATED_BY VARCHAR2(80 BYTE) 
, UPDATE_TS DATE 
, ORDER_BY_DEFAULT NUMBER(10, 0) 
, EFFECTIVE_START_DATE DATE 
, EFFECTIVE_END_DATE DATE 
, IA_PROCESS_TYPE_CD VARCHAR2(32 BYTE) 
, FORM_IND NUMBER(1, 0) 
, DE_REQ_IND NUMBER(1, 0) 
, DE_TASK_CD VARCHAR2(80 BYTE) 
, LIFE_TIME_IND NUMBER(1, 0) 
, ACCESS_PERMISSION VARCHAR2(512 BYTE) 
) TABLESPACE MAXDAT_DATA;

COMMENT ON TABLE DOCUMENT_TYPE_LKUP IS 'Enum Document Type is an enumertation table for document types and forms. Forms are indicated via the form_ind field.';
COMMENT ON COLUMN DOCUMENT_TYPE_LKUP.VALUE IS 'Code Value';
COMMENT ON COLUMN DOCUMENT_TYPE_LKUP.DESCRIPTION IS 'This is an optional brief description to give more detail about what a value is used for';
COMMENT ON COLUMN DOCUMENT_TYPE_LKUP.REPORT_LABEL IS 'Only used by reporting tools which might query the table and need to have a discernable value to be returned. Label values should always be in English with all capital letters';
COMMENT ON COLUMN DOCUMENT_TYPE_LKUP.SCOPE IS 'This is used to categorize values into subsets when needed. This is often needed when, for example, one needs to display a sub-type valuelist based on the type selected in a type valuelist. Multiple scopes may be comma delimited.';
COMMENT ON COLUMN DOCUMENT_TYPE_LKUP.CREATED_BY IS 'Contains the username or component which originally created the record';
COMMENT ON COLUMN DOCUMENT_TYPE_LKUP.CREATE_TS IS 'Contains the timestamp of when the record was originally created';
COMMENT ON COLUMN DOCUMENT_TYPE_LKUP.UPDATED_BY IS 'Contains the username or component which most recently updated the record. Updates might occur when the name, report label, scope or active flag is changed';
COMMENT ON COLUMN DOCUMENT_TYPE_LKUP.UPDATE_TS IS 'Contains the timestamp of when the record was updated';
COMMENT ON COLUMN DOCUMENT_TYPE_LKUP.ORDER_BY_DEFAULT IS 'Optional numerical sort order to indicate how the values in the table should show up in a picklist';
COMMENT ON COLUMN DOCUMENT_TYPE_LKUP.EFFECTIVE_START_DATE IS 'Date of when this code becomes active. This will ultimately replace the IS_ACTIVE_IND flag';
COMMENT ON COLUMN DOCUMENT_TYPE_LKUP.EFFECTIVE_END_DATE IS 'Date of when this code becomes inactive. This will ultimately replace the IS_ACTIVE_IND flag';
COMMENT ON COLUMN DOCUMENT_TYPE_LKUP.LIFE_TIME_IND IS 'A Life time document should follow the client arround no matter what case they are currently assigned to';
COMMENT ON COLUMN DOCUMENT_TYPE_LKUP.ACCESS_PERMISSION IS 'We may need to control by role which people can see which type of documents';

CREATE UNIQUE INDEX XPKDOCUMENT_TYPE_LKUP ON DOCUMENT_TYPE_LKUP (VALUE ASC) TABLESPACE MAXDAT_INDX;

CREATE TABLE LANGUAGE_LKUP 
(
  VALUE VARCHAR2(32 BYTE) NOT NULL 
, DESCRIPTION VARCHAR2(256 BYTE) 
, REPORT_LABEL VARCHAR2(64 BYTE) 
, SCOPE VARCHAR2(128 BYTE) 
, CREATED_BY VARCHAR2(80 BYTE) 
, CREATE_TS DATE 
, UPDATED_BY VARCHAR2(80 BYTE) 
, UPDATE_TS DATE 
, ORDER_BY_DEFAULT NUMBER(10, 0) 
, EFFECTIVE_START_DATE DATE 
, EFFECTIVE_END_DATE DATE 
, SPOKEN_LANGUAGE_IND NUMBER(1, 0) 
, HIPAA_VALUE VARCHAR2(2 BYTE) 
, STATE_CD VARCHAR2(32 BYTE) 
) TABLESPACE MAXDAT_DATA;

COMMENT ON TABLE LANGUAGE_LKUP IS 'Enum Language is an enumertation table for Language Codes';
COMMENT ON COLUMN LANGUAGE_LKUP.VALUE IS 'Code Value';
COMMENT ON COLUMN LANGUAGE_LKUP.DESCRIPTION IS 'This is an optional brief description to give more detail about what a value is used for';
COMMENT ON COLUMN LANGUAGE_LKUP.REPORT_LABEL IS 'Only used by reporting tools which might query the table and need to have a discernable value to be returned. Label values should always be in English with all capital letters';
COMMENT ON COLUMN LANGUAGE_LKUP.SCOPE IS 'This is used to categorize values into subsets when needed. This is often needed when, for example, one needs to display a sub-type valuelist based on the type selected in a type valuelist. Multiple scopes may be comma delimited.';
COMMENT ON COLUMN LANGUAGE_LKUP.CREATED_BY IS 'Contains the username or component which originally created the record';
COMMENT ON COLUMN LANGUAGE_LKUP.CREATE_TS IS 'Contains the timestamp of when the record was originally created';
COMMENT ON COLUMN LANGUAGE_LKUP.UPDATED_BY IS 'Contains the username or component which most recently updated the record. Updates might occur when the name, report label, scope or active flag is changed';
COMMENT ON COLUMN LANGUAGE_LKUP.UPDATE_TS IS 'Contains the timestamp of when the record was updated';
COMMENT ON COLUMN LANGUAGE_LKUP.ORDER_BY_DEFAULT IS 'Optional numerical sort order to indicate how the values in the table should show up in a picklist';
COMMENT ON COLUMN LANGUAGE_LKUP.EFFECTIVE_START_DATE IS 'Date of when this code becomes active. This will ultimately replace the IS_ACTIVE_IND flag';
COMMENT ON COLUMN LANGUAGE_LKUP.EFFECTIVE_END_DATE IS 'Date of when this code becomes inactive. This will ultimately replace the IS_ACTIVE_IND flag';
COMMENT ON COLUMN LANGUAGE_LKUP.SPOKEN_LANGUAGE_IND IS 'Indicates if this is a language that should be considered a common spoken language for the deployment.';
COMMENT ON COLUMN LANGUAGE_LKUP.HIPAA_VALUE IS 'HIPAA vale for 834 translation';
COMMENT ON COLUMN LANGUAGE_LKUP.STATE_CD IS 'Sometimes state language codes are different from our internal codes. So they are mapped by this field.';

CREATE UNIQUE INDEX XPKLANGUAGE_LKUP ON LANGUAGE_LKUP (VALUE ASC) TABLESPACE MAXDAT_INDX;

CREATE TABLE LINK_TYPE_LKUP 
(
  VALUE VARCHAR2(32 BYTE) NOT NULL 
, COMP_REF_TABLE_NAME VARCHAR2(64 BYTE) 
, COMP_REF_COLUMN_NAME VARCHAR2(64 BYTE) 
, CONTEXT_LOOKUP_STRING VARCHAR2(128 BYTE) 
, DESCRIPTION VARCHAR2(256 BYTE) 
, REPORT_LABEL VARCHAR2(64 BYTE) 
, SCOPE VARCHAR2(128 BYTE) 
, CREATED_BY VARCHAR2(80 BYTE) 
, CREATE_TS DATE 
, UPDATED_BY VARCHAR2(80 BYTE) 
, UPDATE_TS DATE 
, ORDER_BY_DEFAULT NUMBER(10, 0) 
, EFFECTIVE_START_DATE DATE 
, EFFECTIVE_END_DATE DATE 
) TABLESPACE MAXDAT_DATA;

COMMENT ON TABLE LINK_TYPE_LKUP IS 'Enum Link Type is an enumertation table for link types';
COMMENT ON COLUMN LINK_TYPE_LKUP.VALUE IS 'Code Value';
COMMENT ON COLUMN LINK_TYPE_LKUP.COMP_REF_TABLE_NAME IS 'Referenced table name';
COMMENT ON COLUMN LINK_TYPE_LKUP.COMP_REF_COLUMN_NAME IS 'Referenced column name';
COMMENT ON COLUMN LINK_TYPE_LKUP.CONTEXT_LOOKUP_STRING IS 'Context lookup string';
COMMENT ON COLUMN LINK_TYPE_LKUP.DESCRIPTION IS 'This is an optional brief description to give more detail about what a value is used for';
COMMENT ON COLUMN LINK_TYPE_LKUP.REPORT_LABEL IS 'Only used by reporting tools which might query the table and need to have a discernable value to be returned. Label values should always be in English with all capital letters';
COMMENT ON COLUMN LINK_TYPE_LKUP.SCOPE IS 'This is used to categorize values into subsets when needed. This is often needed when, for example, one needs to display a sub-type valuelist based on the type selected in a type valuelist. Multiple scopes may be comma delimited.';
COMMENT ON COLUMN LINK_TYPE_LKUP.CREATED_BY IS 'Contains the username or component which originally created the record';
COMMENT ON COLUMN LINK_TYPE_LKUP.CREATE_TS IS 'Contains the timestamp of when the record was originally created';
COMMENT ON COLUMN LINK_TYPE_LKUP.UPDATED_BY IS 'Contains the username or component which most recently updated the record. Updates might occur when the name, report label, scope or active flag is changed';
COMMENT ON COLUMN LINK_TYPE_LKUP.UPDATE_TS IS 'Contains the timestamp of when the record was updated';
COMMENT ON COLUMN LINK_TYPE_LKUP.ORDER_BY_DEFAULT IS 'Optional numerical sort order to indicate how the values in the table should show up in a picklist';
COMMENT ON COLUMN LINK_TYPE_LKUP.EFFECTIVE_START_DATE IS 'Date of when this code becomes active. This will ultimately replace the IS_ACTIVE_IND flag';
COMMENT ON COLUMN LINK_TYPE_LKUP.EFFECTIVE_END_DATE IS 'Date of when this code becomes inactive. This will ultimately replace the IS_ACTIVE_IND flag';

CREATE UNIQUE INDEX XPKLINK_TYPE_LKUP ON LINK_TYPE_LKUP (VALUE ASC) TABLESPACE MAXDAT_INDX;


CREATE TABLE MAILHOUSE_ERROR_REASONS_LKUP 
(
  VALUE VARCHAR2(32 BYTE) NOT NULL 
, DESCRIPTION VARCHAR2(256 BYTE) 
, REPORT_LABEL VARCHAR2(64 BYTE) 
, SCOPE VARCHAR2(128 BYTE) 
, CREATED_BY VARCHAR2(80 BYTE) 
, CREATE_TS DATE 
, UPDATED_BY VARCHAR2(80 BYTE) 
, UPDATE_TS DATE 
, ORDER_BY_DEFAULT NUMBER(10, 0) 
, EFFECTIVE_START_DATE DATE 
, EFFECTIVE_END_DATE DATE 
, BIZ_EVENTS VARCHAR2(256 BYTE) 
) TABLESPACE MAXDAT_DATA;

CREATE UNIQUE INDEX XPKENUM_RETURN_MAIL_REASON ON MAILHOUSE_ERROR_REASONS_LKUP (VALUE ASC) TABLESPACE MAXDAT_INDX;


CREATE TABLE APP_MISSING_INFO_STG 
(
  MISSING_INFO_ID NUMBER(18, 0) NOT NULL 
, APPLICATION_ID NUMBER(18, 0) 
, APP_INDIVIDUAL_ID NUMBER(18, 0) 
, REPORTED_DATE DATE 
, NOTIFICATION_DATE DATE 
, SATISFIED_DATE DATE 
, CALL_RECORD_ID NUMBER(18, 0) 
, CREATE_TS DATE 
, CREATED_BY VARCHAR2(50 BYTE) 
, UPDATE_TS DATE 
, UPDATED_BY VARCHAR2(50 BYTE) 
, MI_SOURCE_CD VARCHAR2(32 BYTE) 
, SATISFIED_MEDIA_CD VARCHAR2(32 BYTE) 
, MI_TYPE_CD VARCHAR2(32 BYTE) 
, NOTE_REF_ID NUMBER(18, 0) 
, ENTITY_NAME VARCHAR2(50 BYTE) 
, CLIENT_ID NUMBER(18, 0) 
, SATISFIED_REASON_CD VARCHAR2(32 BYTE) 
, STATUS_CD VARCHAR2(32 BYTE) 
, SATISFIED_BY VARCHAR2(50 BYTE) 
, VOIDED_BY VARCHAR2(50 BYTE) 
, VOIDED_DATE DATE 
, EXT_REF_ID VARCHAR2(256 BYTE) 
, DUE_DATE DATE 
) TABLESPACE MAXDAT_DATA;

COMMENT ON TABLE APP_MISSING_INFO_STG IS 'Application missing information records';
COMMENT ON COLUMN APP_MISSING_INFO_STG.MISSING_INFO_ID IS 'Missing information record internal ID';
COMMENT ON COLUMN APP_MISSING_INFO_STG.APPLICATION_ID IS 'Application ID (Primary Key), uniquely identifies an application.';
COMMENT ON COLUMN APP_MISSING_INFO_STG.APP_INDIVIDUAL_ID IS 'Application member ID (Primary Key)';
COMMENT ON COLUMN APP_MISSING_INFO_STG.REPORTED_DATE IS 'The date this MI was reported / discovered';
COMMENT ON COLUMN APP_MISSING_INFO_STG.SATISFIED_DATE IS 'The date this MI got satisfied';
COMMENT ON COLUMN APP_MISSING_INFO_STG.MI_TYPE_CD IS 'missing information type code';
COMMENT ON COLUMN APP_MISSING_INFO_STG.ENTITY_NAME IS 'The name of the entity associated with this MI. For example, the employer name for an income type MI.';
COMMENT ON COLUMN APP_MISSING_INFO_STG.CLIENT_ID IS 'internal client id';
COMMENT ON COLUMN APP_MISSING_INFO_STG.SATISFIED_REASON_CD IS 'MI satisfied reason code';
COMMENT ON COLUMN APP_MISSING_INFO_STG.STATUS_CD IS 'status of the MI record (pending, confirmed, voided)';
COMMENT ON COLUMN APP_MISSING_INFO_STG.SATISFIED_BY IS 'staff member that entered the satisified reason';
COMMENT ON COLUMN APP_MISSING_INFO_STG.VOIDED_BY IS 'staff member that entered the voided satisified reason';
COMMENT ON COLUMN APP_MISSING_INFO_STG.VOIDED_DATE IS 'date the voided satisified reason entered';
COMMENT ON COLUMN APP_MISSING_INFO_STG.EXT_REF_ID IS 'External Reference, to facilitate state matching and updating';

CREATE INDEX XIAPP_MI_APPID ON APP_MISSING_INFO_STG (APPLICATION_ID ASC) TABLESPACE MAXDAT_INDX;
CREATE INDEX XIAPP_MI_APPINDVID ON APP_MISSING_INFO_STG (APP_INDIVIDUAL_ID ASC) TABLESPACE MAXDAT_INDX;
CREATE UNIQUE INDEX XPKAPP_MISSING_INFO_STG ON APP_MISSING_INFO_STG (MISSING_INFO_ID ASC)  TABLESPACE MAXDAT_INDX;

CREATE TABLE AID_CATEGORY_LKUP
(VALUE	VARCHAR2(32 BYTE)
,DESCRIPTION	VARCHAR2(256 BYTE)
,REPORT_LABEL	VARCHAR2(64 BYTE)
,SCOPE	VARCHAR2(128 BYTE)
,CREATED_BY	VARCHAR2(80 BYTE)
,CREATE_TS	DATE
,UPDATED_BY	VARCHAR2(80 BYTE)
,UPDATE_TS	DATE
,ORDER_BY_DEFAULT	NUMBER(10,0)
,EFFECTIVE_START_DATE	DATE
,EFFECTIVE_END_DATE	DATE
,ADLK_GROUP_CD	VARCHAR2(2 BYTE)
,ADLK_FUND_TYPE_RANGE	VARCHAR2(5 BYTE)
,ADLK_STATUS_CD	VARCHAR2(1 BYTE)
,ADLK_CHEC_HCFA_416_REP_GRP_CD	VARCHAR2(5 BYTE)
,ADLK_PREGNANCY_CD	VARCHAR2(1 BYTE)
,DATABASE_OBJECT_NAME	VARCHAR2(40 BYTE)
,ADLK_PRIORITY	NUMBER(3,0)
,MAID_ID	NUMBER(38,0)
,ACPMGP_ID	NUMBER(38,0)
,ADLK_PTLK_ID	VARCHAR2(32 BYTE)
,SUBPROGRAM_CODES	VARCHAR2(20 BYTE)) TABLESPACE MAXDAT_DATA;

CREATE UNIQUE INDEX XPK_AID_CATEGORY_LKUP ON AID_CATEGORY_LKUP(VALUE) TABLESPACE MAXDAT_INDX;
CREATE INDEX AID_CATEGORY_LKUP_IDX1 ON AID_CATEGORY_LKUP(SUBPROGRAM_CODES) TABLESPACE MAXDAT_INDX;


CREATE TABLE APP_MI_CATEGORY_LKUP
(
  VALUE VARCHAR2(32 BYTE) NOT NULL 
, DESCRIPTION VARCHAR2(256 BYTE) 
, REPORT_LABEL VARCHAR2(64 BYTE) 
, SCOPE VARCHAR2(128 BYTE) 
, CREATED_BY VARCHAR2(50 BYTE) 
, CREATE_TS DATE 
, UPDATED_BY VARCHAR2(50 BYTE) 
, UPDATE_TS DATE 
, ORDER_BY_DEFAULT NUMBER(10, 0) 
, EFFECTIVE_START_DATE DATE 
, EFFECTIVE_END_DATE DATE 
, APP_MEMBER_LEVEL_IND NUMBER(1, 0) 
, PERMISSION VARCHAR2(256 BYTE) ) TABLESPACE MAXDAT_DATA;

CREATE UNIQUE INDEX XPK_APP_MI_CATEGORY ON APP_MI_CATEGORY_LKUP (VALUE ASC) TABLESPACE MAXDAT_INDX;

COMMENT ON TABLE APP_MI_CATEGORY_LKUP IS 'code table to define the missing information categories. Example records include: Expenses, Income - Wages and Salary, Application, etc.';
COMMENT ON COLUMN APP_MI_CATEGORY_LKUP.VALUE IS 'missing information category code';
COMMENT ON COLUMN APP_MI_CATEGORY_LKUP.DESCRIPTION IS 'description of the code usage';
COMMENT ON COLUMN APP_MI_CATEGORY_LKUP.REPORT_LABEL IS 'The default label for the corresponding code';
COMMENT ON COLUMN APP_MI_CATEGORY_LKUP.SCOPE IS 'This is used to categorize values into subsets when needed. This is often needed when, for example, one needs to display a sub-type valuelist based on the type selected in a type valuelist. Multiple scopes may be comma delimited.';
COMMENT ON COLUMN APP_MI_CATEGORY_LKUP.CREATED_BY IS 'Contains the staff id (or component) which originally created the record.';
COMMENT ON COLUMN APP_MI_CATEGORY_LKUP.CREATE_TS IS 'record creation timestamp';
COMMENT ON COLUMN APP_MI_CATEGORY_LKUP.UPDATED_BY IS 'Contains the staff id which most recently updated the record.';
COMMENT ON COLUMN APP_MI_CATEGORY_LKUP.UPDATE_TS IS 'timestamp of when the record was last updated';
COMMENT ON COLUMN APP_MI_CATEGORY_LKUP.ORDER_BY_DEFAULT IS 'order by value';
COMMENT ON COLUMN APP_MI_CATEGORY_LKUP.EFFECTIVE_START_DATE IS 'Contains the date of when this code value became or will become active. Having the value empty implies the code is always active until the effective end date is set.';
COMMENT ON COLUMN APP_MI_CATEGORY_LKUP.EFFECTIVE_END_DATE IS 'Contains the date of when this code value will become inactive. Having the value empty implies code will never become inactive in the future.';
COMMENT ON COLUMN APP_MI_CATEGORY_LKUP.APP_MEMBER_LEVEL_IND IS 'indicates the category is always associated with an application member (i.e. applicant)';
COMMENT ON COLUMN APP_MI_CATEGORY_LKUP.PERMISSION IS 'This Mi type can  have a permission with it for greater control';

CREATE TABLE APP_MI_SATISFY_REASON_LKUP (
  VALUE VARCHAR2(32 BYTE) NOT NULL 
, DESCRIPTION VARCHAR2(256 BYTE) 
, REPORT_LABEL VARCHAR2(64 BYTE) 
, SCOPE VARCHAR2(128 BYTE) 
, CREATED_BY VARCHAR2(50 BYTE) 
, CREATE_TS DATE 
, UPDATED_BY VARCHAR2(50 BYTE) 
, UPDATE_TS DATE 
, ORDER_BY_DEFAULT NUMBER(10, 0) 
, EFFECTIVE_START_DATE DATE 
, EFFECTIVE_END_DATE DATE 
, VOID_MI_IND NUMBER(1, 0) ) TABLESPACE MAXDAT_DATA;

CREATE UNIQUE INDEX XPK_APP_MI_SATISFY_REASON ON APP_MI_SATISFY_REASON_LKUP (VALUE ASC) TABLESPACE MAXDAT_INDX;

COMMENT ON TABLE APP_MI_SATISFY_REASON_LKUP IS 'code table to define the missing information satisfaction reason codes. For example: member sent, state sent, phone, duplicate, error, other.';
COMMENT ON COLUMN APP_MI_SATISFY_REASON_LKUP.VALUE IS 'MI satisfied reason code';
COMMENT ON COLUMN APP_MI_SATISFY_REASON_LKUP.DESCRIPTION IS 'description of the code usage';
COMMENT ON COLUMN APP_MI_SATISFY_REASON_LKUP.REPORT_LABEL IS 'The default label for the corresponding code';
COMMENT ON COLUMN APP_MI_SATISFY_REASON_LKUP.SCOPE IS 'This is used to categorize values into subsets when needed. This is often needed when, for example, one needs to display a sub-type valuelist based on the type selected in a type valuelist. Multiple scopes may be comma delimited.';
COMMENT ON COLUMN APP_MI_SATISFY_REASON_LKUP.CREATED_BY IS 'Contains the staff id (or component) which originally created the record.';
COMMENT ON COLUMN APP_MI_SATISFY_REASON_LKUP.CREATE_TS IS 'record creation timestamp';
COMMENT ON COLUMN APP_MI_SATISFY_REASON_LKUP.UPDATED_BY IS 'Contains the staff id which most recently updated the record.';
COMMENT ON COLUMN APP_MI_SATISFY_REASON_LKUP.UPDATE_TS IS 'timestamp of when the record was last updated';
COMMENT ON COLUMN APP_MI_SATISFY_REASON_LKUP.ORDER_BY_DEFAULT IS 'order by value';
COMMENT ON COLUMN APP_MI_SATISFY_REASON_LKUP.EFFECTIVE_START_DATE IS 'Contains the date of when this code value became or will become active. Having the value empty implies the code is always active until the effective end date is set.';
COMMENT ON COLUMN APP_MI_SATISFY_REASON_LKUP.EFFECTIVE_END_DATE IS 'Contains the date of when this code value will become inactive. Having the value empty implies code will never become inactive in the future.';
COMMENT ON COLUMN APP_MI_SATISFY_REASON_LKUP.VOID_MI_IND IS 'indicates that the associated MI entry should be voided (i.e. ignored), if this satisfaction reason code is assigned to the MI.';

CREATE TABLE APP_MI_TYPE_LKUP
(
  VALUE VARCHAR2(32 BYTE) NOT NULL 
, DESCRIPTION VARCHAR2(256 BYTE) 
, REPORT_LABEL VARCHAR2(64 BYTE) 
, SCOPE VARCHAR2(128 BYTE) 
, CREATED_BY VARCHAR2(50 BYTE) 
, CREATE_TS DATE 
, UPDATED_BY VARCHAR2(50 BYTE) 
, UPDATE_TS DATE 
, ORDER_BY_DEFAULT NUMBER(10, 0) 
, EFFECTIVE_START_DATE DATE 
, EFFECTIVE_END_DATE DATE 
, MI_CATEGORY VARCHAR2(32 BYTE) 
, ENABLE_ENTITY_NAME_IND NUMBER(1, 0) 
, ENTITY_NAME_LABEL_MSG_KEY VARCHAR2(64 BYTE) 
, ALLOW_MULTIPLE_OPEN_MI_IND NUMBER(1, 0) 
, SATISFIED_WITHOUT_TANGIBLE_IND NUMBER(1, 0) 
, PERMISSION VARCHAR2(256 BYTE) 
, SATISFY_PERMISSION VARCHAR2(256 BYTE) 
, DUE_DATE_DAYS NUMBER(18, 0) 
, UPDATE_DUE_DATE_PERMISSION VARCHAR2(256 BYTE) ) TABLESPACE MAXDAT_DATA;

CREATE UNIQUE INDEX XPK_APP_MI_TYPE ON APP_MI_TYPE_LKUP (VALUE ASC) TABLESPACE MAXDAT_INDX;

COMMENT ON TABLE APP_MI_TYPE_LKUP IS 'Code table to define the missing information type codes, their categories, and labels. Example type code could be: E001, label: type of expense, category: expenses';
COMMENT ON COLUMN APP_MI_TYPE_LKUP.VALUE IS 'missing information type code';
COMMENT ON COLUMN APP_MI_TYPE_LKUP.MI_CATEGORY IS 'missing information category code';
COMMENT ON COLUMN APP_MI_TYPE_LKUP.ENABLE_ENTITY_NAME_IND IS 'If indicator is set, then allow the entry of a name field for the MI entry. The name would be relevant based on the context of the MI entry.';
COMMENT ON COLUMN APP_MI_TYPE_LKUP.ENTITY_NAME_LABEL_MSG_KEY IS 'Message key of the associated entity''s name field label';
COMMENT ON COLUMN APP_MI_TYPE_LKUP.ALLOW_MULTIPLE_OPEN_MI_IND IS 'If indicator is set, it indicates that the system should allow multiple open MI entries with the same MI type and individual';
COMMENT ON COLUMN APP_MI_TYPE_LKUP.SATISFIED_WITHOUT_TANGIBLE_IND IS 'This Mi type can  be satisfied without tangible evidence (e.g. word of mouth,  not required to see a physical document)';
COMMENT ON COLUMN APP_MI_TYPE_LKUP.PERMISSION IS 'This Mi type can  have a permission with it for greater control';
COMMENT ON COLUMN APP_MI_TYPE_LKUP.SATISFY_PERMISSION IS 'This Mi type can  have a satisfy permission with it for greater control of who can satisfy this kind of MI';


CREATE TABLE CASE_MANUAL_ACTION_LKUP
(
  VALUE VARCHAR2(64 BYTE) NOT NULL 
, DESCRIPTION VARCHAR2(256 BYTE) 
, REPORT_LABEL VARCHAR2(64 BYTE) 
, SCOPE VARCHAR2(128 BYTE) 
, CREATED_BY VARCHAR2(80 BYTE) 
, CREATE_TS DATE 
, UPDATED_BY VARCHAR2(80 BYTE) 
, UPDATE_TS DATE 
, ORDER_BY_DEFAULT NUMBER(10, 0) 
, EFFECTIVE_START_DATE DATE 
, EFFECTIVE_END_DATE DATE 
, EVENT_TYPE_CD VARCHAR2(32 BYTE) 
, PERMISSION VARCHAR2(256 BYTE) 
, CLIENT_REQUIRED_IND NUMBER(1, 0) 
, PERMISSION1 VARCHAR2(256 BYTE) ) TABLESPACE MAXDAT_DATA;

CREATE UNIQUE INDEX XPK_CASE_MANUAL_ACTION ON CASE_MANUAL_ACTION_LKUP (VALUE ASC) TABLESPACE MAXDAT_INDX;

COMMENT ON TABLE CASE_MANUAL_ACTION_LKUP IS 'enumertation table for case manual actions / events';

CREATE TABLE CASE_EVENT_STG
(
  EVENT_ID NUMBER(18, 0) NOT NULL 
, EVENT_TYPE_CD VARCHAR2(32 BYTE) 
, CONTEXT VARCHAR2(1000 BYTE) 
, COMMENTS VARCHAR2(2500 BYTE) 
, CREATE_TS DATE 
, CREATED_BY VARCHAR2(80 BYTE) 
, UPDATE_TS DATE 
, UPDATED_BY VARCHAR2(80 BYTE) 
, REF_TYPE VARCHAR2(32 BYTE) 
, REF_ID NUMBER(18, 0) 
, EVENT_LEVEL NUMBER(8, 0) 
, IMAGE_REPO_REF_ID NUMBER(18, 0) 
, EFFECTIVE_DATE DATE 
, CASE_ID NUMBER(18, 0) 
, CLIENT_ID NUMBER(18, 0) 
, CALL_RECORD_ID NUMBER(18, 0) 
, TASK_INSTANCE_ID NUMBER(18, 0) 
, CSCL_ID NUMBER(18, 0) 
, DISABLED_IND NUMBER 
, GENERIC_FIELD1_DATE DATE 
, GENERIC_FIELD2_DATE DATE 
, GENERIC_FIELD3_NUM NUMBER(18, 0) 
, GENERIC_FIELD4_NUM NUMBER(18, 0) 
, GENERIC_FIELD5_TXT VARCHAR2(256 BYTE) 
, GENERIC_FIELD6_TXT VARCHAR2(256 BYTE) 
, GENERIC_FIELD7_TXT VARCHAR2(256 BYTE) 
, GENERIC_FIELD8_TXT VARCHAR2(256 BYTE) 
, GENERIC_FIELD9_TXT VARCHAR2(256 BYTE) 
, GENERIC_FIELD10_TXT VARCHAR2(256 BYTE) ) TABLESPACE MAXDAT_DATA;

CREATE UNIQUE INDEX XPKCASE_EVENT_STG ON CASE_EVENT_STG (EVENT_ID ASC) TABLESPACE MAXDAT_INDX;
CREATE INDEX IDX1_EVENT_STG_CASEID ON CASE_EVENT_STG (CASE_ID) TABLESPACE MAXDAT_INDX;
CREATE INDEX IDX2_EVENT_STG_CLIENTID ON CASE_EVENT_STG (CLIENT_ID) TABLESPACE MAXDAT_INDX;
CREATE INDEX IDX3_EVENT_STG_CONTEXT ON CASE_EVENT_STG (CONTEXT) TABLESPACE MAXDAT_INDX;
CREATE INDEX IDX4_EVENT_STG_CONTEXT ON CASE_EVENT_STG (EVENT_TYPE_CD) TABLESPACE MAXDAT_INDX;

COMMENT ON TABLE CASE_EVENT_STG IS 'The Events table holds business events generated by the different application modules as a result of user actions or based on business logic.';
COMMENT ON COLUMN CASE_EVENT_STG.EVENT_ID IS 'PK of the event table';
COMMENT ON COLUMN CASE_EVENT_STG.EVENT_TYPE_CD IS 'Event Type Code Value';
COMMENT ON COLUMN CASE_EVENT_STG.CONTEXT IS 'Any context information related to this event (optional)';
COMMENT ON COLUMN CASE_EVENT_STG.COMMENTS IS 'Any comment related to this event (optional)';
COMMENT ON COLUMN CASE_EVENT_STG.CREATE_TS IS 'event creation timstamp';
COMMENT ON COLUMN CASE_EVENT_STG.CREATED_BY IS 'The id of the user / staff that caused this event to be generated. If this event was generated by an offline process, then this is set to SYSTEM.';
COMMENT ON COLUMN CASE_EVENT_STG.UPDATE_TS IS 'update timestamp if applicable';
COMMENT ON COLUMN CASE_EVENT_STG.UPDATED_BY IS 'the id of the user / staff that updated the record';
COMMENT ON COLUMN CASE_EVENT_STG.REF_TYPE IS 'This is the name of the entity whose PK value is specified by ref_id';
COMMENT ON COLUMN CASE_EVENT_STG.REF_ID IS 'This is the PK value of the record from the entity specified in ref_type that caused this event.';
COMMENT ON COLUMN CASE_EVENT_STG.EVENT_LEVEL IS 'The event level. This is copied from the enum_event_type table for performance reasons (denormalized value).';
COMMENT ON COLUMN CASE_EVENT_STG.IMAGE_REPO_REF_ID IS 'A reference to the image repository record that holds information on the image associated with this event. This is only applicable for certain events that involve images.';
COMMENT ON COLUMN CASE_EVENT_STG.EFFECTIVE_DATE IS 'The effective date of the transaction that generated this event. Usually set the same as the createTs field (but only the date part is set).';
COMMENT ON COLUMN CASE_EVENT_STG.CASE_ID IS 'The id of the case that is associated with this event.';
COMMENT ON COLUMN CASE_EVENT_STG.CLIENT_ID IS 'The id of the client that is associated with this event. May not be applicable.';
COMMENT ON COLUMN CASE_EVENT_STG.CALL_RECORD_ID IS 'The id of the call record that is associated with this event. May not be applicable.';
COMMENT ON COLUMN CASE_EVENT_STG.TASK_INSTANCE_ID IS 'The id of the task instance that is associated with this event. May not be applicable.';
COMMENT ON COLUMN CASE_EVENT_STG.CSCL_ID IS 'The id of the case_client record that is associated with this event. May not be applicable.';
COMMENT ON COLUMN CASE_EVENT_STG.DISABLED_IND IS 'If true, then this event record is considered invalid and should not be included in views / reports.';

CREATE TABLE APP_TRACKER_STG
(
  APP_TRACKER_ID NUMBER(18, 0) NOT NULL 
, APPLICATION_ID NUMBER(18, 0) 
, APP_INDIVIDUAL_ID NUMBER(18, 0) 
, STATUS_DATE DATE 
, NOTE_REF_ID NUMBER(18, 0) 
, CREATE_TS DATE 
, CREATED_BY VARCHAR2(50 BYTE) 
, HISTORY_IND NUMBER(1, 0) 
, RFE_STATUS_CD VARCHAR2(32 BYTE) 
, UPDATE_TS DATE 
, UPDATED_BY VARCHAR2(50 BYTE) 
, REJ_REASON_CD VARCHAR2(32 BYTE) ) TABLESPACE MAXDAT_DATA;

COMMENT ON TABLE APP_TRACKER_STG IS 'Application Tracker, carries application and applicant status history and notes.';
COMMENT ON COLUMN APP_TRACKER_STG.APP_TRACKER_ID IS 'Application Tracker ID (Primary Key)';
COMMENT ON COLUMN APP_TRACKER_STG.APPLICATION_ID IS 'Application ID (Primary Key), uniquely identifies an application.';
COMMENT ON COLUMN APP_TRACKER_STG.APP_INDIVIDUAL_ID IS 'Application member ID (Primary Key)';
COMMENT ON COLUMN APP_TRACKER_STG.STATUS_DATE IS 'Status Date';
COMMENT ON COLUMN APP_TRACKER_STG.NOTE_REF_ID IS 'Notes';
COMMENT ON COLUMN APP_TRACKER_STG.RFE_STATUS_CD IS 'Application Status Code';

CREATE UNIQUE INDEX XPKAPP_TRACKER_STG ON APP_TRACKER_STG (APP_TRACKER_ID ASC) TABLESPACE MAXDAT_INDX;
CREATE INDEX IDX1_APP_TRACKER_STG_APPID ON APP_TRACKER_STG (APPLICATION_ID) TABLESPACE MAXDAT_INDX;
CREATE INDEX IDX2_APP_TRACKER_STG_APPINDVID ON APP_TRACKER_STG (APP_INDIVIDUAL_ID) TABLESPACE MAXDAT_INDX;
CREATE INDEX IDX3_APP_TRACKER_STG_RFESTAT ON APP_TRACKER_STG (RFE_STATUS_CD) TABLESPACE MAXDAT_INDX;

CREATE TABLE CLIENT_STG
(CLIENT_ID	NUMBER(18)
,CASE_ID NUMBER(18)
,CASE_CIN VARCHAR2(30)
,CLNT_FNAME	VARCHAR2(30)
,CLNT_LNAME	VARCHAR2(40)
,CLNT_MI	VARCHAR2(25)
,SUFFIX VARCHAR2(32)
,CLNT_GENDER_CD	VARCHAR2(32)
,CLNT_CITIZEN	VARCHAR2(32)
,CLNT_DOB	DATE
,CLNT_SSN	VARCHAR2(30)
,CLNT_CIN	VARCHAR2(30)
,CREATED_BY	VARCHAR2(80)
,CREATION_DATE	DATE
,LAST_UPDATED_BY	VARCHAR2(80)
,LAST_UPDATE_DATE	DATE
,CLNT_DISPLAY_NAME	VARCHAR2(80)
,CLIENT_TYPE_CD	VARCHAR2(10)
,SUPPLEMENTAL_NBR	VARCHAR2(32)
,CLIENT_LANGUAGE	VARCHAR2(32)
,CLNT_GENERIC_FIELD1_DATE	DATE
,CLNT_GENERIC_FIELD2_DATE	DATE
,CLNT_GENERIC_FIELD3_NUM	NUMBER(18)
,CLNT_GENERIC_FIELD4_NUM	NUMBER(18)
,CLNT_GENERIC_FIELD5_TXT	VARCHAR2(256)
,CLNT_GENERIC_FIELD6_TXT	VARCHAR2(256)
,CLNT_GENERIC_FIELD7_TXT	VARCHAR2(256)
,CLNT_GENERIC_FIELD8_TXT	VARCHAR2(256)
,CLNT_GENERIC_FIELD9_TXT	VARCHAR2(256)
,CLNT_GENERIC_FIELD10_TXT	VARCHAR2(256)
,CLNT_GENERIC_REF11_ID	NUMBER(18)
,CLNT_GENERIC_REF12_ID	NUMBER(18)) TABLESPACE MAXDAT_DATA;

CREATE INDEX IDX1_CLIENT_STG_UK ON CLIENT_STG(CLIENT_ID) TABLESPACE MAXDAT_INDX;
CREATE INDEX IDX2_CLIENT_STG ON CLIENT_STG(SUPPLEMENTAL_NBR) TABLESPACE MAXDAT_INDX;

CREATE TABLE AUTHORIZED_CONTACT_STG
(AUTHORIZED_CONTACT_ID	NUMBER(18)
,AC_TYPE_CODE	VARCHAR2(32)
,AC_CASE_ID	NUMBER(18)
,AC_MAIL_PROCESS_CODE	VARCHAR2(32)
,AC_FIRST_NAME	VARCHAR2(25)
,AC_LAST_NAME	VARCHAR2(40)
,AC_ADDRESS_STREET_1	VARCHAR2(55)
,AC_ADDRESS_STREET_2	VARCHAR2(55)
,AC_ADDRESS_ATTN	VARCHAR2(55)
,AC_ADDRESS_CITY	VARCHAR2(30)
,AC_ADDRESS_STATE_CODE	VARCHAR2(20)
,AC_ADDRESS_ZIP	VARCHAR2(32)
,AC_ADDRESS_ZIP4	VARCHAR2(4)
,AC_ADDRESS_COUNTRY	VARCHAR2(20)
,AC_PHONE_AREA_CODE	VARCHAR2(3)
,AC_PHONE_NUMBER	VARCHAR2(7)
,AC_STATUS_CODE	VARCHAR2(32)
,AC_STATUS_DATE	DATE
,AC_GENERIC_FIELD1_DATE	DATE
,AC_GENERIC_FIELD2_DATE	DATE
,AC_GENERIC_FIELD3_NUM	NUMBER(18)
,AC_GENERIC_FIELD4_NUM	NUMBER(18)
,AC_GENERIC_FIELD5_TXT	VARCHAR2(256)
,AC_GENERIC_FIELD6_TXT	VARCHAR2(256)
,AC_GENERIC_FIELD7_TXT	VARCHAR2(256)
,AC_GENERIC_FIELD8_TXT	VARCHAR2(256)
,AC_GENERIC_FIELD9_TXT	VARCHAR2(256)
,AC_GENERIC_FIELD10_TXT	VARCHAR2(256)
,AC_START_DATE	DATE
,AC_END_DATE	DATE
,AC_CREATE_TS	DATE
,AC_CREATED_BY	VARCHAR2(80)
,AC_UPDATE_TS	DATE
,AC_UPDATED_BY	VARCHAR2(80)) TABLESPACE MAXDAT_DATA;

CREATE INDEX IDX1_AUTHCONTACT_STG_UK ON AUTHORIZED_CONTACT_STG(AUTHORIZED_CONTACT_ID) TABLESPACE MAXDAT_INDX;
CREATE INDEX IDX2_AUTHCONTACT_STG ON AUTHORIZED_CONTACT_STG (AC_CASE_ID) TABLESPACE MAXDAT_INDX;

GRANT SELECT ON CLIENT_STG to MAXDAT_READ_ONLY;
GRANT SELECT ON AUTHORIZED_CONTACT_STG to MAXDAT_READ_ONLY;
GRANT SELECT ON ELIG_OUTCOME_LKUP TO MAXDAT_READ_ONLY;
GRANT SELECT ON APP_TYPE_LKUP TO MAXDAT_READ_ONLY;
GRANT SELECT ON APP_STATUS_LKUP TO MAXDAT_READ_ONLY;
GRANT SELECT ON APP_EVENT_TYPE_LKUP TO MAXDAT_READ_ONLY;
GRANT SELECT ON APP_HEADER_STG TO MAXDAT_READ_ONLY;
GRANT SELECT ON APP_INDIVIDUAL_STG TO MAXDAT_READ_ONLY;
GRANT SELECT ON APP_ELIG_OUTCOME_STG TO MAXDAT_READ_ONLY;
GRANT SELECT ON APP_EVENT_LOG_STG TO MAXDAT_READ_ONLY;
GRANT SELECT ON APP_CASE_LINK_STG TO MAXDAT_READ_ONLY;
GRANT SELECT ON APP_EVENT_REASON_LKUP TO MAXDAT_READ_ONLY;
GRANT SELECT ON APP_EVENT_OUTCOME_LKUP TO MAXDAT_READ_ONLY;
GRANT SELECT ON APP_RFE_STATUS_LKUP TO MAXDAT_READ_ONLY;
GRANT SELECT ON ELIG_OUTCOME_REASON_LKUP TO MAXDAT_READ_ONLY;
GRANT SELECT ON PROGRAM_TYPE_LKUP TO MAXDAT_READ_ONLY;
GRANT SELECT ON SUBPROGRAM_TYPE_LKUP TO MAXDAT_READ_ONLY;
GRANT SELECT ON APP_ROLE_LKUP TO MAXDAT_READ_ONLY;
GRANT SELECT ON APP_REACTIVATION_REASON_LKUP TO MAXDAT_READ_ONLY;
GRANT SELECT ON DOCUMENT_SOURCE_LKUP TO MAXDAT_READ_ONLY;
GRANT SELECT ON DOCUMENT_STG TO MAXDAT_READ_ONLY;
GRANT SELECT ON DOCUMENT_SET_STG TO MAXDAT_READ_ONLY;
GRANT SELECT ON DOC_LINK_STG TO MAXDAT_READ_ONLY;
GRANT SELECT ON DOCUMENT_STATUS_LKUP TO MAXDAT_READ_ONLY;
GRANT SELECT ON DOCUMENT_TYPE_LKUP TO MAXDAT_READ_ONLY;
GRANT SELECT ON LANGUAGE_LKUP TO MAXDAT_READ_ONLY;
GRANT SELECT ON LINK_TYPE_LKUP TO MAXDAT_READ_ONLY;
GRANT SELECT ON APP_MISSING_INFO_STG TO MAXDAT_READ_ONLY;
GRANT SELECT ON AID_CATEGORY_LKUP to MAXDAT_READ_ONLY;
GRANT SELECT ON APP_TRACKER_STG to MAXDAT_READ_ONLY;
GRANT SELECT ON CASE_EVENT_STG to MAXDAT_READ_ONLY;
GRANT SELECT ON CASE_MANUAL_ACTION_LKUP to MAXDAT_READ_ONLY;
GRANT SELECT ON APP_MI_CATEGORY_LKUP to MAXDAT_READ_ONLY;
GRANT SELECT ON APP_MI_SATISFY_REASON_LKUP to MAXDAT_READ_ONLY;
GRANT SELECT ON APP_MI_TYPE_LKUP to MAXDAT_READ_ONLY;

CREATE OR REPLACE VIEW D_REDETERMINATION_FORM_SV
AS
SELECT application_id
       ,receipt_date
       ,application_status
       ,COALESCE(application_type,app_form_cd) application_type
       ,member_id
       ,coverage_end_date
       ,days_lapsed
       ,sla_category
       ,sla_agreement_days
       ,processed_date
       ,COALESCE(TRUNC(processed_date),TRUNC(sysdate)) - TRUNC(receipt_date) age_in_calendar_days
       ,CASE WHEN processed_date IS NULL THEN 'Not Processed'
            WHEN TRUNC(processed_date) - TRUNC(receipt_date) <= sla_agreement_days THEN 'Timely'
         ELSE 'Untimely' END timeliness_status
       ,eligibility_outcome
FROM (
SELECT ah.application_id
       --,ah.receipt_date
       ,(SELECT MIN(ds.received_date) FROM document_set_stg ds INNER JOIN document_stg d ON ds.document_set_id = d.document_set_id
          INNER JOIN doc_link_stg dl ON d.document_id = dl.document_id WHERE doc_type_cd = 'APPLICATION' AND link_type_cd = 'APPLICATION'
          AND link_ref_id = ah.application_id) receipt_date
       ,ast.report_label application_status
       ,apt.report_label application_type
       ,ai.client_cin member_id
       ,renewal_due_date coverage_end_date
       ,TRUNC(receipt_date) - TRUNC(renewal_due_date) days_lapsed
       ,'Redetermination Processing' sla_category
       ,(SELECT TO_NUMBER(value) FROM corp_etl_control WHERE name = 'REDET_PROCESSING_SLA_DAYS') sla_agreement_days
       ,CASE WHEN status_cd IN('COMPLETED','DISREGARDED','TIMEOUT') THEN status_date
             ELSE (SELECT MAX(letter_mailed_date) FROM letters_stg lr
                     INNER JOIN app_case_link_stg acl ON lr.letter_case_id = acl.case_id
                     WHERE acl.application_id = ah.application_id
                     AND (lr.letter_type_cd LIKE 'TN 406%' OR lr.letter_type_cd = 'TN 412') )
          END  processed_date
          ,(SELECT report_label FROM elig_outcome_lkup eeo WHERE eeo.value = aeo.elig_outcome_cd) eligibility_outcome
        ,app_form_cd
FROM  app_header_stg ah
  INNER JOIN app_individual_stg ai
    ON ah.application_id = ai.application_id
  LEFT OUTER JOIN app_elig_outcome_stg aeo
    ON ai.app_individual_id = aeo.app_individual_id
    AND ai.application_id = aeo.application_id
  INNER JOIN app_status_lkup ast
    ON ah.status_cd = ast.value
  LEFT OUTER JOIN app_type_lkup apt
    ON ah.app_form_cd = apt.value
--WHERE ah.app_form_cd = 'RENEWAL'
);

CREATE OR REPLACE VIEW D_REDETERMINATION_OUTCOME_SV
AS
SELECT h.application_id
      ,ai.app_individual_id
      ,s.report_label application_status
     ,CASE WHEN h.status_cd = 'TIMEOUT' THEN 'Termed for No Response' 
            WHEN h.status_cd IN('COMPLETED','INPROCESS') THEN ee.report_label
            WHEN h.status_cd = 'DISREGARDED' AND e.report_label IS NULL AND ee.report_label IS NOT NULL THEN null            
            WHEN h.status_cd = 'DISREGARDED' AND e.report_label IS NOT NULL THEN e.report_label   
           ELSE COALESCE(e.report_label,ee.report_label) END    final_outcome
      ,COALESCE(o.update_ts,h.status_date) outcome_date      
      ,CASE WHEN (h.status_cd = 'DISREGARDED' AND e.value NOT IN('APP_LINK_MMIS','APP_APPR_MMIS')) OR h.status_cd = 'TIMEOUT' or (h.status_cd = 'COMPLETED' AND ee.value in('REJECTED','STATE REJECTED')) THEN 'Non-Approval Outcomes'
            WHEN e.value = 'APP_APPR_MMIS' OR (h.status_cd = 'COMPLETED' AND ee.value IN('APPROVED', 'STATE APPROVED')) THEN 'Approvals Outcomes'
       ELSE 'Other Final Outcomes' END outcome_group
      ,orl.report_label outcome_reason  
FROM app_header_stg h
  INNER JOIN app_status_lkup s
    ON h.status_cd = s.value
  INNER JOIN app_individual_stg ai
    ON h.application_id = ai.application_id
  LEFT OUTER JOIN app_elig_outcome_stg o
    ON h.application_id = o.application_id
  LEFT OUTER JOIN elig_outcome_lkup ee
    ON o.elig_outcome_cd = ee.value
  LEFT OUTER JOIN elig_outcome_reason_lkup orl
    ON o.elig_outcome_reason_cd = orl.value
  LEFT OUTER JOIN (SELECT e.*, ae.value, ae.description report_label
                   FROM app_event_log_stg e
                    INNER JOIN app_event_type_lkup ae
                      ON e.app_event_cd = ae.value
                   WHERE ae.value like '%MMIS%'
                   AND ae.value NOT IN('APP_REJ_MMIS','APP_APR_MMIS')
                   AND e.app_event_log_id = (SELECT MAX(app_event_log_id)
                                             FROM app_event_log_stg e1
                                              INNER JOIN app_event_type_lkup ae1
                                                ON e1.app_event_cd = ae1.value
                                             WHERE e1.application_id = e.application_id
                                             --AND ae1.value = ae.value
                                             AND ae1.value like '%MMIS%'
                                             AND ae1.value NOT IN('APP_REJ_MMIS','APP_APR_MMIS')
                                             )) e
   ON h.application_id = e.application_id
WHERE 1=1
AND (h.status_cd IN('COMPLETED','DISREGARDED','TIMEOUT')  
  OR (h.status_cd = 'INPROCESS' AND o.elig_outcome_cd = 'PENDING'));

GRANT SELECT ON D_REDETERMINATION_OUTCOME_SV to MAXDAT_READ_ONLY;
GRANT SELECT ON D_REDETERMINATION_FORM_SV to MAXDAT_READ_ONLY;