DECLARE

DBChangeID VARCHAR2(50) := 'TXEB-17589_2';
ExecutionOrder NUMBER(10,0) := 2;
LODNumber VARCHAR2(20) := '9.0.0';
BuildNumber VARCHAR2(10) := '1';
CreatedBy VARCHAR2(100) := 'Guy Thibodeau';
CreatedDate DATE := sysdate;
DBChangeType VARCHAR2(50) := 'DDL';
FunctionalArea VARCHAR2(50) := 'RoboticProcessAutomation';
TargetSchema VARCHAR2(50) := 'MAXDAT';
ObjectsAffected VARCHAR2(4000) := 'RPA Objects';
Comm VARCHAR2(4000) := 'CREATE NEW VIEWS';
Path VARCHAR2(500) := '/Database/schema/maxdat/Objects/dp_txeb_9.0.0_1_rpa2.sql';

Rowcount NUMBER(10,0);
SqlErr VARCHAR2(500);
AlreadyRun   EXCEPTION;
PRAGMA EXCEPTION_INIT (AlreadyRun, -20003);


BEGIN

db_change_pkg.log_db_change_start (DBChangeID,ExecutionOrder,LODNumber,BuildNumber,CreatedBy,CreatedDate,DBChangeType,FunctionalArea,TargetSchema,ObjectsAffected,Comm,Path);       

-- -------------------
-- BEGIN SQL PAYLOAD
-- -------------------

execute immediate 'CREATE OR REPLACE VIEW RPA_D_NOTE_SV AS (
SELECT
	NOTE_ID
	, CREATED_BY
	, CREATED_BY_SEC_GROUP
	, CREATED_TS
	, NOTE_REFID
	, CATEGORY_CD
	, NOTE_TYPE_CD
	, SUBJECT
	, SUBJECT_CANON
	, NOTE_TEXT
	, UPDATED_BY
	, UPDATE_TS
	, MUTABLE_IND
	, MISCELLANEOUS_1
	, MISCELLANEOUS_2
	, MISCELLANEOUS_3
	, MISCELLANEOUS_4
	, MISCELLANEOUS_5
	, IS_ACTIVE_IND
	, CASE_ID
	, CLIENT_ID
	, REF_TYPE1
	, REF_ID1
	, REF_TYPE2
	, REF_ID2
	, SOURCE
FROM MAXDAT.RPA_D_NOTE
)';

execute immediate 'CREATE OR REPLACE VIEW RPA_D_DOCUMENT_SV AS (
SELECT
	DOCUMENT_ID
	, DCN
	, DOC_TYPE_CD
	, DOC_STATUS_CD
	, DOCUMENT_SET_ID
	, LETTER_REQUEST_ID
	, SCAN_DATE
	, RELEASE_DATE
	, LANGUAGE_CD
	, PAGE_COUNT
	, IMAGE_ONLY_IND
	, BATCH_UPLOAD_IND
	, RESCAN_IND
	, RETURN_MAIL_IND
	, RETURN_MAIL_REASON_CD
	, RESCAN_COUNT
	, CREATED_BY
	, CREATE_TS
	, UPDATED_BY
	, UPDATE_TS
	, NOTE_REF_ID
	, TRASHED_DOC_IND
	, EXPEDITED_IND
	, RESEARCH_REQUESTED_IND
	, DOC_FORM_TYPE
	, ORIG_DOC_TYPE_CD
	, ORIG_DOC_FORM_TYPE
	, LAST_TRASHED_BY
	, LAST_TRASHED_TS
	, ACCESS_PERMISSION
	, GENERIC_FIELD1_TXT
	, GENERIC_FIELD2_TXT
	, GENERIC_FIELD3_TXT
	, GENERIC_FIELD4_TXT
	, GENERIC_FIELD5_TXT
FROM MAXDAT.RPA_D_DOCUMENT
)';

execute immediate 'CREATE OR REPLACE VIEW RPA_D_EVENT_SV AS (
SELECT
	EVENT_ID
	, EVENT_TYPE_CD
	, CONTEXT
	, COMMENTS
	, CREATE_TS
	, CREATED_BY
	, UPDATE_TS
	, UPDATED_BY
	, REF_TYPE
	, REF_ID
	, EVENT_LEVEL
	, IMAGE_REPO_REF_ID
	, EFFECTIVE_DATE
	, CASE_ID
	, CLIENT_ID
	, CALL_RECORD_ID
	, TASK_INSTANCE_ID
	, CSCL_ID
	, DISABLED_IND
	, GENERIC_FIELD1_DATE
	, GENERIC_FIELD2_DATE
	, GENERIC_FIELD3_NUM
	, GENERIC_FIELD4_NUM
	, GENERIC_FIELD5_TXT
	, GENERIC_FIELD6_TXT
	, GENERIC_FIELD7_TXT
	, GENERIC_FIELD8_TXT
	, GENERIC_FIELD9_TXT
	, GENERIC_FIELD10_TXT
FROM MAXDAT.RPA_D_EVENT
)';

execute immediate 'CREATE OR REPLACE VIEW RPA_D_ENUM_BIZ_EVENT_TYPE_SV AS (
SELECT
	VALUE
	, DESCRIPTION
	, REPORT_LABEL
	, SCOPE
	, CREATED_BY
	, CREATE_TS
	, UPDATED_BY
	, UPDATE_TS
	, ORDER_BY_DEFAULT
	, EFFECTIVE_END_DATE
	, EFFECTIVE_START_DATE
	, EVENT_LEVEL
	, EVENT_MODULE
	, EVENT_CATEGORY
	, EXCLUDE_ACTION_IND
	, EVENT_OBSERVERS
FROM MAXDAT.RPA_D_ENUM_BIZ_EVENT_TYPE
	)';

execute immediate 'CREATE OR REPLACE VIEW RPA_D_CLIENT_DATA_SV AS (
SELECT
	CLIENT_DATA_ID
	, FORM_DATA_ID
	, CLIENT_CIN
	, PROGRAM
	, PREGNANT_MEMBER
	, OBGYN
	, OTHER_INS
	, OTHER_INS_TYPE
	, INS_NAME
	, INS_GROUP_NUM
	, INS_POLICY_HOLDER_FNAME
	, INS_POLICY_HOLDER_LNAME
	, INS_POLICY_NUM
	, SHCN
	, INS_SHCN_EXCEPTION
	, CREATED_BY
	, CREATE_TS
	, UPDATED_BY
	, UPDATE_TS
FROM MAXDAT.RPA_D_CLIENT_DATA
	)';

execute immediate 'CREATE OR REPLACE VIEW RPA_D_FORM_DATA_SV AS (
SELECT
	FORM_DATA_ID
	, DOCUMENT_ID
	, CASE_NUMBER
	, LANG_SPOKEN
	, OTHER_LANG
	, CREATED_BY
	, CREATE_TS
	, UPDATED_BY
	, UPDATE_TS
FROM MAXDAT.RPA_D_FORM_DATA
	)';

execute immediate 'CREATE OR REPLACE VIEW RPA_D_PLAN_INFO_DATA_SV AS (
SELECT
	PLAN_INFO_ID
	, CLIENT_DATA_ID
	, PLAN_INFO_TYPE
	, PLAN_OPT1
	, PLAN_OPT2
	, PCP_OPT1
	, PCP_OPT2
	, PCP_PHONE1
	, PCP_PHONE2
	, PLAN_EXCEPTION
	, PCP_EXCEPTION
	, CREATED_BY
	, CREATE_TS
	, UPDATED_BY
	, UPDATE_TS
	, TX_CLIENT_ELIG_STATUS_ID
	, DECISION_CD
FROM MAXDAT.RPA_D_PLAN_INFO_DATA
	)';

execute immediate 'CREATE OR REPLACE VIEW RPA_D_STEP_INSTANCE_SV AS (
SELECT
	STEP_INSTANCE_ID
	, STATUS
	, CREATE_TS
	, COMPLETED_TS
	, ESCALATED_IND
	, STEP_DUE_TS
	, FORWARDED_IND
	, ESCALATE_TO
	, FORWARDED_BY
	, OWNER
	, LOCKED_ID
	, GROUP_STEP_DEFINITION_ID
	, GROUP_ID
	, TEAM_ID
	, PROCESS_ID
	, PRIORITY_CD
	, PROCESS_ROUTER_ID
	, PROCESS_INSTANCE_ID
	, CASE_ID
	, CLIENT_ID
	, REF_ID
	, REF_TYPE
	, STEP_DEFINITION_ID
	, CREATED_BY
	, SUSPENDED_TS
	, COMMENTS
	, CREATE_NDT
	, STEP_DUE_NDT
FROM MAXDAT.RPA_D_STEP_INSTANCE
	)';

execute immediate 'CREATE OR REPLACE VIEW RPA_D_HUMAN_TASK_INSTANCE_SV AS (
SELECT
	STEP_INSTANCE_ID
	, STATUS
	, CREATE_TS
	, ESCALATED_IND
	, STEP_DUE_TS
	, FORWARDED_IND
	, ESCALATE_TO
	, FORWARDED_BY
	, OWNER
	, GROUP_STEP_DEFINITION_ID
	, GROUP_ID
	, TEAM_ID
	, PROCESS_ID
	, PRIORITY_CD
	, PROCESS_ROUTER_ID
	, PROCESS_INSTANCE_ID
	, CASE_ID
	, CLIENT_ID
	, REF_ID
	, REF_TYPE
	, STEP_DEFINITION_ID
	, COMMENTS
	, CREATE_NDT
	, STEP_DUE_NDT
	, HTI_GENERIC_FIELD1_DATE
	, HTI_GENERIC_FIELD2_DATE
	, HTI_GENERIC_FIELD3_NUM
	, HTI_GENERIC_FIELD4_NUM
	, HTI_GENERIC_FIELD5_TXT
	, HTI_GENERIC_FIELD6_TXT
	, HTI_GENERIC_FIELD7_TXT
	, HTI_GENERIC_FIELD8_TXT
	, HTI_GENERIC_FIELD9_TXT
	, HTI_GENERIC_FIELD10_TXT
FROM MAXDAT.RPA_D_HUMAN_TASK_INSTANCE
	)';

	execute immediate 'grant select on RPA_D_NOTE_SV to maxdat_read_only';
	execute immediate 'grant select on RPA_D_DOCUMENT_SV to maxdat_read_only';
	execute immediate 'grant select on RPA_D_EVENT_SV to maxdat_read_only';
	execute immediate 'grant select on RPA_D_ENUM_BIZ_EVENT_TYPE_SV to maxdat_read_only';
	execute immediate 'grant select on RPA_D_CLIENT_DATA_SV to maxdat_read_only';
	execute immediate 'grant select on RPA_D_FORM_DATA_SV to maxdat_read_only';
	execute immediate 'grant select on RPA_D_PLAN_INFO_DATA_SV to maxdat_read_only';
	execute immediate 'grant select on RPA_D_STEP_INSTANCE_SV to maxdat_read_only';
	execute immediate 'grant select on RPA_D_HUMAN_TASK_INSTANCE_SV to maxdat_read_only';

-- -------------------
-- END SQL PAYLOAD
-- -------------------

Rowcount:= sql%rowcount;

db_change_pkg.log_db_change_end (DBChangeID,Rowcount,'DB Change completed successfully');

EXCEPTION

When AlreadyRun THEN
      DBMS_OUTPUT.PUT_LINE('This was run before');
      
WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE(substr(SQLERRM, 1, 500));
      SqlErr:= SUBSTR(SQLERRM(SQLCODE), 1, 400);
      db_change_pkg.log_db_change_end (DBChangeID,Rowcount,'DB Change Execution Failed: ' || SqlErr);
      ROLLBACK;

END;

	
