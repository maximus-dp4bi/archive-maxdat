alter session set plsql_code_type = native;

create or replace package ETL_CLIENT_OUTREACH_PKG as

  -- Do not edit these four SVN_* variable values.  They are populated when you commit code to SVN and used later to identify deployed code.

  SVN_FILE_URL varchar2(200) := '$URL$'; 
  SVN_REVISION varchar2(20) := '$Revision$'; 
  SVN_REVISION_DATE varchar2(60) := '$Date$'; 
  SVN_REVISION_AUTHOR varchar2(20) := '$Author$';
  
  
  procedure CO_PROCESS_UPD1;
  procedure CO_PROCESS_UPD4;
  
  procedure CO_UPDATE_MAIN_TABLE;
  
end;
/    

create or replace package body ETL_CLIENT_OUTREACH_PKG as

PROCEDURE CO_PROCESS_UPD1 AS

 CURSOR upd1_cur IS
   SELECT *
   FROM (
    SELECT 
      BPM.CECO_ID,OUTREACH_ID,
      'Y' IN_YES,
      CASE WHEN NVL(OUTREACH_STATUS,'X') <>  NVL(O_OUTREACH_STATUS,'X')
        THEN OUTREACH_STATUS
        ELSE O_OUTREACH_STATUS
      END AS UPD1_10_OUTREACH_STATUS,
      CASE WHEN NVL(OUTREACH_STATUS,'X') <>  NVL(O_OUTREACH_STATUS,'X')
        THEN OUTREACH_STATUS_DT
        ELSE O_OUTREACH_STATUS_DT
      END AS UPD1_10_OUTREACH_STATUS_DT,
      CASE WHEN NVL(ORIGIN,'X') <>  NVL(O_ORIGIN,'X')
        THEN ORIGIN
        ELSE O_ORIGIN
      END AS UPD1_20_ORIGIN,
      CASE WHEN NVL(ORIGIN_ID,0) <>  NVL(O_ORIGIN_ID,0)
        THEN ORIGIN_ID
        ELSE O_ORIGIN_ID
      END AS UPD1_30_ORIGIN_ID,
      CASE WHEN NVL(OUTREACH_REQ_CATEGORY,'X') <>  NVL(O_OUTREACH_REQ_CATEGORY,'X')
        THEN OUTREACH_REQ_CATEGORY
        ELSE O_OUTREACH_REQ_CATEGORY
      END AS UPD1_40_OUTREACH_REQ_CATEGORY,
      CASE WHEN NVL(OUTREACH_REQ_TYPE,'X') <>  NVL(O_OUTREACH_REQ_TYPE,'X')
        THEN OUTREACH_REQ_TYPE
        ELSE O_OUTREACH_REQ_TYPE
      END AS UPD1_50_OUTREACH_REQ_TYPE,
      CASE WHEN NVL(OUTREACH_REQ_TYPE,'X') <>  NVL(O_OUTREACH_REQ_TYPE,'X')
        THEN NOTIFY_INVALID_IND
        ELSE O_NOTIFY_INVALID_IND
      END AS UPD1_50_NOTIFY_INVALID_IND,
      CASE WHEN NVL(OUTREACH_REQ_TYPE,'X') <>  NVL(O_OUTREACH_REQ_TYPE,'X')
        THEN NOTIFY_OUTCOME_IND
        ELSE O_NOTIFY_OUTCOME_IND
      END AS UPD1_50_NOTIFY_OUTCOME_IND,
      CASE WHEN NVL(dbms_lob.substr(OUTREACH_REQ_DESCRIPTION),'X') <>  NVL(dbms_lob.substr(O_OUTREACH_REQ_DESCRIPTION),'X')
        THEN OUTREACH_REQ_DESCRIPTION
        ELSE O_OUTREACH_REQ_DESCRIPTION
      END AS UPD1_60_OUT_REQ_DESCRIPTION,
      CASE WHEN NVL(PRIORITY,'X') <>  NVL(O_PRIORITY,'X')
        THEN PRIORITY
        ELSE O_PRIORITY
      END AS UPD1_70_PRIORITY,
      CASE WHEN NVL(CASE_ID,0) <>  NVL(O_CASE_ID,0)
        THEN CASE_ID
        ELSE O_CASE_ID
      END AS UPD1_80_CASE_ID,
      CASE WHEN NVL(CLIENT_ID,0) <>  NVL(O_CLIENT_ID,0)
        THEN CLIENT_ID
        ELSE O_CLIENT_ID
      END AS UPD1_90_CLIENT_ID,
      CASE WHEN NVL(SERVICE_AREA,'X') <>  NVL(O_SERVICE_AREA,'X')
        THEN SERVICE_AREA
        ELSE O_SERVICE_AREA
      END AS UPD1_100_SERVICE_AREA,
      CASE WHEN NVL(COUNTY,'X') <>  NVL(O_COUNTY,'X')
        THEN COUNTY
        ELSE O_COUNTY
      END AS UPD1_110_COUNTY,
      CASE WHEN NVL(PROGRAM_TYPE,'X') <>  NVL(O_PROGRAM_TYPE,'X')
        THEN PROGRAM_TYPE
        ELSE O_PROGRAM_TYPE
      END AS UPD1_120_PROGRAM_TYPE,
      CASE WHEN NVL(SUBPROGRAM_TYPE,'X') <>  NVL(O_SUBPROGRAM_TYPE,'X')
        THEN SUBPROGRAM_TYPE
        ELSE O_SUBPROGRAM_TYPE
      END AS UPD1_130_SUBPROGRAM_TYPE,
      CASE WHEN NVL(VALIDATION_ERROR,'X') <>  NVL(O_VALIDATION_ERROR,'X')
        THEN VALIDATION_ERROR
        ELSE O_VALIDATION_ERROR
      END AS UPD1_140_VALIDATION_ERROR,
      CASE WHEN NVL(SURVEY_ID,0) <>  NVL(O_SURVEY_ID,0)
        THEN SURVEY_ID
        ELSE O_SURVEY_ID
      END AS UPD1_150_SURVEY_ID,
      CASE WHEN NVL(SURVEY_NAME,'X') <>  NVL(O_SURVEY_NAME,'X')
        THEN SURVEY_NAME
        ELSE O_SURVEY_NAME
      END AS UPD1_160_SURVEY_NAME,
      CASE WHEN NVL(GENERIC_FIELD1,'X') <>  NVL(O_GENERIC_FIELD1,'X')
        THEN GENERIC_FIELD1
        ELSE O_GENERIC_FIELD1
      END AS UPD1_170_GENERIC_FIELD1,
      CASE WHEN NVL(GENERIC_FIELD2,'X') <>  NVL(O_GENERIC_FIELD2,'X')
        THEN GENERIC_FIELD2
        ELSE O_GENERIC_FIELD2
      END AS UPD1_180_GENERIC_FIELD2,
      CASE WHEN NVL(GENERIC_FIELD2,'X') <>  NVL(O_GENERIC_FIELD2,'X')
        THEN OUTREACH_STEP1_TYPE
        ELSE O_OUTREACH_STEP1_TYPE
      END AS UPD1_180_OUTREACH_STEP1_TYPE,
      CASE WHEN NVL(GENERIC_FIELD2,'X') <>  NVL(O_GENERIC_FIELD2,'X')
        THEN OUTREACH_STEP2_TYPE
        ELSE O_OUTREACH_STEP2_TYPE
      END AS UPD1_180_OUTREACH_STEP2_TYPE,
      CASE WHEN NVL(GENERIC_FIELD2,'X') <>  NVL(O_GENERIC_FIELD2,'X')
        THEN OUTREACH_STEP3_TYPE
        ELSE O_OUTREACH_STEP3_TYPE
      END AS UPD1_180_OUTREACH_STEP3_TYPE,
      CASE WHEN NVL(GENERIC_FIELD2,'X') <>  NVL(O_GENERIC_FIELD2,'X')
        THEN OUTREACH_STEP4_TYPE
        ELSE O_OUTREACH_STEP4_TYPE
      END AS UPD1_180_OUTREACH_STEP4_TYPE,
      CASE WHEN NVL(GENERIC_FIELD2,'X') <>  NVL(O_GENERIC_FIELD2,'X')
        THEN OUTREACH_STEP5_TYPE
        ELSE O_OUTREACH_STEP5_TYPE
      END AS UPD1_180_OUTREACH_STEP5_TYPE,
      CASE WHEN NVL(GENERIC_FIELD2,'X') <>  NVL(O_GENERIC_FIELD2,'X')
        THEN OUTREACH_STEP6_TYPE
        ELSE O_OUTREACH_STEP6_TYPE
      END AS UPD1_180_OUTREACH_STEP6_TYPE,
      CASE WHEN NVL(GENERIC_FIELD3,'X') <>  NVL(O_GENERIC_FIELD3,'X')
        THEN GENERIC_FIELD3
        ELSE O_GENERIC_FIELD3
      END AS UPD1_190_GENERIC_FIELD3,
      CASE WHEN NVL(GENERIC_FIELD4,'X') <>  NVL(O_GENERIC_FIELD4,'X')
        THEN GENERIC_FIELD4
        ELSE O_GENERIC_FIELD4
      END AS UPD1_200_GENERIC_FIELD4,
      CASE WHEN NVL(GENERIC_FIELD5,'X') <>  NVL(O_GENERIC_FIELD5,'X')
        THEN GENERIC_FIELD5
        ELSE O_GENERIC_FIELD5
      END AS UPD1_210_GENERIC_FIELD5,
      CASE WHEN NVL(DELAY_DAYS1,0) <>  NVL(O_DELAY_DAYS1,0)
        THEN DELAY_DAYS1
        ELSE O_DELAY_DAYS1
      END AS UPD1_220_DELAY_DAYS1,
      CASE WHEN NVL(DELAY_DAYS1,0) <>  NVL(O_DELAY_DAYS1,0)
        THEN DELAY_DAYS1_UNIT
        ELSE O_DELAY_DAYS1_UNIT
      END AS UPD1_220_DELAY_DAYS1_UNIT,
      CASE WHEN NVL(DELAY_DAYS2,0) <>  NVL(O_DELAY_DAYS2,0)
        THEN DELAY_DAYS2
        ELSE O_DELAY_DAYS2
      END AS UPD1_230_DELAY_DAYS2,
      CASE WHEN NVL(DELAY_DAYS2,0) <>  NVL(O_DELAY_DAYS2,0)
        THEN DELAY_DAYS2_UNIT
        ELSE O_DELAY_DAYS2_UNIT
      END AS UPD1_230_DELAY_DAYS2_UNIT,
      CASE WHEN NVL(DELAY_DAYS3,0) <>  NVL(O_DELAY_DAYS3,0)
        THEN DELAY_DAYS3
        ELSE O_DELAY_DAYS3
      END AS UPD1_240_DELAY_DAYS3,
      CASE WHEN NVL(DELAY_DAYS3,0) <>  NVL(O_DELAY_DAYS3,0)
        THEN DELAY_DAYS3_UNIT
        ELSE O_DELAY_DAYS3_UNIT
      END AS UPD1_240_DELAY_DAYS3_UNIT,
      CASE WHEN NVL(CPW_REFERRAL_DT,'1-JAN-1111') <>  NVL(O_CPW_REFERRAL_DT,'1-JAN-1111')
        THEN CPW_REFERRAL_DT
        ELSE O_CPW_REFERRAL_DT
      END AS UPD1_250_CPW_REFERRAL_DT,
      CASE WHEN NVL(CPW_REFERRAL_SOURCE_TYPE,'X') <>  NVL(O_CPW_REFERRAL_SOURCE_TYPE,'X')
        THEN CPW_REFERRAL_SOURCE_TYPE
        ELSE O_CPW_REFERRAL_SOURCE_TYPE
      END AS UPD1_260_CPW_REF_SOURCE_TYPE,
      CASE WHEN NVL(CPW_REFERRAL_SOURCE_NAME,'X') <>  NVL(O_CPW_REFERRAL_SOURCE_NAME,'X')
        THEN CPW_REFERRAL_SOURCE_NAME
        ELSE O_CPW_REFERRAL_SOURCE_NAME
      END AS UPD1_270_CPW_REF_SOURCE_NAME,
      CASE WHEN NVL(CPW_REFERRAL_REASON,'X') <>  NVL(O_CPW_REFERRAL_REASON,'X')
        THEN CPW_REFERRAL_REASON
        ELSE O_CPW_REFERRAL_REASON
      END AS UPD1_280_CPW_REFERRAL_REASON,
      CASE WHEN NVL(CPW_CALL_BACK_IND,'X') <>  NVL(O_CPW_CALL_BACK_IND,'X')
        THEN CPW_CALL_BACK_IND
        ELSE O_CPW_CALL_BACK_IND
      END AS UPD1_290_CPW_CALL_BACK_IND,
      CASE WHEN NVL(CPW_REFERRAL_PRIORITY_STATUS,'X') <>  NVL(O_CPW_REFERRAL_PRIORITY_STATUS,'X')
        THEN CPW_REFERRAL_PRIORITY_STATUS
        ELSE O_CPW_REFERRAL_PRIORITY_STATUS
      END AS UPD1_300_CPW_REF_PRIORITY_STAT,
      -- TXEB-2649
      CASE WHEN NVL(CPW_NAME_OF_REFERRER,'X') <>  NVL(O_CPW_NAME_OF_REFERRER,'X')
        THEN CPW_NAME_OF_REFERRER
        ELSE O_CPW_NAME_OF_REFERRER
      END AS UPD1_301_CPW_NAME_OF_REFERRER,
      CASE WHEN NVL(CPW_REFERRAL_SOURCE_PHONE,'X') <>  NVL(O_CPW_REFERRAL_SOURCE_PHONE,'X')
        THEN CPW_REFERRAL_SOURCE_PHONE
        ELSE O_CPW_REFERRAL_SOURCE_PHONE
      END AS UPD1_302_CPW_REFERRAL_SRC_PHON,
      -- End TXEB-2649
      CASE WHEN NVL(PROVREF_MISSED_APPT_TYPE,'X') <>  NVL(O_PROVREF_MISSED_APPT_TYPE,'X')
        THEN PROVREF_MISSED_APPT_TYPE
        ELSE O_PROVREF_MISSED_APPT_TYPE
      END AS UPD1_320_PROVREF_MSD_APPT_TYPE,
      CASE WHEN NVL(PROVREF_PROVIDER_TYPE,'X') <>  NVL(O_PROVREF_PROVIDER_TYPE,'X')
        THEN PROVREF_PROVIDER_TYPE
        ELSE O_PROVREF_PROVIDER_TYPE
      END AS UPD1_330_PROVREF_PROVIDER_TYPE,
      CASE WHEN NVL(PROVREF_PROVIDER_CLINIC_NAME,'X') <>  NVL(O_PROVREF_PROVIDER_CLINIC_NAME,'X')
        THEN PROVREF_PROVIDER_CLINIC_NAME
        ELSE O_PROVREF_PROVIDER_CLINIC_NAME
      END AS UPD1_340_PROVREF_PRVD_CLNC_NME,
      CASE WHEN NVL(PROVREF_PROVIDER_CITY,'X') <>  NVL(O_PROVREF_PROVIDER_CITY,'X')
        THEN PROVREF_PROVIDER_CITY
        ELSE O_PROVREF_PROVIDER_CITY
      END AS UPD1_342_PROVREF_PROVIDER_CITY,
      CASE WHEN NVL(PROVREF_PROVIDER_COUNTY,'X') <>  NVL(O_PROVREF_PROVIDER_COUNTY,'X')
        THEN PROVREF_PROVIDER_COUNTY
        ELSE O_PROVREF_PROVIDER_COUNTY
      END AS UPD1_343_PROVREF_PRVDR_COUNTY,
      CASE WHEN NVL(PROVREF_PROVIDER_ZIP,'X') <>  NVL(O_PROVREF_PROVIDER_ZIP,'X')
        THEN PROVREF_PROVIDER_ZIP
        ELSE O_PROVREF_PROVIDER_ZIP
      END AS UPD1_344_PROVREF_PROVIDER_ZIP,
      CASE WHEN NVL(HOME_VISIT_REASON,'X') <>  NVL(O_HOME_VISIT_REASON,'X')
        THEN HOME_VISIT_REASON
        ELSE O_HOME_VISIT_REASON
      END AS UPD1_350_HOME_VISIT_REASON,
      CASE WHEN NVL(LAST_UPDATE_DT,'1-JAN-1111') <>  NVL(O_LAST_UPDATE_DT,'1-JAN-1111')
        THEN LAST_UPDATE_DT
        ELSE O_LAST_UPDATE_DT
      END AS UPD1_400_LAST_UPDATE_DT,
      CASE WHEN NVL(LAST_UPDATE_DT,'1-JAN-1111') <>  NVL(O_LAST_UPDATE_DT,'1-JAN-1111')
        THEN LAST_UPDATE_BY
        ELSE O_LAST_UPDATE_BY
      END AS UPD1_400_LAST_UPDATE_BY,
      CASE WHEN NVL(LETTER_DEFINITION_ID1,0) <>  NVL(O_LETTER_DEFINITION_ID1,0)
        THEN LETTER_DEFINITION_ID1
        ELSE O_LETTER_DEFINITION_ID1
      END AS UPD1_410_LETTER_DEFINITION_ID1,
      CASE WHEN NVL(LETTER_DEFINITION_ID2,0) <>  NVL(O_LETTER_DEFINITION_ID2,0)
        THEN LETTER_DEFINITION_ID2
        ELSE O_LETTER_DEFINITION_ID2
      END AS UPD1_420_LETTER_DEFINITION_ID2,
      CASE WHEN NVL(LETTER_DEFINITION_ID3,0) <>  NVL(O_LETTER_DEFINITION_ID3,0)
        THEN LETTER_DEFINITION_ID3
        ELSE O_LETTER_DEFINITION_ID3
      END AS UPD1_430_LETTER_DEFINITION_ID3,
      CASE WHEN NVL(HUMAN_TASK_TYPE1,'X') <>  NVL(O_HUMAN_TASK_TYPE1,'X')
        THEN HUMAN_TASK_TYPE1
        ELSE O_HUMAN_TASK_TYPE1
      END AS UPD1_435_HUMAN_TASK_TYPE1,
      CASE WHEN NVL(HUMAN_TASK_TYPE2,'X') <>  NVL(O_HUMAN_TASK_TYPE2,'X')
        THEN HUMAN_TASK_TYPE2
        ELSE O_HUMAN_TASK_TYPE2
      END AS UPD1_440_HUMAN_TASK_TYPE2,
      CASE WHEN NVL(OUTCOME_NOTIFICATION_TASK_ID,0) <>  NVL(O_OUTCOME_NOTIFICATION_TASK_ID,0)
        THEN OUTCOME_NOTIFICATION_TASK_ID
        ELSE O_OUTCOME_NOTIFICATION_TASK_ID
      END AS UPD1_460_OUTCOME_NOTIF_TASK_ID,
      CASE WHEN NVL(PROVREF_PROVIDER_DT_REFERRED,'1-JAN-1111') <>  NVL(O_PROVREF_PROVIDER_DT_REFERRED,'1-JAN-1111')
        THEN PROVREF_PROVIDER_DT_REFERRED
        ELSE O_PROVREF_PROVIDER_DT_REFERRED
      END AS UPD1_480_PROVREF_PROV_DT_REF,
      CASE WHEN NVL(PROVREF_MISSED_APPT_IND,'X') <>  NVL(O_PROVREF_MISSED_APPT_IND,'X')
        THEN PROVREF_MISSED_APPT_IND
        ELSE O_PROVREF_MISSED_APPT_IND
      END AS UPD1_490_PROVREF_MSD_APPT_IND,
      CASE WHEN NVL(PROVREF_MISSED_APPT_DT,'1-JAN-1111') <>  NVL(O_PROVREF_MISSED_APPT_DT,'1-JAN-1111')
        THEN PROVREF_MISSED_APPT_DT
        ELSE O_PROVREF_MISSED_APPT_DT
      END AS UPD1_500_PROVREF_MSSD_APPT_DT,
      CASE WHEN NVL(PROVREF_MISSED_APPT_OUTCOME,'X') <>  NVL(O_PROVREF_MISSED_APPT_OUTCOME,'X')
        THEN PROVREF_MISSED_APPT_OUTCOME
        ELSE O_PROVREF_MISSED_APPT_OUTCOME
      END AS UPD1_502_PROVREF_MSSD_APPT_OUT,
      CASE WHEN NVL(PROVREF_MISSED_APPT_REASON,'X') <>  NVL(O_PROVREF_MISSED_APPT_REASON,'X')
        THEN PROVREF_MISSED_APPT_REASON
        ELSE O_PROVREF_MISSED_APPT_REASON
      END AS UPD1_503_PROVREF_MSD_APPT_RSN,
      CASE WHEN NVL(PROVREF_FOLLOWUP_LEAD_TEST,'X') <>  NVL(O_PROVREF_FOLLOWUP_LEAD_TEST,'X')
        THEN PROVREF_FOLLOWUP_LEAD_TEST
        ELSE O_PROVREF_FOLLOWUP_LEAD_TEST
      END AS UPD1_510_PROVREF_FLWUP_LD_TST,
      CASE WHEN NVL(PROVREF_TRANSPORT_ASSIST,'X') <>  NVL(O_PROVREF_TRANSPORT_ASSIST,'X')
        THEN PROVREF_TRANSPORT_ASSIST
        ELSE O_PROVREF_TRANSPORT_ASSIST
      END AS UPD1_520_PROVREF_TRAN_ASSIST,
      CASE WHEN NVL(PROVREF_SCHEDULE_ASSIST,'X') <>  NVL(O_PROVREF_SCHEDULE_ASSIST,'X')
        THEN PROVREF_SCHEDULE_ASSIST
        ELSE O_PROVREF_SCHEDULE_ASSIST
      END AS UPD1_530_PROVREF_SCH_ASSIST,
      CASE WHEN NVL(PROVREF_UPDATE_ADDRESS,'X') <>  NVL(O_PROVREF_UPDATE_ADDRESS,'X')
        THEN PROVREF_UPDATE_ADDRESS
        ELSE O_PROVREF_UPDATE_ADDRESS
      END AS UPD1_540_PROVREF_UPDATE_ADD,
      CASE WHEN NVL(PROVREF_OTHER_IND,'X') <>  NVL(O_PROVREF_OTHER_IND,'X')
        THEN PROVREF_OTHER_IND
        ELSE O_PROVREF_OTHER_IND
      END AS UPD1_541_PROVREF_OTHER_IND,
      CASE WHEN NVL(PROVREF_OTHER_COMMENT,'X') <>  NVL(O_PROVREF_OTHER_COMMENT,'X')
        THEN PROVREF_OTHER_COMMENT
        ELSE O_PROVREF_OTHER_COMMENT
      END AS UPD1_542_PROVREF_OTHER_COMMENT,
      CASE WHEN NVL(CHECKUP_TYPE,'X') <>  NVL(O_CHECKUP_TYPE,'X')
        THEN CHECKUP_TYPE
        ELSE O_CHECKUP_TYPE
      END AS UPD1_550_CHECKUP_TYPE,
      CASE WHEN NVL(CHECKUP_TX_WORKS_ADVISOR,'X') <>  NVL(O_CHECKUP_TX_WORKS_ADVISOR,'X')
        THEN CHECKUP_TX_WORKS_ADVISOR
        ELSE O_CHECKUP_TX_WORKS_ADVISOR
      END AS UPD1_560_CHECKUP_TX_WORKS_ADV,
      CASE WHEN NVL(CHECKUP_CARETAKER_REPORT,'X') <>  NVL(O_CHECKUP_CARETAKER_REPORT,'X')
        THEN CHECKUP_CARETAKER_REPORT
        ELSE O_CHECKUP_CARETAKER_REPORT
      END AS UPD1_570_CHECKUP_CARETAKER_RPT,
      CASE WHEN NVL(CHECKUP_PROVIDER_NAME,'X') <>  NVL(O_CHECKUP_PROVIDER_NAME,'X')
        THEN CHECKUP_PROVIDER_NAME
        ELSE O_CHECKUP_PROVIDER_NAME
      END AS UPD1_580_CHECKUP_PROV_NAME,
      CASE WHEN NVL(CHECKUP_DT,'1-JAN-1111') <>  NVL(O_CHECKUP_DT,'1-JAN-1111')
        THEN CHECKUP_DT
        ELSE O_CHECKUP_DT
      END AS UPD1_590_CHECKUP_DT,
      CASE WHEN NVL(EXEFF_SCHEDULE_APPT_IND,'X') <>  NVL(O_EXEFF_SCHEDULE_APPT_IND,'X')
        THEN EXEFF_SCHEDULE_APPT_IND
        ELSE O_EXEFF_SCHEDULE_APPT_IND
      END AS UPD1_600_EXEFF_SCH_APPT_IND,
      CASE WHEN NVL(EXEFF_TRANSPORT_IND,'X') <>  NVL(O_EXEFF_TRANSPORT_IND,'X')
        THEN EXEFF_TRANSPORT_IND
        ELSE O_EXEFF_TRANSPORT_IND
      END AS UPD1_610_EXEFF_TRANSPORT_IND,
      CASE WHEN NVL(EXEFF_MORE_INFO_IND,'X') <>  NVL(O_EXEFF_MORE_INFO_IND,'X')
        THEN EXEFF_MORE_INFO_IND
        ELSE O_EXEFF_MORE_INFO_IND
      END AS UPD1_620_EXEFF_MORE_INFO_IND,
      CASE WHEN NVL(EXEFF_MORE_INFO_MED_IND,'X') <>  NVL(O_EXEFF_MORE_INFO_MED_IND,'X')
        THEN EXEFF_MORE_INFO_MED_IND
        ELSE O_EXEFF_MORE_INFO_MED_IND
      END AS UPD1_630_EXEFF_MRE_INF_MED_IND,
      CASE WHEN NVL(EXEFF_MORE_INFO_DENT_IND,'X') <>  NVL(O_EXEFF_MORE_INFO_DENT_IND,'X')
        THEN EXEFF_MORE_INFO_DENT_IND
        ELSE O_EXEFF_MORE_INFO_DENT_IND
      END AS UPD1_640_EXEFF_MR_INF_DENT_IND,
      CASE WHEN NVL(EXEFF_MORE_INFO_CASEMGMT_IND,'X') <>  NVL(O_EXEFF_MORE_INFO_CASEMGMT_IND,'X')
        THEN EXEFF_MORE_INFO_CASEMGMT_IND
        ELSE O_EXEFF_MORE_INFO_CASEMGMT_IND
      END AS UPD1_650_EXEFF_MR_IF_CSMGT_IND,
      CASE WHEN NVL(EXEFF_HELP_FIND_PROV_IND,'X') <>  NVL(O_EXEFF_HELP_FIND_PROV_IND,'X')
        THEN EXEFF_HELP_FIND_PROV_IND
        ELSE O_EXEFF_HELP_FIND_PROV_IND
      END AS UPD1_660_EXEFF_HLP_FND_PRV_IND,
      CASE WHEN NVL(EXEFF_OTHER_IND,'X') <>  NVL(O_EXEFF_OTHER_IND,'X')
        THEN EXEFF_OTHER_IND
        ELSE O_EXEFF_OTHER_IND
      END AS UPD1_661_EXEFF_OTHER_IND,
      CASE WHEN NVL(EXEFF_PHONE_IND,'X') <>  NVL(O_EXEFF_PHONE_IND,'X')
        THEN EXEFF_PHONE_IND
        ELSE O_EXEFF_PHONE_IND
      END AS UPD1_670_EXEFF_PHONE_IND,
      CASE WHEN NVL(EXEFF_HOME_VISIT_IND,'X') <>  NVL(O_EXEFF_HOME_VISIT_IND,'X')
        THEN EXEFF_HOME_VISIT_IND
        ELSE O_EXEFF_HOME_VISIT_IND
      END AS UPD1_680_EXEFF_HM_VST_IND,
      CASE WHEN NVL(EXEFF_MAIL_IND,'X') <>  NVL(O_EXEFF_MAIL_IND,'X')
        THEN EXEFF_MAIL_IND
        ELSE O_EXEFF_MAIL_IND
      END AS UPD1_690_EXEFF_MAIL_IND,
      CASE WHEN NVL(EXEFF_OTHER_LANGUAGE_IND,'X') <>  NVL(O_EXEFF_OTHER_LANGUAGE_IND,'X')
        THEN EXEFF_OTHER_LANGUAGE_IND
        ELSE O_EXEFF_OTHER_LANGUAGE_IND
      END AS UPD1_700_EXEFF_OTHER_LANG_IND,
      CASE WHEN NVL(EXEFF_INTERPRETER_IND,'X') <>  NVL(O_EXEFF_INTERPRETER_IND,'X')
        THEN EXEFF_INTERPRETER_IND
        ELSE O_EXEFF_INTERPRETER_IND
      END AS UPD1_710_EXEFF_INTERPRETER_IND,
      CASE WHEN NVL(EXEFF_LANGUAGE,'X') <>  NVL(O_EXEFF_LANGUAGE,'X')
        THEN EXEFF_LANGUAGE
        ELSE O_EXEFF_LANGUAGE
      END AS UPD1_711_EXEFF_LANGUAGE,
      CASE WHEN NVL(HOME_VISIT_NOT_ENG_IND,'X') <>  NVL(O_HOME_VISIT_NOT_ENG_IND,'X')
        THEN HOME_VISIT_NOT_ENG_IND
        ELSE O_HOME_VISIT_NOT_ENG_IND
      END AS UPD1_720_HOME_VST_NOT_ENG_IND,
      CASE WHEN NVL(HOME_VISIT_INTERPRETER_IND,'X') <>  NVL(O_HOME_VISIT_INTERPRETER_IND,'X')
        THEN HOME_VISIT_INTERPRETER_IND
        ELSE O_HOME_VISIT_INTERPRETER_IND
      END AS UPD1_730_HOME_VST_INTRPRTR_IND,
      CASE WHEN NVL(HOME_VISIT_LANGUAGE,'X') <>  NVL(O_HOME_VISIT_LANGUAGE,'X')
        THEN HOME_VISIT_LANGUAGE
        ELSE O_HOME_VISIT_LANGUAGE
      END AS UPD1_732_HOME_VISIT_LANGUAGE,
      CASE WHEN NVL(REMINDER_APPT_DT,'1-JAN-1111') <>  NVL(O_REMINDER_APPT_DT,'1-JAN-1111')
        THEN REMINDER_APPT_DT
        ELSE O_REMINDER_APPT_DT
      END AS UPD1_740_REMINDER_APPT_DT,
      CASE WHEN NVL(REMINDER_PROVIDER_NAME,'X') <>  NVL(O_REMINDER_PROVIDER_NAME,'X')
        THEN REMINDER_PROVIDER_NAME
        ELSE O_REMINDER_PROVIDER_NAME
      END AS UPD1_750_REMINDER_PROV_NAME,
      CASE WHEN NVL(REMINDER_APPT_TYPE,'X') <>  NVL(O_REMINDER_APPT_TYPE,'X')
        THEN REMINDER_APPT_TYPE
        ELSE O_REMINDER_APPT_TYPE
      END AS UPD1_751_REMINDER_APPT_TYPE,
      CASE WHEN NVL(CURR_TASK_ID,0) <>  NVL(O_CURR_TASK_ID,0)
        THEN CURR_TASK_ID
        ELSE O_CURR_TASK_ID
      END AS UPD1_760_CURR_TASK_ID,
      CASE WHEN NVL(CURR_TASK_TYPE,'X') <>  NVL(O_CURR_TASK_TYPE,'X')
        THEN CURR_TASK_TYPE
        ELSE O_CURR_TASK_TYPE
      END AS UPD1_770_CURR_TASK_TYPE,
      CASE WHEN NVL(CURR_TASK_STATUS,'X') <>  NVL(O_CURR_TASK_STATUS,'X')
        THEN CURR_TASK_STATUS
        ELSE O_CURR_TASK_STATUS
      END AS UPD1_780_CURR_TASK_STATUS,
      CASE WHEN NVL(FINAL_WAIT_IND,'X') <>  NVL(O_FINAL_WAIT_IND,'X')
        THEN FINAL_WAIT_IND
        ELSE O_FINAL_WAIT_IND
      END AS UPD1_810_FINAL_WAIT_IND,
      CASE WHEN NVL(FINAL_WAIT_DAYS,0) <>  NVL(O_FINAL_WAIT_DAYS,0)
        THEN FINAL_WAIT_DAYS
        ELSE O_FINAL_WAIT_DAYS
      END AS UPD1_820_FINAL_WAIT_DAYS,
      CASE WHEN NVL(FINAL_WAIT_UNIT,'X') <>  NVL(O_FINAL_WAIT_UNIT,'X')
        THEN FINAL_WAIT_UNIT
        ELSE O_FINAL_WAIT_UNIT
      END AS UPD1_830_FINAL_WAIT_UNIT,
      CASE WHEN NVL(OUTREACH_STATUS,'X') <>  NVL(O_OUTREACH_STATUS,'X')    
        OR NVL(ORIGIN,'X') <>  NVL(O_ORIGIN,'X')
        OR NVL(ORIGIN_ID,0) <>  NVL(O_ORIGIN_ID,0)
        OR NVL(OUTREACH_REQ_CATEGORY,'X') <>  NVL(O_OUTREACH_REQ_CATEGORY,'X')
        OR NVL(OUTREACH_REQ_TYPE,'X') <>  NVL(O_OUTREACH_REQ_TYPE,'X')
        OR NVL(dbms_lob.substr(OUTREACH_REQ_DESCRIPTION),'X') <>  NVL(dbms_lob.substr(O_OUTREACH_REQ_DESCRIPTION),'X')
        OR NVL(PRIORITY,'X') <>  NVL(O_PRIORITY,'X')
        OR NVL(CASE_ID,0) <>  NVL(O_CASE_ID,0)
        OR NVL(CLIENT_ID,0) <>  NVL(O_CLIENT_ID,0)
        OR NVL(SERVICE_AREA,'X') <>  NVL(O_SERVICE_AREA,'X')
        OR NVL(COUNTY,'X') <>  NVL(O_COUNTY,'X')
        OR NVL(PROGRAM_TYPE,'X') <>  NVL(O_PROGRAM_TYPE,'X')
        OR NVL(SUBPROGRAM_TYPE,'X') <>  NVL(O_SUBPROGRAM_TYPE,'X')
        OR NVL(VALIDATION_ERROR,'X') <>  NVL(O_VALIDATION_ERROR,'X')
        OR NVL(SURVEY_ID,0) <>  NVL(O_SURVEY_ID,0)
        OR NVL(SURVEY_NAME,'X') <>  NVL(O_SURVEY_NAME,'X')
        OR NVL(GENERIC_FIELD1,'X') <>  NVL(O_GENERIC_FIELD1,'X')
        OR NVL(GENERIC_FIELD2,'X') <>  NVL(O_GENERIC_FIELD2,'X')
        OR NVL(GENERIC_FIELD3,'X') <>  NVL(O_GENERIC_FIELD3,'X')
        OR NVL(GENERIC_FIELD4,'X') <>  NVL(O_GENERIC_FIELD4,'X')
        OR NVL(GENERIC_FIELD5,'X') <>  NVL(O_GENERIC_FIELD5,'X')
        OR NVL(DELAY_DAYS1,0) <>  NVL(O_DELAY_DAYS1,0)
        OR NVL(DELAY_DAYS2,0) <>  NVL(O_DELAY_DAYS2,0)
        OR NVL(DELAY_DAYS3,0) <>  NVL(O_DELAY_DAYS3,0)
        OR NVL(CPW_REFERRAL_DT,'1-JAN-1111') <>  NVL(O_CPW_REFERRAL_DT,'1-JAN-1111')
        OR NVL(CPW_REFERRAL_SOURCE_TYPE,'X') <>  NVL(O_CPW_REFERRAL_SOURCE_TYPE,'X')
        OR NVL(CPW_REFERRAL_SOURCE_NAME,'X') <>  NVL(O_CPW_REFERRAL_SOURCE_NAME,'X')
        OR NVL(CPW_REFERRAL_REASON,'X') <>  NVL(O_CPW_REFERRAL_REASON,'X')
        OR NVL(CPW_CALL_BACK_IND,'X') <>  NVL(O_CPW_CALL_BACK_IND,'X')
        OR NVL(CPW_REFERRAL_PRIORITY_STATUS,'X') <>  NVL(O_CPW_REFERRAL_PRIORITY_STATUS,'X')
        -- TXEB-2649
        OR NVL(CPW_NAME_OF_REFERRER,'X') <>  NVL(O_CPW_NAME_OF_REFERRER,'X')
        OR NVL(CPW_REFERRAL_SOURCE_PHONE,'X') <>  NVL(O_CPW_REFERRAL_SOURCE_PHONE,'X')
        -- End TXEB-2649
        OR NVL(PROVREF_OTHER_IND,'X') <>  NVL(O_PROVREF_OTHER_IND,'X')
        OR NVL(PROVREF_MISSED_APPT_TYPE,'X') <>  NVL(O_PROVREF_MISSED_APPT_TYPE,'X')
        OR NVL(PROVREF_PROVIDER_TYPE,'X') <>  NVL(O_PROVREF_PROVIDER_TYPE,'X')
        OR NVL(PROVREF_PROVIDER_CLINIC_NAME,'X') <>  NVL(O_PROVREF_PROVIDER_CLINIC_NAME,'X')
        OR NVL(PROVREF_PROVIDER_CITY,'X') <>  NVL(O_PROVREF_PROVIDER_CITY,'X')
        OR NVL(PROVREF_PROVIDER_COUNTY,'X') <>  NVL(O_PROVREF_PROVIDER_COUNTY,'X')
        OR NVL(PROVREF_PROVIDER_ZIP,'X') <>  NVL(O_PROVREF_PROVIDER_ZIP,'X')
        OR NVL(PROVREF_OTHER_COMMENT,'X') <>  NVL(O_PROVREF_OTHER_COMMENT,'X')
        OR NVL(HOME_VISIT_REASON,'X') <>  NVL(O_HOME_VISIT_REASON,'X')
        OR NVL(LAST_UPDATE_DT,'1-JAN-1111') <>  NVL(O_LAST_UPDATE_DT,'1-JAN-1111')
        OR NVL(LETTER_DEFINITION_ID1,0) <>  NVL(O_LETTER_DEFINITION_ID1,0)
        OR NVL(LETTER_DEFINITION_ID2,0) <>  NVL(O_LETTER_DEFINITION_ID2,0)
        OR NVL(LETTER_DEFINITION_ID3,0) <>  NVL(O_LETTER_DEFINITION_ID3,0)
        OR NVL(HUMAN_TASK_TYPE1,'X') <>  NVL(O_HUMAN_TASK_TYPE1,'X')
        OR NVL(HUMAN_TASK_TYPE2,'X') <>  NVL(O_HUMAN_TASK_TYPE2,'X')
        --OR NVL(CLIENT_NOTIFICATION_ID,0) <>  NVL(O_CLIENT_NOTIFICATION_ID,0)
        OR NVL(OUTCOME_NOTIFICATION_TASK_ID,0) <>  NVL(O_OUTCOME_NOTIFICATION_TASK_ID,0)
        OR NVL(PROVREF_PROVIDER_DT_REFERRED,'1-JAN-1111') <>  NVL(O_PROVREF_PROVIDER_DT_REFERRED,'1-JAN-1111')
        OR NVL(PROVREF_MISSED_APPT_IND,'X') <>  NVL(O_PROVREF_MISSED_APPT_IND,'X')
        OR NVL(PROVREF_MISSED_APPT_DT,'1-JAN-1111') <>  NVL(O_PROVREF_MISSED_APPT_DT,'1-JAN-1111')
        OR NVL(PROVREF_MISSED_APPT_OUTCOME,'X') <>  NVL(O_PROVREF_MISSED_APPT_OUTCOME,'X')
        OR NVL(PROVREF_MISSED_APPT_REASON,'X') <>  NVL(O_PROVREF_MISSED_APPT_REASON,'X')
        OR NVL(PROVREF_FOLLOWUP_LEAD_TEST,'X') <>  NVL(O_PROVREF_FOLLOWUP_LEAD_TEST,'X')
        OR NVL(PROVREF_TRANSPORT_ASSIST,'X') <>  NVL(O_PROVREF_TRANSPORT_ASSIST,'X')
        OR NVL(PROVREF_SCHEDULE_ASSIST,'X') <>  NVL(O_PROVREF_SCHEDULE_ASSIST,'X')
        OR NVL(PROVREF_UPDATE_ADDRESS,'X') <>  NVL(O_PROVREF_UPDATE_ADDRESS,'X')
        OR NVL(CHECKUP_TYPE,'X') <>  NVL(O_CHECKUP_TYPE,'X')
        OR NVL(CHECKUP_TX_WORKS_ADVISOR,'X') <>  NVL(O_CHECKUP_TX_WORKS_ADVISOR,'X')
        OR NVL(CHECKUP_CARETAKER_REPORT,'X') <>  NVL(O_CHECKUP_CARETAKER_REPORT,'X')
        OR NVL(CHECKUP_PROVIDER_NAME,'X') <>  NVL(O_CHECKUP_PROVIDER_NAME,'X')
        OR NVL(CHECKUP_DT,'1-JAN-1111') <>  NVL(O_CHECKUP_DT,'1-JAN-1111')
        OR NVL(EXEFF_SCHEDULE_APPT_IND,'X') <>  NVL(O_EXEFF_SCHEDULE_APPT_IND,'X')
        OR NVL(EXEFF_TRANSPORT_IND,'X') <>  NVL(O_EXEFF_TRANSPORT_IND,'X')
        OR NVL(EXEFF_MORE_INFO_IND,'X') <>  NVL(O_EXEFF_MORE_INFO_IND,'X')
        OR NVL(EXEFF_MORE_INFO_MED_IND,'X') <>  NVL(O_EXEFF_MORE_INFO_MED_IND,'X')
        OR NVL(EXEFF_MORE_INFO_DENT_IND,'X') <>  NVL(O_EXEFF_MORE_INFO_DENT_IND,'X')
        OR NVL(EXEFF_MORE_INFO_CASEMGMT_IND,'X') <>  NVL(O_EXEFF_MORE_INFO_CASEMGMT_IND,'X')
        OR NVL(EXEFF_HELP_FIND_PROV_IND,'X') <>  NVL(O_EXEFF_HELP_FIND_PROV_IND,'X')
        OR NVL(EXEFF_OTHER_IND,'X') <>  NVL(O_EXEFF_OTHER_IND,'X')     
        OR NVL(EXEFF_PHONE_IND,'X') <>  NVL(O_EXEFF_PHONE_IND,'X')
        OR NVL(EXEFF_HOME_VISIT_IND,'X') <>  NVL(O_EXEFF_HOME_VISIT_IND,'X')
        OR NVL(EXEFF_MAIL_IND,'X') <>  NVL(O_EXEFF_MAIL_IND,'X')
        OR NVL(EXEFF_OTHER_LANGUAGE_IND,'X') <>  NVL(O_EXEFF_OTHER_LANGUAGE_IND,'X')
        OR NVL(EXEFF_INTERPRETER_IND,'X') <>  NVL(O_EXEFF_INTERPRETER_IND,'X')
        OR NVL(EXEFF_LANGUAGE,'X') <>  NVL(O_EXEFF_LANGUAGE,'X')
        OR NVL(HOME_VISIT_NOT_ENG_IND,'X') <>  NVL(O_HOME_VISIT_NOT_ENG_IND,'X')
        OR NVL(HOME_VISIT_INTERPRETER_IND,'X') <>  NVL(O_HOME_VISIT_INTERPRETER_IND,'X')
        OR NVL(HOME_VISIT_LANGUAGE,'X') <>  NVL(O_HOME_VISIT_LANGUAGE,'X')
        OR NVL(REMINDER_APPT_DT,'1-JAN-1111') <>  NVL(O_REMINDER_APPT_DT,'1-JAN-1111')
        OR NVL(REMINDER_PROVIDER_NAME,'X') <>  NVL(O_REMINDER_PROVIDER_NAME,'X')
        OR NVL(REMINDER_APPT_TYPE,'X') <>  NVL(O_REMINDER_APPT_TYPE,'X')
        OR NVL(CURR_TASK_ID,0) <>  NVL(O_CURR_TASK_ID,0)
        OR NVL(CURR_TASK_TYPE,'X') <>  NVL(O_CURR_TASK_TYPE,'X')
        OR NVL(CURR_TASK_STATUS,'X') <>  NVL(O_CURR_TASK_STATUS,'X')
        OR NVL(FINAL_WAIT_IND,'X') <>  NVL(O_FINAL_WAIT_IND,'X')
        OR NVL(FINAL_WAIT_DAYS,0) <>  NVL(O_FINAL_WAIT_DAYS,0)
        OR NVL(FINAL_WAIT_UNIT,'X') <>  NVL(O_FINAL_WAIT_UNIT,'X')
        THEN 'Y'
        ELSE 'N'
      END AS UPDATED_FLAG
   FROM (SELECT * FROM CORP_ETL_CLNT_OUTREACH_OLTP oltp
        WHERE  OLTP.INCIDENT_HEADER_STAT_HIST_ID = (SELECT MAX(INCIDENT_HEADER_STAT_HIST_ID)
                                             			  FROM CORP_ETL_CLNT_OUTREACH_OLTP oltp1
                                           				  WHERE oltp.outreach_id = oltp1.outreach_id)) OLTP
   JOIN 
    (SELECT CECO_ID	CECO_ID
              ,OUTREACH_ID	O_OUTREACH_ID
              ,TRACKING_NUMBER	O_TRACKING_NUMBER
              ,RECEIPT_DT	O_RECEIPT_DT
              ,ORIGIN	O_ORIGIN
              ,ORIGIN_ID	O_ORIGIN_ID
              ,CREATE_DT	O_CREATE_DT
              ,CREATED_BY	O_CREATED_BY
              ,OUTREACH_REQ_CATEGORY	O_OUTREACH_REQ_CATEGORY
              ,OUTREACH_REQ_TYPE	O_OUTREACH_REQ_TYPE
              ,PRIORITY	O_PRIORITY
              ,CASE_ID	O_CASE_ID
              ,CLIENT_ID	O_CLIENT_ID
              ,SERVICE_AREA	O_SERVICE_AREA
              ,COUNTY	O_COUNTY
              ,PROGRAM_TYPE	O_PROGRAM_TYPE
              ,SUBPROGRAM_TYPE	O_SUBPROGRAM_TYPE
              ,OUTREACH_STATUS	O_OUTREACH_STATUS
              ,OUTREACH_STATUS_DT	O_OUTREACH_STATUS_DT
              ,VALIDATION_ERROR	O_VALIDATION_ERROR
              ,NOTIFY_INVALID_IND	O_NOTIFY_INVALID_IND
              ,OUTREACH_REQ_DESCRIPTION	O_OUTREACH_REQ_DESCRIPTION
              ,OUTREACH_STEP1_TYPE	O_OUTREACH_STEP1_TYPE
              ,OUTREACH_STEP2_TYPE	O_OUTREACH_STEP2_TYPE
              ,OUTREACH_STEP3_TYPE	O_OUTREACH_STEP3_TYPE
              ,OUTREACH_STEP4_TYPE	O_OUTREACH_STEP4_TYPE
              ,OUTREACH_STEP5_TYPE	O_OUTREACH_STEP5_TYPE
              ,OUTREACH_STEP6_TYPE	O_OUTREACH_STEP6_TYPE
              ,CURR_TASK_ID	O_CURR_TASK_ID
              ,CURR_TASK_TYPE	O_CURR_TASK_TYPE
              ,CURR_TASK_STATUS	O_CURR_TASK_STATUS
              ,SURVEY_ID	O_SURVEY_ID
              ,SURVEY_NAME	O_SURVEY_NAME
              ,CPW_REFERRAL_DT	O_CPW_REFERRAL_DT
              ,CPW_REFERRAL_SOURCE_TYPE	O_CPW_REFERRAL_SOURCE_TYPE
              ,CPW_REFERRAL_SOURCE_NAME	O_CPW_REFERRAL_SOURCE_NAME
              ,CPW_REFERRAL_REASON	O_CPW_REFERRAL_REASON
              ,CPW_CALL_BACK_IND	O_CPW_CALL_BACK_IND
              ,CPW_REFERRAL_PRIORITY_STATUS	O_CPW_REFERRAL_PRIORITY_STATUS
              ,CPW_NAME_OF_REFERRER     O_CPW_NAME_OF_REFERRER   -- TXEB-2649
              ,CPW_REFERRAL_SOURCE_PHONE O_CPW_REFERRAL_SOURCE_PHONE
              ,PROVREF_OTHER_COMMENT	O_PROVREF_OTHER_COMMENT
              ,PROVREF_OTHER_IND O_PROVREF_OTHER_IND
              ,PROVREF_PROVIDER_TYPE	O_PROVREF_PROVIDER_TYPE
              ,PROVREF_PROVIDER_CLINIC_NAME	O_PROVREF_PROVIDER_CLINIC_NAME
              ,PROVREF_PROVIDER_CITY	O_PROVREF_PROVIDER_CITY
              ,PROVREF_PROVIDER_COUNTY	O_PROVREF_PROVIDER_COUNTY
              ,PROVREF_PROVIDER_ZIP	O_PROVREF_PROVIDER_ZIP
              ,PROVREF_PROVIDER_DT_REFERRED	O_PROVREF_PROVIDER_DT_REFERRED
              ,PROVREF_MISSED_APPT_IND	O_PROVREF_MISSED_APPT_IND
              ,PROVREF_MISSED_APPT_DT	O_PROVREF_MISSED_APPT_DT
              ,PROVREF_MISSED_APPT_TYPE	O_PROVREF_MISSED_APPT_TYPE
              ,PROVREF_MISSED_APPT_OUTCOME	O_PROVREF_MISSED_APPT_OUTCOME
              ,PROVREF_MISSED_APPT_REASON	O_PROVREF_MISSED_APPT_REASON
              ,PROVREF_FOLLOWUP_LEAD_TEST	O_PROVREF_FOLLOWUP_LEAD_TEST
              ,PROVREF_TRANSPORT_ASSIST	O_PROVREF_TRANSPORT_ASSIST
              ,PROVREF_SCHEDULE_ASSIST	O_PROVREF_SCHEDULE_ASSIST
              ,PROVREF_UPDATE_ADDRESS	O_PROVREF_UPDATE_ADDRESS
              ,CHECKUP_TYPE	O_CHECKUP_TYPE
              ,CHECKUP_TX_WORKS_ADVISOR	O_CHECKUP_TX_WORKS_ADVISOR
              ,CHECKUP_CARETAKER_REPORT	O_CHECKUP_CARETAKER_REPORT
              ,CHECKUP_PROVIDER_NAME	O_CHECKUP_PROVIDER_NAME
              ,CHECKUP_DT	O_CHECKUP_DT
              ,EXEFF_SCHEDULE_APPT_IND	O_EXEFF_SCHEDULE_APPT_IND
              ,EXEFF_TRANSPORT_IND	O_EXEFF_TRANSPORT_IND
              ,EXEFF_MORE_INFO_IND	O_EXEFF_MORE_INFO_IND
              ,EXEFF_MORE_INFO_MED_IND	O_EXEFF_MORE_INFO_MED_IND
              ,EXEFF_MORE_INFO_DENT_IND	O_EXEFF_MORE_INFO_DENT_IND
              ,EXEFF_MORE_INFO_CASEMGMT_IND	O_EXEFF_MORE_INFO_CASEMGMT_IND
              ,EXEFF_HELP_FIND_PROV_IND	O_EXEFF_HELP_FIND_PROV_IND
              ,EXEFF_OTHER_IND O_EXEFF_OTHER_IND
              ,EXEFF_PHONE_IND	O_EXEFF_PHONE_IND
              ,EXEFF_HOME_VISIT_IND	O_EXEFF_HOME_VISIT_IND
              ,EXEFF_MAIL_IND	O_EXEFF_MAIL_IND
              ,EXEFF_OTHER_LANGUAGE_IND	O_EXEFF_OTHER_LANGUAGE_IND
              ,EXEFF_INTERPRETER_IND	O_EXEFF_INTERPRETER_IND
              ,EXEFF_LANGUAGE	O_EXEFF_LANGUAGE
              ,HOME_VISIT_REASON	O_HOME_VISIT_REASON
              ,HOME_VISIT_NOT_ENG_IND	O_HOME_VISIT_NOT_ENG_IND
              ,HOME_VISIT_INTERPRETER_IND	O_HOME_VISIT_INTERPRETER_IND
              ,HOME_VISIT_LANGUAGE	O_HOME_VISIT_LANGUAGE
              ,REMINDER_APPT_TYPE	O_REMINDER_APPT_TYPE
              ,REMINDER_APPT_DT	O_REMINDER_APPT_DT
              ,REMINDER_PROVIDER_NAME	O_REMINDER_PROVIDER_NAME
              ,DELAY_DAYS1	O_DELAY_DAYS1
              ,DELAY_DAYS1_UNIT	O_DELAY_DAYS1_UNIT
              ,DELAY_DAYS2	O_DELAY_DAYS2
              ,DELAY_DAYS2_UNIT	O_DELAY_DAYS2_UNIT
              ,DELAY_DAYS3	O_DELAY_DAYS3
              ,DELAY_DAYS3_UNIT	O_DELAY_DAYS3_UNIT
              ,LETTER_DEFINITION_ID1	O_LETTER_DEFINITION_ID1
              ,LETTER_DEFINITION_ID2	O_LETTER_DEFINITION_ID2
              ,LETTER_DEFINITION_ID3	O_LETTER_DEFINITION_ID3
              ,HUMAN_TASK_TYPE1	O_HUMAN_TASK_TYPE1
              ,HUMAN_TASK_TYPE2	O_HUMAN_TASK_TYPE2
              ,GENERIC_FIELD1	O_GENERIC_FIELD1
              ,GENERIC_FIELD2	O_GENERIC_FIELD2
              ,GENERIC_FIELD3	O_GENERIC_FIELD3
              ,GENERIC_FIELD4	O_GENERIC_FIELD4
              ,GENERIC_FIELD5	O_GENERIC_FIELD5
              ,NOTIFY_OUTCOME_IND	O_NOTIFY_OUTCOME_IND
              ,CLIENT_NOTIFICATION_ID	O_CLIENT_NOTIFICATION_ID
              ,OUTCOME_NOTIFICATION_TASK_ID	O_OUTCOME_NOTIFICATION_TASK_ID
              ,LAST_UPDATE_DT	O_LAST_UPDATE_DT
              ,LAST_UPDATE_BY	O_LAST_UPDATE_BY
              ,FINAL_WAIT_IND	O_FINAL_WAIT_IND
              ,FINAL_WAIT_DAYS	O_FINAL_WAIT_DAYS
              ,FINAL_WAIT_UNIT	O_FINAL_WAIT_UNIT
              ,COMPLETE_DT
        FROM CORP_ETL_CLNT_OUTREACH_WIP_BPM
        WHERE STAGE_DONE_DATE IS NULL
          )BPM
   ON OLTP.CECO_ID = BPM.CECO_ID)
   WHERE UPDATED_FLAG = 'Y';
   
   TYPE t_upd1_tab IS TABLE OF upd1_cur%ROWTYPE INDEX BY PLS_INTEGER;
    upd1_tab t_upd1_tab;
    v_bulk_limit NUMBER := 500;    
    v_step VARCHAR2(100);
    v_err_code VARCHAR2(30);
    v_err_msg VARCHAR2(240);
    v_err_index NUMBER;
BEGIN
    
   OPEN upd1_cur;
   LOOP
     FETCH upd1_cur BULK COLLECT INTO upd1_tab LIMIT v_bulk_limit;
     EXIT WHEN upd1_tab.COUNT = 0; -- Exit when missing rows
  
     BEGIN
       FORALL indx IN 1..upd1_tab.COUNT SAVE EXCEPTIONS
         UPDATE corp_etl_clnt_outreach_wip_bpm
         SET outreach_status	=	upd1_tab(indx).upd1_10_outreach_status
            ,	outreach_status_dt	=	upd1_tab(indx).upd1_10_outreach_status_dt
            ,	origin	=	upd1_tab(indx).upd1_20_origin
            ,	origin_id	=	upd1_tab(indx).upd1_30_origin_id
            ,	outreach_req_category	=	upd1_tab(indx).upd1_40_outreach_req_category
            ,	outreach_req_type	=	upd1_tab(indx).upd1_50_outreach_req_type
            ,	notify_invalid_ind	=	upd1_tab(indx).upd1_50_notify_invalid_ind
            ,	notify_outcome_ind	=	upd1_tab(indx).upd1_50_notify_outcome_ind
            ,	outreach_req_description	=	upd1_tab(indx).upd1_60_out_req_description
            ,	priority	=	upd1_tab(indx).upd1_70_priority
            ,	case_id	=	upd1_tab(indx).upd1_80_case_id
            ,	client_id	=	upd1_tab(indx).upd1_90_client_id
            ,	service_area	=	upd1_tab(indx).upd1_100_service_area
            ,	county	=	upd1_tab(indx).upd1_110_county
            ,	program_type	=	upd1_tab(indx).upd1_120_program_type
            ,	subprogram_type	=	upd1_tab(indx).upd1_130_subprogram_type
            ,	validation_error	=	upd1_tab(indx).upd1_140_validation_error
            ,	survey_id	=	upd1_tab(indx).upd1_150_survey_id
            ,	survey_name	=	upd1_tab(indx).upd1_160_survey_name
            ,	generic_field1	=	upd1_tab(indx).upd1_170_generic_field1
            ,	generic_field2	=	upd1_tab(indx).upd1_180_generic_field2
            ,	outreach_step1_type	=	upd1_tab(indx).upd1_180_outreach_step1_type
            ,	outreach_step2_type	=	upd1_tab(indx).upd1_180_outreach_step2_type
            ,	outreach_step3_type	=	upd1_tab(indx).upd1_180_outreach_step3_type
            ,	outreach_step4_type	=	upd1_tab(indx).upd1_180_outreach_step4_type
            ,	outreach_step5_type	=	upd1_tab(indx).upd1_180_outreach_step5_type
            ,	outreach_step6_type	=	upd1_tab(indx).upd1_180_outreach_step6_type
            ,	generic_field3	=	upd1_tab(indx).upd1_190_generic_field3
            ,	generic_field4	=	upd1_tab(indx).upd1_200_generic_field4
            ,	generic_field5	=	upd1_tab(indx).upd1_210_generic_field5
            ,	delay_days1	=	upd1_tab(indx).upd1_220_delay_days1
            ,	delay_days1_unit	=	upd1_tab(indx).upd1_220_delay_days1_unit
            ,	delay_days2	=	upd1_tab(indx).upd1_230_delay_days2
            ,	delay_days2_unit	=	upd1_tab(indx).upd1_230_delay_days2_unit
            ,	delay_days3	=	upd1_tab(indx).upd1_240_delay_days3
            ,	delay_days3_unit	=	upd1_tab(indx).upd1_240_delay_days3_unit
            ,	cpw_referral_dt	=	upd1_tab(indx).upd1_250_cpw_referral_dt
            ,	cpw_referral_source_type	=	upd1_tab(indx).upd1_260_cpw_ref_source_type
            ,	cpw_referral_source_name	=	upd1_tab(indx).upd1_270_cpw_ref_source_name
            ,	cpw_referral_reason	=	upd1_tab(indx).upd1_280_cpw_referral_reason
            ,	cpw_call_back_ind	=	upd1_tab(indx).upd1_290_cpw_call_back_ind
            ,	cpw_referral_priority_status	=	upd1_tab(indx).upd1_300_cpw_ref_priority_stat
            -- TXEB-2649
            ,   cpw_name_of_referrer       =  upd1_tab(indx).upd1_301_cpw_name_of_referrer
            ,   cpw_referral_source_phone  =  upd1_tab(indx).upd1_302_cpw_referral_src_phon
            -- End TXEB-2649
            ,	provref_missed_appt_type	=	upd1_tab(indx).upd1_320_provref_msd_appt_type
            ,	provref_provider_type	=	upd1_tab(indx).upd1_330_provref_provider_type
            ,	provref_provider_clinic_name	=	upd1_tab(indx).upd1_340_provref_prvd_clnc_nme
            ,	provref_provider_city	=	upd1_tab(indx).upd1_342_provref_provider_city
            ,	provref_provider_county	=	upd1_tab(indx).upd1_343_provref_prvdr_county
            ,	provref_provider_zip	=	upd1_tab(indx).upd1_344_provref_provider_zip
            ,	home_visit_reason	=	upd1_tab(indx).upd1_350_home_visit_reason
            ,	last_update_dt	=	upd1_tab(indx).upd1_400_last_update_dt
            ,	last_update_by	=	upd1_tab(indx).upd1_400_last_update_by
            ,	letter_definition_id1	=	upd1_tab(indx).upd1_410_letter_definition_id1
            ,	letter_definition_id2	=	upd1_tab(indx).upd1_420_letter_definition_id2
            ,	letter_definition_id3	=	upd1_tab(indx).upd1_430_letter_definition_id3
            ,	human_task_type1	=	upd1_tab(indx).upd1_435_human_task_type1
            ,	human_task_type2	=	upd1_tab(indx).upd1_440_human_task_type2
            ,	outcome_notification_task_id	=	upd1_tab(indx).upd1_460_outcome_notif_task_id
            ,	provref_provider_dt_referred	=	upd1_tab(indx).upd1_480_provref_prov_dt_ref
            ,	provref_missed_appt_ind	=	upd1_tab(indx).upd1_490_provref_msd_appt_ind
            ,	provref_missed_appt_dt	=	upd1_tab(indx).upd1_500_provref_mssd_appt_dt
            ,	provref_missed_appt_outcome	=	upd1_tab(indx).upd1_502_provref_mssd_appt_out
            ,	provref_missed_appt_reason	=	upd1_tab(indx).upd1_503_provref_msd_appt_rsn
            ,	provref_followup_lead_test	=	upd1_tab(indx).upd1_510_provref_flwup_ld_tst
            ,	provref_transport_assist	=	upd1_tab(indx).upd1_520_provref_tran_assist
            ,	provref_schedule_assist	=	upd1_tab(indx).upd1_530_provref_sch_assist
            ,	provref_update_address	=	upd1_tab(indx).upd1_540_provref_update_add
            ,	checkup_type	=	upd1_tab(indx).upd1_550_checkup_type
            ,	checkup_tx_works_advisor	=	upd1_tab(indx).upd1_560_checkup_tx_works_adv
            ,	checkup_caretaker_report	=	upd1_tab(indx).upd1_570_checkup_caretaker_rpt
            ,	checkup_provider_name	=	upd1_tab(indx).upd1_580_checkup_prov_name
            ,	checkup_dt	=	upd1_tab(indx).upd1_590_checkup_dt
            ,	exeff_schedule_appt_ind	=	upd1_tab(indx).upd1_600_exeff_sch_appt_ind
            ,	exeff_transport_ind	=	upd1_tab(indx).upd1_610_exeff_transport_ind
            ,	exeff_more_info_ind	=	upd1_tab(indx).upd1_620_exeff_more_info_ind
            ,	exeff_more_info_med_ind	=	upd1_tab(indx).upd1_630_exeff_mre_inf_med_ind
            ,	exeff_more_info_dent_ind	=	upd1_tab(indx).upd1_640_exeff_mr_inf_dent_ind
            ,	exeff_more_info_casemgmt_ind	=	upd1_tab(indx).upd1_650_exeff_mr_if_csmgt_ind
            ,	exeff_help_find_prov_ind	=	upd1_tab(indx).upd1_660_exeff_hlp_fnd_prv_ind
            ,	exeff_other_ind	=	upd1_tab(indx).upd1_661_exeff_other_ind
            ,	exeff_phone_ind	=	upd1_tab(indx).upd1_670_exeff_phone_ind
            ,	exeff_home_visit_ind	=	upd1_tab(indx).upd1_680_exeff_hm_vst_ind
            ,	exeff_mail_ind	=	upd1_tab(indx).upd1_690_exeff_mail_ind
            ,	exeff_other_language_ind	=	upd1_tab(indx).upd1_700_exeff_other_lang_ind
            ,	exeff_interpreter_ind	=	upd1_tab(indx).upd1_710_exeff_interpreter_ind
            ,	exeff_language	=	upd1_tab(indx).upd1_711_exeff_language
            ,	home_visit_not_eng_ind	=	upd1_tab(indx).upd1_720_home_vst_not_eng_ind
            ,	home_visit_interpreter_ind	=	upd1_tab(indx).upd1_730_home_vst_intrprtr_ind
            ,	home_visit_language	=	upd1_tab(indx).upd1_732_home_visit_language
            ,	reminder_appt_dt	=	upd1_tab(indx).upd1_740_reminder_appt_dt
            ,	reminder_provider_name	=	upd1_tab(indx).upd1_750_reminder_prov_name
            ,	reminder_appt_type	=	upd1_tab(indx).upd1_751_reminder_appt_type
            ,	curr_task_id	=	upd1_tab(indx).upd1_760_curr_task_id
            ,	curr_task_type	=	upd1_tab(indx).upd1_770_curr_task_type
            ,	curr_task_status	=	upd1_tab(indx).upd1_780_curr_task_status
            ,	final_wait_ind	=	upd1_tab(indx).upd1_810_final_wait_ind
            ,	final_wait_days	=	upd1_tab(indx).upd1_820_final_wait_days
            ,	final_wait_unit	=	upd1_tab(indx).upd1_830_final_wait_unit
            ,	updated	=	upd1_tab(indx).updated_flag
            ,	provref_other_ind	=	upd1_tab(indx).upd1_541_provref_other_ind
            ,	provref_other_comment	=	upd1_tab(indx).upd1_542_provref_other_comment
         WHERE outreach_id = upd1_tab(indx).outreach_id;
  	      
     EXCEPTION                      
           WHEN OTHERS THEN
             IF SQLCODE = -24381 THEN
               FOR i IN 1 .. SQL%BULK_EXCEPTIONS.COUNT LOOP
                v_err_code := SQL%BULK_EXCEPTIONS(i).ERROR_CODE; --SQLCODE;
                v_err_index := SQL%BULK_EXCEPTIONS(i).ERROR_INDEX;
                --v_err_msg := SUBSTR(SQLERRM, 1, 200);
                INSERT INTO corp_etl_error_log 
                VALUES(SEQ_CEEL_ID.nextval,--CEEL_ID
                        sysdate,--ERR_DATE
                        'CRITICAL',--ERR_LEVEL
                        'CLIENT_OUTREACH',--PROCESS_NAME
                        'CO_PROCESS_UPD1',--JOB_NAME
                        '1',--NR_OF_ERROR
                        v_step, --||' '||v_err_msg,--ERROR_DESC
                        null, --ERROR_FIELD
                        v_err_code,--ERROR_CODES
                        sysdate,--CREATE_TS
                        sysdate,--UPDATE_TS
                        'CORP_ETL_CLNT_OUTREACH_WIP_BPM',--DRIVER_TABLE_NAME
                        v_err_index);--DRIVER_KEY_NUMBER
               END LOOP;
             END IF;
     END;       
     COMMIT;
  END LOOP;
  COMMIT;
  CLOSE upd1_cur;
END CO_PROCESS_UPD1;

PROCEDURE CO_PROCESS_UPD4 AS

 CURSOR upd4_cur IS
    SELECT DISTINCT 'Y'		IN_YES
                    ,'N'	IN_NO
                    ,'Complete' FINAL_STATUS
                    ,'MAXDAT' as ASPB_DELAY
                    ,CASE WHEN OLTP.OUTREACH_STEP1_TYPE = 'Delay1' THEN
                        CASE WHEN DELAY_DAYS1_UNIT LIKE '%CAL%'
                            THEN 
                            (CASE WHEN TRUNC(SYSDATE) - TRUNC(O_ASSD_OUTREACH_STEP1) >= DELAY_DAYS1
                            THEN LEAST(TRUNC(O_ASSD_OUTREACH_STEP1) + DELAY_DAYS1, TRUNC(SYSDATE))
                            ELSE NULL
                          END)
                        WHEN DELAY_DAYS1_UNIT LIKE '%BUS%'
                          THEN   CASE WHEN BUS_DAYS_BETWEEN(TRUNC(O_ASSD_OUTREACH_STEP1),TRUNC(SYSDATE)) >= DELAY_DAYS1 
                          THEN LEAST(GET_BUS_DATE(TRUNC(O_ASSD_OUTREACH_STEP1),DELAY_DAYS1),TRUNC(SYSDATE))
                          ELSE NULL
                        END
                       END 
                     ELSE NULL END AS END_DATE
                    ,OLTP.OUTREACH_STEP1_TYPE
                    ,OLTP.OUTREACH_ID
                    ,BPM.*
    FROM CORP_ETL_CLNT_OUTREACH_OLTP  oltp
    JOIN  (SELECT CECO_ID	CECO_ID
                  ,OUTREACH_ID	O_OUTREACH_ID
                  ,TRACKING_NUMBER	O_TRACKING_NUMBER
                  ,OUTREACH_STEP1_TYPE	O_OUTREACH_STEP1_TYPE
                  ,DELAY_DAYS1	O_DELAY_DAYS1
                  ,DELAY_DAYS1_UNIT	O_DELAY_DAYS1_UNIT
                  ,DELAY_DAYS2	O_DELAY_DAYS2
                  ,DELAY_DAYS2_UNIT	O_DELAY_DAYS2_UNIT
                  ,ASSD_OUTREACH_STEP1	O_ASSD_OUTREACH_STEP1
                  ,ASED_OUTREACH_STEP1	O_ASED_OUTREACH_STEP1
                  ,ASPB_OUTREACH_STEP1	O_ASPB_OUTREACH_STEP1
                  ,ASF_OUTREACH_STEP1		O_ASF_OUTREACH_STEP1
                  --,UPDATED O_UPDATED
                  ,'N' O_UPDATED
           FROM CORP_ETL_CLNT_OUTREACH_WIP_BPM
           WHERE INSTANCE_STATUS = 'Active'
           AND CANCEL_DT IS NULL
           AND ASSD_OUTREACH_STEP1 IS NOT NULL 
           AND ASED_OUTREACH_STEP1 IS NULL
          )BPM
    ON OLTP.CECO_ID = BPM.CECO_ID;
   
   TYPE t_upd4_tab IS TABLE OF upd4_cur%ROWTYPE INDEX BY PLS_INTEGER;
    upd4_tab t_upd4_tab;
    v_bulk_limit NUMBER := 500;    
    v_step VARCHAR2(100);
    v_err_code VARCHAR2(30);
    v_err_msg VARCHAR2(240);
    v_ased_outreach_step DATE;
    v_aspb_outreach_step VARCHAR2(240);
BEGIN
    
   OPEN upd4_cur;
   LOOP
     FETCH upd4_cur BULK COLLECT INTO upd4_tab LIMIT v_bulk_limit;
     EXIT WHEN upd4_tab.COUNT = 0; -- Exit when missing rows

     FOR indx IN 1 .. upd4_tab.COUNT LOOP    
       BEGIN
          v_ased_outreach_step := NULL;
          v_aspb_outreach_step := NULL;
  	      IF upd4_tab(indx).outreach_step1_type = 'Delay1' THEN            
            upd4_tab(indx).O_ASED_OUTREACH_STEP1 := upd4_tab(indx).END_DATE;
            upd4_tab(indx).O_ASPB_OUTREACH_STEP1 :=	upd4_tab(indx).ASPB_DELAY;
            upd4_tab(indx).O_ASF_OUTREACH_STEP1	:= upd4_tab(indx).IN_YES;
            upd4_tab(indx).O_UPDATED := upd4_tab(indx).IN_YES;
          ELSE
            SELECT MAX(EVENT_CREATE_DT) AS ASED_OUTREACH_STEP,MAX(EVENT_CREATED_BY) ASPB_OUTREACH_STEP
            INTO v_ased_outreach_step, v_aspb_outreach_step
            FROM (SELECT O.OUTREACH_ID,O.OUTREACH_STEP1_TYPE,O.OUTREACH_TYPE,E.EVENT_TYPE,EVENT_CREATE_DT,EVENT_CREATED_BY
                FROM 
                  ( SELECT OUTREACH_ID,OUTREACH_STEP1_TYPE,
                            CASE WHEN OUTREACH_STEP1_TYPE = 'Human Task'
                            THEN OUTREACH_REQ_TYPE
                            ELSE 'X'
                            END AS OUTREACH_TYPE         
                    FROM CORP_ETL_CLNT_OUTREACH_OLTP
                    WHERE OUTREACH_ID = upd4_tab(indx).outreach_id) O
            JOIN CORP_ETL_CLNT_OUTREACH_EVENTS E 
              ON O.OUTREACH_ID = E.EVENT_OUTREACH_ID
            JOIN CORP_ETL_CLNT_OR_ACTIVITY_LKUP ACT
              ON ACT.EVENT_TYPE = E.EVENT_TYPE
              AND O.OUTREACH_STEP1_TYPE = ACT.OUTREACH_STEP_TYPE
              AND O.OUTREACH_TYPE = COALESCE(ACT.OUTREACH_TYPE,'X')
            WHERE E.EVENT_CREATE_DT >= upd4_tab(indx).O_ASSD_OUTREACH_STEP1);
            
            IF v_ased_outreach_step IS NOT NULL THEN            
              upd4_tab(indx).O_ASED_OUTREACH_STEP1 :=	v_ased_outreach_step;
              upd4_tab(indx).O_ASPB_OUTREACH_STEP1 :=	v_aspb_outreach_step;
              upd4_tab(indx).O_ASF_OUTREACH_STEP1	:= upd4_tab(indx).IN_YES;
              upd4_tab(indx).O_UPDATED	:= upd4_tab(indx).IN_YES;
            END IF;
          END IF;
          
          IF upd4_tab(indx).O_UPDATED = 'Y' THEN
            UPDATE corp_etl_clnt_outreach_wip_bpm
            SET ASED_OUTREACH_STEP1 =	upd4_tab(indx).O_ASED_OUTREACH_STEP1
                ,ASPB_OUTREACH_STEP1	= upd4_tab(indx).O_ASPB_OUTREACH_STEP1
                ,ASF_OUTREACH_STEP1 = upd4_tab(indx).O_ASF_OUTREACH_STEP1                
                ,UPDATED = upd4_tab(indx).O_UPDATED
            WHERE ceco_id = upd4_tab(indx).ceco_id;
          
          END IF;
       EXCEPTION                      
         WHEN OTHERS THEN
           v_err_code := SQLCODE;
           v_err_msg := SUBSTR(SQLERRM, 1, 200);
            insert into corp_etl_error_log values(
                SEQ_CEEL_ID.nextval,--CEEL_ID
                sysdate,--ERR_DATE
                'CRITICAL',--ERR_LEVEL
                'CLIENT_OUTREACH',--PROCESS_NAME
                'CO_PROCESS_UPD4',--JOB_NAME
                '1',--NR_OF_ERROR
                v_step||' '||v_err_msg,--ERROR_DESC
                null,--ERROR_FIELD
                v_err_code,--ERROR_CODES
                sysdate,--CREATE_TS
                sysdate,--UPDATE_TS
                'CORP_ETL_CLNT_OUTREACH_WIP_BPM',--DRIVER_TABLE_NAME
                upd4_tab(indx).outreach_id);--DRIVER_KEY_NUMBER
       END;  
     END LOOP;
     COMMIT;
  END LOOP;
  COMMIT;
  CLOSE upd4_cur;
END CO_PROCESS_UPD4;

PROCEDURE CO_UPDATE_MAIN_TABLE AS

 CURSOR wip_cur IS
   SELECT tmp.*
       ,(SELECT MAX(incident_header_stat_hist_id) FROM corp_etl_clnt_outreach_oltp oltp WHERE oltp.outreach_id = tmp.outreach_id) max_stat_hist_id
   FROM CORP_ETL_CLNT_OUTREACH_WIP_BPM tmp 
   WHERE UPDATED = 'Y';
   
   TYPE t_wip_tab IS TABLE OF wip_cur%ROWTYPE INDEX BY PLS_INTEGER;
    wip_tab t_wip_tab;
    v_bulk_limit NUMBER := 500;    
    v_step VARCHAR2(100);
    v_err_code VARCHAR2(30);
    v_err_msg VARCHAR2(240);
    v_err_index NUMBER;
BEGIN
    
   OPEN wip_cur;
   LOOP
     FETCH wip_cur BULK COLLECT INTO wip_tab LIMIT v_bulk_limit;
     EXIT WHEN wip_tab.COUNT = 0; -- Exit when missing rows
     
     BEGIN
       FORALL indx IN 1 .. wip_tab.COUNT SAVE EXCEPTIONS         
         UPDATE corp_etl_clnt_outreach
         SET	tracking_number	=	wip_tab(indx).tracking_number
              ,	receipt_dt	=	wip_tab(indx).receipt_dt
              ,	origin	=	wip_tab(indx).origin
              ,	origin_id	=	wip_tab(indx).origin_id
              ,	create_dt	=	wip_tab(indx).create_dt
              ,	created_by	=	wip_tab(indx).created_by
              ,	outreach_req_category	=	wip_tab(indx).outreach_req_category
              ,	outreach_req_type	=	wip_tab(indx).outreach_req_type
              ,	priority	=	wip_tab(indx).priority
              ,	case_id	=	wip_tab(indx).case_id
              ,	client_id	=	wip_tab(indx).client_id
              ,	service_area	=	wip_tab(indx).service_area
              ,	county	=	wip_tab(indx).county
              ,	program_type	=	wip_tab(indx).program_type
              ,	subprogram_type	=	wip_tab(indx).subprogram_type
              ,	outreach_status	=	wip_tab(indx).outreach_status
              ,	outreach_status_dt	=	wip_tab(indx).outreach_status_dt
              ,	validation_error	=	wip_tab(indx).validation_error
              ,	notify_invalid_ind	=	wip_tab(indx).notify_invalid_ind
              ,	outreach_req_description	=	wip_tab(indx).outreach_req_description
              ,	outreach_step1_type	=	wip_tab(indx).outreach_step1_type
              ,	outreach_step2_type	=	wip_tab(indx).outreach_step2_type
              ,	outreach_step3_type	=	wip_tab(indx).outreach_step3_type
              ,	outreach_step4_type	=	wip_tab(indx).outreach_step4_type
              ,	outreach_step5_type	=	wip_tab(indx).outreach_step5_type
              ,	outreach_step6_type	=	wip_tab(indx).outreach_step6_type
              ,	curr_task_id	=	wip_tab(indx).curr_task_id
              ,	curr_task_type	=	wip_tab(indx).curr_task_type
              ,	curr_task_status	=	wip_tab(indx).curr_task_status
              ,	survey_id	=	wip_tab(indx).survey_id
              ,	survey_name	=	wip_tab(indx).survey_name
              ,	cpw_referral_dt	=	wip_tab(indx).cpw_referral_dt
              ,	cpw_referral_source_type	=	wip_tab(indx).cpw_referral_source_type
              ,	cpw_referral_source_name	=	wip_tab(indx).cpw_referral_source_name
              ,	cpw_referral_reason	=	wip_tab(indx).cpw_referral_reason
              ,	cpw_call_back_ind	=	wip_tab(indx).cpw_call_back_ind
              ,	cpw_referral_priority_status	=	wip_tab(indx).cpw_referral_priority_status
              -- TXEB-2649
              , cpw_name_of_referrer = wip_tab(indx).cpw_name_of_referrer
              , cpw_referral_source_phone = wip_tab(indx).cpw_referral_source_phone
              -- End TXEB-2649
              ,	provref_other_ind	=	wip_tab(indx).provref_other_ind
              ,	provref_provider_type	=	wip_tab(indx).provref_provider_type
              ,	provref_provider_clinic_name	=	wip_tab(indx).provref_provider_clinic_name
              ,	provref_provider_city	=	wip_tab(indx).provref_provider_city
              ,	provref_provider_county	=	wip_tab(indx).provref_provider_county
              ,	provref_provider_zip	=	wip_tab(indx).provref_provider_zip
              ,	provref_other_comment	=	wip_tab(indx).provref_other_comment
              ,	provref_provider_dt_referred	=	wip_tab(indx).provref_provider_dt_referred
              ,	provref_missed_appt_ind	=	wip_tab(indx).provref_missed_appt_ind
              ,	provref_missed_appt_dt	=	wip_tab(indx).provref_missed_appt_dt
              ,	provref_missed_appt_type	=	wip_tab(indx).provref_missed_appt_type
              ,	provref_missed_appt_outcome	=	wip_tab(indx).provref_missed_appt_outcome
              ,	provref_missed_appt_reason	=	wip_tab(indx).provref_missed_appt_reason
              ,	provref_followup_lead_test	=	wip_tab(indx).provref_followup_lead_test
              ,	provref_transport_assist	=	wip_tab(indx).provref_transport_assist
              ,	provref_schedule_assist	=	wip_tab(indx).provref_schedule_assist
              ,	provref_update_address	=	wip_tab(indx).provref_update_address
              ,	checkup_type	=	wip_tab(indx).checkup_type
              ,	checkup_tx_works_advisor	=	wip_tab(indx).checkup_tx_works_advisor
              ,	checkup_caretaker_report	=	wip_tab(indx).checkup_caretaker_report
              ,	checkup_provider_name	=	wip_tab(indx).checkup_provider_name
              ,	checkup_dt	=	wip_tab(indx).checkup_dt
              ,	exeff_schedule_appt_ind	=	wip_tab(indx).exeff_schedule_appt_ind
              ,	exeff_transport_ind	=	wip_tab(indx).exeff_transport_ind
              ,	exeff_more_info_ind	=	wip_tab(indx).exeff_more_info_ind
              ,	exeff_more_info_med_ind	=	wip_tab(indx).exeff_more_info_med_ind
              ,	exeff_more_info_dent_ind	=	wip_tab(indx).exeff_more_info_dent_ind
              ,	exeff_more_info_casemgmt_ind	=	wip_tab(indx).exeff_more_info_casemgmt_ind
              ,	exeff_help_find_prov_ind	=	wip_tab(indx).exeff_help_find_prov_ind
              ,	exeff_other_ind	=	wip_tab(indx).exeff_other_ind
              ,	exeff_phone_ind	=	wip_tab(indx).exeff_phone_ind
              ,	exeff_home_visit_ind	=	wip_tab(indx).exeff_home_visit_ind
              ,	exeff_mail_ind	=	wip_tab(indx).exeff_mail_ind
              ,	exeff_other_language_ind	=	wip_tab(indx).exeff_other_language_ind
              ,	exeff_interpreter_ind	=	wip_tab(indx).exeff_interpreter_ind
              ,	exeff_language	=	wip_tab(indx).exeff_language
              ,	home_visit_reason	=	wip_tab(indx).home_visit_reason
              ,	home_visit_not_eng_ind	=	wip_tab(indx).home_visit_not_eng_ind
              ,	home_visit_interpreter_ind	=	wip_tab(indx).home_visit_interpreter_ind
              ,	home_visit_language	=	wip_tab(indx).home_visit_language
              ,	reminder_appt_type	=	wip_tab(indx).reminder_appt_type
              ,	reminder_appt_dt	=	wip_tab(indx).reminder_appt_dt
              ,	reminder_provider_name	=	wip_tab(indx).reminder_provider_name
              ,	delay_days1	=	wip_tab(indx).delay_days1
              ,	delay_days1_unit	=	wip_tab(indx).delay_days1_unit
              ,	delay_days2	=	wip_tab(indx).delay_days2
              ,	delay_days2_unit	=	wip_tab(indx).delay_days2_unit
              ,	delay_days3	=	wip_tab(indx).delay_days3
              ,	delay_days3_unit	=	wip_tab(indx).delay_days3_unit
              ,	letter_definition_id1	=	wip_tab(indx).letter_definition_id1
              ,	letter_definition_id2	=	wip_tab(indx).letter_definition_id2
              ,	letter_definition_id3	=	wip_tab(indx).letter_definition_id3
              ,	human_task_type1	=	wip_tab(indx).human_task_type1
              ,	human_task_type2	=	wip_tab(indx).human_task_type2
              ,	generic_field1	=	wip_tab(indx).generic_field1
              ,	generic_field2	=	wip_tab(indx).generic_field2
              ,	generic_field3	=	wip_tab(indx).generic_field3
              ,	generic_field4	=	wip_tab(indx).generic_field4
              ,	generic_field5	=	wip_tab(indx).generic_field5
              ,	notify_outcome_ind	=	wip_tab(indx).notify_outcome_ind
              ,	client_notification_id	=	wip_tab(indx).client_notification_id
              ,	outcome_notification_task_id	=	wip_tab(indx).outcome_notification_task_id
              ,	last_update_dt	=	wip_tab(indx).last_update_dt
              ,	last_update_by	=	wip_tab(indx).last_update_by
              ,	final_wait_ind	=	wip_tab(indx).final_wait_ind
              ,	final_wait_days	=	wip_tab(indx).final_wait_days
              ,	final_wait_unit	=	wip_tab(indx).final_wait_unit
              ,	complete_dt	=	wip_tab(indx).complete_dt
              ,	cancel_dt	=	wip_tab(indx).cancel_dt
              ,	cancel_by	=	wip_tab(indx).cancel_by
              ,	cancel_reason	=	wip_tab(indx).cancel_reason
              ,	cancel_method	=	wip_tab(indx).cancel_method
              ,	instance_status	=	wip_tab(indx).instance_status
              ,	gwf_invalid	=	wip_tab(indx).gwf_invalid
              ,	gwf_step2_required	=	wip_tab(indx).gwf_step2_required
              ,	gwf_step3_required	=	wip_tab(indx).gwf_step3_required
              ,	gwf_step4_required	=	wip_tab(indx).gwf_step4_required
              ,	gwf_step5_required	=	wip_tab(indx).gwf_step5_required
              ,	gwf_step6_required	=	wip_tab(indx).gwf_step6_required
              ,	gwf_unsuccessful	=	wip_tab(indx).gwf_unsuccessful
              ,	gwf_final_wait	=	wip_tab(indx).gwf_final_wait
              ,	gwf_notify_client	=	wip_tab(indx).gwf_notify_client
              ,	gwf_notify_source	=	wip_tab(indx).gwf_notify_source
              ,	assd_validate_outreach_req	=	wip_tab(indx).assd_validate_outreach_req
              ,	ased_validate_outreach_req	=	wip_tab(indx).ased_validate_outreach_req
              ,	aspb_validate_outreach_req	=	wip_tab(indx).aspb_validate_outreach_req
              ,	asf_validate_outreach_req	=	wip_tab(indx).asf_validate_outreach_req
              ,	assd_perform_outreach	=	wip_tab(indx).assd_perform_outreach
              ,	ased_perform_outreach	=	wip_tab(indx).ased_perform_outreach
              ,	aspb_perform_outreach	=	wip_tab(indx).aspb_perform_outreach
              ,	asf_perform_outreach	=	wip_tab(indx).asf_perform_outreach
              ,	assd_outreach_step1	=	wip_tab(indx).assd_outreach_step1
              ,	ased_outreach_step1	=	wip_tab(indx).ased_outreach_step1
              ,	aspb_outreach_step1	=	wip_tab(indx).aspb_outreach_step1
              ,	asf_outreach_step1	=	wip_tab(indx).asf_outreach_step1
              ,	assd_outreach_step2	=	wip_tab(indx).assd_outreach_step2
              ,	ased_outreach_step2	=	wip_tab(indx).ased_outreach_step2
              ,	aspb_outreach_step2	=	wip_tab(indx).aspb_outreach_step2
              ,	asf_outreach_step2	=	wip_tab(indx).asf_outreach_step2
              ,	assd_outreach_step3	=	wip_tab(indx).assd_outreach_step3
              ,	ased_outreach_step3	=	wip_tab(indx).ased_outreach_step3
              ,	aspb_outreach_step3	=	wip_tab(indx).aspb_outreach_step3
              ,	asf_outreach_step3	=	wip_tab(indx).asf_outreach_step3
              ,	assd_outreach_step4	=	wip_tab(indx).assd_outreach_step4
              ,	ased_outreach_step4	=	wip_tab(indx).ased_outreach_step4
              ,	aspb_outreach_step4	=	wip_tab(indx).aspb_outreach_step4
              ,	asf_outreach_step4	=	wip_tab(indx).asf_outreach_step4
              ,	assd_outreach_step5	=	wip_tab(indx).assd_outreach_step5
              ,	ased_outreach_step5	=	wip_tab(indx).ased_outreach_step5
              ,	aspb_outreach_step5	=	wip_tab(indx).aspb_outreach_step5
              ,	asf_outreach_step5	=	wip_tab(indx).asf_outreach_step5
              ,	assd_outreach_step6	=	wip_tab(indx).assd_outreach_step6
              ,	ased_outreach_step6	=	wip_tab(indx).ased_outreach_step6
              ,	aspb_outreach_step6	=	wip_tab(indx).aspb_outreach_step6
              ,	asf_outreach_step6	=	wip_tab(indx).asf_outreach_step6
              ,	assd_perform_home_visit	=	wip_tab(indx).assd_perform_home_visit
              ,	ased_perform_home_visit	=	wip_tab(indx).ased_perform_home_visit
              ,	aspb_perform_home_visit	=	wip_tab(indx).aspb_perform_home_visit
              ,	asf_perform_home_visit	=	wip_tab(indx).asf_perform_home_visit
              ,	assd_termination_timer	=	wip_tab(indx).assd_termination_timer
              ,	ased_termination_timer	=	wip_tab(indx).ased_termination_timer
              ,	asf_termination_timer	=	wip_tab(indx).asf_termination_timer
              ,	assd_notify_client	=	wip_tab(indx).assd_notify_client
              ,	ased_notify_client	=	wip_tab(indx).ased_notify_client
              ,	aspb_notify_client	=	wip_tab(indx).aspb_notify_client
              ,	asf_notify_client	=	wip_tab(indx).asf_notify_client
              ,	assd_notify_source	=	wip_tab(indx).assd_notify_source
              ,	ased_notify_source	=	wip_tab(indx).ased_notify_source
              ,	aspb_notify_source	=	wip_tab(indx).aspb_notify_source
              ,	asf_notify_source	=	wip_tab(indx).asf_notify_source
              ,	stage_done_date	=	wip_tab(indx).stage_done_date
              ,	max_inci_header_stat_hist_id	=	wip_tab(indx).max_stat_hist_id
         WHERE ceco_id = wip_tab(indx).ceco_id;

     EXCEPTION                      
        WHEN OTHERS THEN
          IF SQLCODE = -24381 THEN
            FOR i IN 1 .. SQL%BULK_EXCEPTIONS.COUNT LOOP
              v_err_code := SQL%BULK_EXCEPTIONS(i).ERROR_CODE; --SQLCODE;
              v_err_index := SQL%BULK_EXCEPTIONS(i).ERROR_INDEX;
              --v_err_msg := SUBSTR(SQLERRM, 1, 200);
              INSERT INTO corp_etl_error_log 
              VALUES(SEQ_CEEL_ID.nextval,--CEEL_ID
                     sysdate,--ERR_DATE
                     'CRITICAL',--ERR_LEVEL
                     'CLIENT_OUTREACH',--PROCESS_NAME
                     'CO_UPDATE_MAIN_TABLE',--JOB_NAME
                     '1',--NR_OF_ERROR
                     v_step, --||' '||v_err_msg,--ERROR_DESC
                     null,--ERROR_FIELD
                     v_err_code,--ERROR_CODES
                     sysdate,--CREATE_TS
                     sysdate,--UPDATE_TS
                     'CORP_ETL_CLNT_OUTREACH',--DRIVER_TABLE_NAME
                     v_err_index);--DRIVER_KEY_NUMBER
            END LOOP;
          END IF;                     
     END;       
     COMMIT;
  END LOOP;
  COMMIT;
  CLOSE wip_cur;
END CO_UPDATE_MAIN_TABLE;

END ETL_CLIENT_OUTREACH_PKG;
/

alter session set plsql_code_type = interpreted;
