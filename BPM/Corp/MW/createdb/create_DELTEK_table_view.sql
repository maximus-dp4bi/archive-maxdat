--DELTEK HOURS

CREATE TABLE D_DELTEK_HOURS 
(
  DDH_ID NUMBER NOT NULL 
, EMPLOYEE_ID VARCHAR2(30 BYTE) 
, LABOR_GRP_TYPE VARCHAR2(400 BYTE) 
, LAST_NAME VARCHAR2(400 BYTE) 
, FIRST_NAME VARCHAR2(400 BYTE) 
, TITLE VARCHAR2(400 BYTE) 
, EMPL_ORG_ID VARCHAR2(400 BYTE) 
, EMPL_ORG_NAME VARCHAR2(400 BYTE) 
, APPROVAL_NAME VARCHAR2(400 BYTE) 
, PROJECT_ID VARCHAR2(400 BYTE) 
, PROJECT_NAME VARCHAR2(400 BYTE) 
, ORG_ID VARCHAR2(400 BYTE) 
, ORG_NAME VARCHAR2(400 BYTE) 
, PAY_TYPE VARCHAR2(400 BYTE) 
, PLC_ID VARCHAR2(400 BYTE) 
, HOURS_DATE DATE 
, ENTERED_HOURS NUMBER 
, PRODUCTIVE_HOURS NUMBER 
, COMMENTS VARCHAR2(4000 BYTE) 
, NOTES VARCHAR2(4000 BYTE) 
, MAXDAT_AUDIT_CREATE_DT DATE 
, MAXDAT_AUDIT_UPDATE_DT DATE 
, SUP_UPDATED VARCHAR2(2 BYTE) DEFAULT 'N' 
, CONSTRAINT SYS_C004984 PRIMARY KEY 
  (
    DDH_ID 
  )
  ENABLE 
) 
LOGGING 
TABLESPACE MAXDAT_DATA; 

ALTER TABLE D_DELTEK_HOURS
ADD CONSTRAINT DELTEK_UNIQUE UNIQUE 
(
  EMPLOYEE_ID 
, PROJECT_ID 
, PAY_TYPE 
, HOURS_DATE 
)
ENABLE;

GRANT SELECT ON D_DELTEK_HOURS TO maxdat_read_only;

CREATE VIEW D_DELTEK_HOURS_SV
AS SELECT
DDH_ID,
EMPLOYEE_ID,
LABOR_GRP_TYPE,
LAST_NAME,
FIRST_NAME,
TITLE,
EMPL_ORG_ID,
EMPL_ORG_NAME,
APPROVAL_NAME,
PROJECT_ID,
PROJECT_NAME,
ORG_ID,
ORG_NAME,
PAY_TYPE,
PLC_ID,
HOURS_DATE,
ENTERED_HOURS,
PRODUCTIVE_HOURS,
COMMENTS,
NOTES,
SUP_UPDATED,
MAXDAT_AUDIT_CREATE_DT,
MAXDAT_AUDIT_UPDATE_DT
FROM D_DELTEK_HOURS;

GRANT SELECT ON D_DELTEK_HOURS_SV TO maxdat_read_only;

CREATE SEQUENCE SEQ_DDH_ID START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

alter session set plsql_code_type = native;

create or replace trigger TRG_BIU_D_DELTEK_HOURS 
before insert or update on D_DELTEK_HOURS 
for each row 

begin 
  
  if inserting then     
          if :new.DDH_ID is null then
             :new.DDH_ID := seq_ddh_id.nextval;
          end if; 
          :new.MAXDAT_AUDIT_CREATE_DT := SYSDATE;
          :new.MAXDAT_AUDIT_UPDATE_DT := SYSDATE;
    
        end if;
  
     if updating then 
          :new.MAXDAT_AUDIT_UPDATE_DT :=SYSDATE;
      end if;
end;
/
CREATE TABLE D_DELTEK_HOURS_TMP 
(
  TMP_DDH_ID NUMBER NOT NULL 
, EMPLOYEE_ID VARCHAR2(30 BYTE) 
, LABOR_GRP_TYPE VARCHAR2(400 BYTE) 
, LAST_NAME VARCHAR2(400 BYTE) 
, FIRST_NAME VARCHAR2(400 BYTE) 
, TITLE VARCHAR2(400 BYTE) 
, EMPL_ORG_ID VARCHAR2(400 BYTE) 
, EMPL_ORG_NAME VARCHAR2(400 BYTE) 
, APPROVAL_NAME VARCHAR2(400 BYTE) 
, PROJECT_ID VARCHAR2(400 BYTE) 
, PROJECT_NAME VARCHAR2(400 BYTE) 
, ORG_ID VARCHAR2(400 BYTE) 
, ORG_NAME VARCHAR2(400 BYTE) 
, PAY_TYPE VARCHAR2(400 BYTE) 
, PLC_ID VARCHAR2(400 BYTE) 
, HOURS_DATE VARCHAR2(20 BYTE) 
, ENTERED_HOURS VARCHAR2(20 BYTE) 
, PRODUCTIVE_HOURS NUMBER 
, COMMENTS VARCHAR2(4000 BYTE) 
, NOTES VARCHAR2(4000 BYTE) 
, PROCESSED VARCHAR2(1 BYTE) DEFAULT 'N' 
, CREATE_DT DATE 
, UPDATE_DT DATE 
) 
TABLESPACE MAXDAT_DATA;


alter session set plsql_code_type = interpreted;
commit;