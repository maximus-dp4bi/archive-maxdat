-- BPM_Process_MW_Tables.sql

DECLARE
    l_sql                           VARCHAR2(1000);
BEGIN

    FOR r IN (
                SELECT  ac.table_name, 
                        ac.constraint_name
                  FROM  all_constraints             ac
                 WHERE  ac.constraint_type      =   'R' 
                   AND  ac.owner                =   USER
                   AND  ac.table_name           IN  (
                                                        'D_BPM_ENTITY', 
                                                        'D_BPM_ENTITY_INSTANCE', 
                                                        'D_BPM_FLOW_INSTANCE', 
                                                        'D_BPM_PROCESS_INSTANCE', 
                                                        'D_BPM_PROCESS_SEGMENT', 
                                                        'D_BPM_PROCESS_SEGMENT_INSTANCE', 
                                                        'D_BPM_TASK_TYPE_ENTITY', 
                                                        'D_MW_TASK_INSTANCE', 
                                                        'F_BPM_PROCESS_BY_DATE', 
                                                        'F_STAFF_BY_DATE'
                                                    )
             )
    LOOP
        l_sql   :=  'alter table '||r.table_name ||' drop constraint '||r.constraint_name;
        EXECUTE IMMEDIATE l_sql;    
    END LOOP;
END;
/

ALTER TABLE D_BPM_ENTITY ADD CONSTRAINT D_BPM_ENTITY_FK1 FOREIGN KEY ( ENTITY_TYPE_ID ) REFERENCES D_BPM_ENTITY_TYPE ( ENTITY_TYPE_ID ) NOT DEFERRABLE;
ALTER TABLE D_BPM_ENTITY ADD CONSTRAINT D_BPM_ENTITY_FK2 FOREIGN KEY ( PROCESS_ID ) REFERENCES D_BPM_PROCESS ( PROCESS_ID ) NOT DEFERRABLE ;
                                        
ALTER TABLE D_BPM_ENTITY_INSTANCE ADD CONSTRAINT D_BPM_ENTITY_INSTANCE_FK1 FOREIGN KEY ( ENTITY_ID ) REFERENCES D_BPM_ENTITY ( ENTITY_ID ) NOT DEFERRABLE;
ALTER TABLE D_BPM_ENTITY_INSTANCE ADD CONSTRAINT D_BPM_ENTITY_INSTANCE_FK2 FOREIGN KEY ( ENTITY_TYPE_ID ) REFERENCES D_BPM_ENTITY_TYPE ( ENTITY_TYPE_ID ) NOT DEFERRABLE;
ALTER TABLE D_BPM_ENTITY_INSTANCE ADD CONSTRAINT D_BPM_ENTITY_INSTANCE_FK3 FOREIGN KEY ( PROCESS_INSTANCE_ID ) REFERENCES D_BPM_PROCESS_INSTANCE ( PROCESS_INSTANCE_ID ) NOT DEFERRABLE; 
                                                 
ALTER TABLE D_BPM_FLOW_INSTANCE ADD CONSTRAINT D_BPM_FLOW_INSTANCE_FK1 FOREIGN KEY ( FLOW_ID ) REFERENCES D_BPM_FLOW ( FLOW_ID ) NOT DEFERRABLE;                                               
ALTER TABLE D_BPM_FLOW_INSTANCE ADD CONSTRAINT D_BPM_FLOW_INSTANCE_FK2 FOREIGN KEY ( PROCESS_INSTANCE_ID ) REFERENCES D_BPM_PROCESS_INSTANCE ( PROCESS_INSTANCE_ID ) NOT DEFERRABLE;                                               
ALTER TABLE D_BPM_FLOW_INSTANCE ADD CONSTRAINT D_BPM_FLOW_INSTANCE_FK3 FOREIGN KEY ( FLOW_SOURCE_ENTITY_INSTANCE_ID ) REFERENCES D_BPM_ENTITY_INSTANCE ( ENTITY_INSTANCE_ID ) NOT DEFERRABLE;                                               
ALTER TABLE D_BPM_FLOW_INSTANCE ADD CONSTRAINT D_BPM_FLOW_INSTANCE_FK4 FOREIGN KEY ( FLOW_DEST_ENTITY_INST_ID ) REFERENCES D_BPM_ENTITY_INSTANCE ( ENTITY_INSTANCE_ID ) NOT DEFERRABLE;
                                               
ALTER TABLE D_BPM_PROCESS_INSTANCE ADD CONSTRAINT D_BPM_PROCESS_INSTANCE_FK1 FOREIGN KEY ( PROCESS_ID ) REFERENCES D_BPM_PROCESS ( PROCESS_ID ) NOT DEFERRABLE;

ALTER TABLE D_BPM_PROCESS_SEGMENT ADD CONSTRAINT D_BPM_PROCESS_SEG_FK1 FOREIGN KEY ( PROCESS_ID ) REFERENCES D_BPM_PROCESS ( PROCESS_ID ) NOT DEFERRABLE;
ALTER TABLE D_BPM_PROCESS_SEGMENT ADD CONSTRAINT D_BPM_PROCESS_SEG_FK2 FOREIGN KEY ( SEGMENT_START_ENTITY_ID ) REFERENCES D_BPM_ENTITY ( ENTITY_ID ) NOT DEFERRABLE;                                                 
ALTER TABLE D_BPM_PROCESS_SEGMENT ADD CONSTRAINT D_BPM_PROCESS_SEG_FK3 FOREIGN KEY ( SEGMENT_FINISH_ENTITY_ID ) REFERENCES D_BPM_ENTITY ( ENTITY_ID ) NOT DEFERRABLE;
                                                 
ALTER TABLE D_BPM_PROCESS_SEGMENT_INSTANCE ADD CONSTRAINT D_BPM_PROCESS_SEG_INST_FK1 FOREIGN KEY ( PROCESS_SEGMENT_ID ) REFERENCES D_BPM_PROCESS_SEGMENT ( PROCESS_SEGMENT_ID ) NOT DEFERRABLE;
ALTER TABLE D_BPM_PROCESS_SEGMENT_INSTANCE ADD CONSTRAINT D_BPM_PROCESS_SEG_INST_FK2 FOREIGN KEY ( PROCESS_INSTANCE_ID ) REFERENCES D_BPM_PROCESS_INSTANCE ( PROCESS_INSTANCE_ID ) NOT DEFERRABLE;
ALTER TABLE D_BPM_PROCESS_SEGMENT_INSTANCE ADD CONSTRAINT D_BPM_PROCESS_SEG_INST_FK3 FOREIGN KEY ( SEGMENT_START_ENTITY_INST_ID ) REFERENCES D_BPM_ENTITY_INSTANCE ( ENTITY_INSTANCE_ID ) NOT DEFERRABLE;                                                          
ALTER TABLE D_BPM_PROCESS_SEGMENT_INSTANCE ADD CONSTRAINT D_BPM_PROCESS_SEG_INST_FK4 FOREIGN KEY ( SEGMENT_END_ENTITY_INST_ID ) REFERENCES D_BPM_ENTITY_INSTANCE ( ENTITY_INSTANCE_ID ) NOT DEFERRABLE;

ALTER TABLE D_BPM_TASK_TYPE_ENTITY ADD CONSTRAINT D_BPM_TASK_TYPE_ENTITY_FK1 FOREIGN KEY ( TASK_TYPE_ID ) REFERENCES D_TASK_TYPES ( TASK_TYPE_ID ) NOT DEFERRABLE;
ALTER TABLE D_BPM_TASK_TYPE_ENTITY ADD CONSTRAINT D_BPM_TASK_TYPE_ENTITY_FK2 FOREIGN KEY ( ENTITY_ID ) REFERENCES D_BPM_ENTITY ( ENTITY_ID ) NOT DEFERRABLE;

ALTER TABLE D_MW_TASK_INSTANCE ADD CONSTRAINT D_MW_TASK_INSTANCE_FK1 FOREIGN KEY ( TASK_TYPE_ID ) REFERENCES D_TASK_TYPES ( TASK_TYPE_ID ) NOT DEFERRABLE;

ALTER TABLE F_BPM_PROCESS_BY_DATE ADD CONSTRAINT F_BPM_PROCESS_BY_DATE_FK1 FOREIGN KEY ( PROCESS_ID ) REFERENCES D_BPM_PROCESS ( PROCESS_ID ) NOT DEFERRABLE;

ALTER TABLE F_STAFF_BY_DATE ADD CONSTRAINT F_STAFF_BY_DATE_FK1 FOREIGN KEY ( STAFF_ID ) REFERENCES D_STAFF ( STAFF_ID ) NOT DEFERRABLE;

-- create_ETL_MW_views.sql

DROP VIEW D_BPM_PROCESS_SEGMENT_INSTANCE_SV;

CREATE OR REPLACE VIEW D_BPM_PROCESS_SEGMENT_INST_SV as
SELECT
    PROCESS_SEGMENT_INSTANCE_ID
  , PROCESS_SEGMENT_ID
  , PROCESS_INSTANCE_ID
  , PROCESS_SEGMENT_NAME
  , PROCESS_SEGMENT_DESCRIPTION 
  , SEGMENT_START_ENTITY_INST_ID
  , SEGMENT_END_ENTITY_INST_ID
  , PROCESS_SEGMENT_START_DATE
  , PROCESS_SEGMENT_COMPLETE_DATE
  , TIMELINESS_STATUS
FROM D_BPM_PROCESS_SEGMENT_INSTANCE WITH read only;

GRANT SELECT ON D_BPM_PROCESS_SEGMENT_INST_SV TO MAXDAT_READ_ONLY;

-- Missing views

CREATE OR REPLACE VIEW D_MW_LAST_UPDATE_BY_NAME_SV
AS select "DMWLUBN_ID","Last Update By Name" from D_MW_LAST_UPDATE_BY_NAME WITH READ ONLY;

GRANT SELECT ON D_MW_LAST_UPDATE_BY_NAME_SV TO MAXDAT_READ_ONLY;

CREATE OR REPLACE VIEW D_MW_OWNER_SV
AS select "DMWO_ID","Owner Name" from D_MW_OWNER WITH READ ONLY;

GRANT SELECT ON D_MW_OWNER_SV TO MAXDAT_READ_ONLY;

CREATE OR REPLACE VIEW STAFF_LKUP
AS Select Staff_id, First_Name, Last_Name, Middle_Name
       ,TRIM(LAST_NAME) || DECODE(LAST_NAME, NULL, NULL, ',') || TRIM(FIRST_NAME) || RTRIM(LPAD(SUBSTR(MIDDLE_NAME, 1, 1),2, ' ')) AS Display_Name
From
        (
        SELECT TO_CHAR(staff_id) Staff_ID, First_Name, Last_Name, Middle_Name FROM D_STAFF
         UNION
        SELECT 'IMG' Staff_ID, 'IMG' First_Name, '' Last_Name, '' Middle_Name FROM DUAL
         UNION
        SELECT '' Staff_ID, '' First_Name, '' Last_Name, '' Middle_Name FROM DUAL S6
        ) Staff_View;

GRANT SELECT ON STAFF_LKUP TO MAXDAT_READ_ONLY;

CREATE OR REPLACE VIEW STAFF_STG
AS select "STAFF_ID","EXT_STAFF_NUMBER","DOB","SSN","FIRST_NAME","FIRST_NAME_CANON","FIRST_NAME_SOUND_LIKE","GENDER_CD","START_DATE","END_DATE","PHONE_NUMBER","LAST_NAME","LAST_NAME_CANON","LAST_NAME_SOUND_LIKE","CREATED_BY","CREATE_TS","UPDATED_BY","UPDATE_TS","MIDDLE_NAME","MIDDLE_NAME_CANON","MIDDLE_NAME_SOUND_LIKE","EMAIL","FAX_NUMBER","NOTE_REFID","DEPLOYMENT_STAFF_NUM","DEFAULT_GROUP_ID","STAFF_TYPE_CD","UNIQUE_STAFF_ID","VOID_IND" from D_STAFF;

GRANT SELECT ON STAFF_STG TO MAXDAT_READ_ONLY;





