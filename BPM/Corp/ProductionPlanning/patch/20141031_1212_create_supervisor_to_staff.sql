
ALTER TABLE pp_bo_task add (SCENARIO_GROUP_ID NUMBER(38,0));

CREATE TABLE PP_BO_SUPERVISOR_TO_STAFF
(
 STAFF_ID	NUMBER(38)	NOT NULL
,SUPERVISOR_ID	NUMBER(38)	NOT NULL
,EFFECTIVE_DATE DATE NOT NULL
,END_DATE	DATE	
,PRIORITY	NUMBER(38)	
,EXTRACT_DT             DATE NOT NULL
,LAST_UPDATE_DT         DATE NOT NULL
,LAST_UPDATED_BY        VARCHAR2(30) NOT NULL
);

ALTER TABLE PP_BO_SUPERVISOR_TO_STAFF ADD CONSTRAINT PP_BO_SUPERVISOR_TO_STAFF_PK PRIMARY KEY
(
  STAFF_ID
  ,SUPERVISOR_ID
  ,EFFECTIVE_DATE
);

CREATE INDEX SUPERVISOR_TO_STAFF_ID_FK ON PP_BO_SUPERVISOR_TO_STAFF
  (
    STAFF_ID ASC
  )
TABLESPACE MAXDAT_INDX LOGGING ;

CREATE INDEX SUPERVISOR_TO_SUPRVSR_ID_FK ON PP_BO_SUPERVISOR_TO_STAFF
  (
    SUPERVISOR_ID ASC
  )
TABLESPACE MAXDAT_INDX LOGGING ;

ALTER TABLE PP_BO_SUPERVISOR_TO_STAFF ADD CONSTRAINT PP_BO_SUPERVISR_TO_STAFF_ID_FK FOREIGN KEY ( STAFF_ID ) REFERENCES PP_BO_STAFF ( STAFF_ID ) NOT DEFERRABLE ;
ALTER TABLE PP_BO_SUPERVISOR_TO_STAFF ADD CONSTRAINT PP_BO_SUPERVISOR_ID_FK FOREIGN KEY ( SUPERVISOR_ID ) REFERENCES PP_BO_SUPERVISOR ( SUPERVISOR_ID ) NOT DEFERRABLE ;

CREATE OR REPLACE TRIGGER BIU_PP_BO_SUPERVISOR_TO_STAFF
    BEFORE INSERT OR UPDATE ON PP_BO_SUPERVISOR_TO_STAFF
    FOR EACH ROW 
    ENABLE 
BEGIN
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATED_BY := USER;
END; 
/


CREATE OR REPLACE VIEW PP_BO_SUPERVISOR_TO_STAFF_SV AS
SELECT 
  STAFF_ID	
 ,SUPERVISOR_ID	
 ,EFFECTIVE_DATE 
 ,END_DATE	
 ,PRIORITY	
FROM PP_BO_SUPERVISOR_TO_STAFF
WITH READ ONLY;