CREATE SEQUENCE SEQ_PP_BO_ACTUALS START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE TABLE PP_BO_ACTUALS
(PP_BOA_ID NUMBER NOT NULL
,STAFF_ID NUMBER NOT NULL
,EVENT_ID NUMBER NOT NULL
,TASK_START DATE NOT NULL
,TASK_END DATE
,TASK_CATEGORY_ID NUMBER NOT NULL
,HANDLE_TIME NUMBER
,CREATE_DATE DATE NOT NULL
,EXTRACT_DT DATE NOT NULL 
,LAST_UPDATE_DT DATE NOT NULL
,LAST_UPDATED_BY VARCHAR2 (30) NOT NULL
);
ALTER TABLE PP_BO_ACTUALS ADD CONSTRAINT P_BO_ACTUALS_PK PRIMARY KEY
(
  PP_BOA_ID
);
CREATE INDEX STAFF_ID_FK ON PP_BO_ACTUALS
  (
    STAFF_ID ASC
  )
TABLESPACE MAXDAT_INDX LOGGING ;
CREATE INDEX EVENT_ID_FK ON PP_BO_ACTUALS
  (
    EVENT_ID ASC
  )
TABLESPACE MAXDAT_INDX LOGGING ;
CREATE INDEX TASK_CATEGORY_ID_FK ON PP_BO_ACTUALS
  (
    TASK_CATEGORY_ID ASC
  )
TABLESPACE MAXDAT_INDX LOGGING ;

CREATE TABLE PP_BO_STAFF
(STAFF_ID	      NUMBER(38)	NOT NULL
,NATIONAL_ID	      VARCHAR2(250)	NOT NULL
,LAST_NAME	      VARCHAR2(50)	NOT NULL
,FIRST_NAME	      VARCHAR2(50)	
,MIDDLE_NAME	      VARCHAR2(50)	
,SUFFIX	              VARCHAR2(50)	
,HIRE_DATE	      DATE NOT NULL
,TERMINATION_DATE      DATE	
,SCHEDULE_TYPE	      NUMBER(38)	
,DELETE_DATE	      DATE	
,SENIORITY_EFFECTIVE_DATE	DATE	
,OWNER_USER	      NUMBER(38) NOT NULL
,MODIFY_USER	      NUMBER(38)	
,OWNER_DATE	      DATE	NOT NULL
,MODIFY_DATE	      DATE	
,EMAIL_ADDRESS	      VARCHAR2(250)	
,COMMAND_SCRIPT	      VARCHAR2(4000)	
,MESSAGE_BUFFER	      VARCHAR2(4000)	
,SECONDARY_ID	      VARCHAR2(250)	
,ADDRESS	      VARCHAR2(2000)	
,WORK_PHONE	      VARCHAR2(28)	
,HOME_PHONE	      VARCHAR2(28)	
,TERMINATION_POLICY_ID NUMBER(38)	
,TERMINATION_REASON    VARCHAR2(2000)	
,PIP_ADDRESS	      VARCHAR2(250)	
,TEXT_ADDRESS	      VARCHAR2(250)	
,CELL_PHONE	      VARCHAR2(28)	
,EXTRACT_DT           DATE
,LAST_UPDATE_DT       DATE
,LAST_UPDATED_BY      VARCHAR2 (30) NOT NULL
);

ALTER TABLE PP_BO_STAFF ADD CONSTRAINT PP_BO_STAFF_PK PRIMARY KEY
(
  STAFF_ID
);

CREATE TABLE PP_BO_TASK_CATEGORY
(
 TASK_CATEGORY_ID	NUMBER(38)	NOT NULL
,NAME	                VARCHAR2(50 )	NOT NULL
,DESCRIPTION	        VARCHAR2(250 )	
,CATEGORY	        NUMBER(38)	NOT NULL
,PAID	                NUMBER(38)	NOT NULL
,SEQUENCE	        NUMBER(38)	
,EXTRACT_DT             DATE NOT NULL
,LAST_UPDATE_DT         DATE NOT NULL
,LAST_UPDATED_BY        VARCHAR2(30) NOT NULL
);

ALTER TABLE PP_BO_TASK_CATEGORY ADD CONSTRAINT PP_BO_TASK_CATEGORY_PK PRIMARY KEY
(
  TASK_CATEGORY_ID
);


CREATE TABLE PP_BO_TASK
(
 STAFF_ID	        NUMBER(38)	NOT NULL
,TASK_START	        DATE	NOT NULL
,TASK_END	        DATE	NOT NULL
,TASK_CATEGORY_ID	NUMBER(38)	NOT NULL
,DURATION	        NUMBER(38)	NOT NULL
,EVENT_ID	        NUMBER(38)	NOT NULL
,SUPERVISOR	        NUMBER(38)	
,TASK_MODIFICATION_REQUEST_REF	NUMBER(38)	
,TASK_ID	NUMBER(38)	NOT NULL
,SCENARIO_GROUP_ID NUMBER(38,0) NOT NULL
,EXTRACT_DT             DATE NOT NULL
,LAST_UPDATE_DT         DATE NOT NULL
,LAST_UPDATED_BY        VARCHAR2(30) NOT NULL
);

ALTER TABLE PP_BO_TASK ADD CONSTRAINT PP_BO_TASK_PK PRIMARY KEY
(
  TASK_ID
);

CREATE INDEX TASK_STAFF_ID_FK ON PP_BO_TASK
  (
    STAFF_ID ASC
  )
TABLESPACE MAXDAT_INDX LOGGING ;

CREATE INDEX TASK_EVENT_ID_FK ON PP_BO_TASK
  (
    EVENT_ID ASC
  )
TABLESPACE MAXDAT_INDX LOGGING ;

CREATE INDEX TASK_TASK_CATEGORY_ID_FK ON PP_BO_TASK
  (
    TASK_CATEGORY_ID ASC
  )
TABLESPACE MAXDAT_INDX LOGGING ;

CREATE TABLE PP_BO_SUPERVISOR
(
 STAFF_ID	NUMBER(38)	NOT NULL
,DESCRIPTION	VARCHAR2(250)	
,RANK	        NUMBER(38)	
,SUPERVISOR_ID	NUMBER(38)	NOT NULL
,DELETE_DATE	DATE	
,EXTRACT_DT             DATE NOT NULL
,LAST_UPDATE_DT         DATE NOT NULL
,LAST_UPDATED_BY        VARCHAR2(30) NOT NULL
);

ALTER TABLE PP_BO_SUPERVISOR ADD CONSTRAINT PP_BO_SUPERVISOR_PK PRIMARY KEY
(
  SUPERVISOR_ID
);

CREATE INDEX SUPERVISOR_STAFF_ID_FK ON PP_BO_SUPERVISOR
  (
    STAFF_ID ASC
  )
TABLESPACE MAXDAT_INDX LOGGING ;

CREATE TABLE PP_BO_SCHEDULE_MONITOR
(
 TASK_START	DATE	        NOT NULL
,STAFF_ID	NUMBER(38)	NOT NULL
,EVENT_ID	NUMBER(38)	NOT NULL
,TASK_END	DATE	        NOT NULL
,TASK_ROWID	ROWID	        
,MESSAGE_SENT	NUMBER(38)
,EXTRACT_DT        DATE NOT NULL
,LAST_UPDATE_DT    DATE NOT NULL
,LAST_UPDATED_BY   VARCHAR2(30) NOT NULL
);

ALTER TABLE PP_BO_SCHEDULE_MONITOR ADD CONSTRAINT PP_BO_SCHEDULE_MONITOR_PK PRIMARY KEY
(
  TASK_START
  ,STAFF_ID
  ,EVENT_ID
  ,TASK_END
);

CREATE TABLE PP_BO_STAFF_GROUP
(
STAFF_GROUP_ID	NUMBER(38)	NOT NULL
,PFUSER_ID	NUMBER(38)	
,NAME	        VARCHAR2(50)	NOT NULL
,CATEGORY	NUMBER(38)	NOT NULL
,DESCRIPTION	VARCHAR2(250)	
,OWNER_USER	NUMBER(38)	NOT NULL
,MODIFY_USER	NUMBER(38)	
,OWNER_DATE	DATE	NOT NULL
,MODIFY_DATE	DATE	
,DELETE_DATE	DATE
,EXTRACT_DT        DATE NOT NULL
,LAST_UPDATE_DT    DATE NOT NULL
,LAST_UPDATED_BY   VARCHAR2(30) NOT NULL
);
ALTER TABLE PP_BO_STAFF_GROUP ADD CONSTRAINT PP_BO_STAFF_GROUP_PK PRIMARY KEY
(
  STAFF_GROUP_ID
);

CREATE TABLE PP_BO_STAFF_GROUP_TO_STAFF
(
STAFF_ID	NUMBER(38)	NOT NULL
,STAFF_GROUP_ID	NUMBER(38)	NOT NULL
,END_DATE	DATE	
,START_DATE	DATE	NOT NULL
,EXTRACT_DT             DATE NOT NULL
,LAST_UPDATE_DT         DATE NOT NULL
,LAST_UPDATED_BY        VARCHAR2(30) NOT NULL
);

ALTER TABLE PP_BO_STAFF_GROUP_TO_STAFF ADD CONSTRAINT PP_BO_STAFF_GROUP_TO_STAF_PK PRIMARY KEY
(
  STAFF_GROUP_ID
  ,STAFF_ID
  ,START_DATE
);

CREATE INDEX PP_BO_STAFF_ID_FK ON PP_BO_STAFF_GROUP_TO_STAFF
  (
    STAFF_ID ASC
  )
TABLESPACE MAXDAT_INDX LOGGING ;

CREATE INDEX PP_BO_STAFF_GROUP_ID_FK ON PP_BO_STAFF_GROUP_TO_STAFF
  (
    STAFF_GROUP_ID ASC
  )
TABLESPACE MAXDAT_INDX LOGGING ;

CREATE TABLE PP_BO_SUPERVISOR_TO_STAFF
(
 STAFF_ID	NUMBER(38)	NOT NULL
,SUPERVISOR_ID	NUMBER(38)	NOT NULL
,EFFECTIVE_DATE DATE NOT NULL
,END_DATE	DATE	
,PRIORITY	NUMBER(38)	
,EXTRACT_DT             DATE NOT NULL
,LAST_UPDATE_DT         DATE NOT NULL
,LAST_UPDATED_BY        VARCHAR2(30) NOT NULL
);

ALTER TABLE PP_BO_SUPERVISOR_TO_STAFF ADD CONSTRAINT PP_BO_SUPERVISOR_TO_STAFF_PK PRIMARY KEY
(
  STAFF_ID
  ,SUPERVISOR_ID
  ,EFFECTIVE_DATE
);

CREATE INDEX SUPERVISOR_TO_STAFF_ID_FK ON PP_BO_SUPERVISOR_TO_STAFF
  (
    STAFF_ID ASC
  )
TABLESPACE MAXDAT_INDX LOGGING ;

CREATE INDEX SUPERVISOR_TO_SUPRVSR_ID_FK ON PP_BO_SUPERVISOR_TO_STAFF
  (
    SUPERVISOR_ID ASC
  )
TABLESPACE MAXDAT_INDX LOGGING ;

ALTER TABLE PP_BO_ACTUALS ADD CONSTRAINT STAFF_ID_FK FOREIGN KEY ( STAFF_ID ) REFERENCES PP_BO_STAFF ( STAFF_ID ) NOT DEFERRABLE ;
ALTER TABLE PP_BO_ACTUALS ADD CONSTRAINT TSK_CATEGORY_ID_FK FOREIGN KEY ( TASK_CATEGORY_ID ) REFERENCES PP_BO_TASK_CATEGORY ( TASK_CATEGORY_ID ) NOT DEFERRABLE ;
ALTER TABLE PP_BO_TASK ADD CONSTRAINT TSK_STAFF_ID_FK FOREIGN KEY ( STAFF_ID ) REFERENCES PP_BO_STAFF ( STAFF_ID ) NOT DEFERRABLE ;
ALTER TABLE PP_BO_TASK ADD CONSTRAINT TSK_TASK_CATEGORY_ID_FK FOREIGN KEY ( TASK_CATEGORY_ID ) REFERENCES PP_BO_TASK_CATEGORY ( TASK_CATEGORY_ID ) NOT DEFERRABLE ;
ALTER TABLE PP_BO_SUPERVISOR ADD CONSTRAINT SUPERVISR_STAFF_ID_FK FOREIGN KEY ( STAFF_ID ) REFERENCES PP_BO_STAFF ( STAFF_ID ) NOT DEFERRABLE ;
ALTER TABLE PP_BO_SCHEDULE_MONITOR ADD CONSTRAINT SCHED_MON_STAFF_ID_FK FOREIGN KEY ( STAFF_ID ) REFERENCES PP_BO_STAFF ( STAFF_ID ) NOT DEFERRABLE ;
ALTER TABLE PP_BO_STAFF_GROUP_TO_STAFF ADD CONSTRAINT PP_BO_STAFF_ID_FK FOREIGN KEY ( STAFF_ID ) REFERENCES PP_BO_STAFF ( STAFF_ID ) NOT DEFERRABLE ;
ALTER TABLE PP_BO_STAFF_GROUP_TO_STAFF ADD CONSTRAINT PP_BO_STAFF_GROUP_ID_FK FOREIGN KEY ( STAFF_GROUP_ID ) REFERENCES PP_BO_STAFF_GROUP ( STAFF_GROUP_ID ) NOT DEFERRABLE ;
ALTER TABLE PP_BO_SUPERVISOR_TO_STAFF ADD CONSTRAINT PP_BO_SUPERVISR_TO_STAFF_ID_FK FOREIGN KEY ( STAFF_ID ) REFERENCES PP_BO_STAFF ( STAFF_ID ) NOT DEFERRABLE ;
ALTER TABLE PP_BO_SUPERVISOR_TO_STAFF ADD CONSTRAINT PP_BO_SUPERVISOR_ID_FK FOREIGN KEY ( SUPERVISOR_ID ) REFERENCES PP_BO_SUPERVISOR ( SUPERVISOR_ID ) NOT DEFERRABLE ;

CREATE OR REPLACE TRIGGER BIU_PP_BO_ACTUALS
    BEFORE INSERT OR UPDATE ON PP_BO_ACTUALS 
    FOR EACH ROW 
    ENABLE 
BEGIN
IF INSERTING AND :NEW.PP_BOA_ID IS NULL THEN 
          SELECT SEQ_PP_BO_ACTUALS.NEXTVAL INTO :NEW.PP_BOA_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATED_BY := USER;
END; 
/

CREATE OR REPLACE TRIGGER BIU_PP_BO_STAFF
    BEFORE INSERT OR UPDATE ON PP_BO_STAFF 
    FOR EACH ROW 
    ENABLE 
BEGIN
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATED_BY := USER;
END; 
/

CREATE OR REPLACE TRIGGER BIU_PP_BO_TASK_CATEGORY
    BEFORE INSERT OR UPDATE ON PP_BO_TASK_CATEGORY 
    FOR EACH ROW 
    ENABLE 
BEGIN
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATED_BY := USER;
END; 
/

CREATE OR REPLACE TRIGGER BIU_PP_BO_TASK
    BEFORE INSERT OR UPDATE ON PP_BO_TASK
    FOR EACH ROW 
    ENABLE 
BEGIN
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATED_BY := USER;
END; 
/

CREATE OR REPLACE TRIGGER BIU_PP_BO_SUPERVISOR
    BEFORE INSERT OR UPDATE ON PP_BO_SUPERVISOR
    FOR EACH ROW 
    ENABLE 
BEGIN
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATED_BY := USER;
END; 
/

CREATE OR REPLACE TRIGGER BIU_PP_BO_SCHEDULE_MONITOR
    BEFORE INSERT OR UPDATE ON PP_BO_SCHEDULE_MONITOR
    FOR EACH ROW 
    ENABLE 
BEGIN
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATED_BY := USER;
END; 
/

CREATE OR REPLACE TRIGGER BIU_PP_BO_STAFF_GROUP
    BEFORE INSERT OR UPDATE ON PP_BO_STAFF_GROUP
    FOR EACH ROW 
    ENABLE 
BEGIN
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATED_BY := USER;
END; 
/

CREATE OR REPLACE TRIGGER BIU_PP_BO_STAFF_GROUP_TO_STAFF
    BEFORE INSERT OR UPDATE ON PP_BO_STAFF_GROUP_TO_STAFF
    FOR EACH ROW 
    ENABLE 
BEGIN
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATED_BY := USER;
END; 
/

CREATE OR REPLACE TRIGGER BIU_PP_BO_SUPERVISOR_TO_STAFF
    BEFORE INSERT OR UPDATE ON PP_BO_SUPERVISOR_TO_STAFF
    FOR EACH ROW 
    ENABLE 
BEGIN
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATED_BY := USER;
END; 
/