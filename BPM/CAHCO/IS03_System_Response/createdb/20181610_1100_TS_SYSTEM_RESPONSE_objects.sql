  
/*Grant privileges to Sequence*/
CREATE SEQUENCE  "SEQ_SYSTEM_RESPONSE_ID"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 265 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
Grant SELECT ON  SEQ_SYSTEM_RESPONSE_ID TO MAXDAT_MSTR_TRX_RPT;

CREATE TABLE TS_SYSTEM_RESPONSE
    (
      SYSTEM_RESPONSE_ID	    INTEGER,
      DEPARTMENT_NAME		    VARCHAR2(100 BYTE),
      TEST_DATETIME		    DATE,
      CUBE_LOCATION		    VARCHAR2(100 BYTE),
      TRANS_NUM		    INTEGER,
      TRANS_DESC		    VARCHAR2(500 BYTE),
      SYSTEM_RESPONSE_TIME	    NUMBER(38,2),
      CREATE_BY		    VARCHAR2(50 BYTE),
      CREATE_DATE		    DATE,
      LAST_UPDATE_BY		    VARCHAR2(50 BYTE),
      LAST_UPDATE_DATE 	    DATE,
      CONSTRAINT
   	     pk_system_response
     PRIMARY KEY (SYSTEM_RESPONSE_ID)
   )TABLESPACE MAXDAT_DATA;



CREATE OR REPLACE VIEW TS_SYSTEM_RESPONSE_SV AS
    select
    SYSTEM_RESPONSE_ID,
    DEPARTMENT_NAME,
    TEST_DATETIME,
    CUBE_LOCATION,
    TRANS_NUM,
    TRANS_DESC,
    SYSTEM_RESPONSE_TIME,
    CREATE_BY,
    CREATE_DATE
    LAST_UPDATE_BY,
    LAST_UPDATE_DATE
    from TS_SYSTEM_RESPONSE;


/*Grants - to allow MSTR Transactions to perform U,D,I*/
GRANT select on TS_SYSTEM_RESPONSE_SV to MAXDAT_READ_ONLY; 
GRANT insert, update ON TS_SYSTEM_RESPONSE TO MAXDAT_MSTR_TRX_RPT;


/*Create individual indexes on columns of TS_SYSTEM_AVAILABILITY below*/

CREATE INDEX IN_DEPARTMENT_NAME ON TS_SYSTEM_RESPONSE
(DEPARTMENT_NAME) TABLESPACE MAXDAT_INDX;

CREATE INDEX IN_SYSTEM_NAME_RESP ON TS_SYSTEM_RESPONSE
(CUBE_LOCATION) TABLESPACE MAXDAT_INDX;


CREATE OR REPLACE Procedure TS_SYSTEM_RESPONSE_INSERT
    (
    IN_DEPARTMENT_NAME       IN VARCHAR2,
    IN_TEST_DATETIME	      IN DATE,
    IN_CUBE_LOCATION	      IN VARCHAR2,
    IN_TRANS_NUM     IN NUMBER,
    IN_TRANS_DESC    IN VARCHAR2,
    IN_SYSTEM_RESPONSE_TIME  IN NUMBER,
    IN_STAFF_ID      IN VARCHAR2
   )

AS

BEGIN
 If  IN_TEST_DATETIME is null  or IN_STAFF_ID is null or trunc(IN_TEST_DATETIME) > trunc(sysdate) then
     /*do nothing*/
      null;
   else
      
      insert into MAXDAT.TS_SYSTEM_RESPONSE
(
SYSTEM_RESPONSE_ID,
DEPARTMENT_NAME,
TEST_DATETIME,
CUBE_LOCATION,
TRANS_NUM,
TRANS_DESC,
SYSTEM_RESPONSE_TIME,
CREATE_BY,
CREATE_DATE,
LAST_UPDATE_BY,
LAST_UPDATE_DATE
)
      values
(
SEQ_SYSTEM_RESPONSE_ID.Nextval,
IN_DEPARTMENT_NAME ,
IN_TEST_DATETIME,
IN_CUBE_LOCATION,
IN_TRANS_NUM,
IN_TRANS_DESC,
IN_SYSTEM_RESPONSE_TIME,
IN_STAFF_ID,
SYSDATE,
IN_STAFF_ID,
SYSDATE
);

       commit;

   end if;
   NULL;
END;
/

CREATE OR REPLACE Procedure TS_SYSTEM_RESPONSE_UPDATE
    (
    IN_SYSTEM_RESPONSE_ID    IN NUMBER,
    IN_DEPARTMENT_NAME       IN VARCHAR2,
    IN_TEST_DATETIME	      IN DATE,
    IN_CUBE_LOCATION	      IN VARCHAR2,
    IN_TRANS_NUM	      IN NUMBER,
    IN_TRANS_DESC	      IN VARCHAR2,
    IN_SYSTEM_RESPONSE_TIME  IN NUMBER,
    IN_STAFF_ID	      IN VARCHAR2
   )

AS
   
BEGIN

if  
length(IN_SYSTEM_RESPONSE_TIME) is NULL then
     /*do nothing*/
      null;
   else
       
       update TS_SYSTEM_RESPONSE
       set    SYSTEM_RESPONSE_TIME = case when (length(IN_SYSTEM_RESPONSE_TIME)> 0) then IN_SYSTEM_RESPONSE_TIME else  SYSTEM_RESPONSE_TIME end,
	      LAST_UPDATE_BY = IN_STAFF_ID,
              LAST_UPDATE_DATE = sysdate
        where SYSTEM_RESPONSE_ID = IN_SYSTEM_RESPONSE_ID;

       commit;

   end if;
   NULL;

END;
/



GRANT execute ON TS_SYSTEM_RESPONSE_INSERT TO MAXDAT_MSTR_TRX_RPT;
GRANT execute ON TS_SYSTEM_RESPONSE_UPDATE TO MAXDAT_MSTR_TRX_RPT;














