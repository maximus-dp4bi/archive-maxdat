CREATE SEQUENCE  "EMRS_SEQ_ADDRESS_ID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 92481 CACHE 5 NOORDER  NOCYCLE ;

GRANT SELECT ON "EMRS_SEQ_ADDRESS_ID" TO "MAXDAT_READ_ONLY";

CREATE TABLE EMRS_D_ADDRESS
(ADDR_ATTN VARCHAR2(55), 
ADDR_BAD_DATE DATE, 
ADDR_BAD_DATE_SATISFIED DATE, 
ADDR_BAR_CODE VARCHAR2(50), 
ADDR_CITY VARCHAR2(30), 
ADDR_COUNTRY VARCHAR2(20), 
ADDR_CTLK_ID VARCHAR2(32), 
ADDR_DOLK_ID VARCHAR2(32), 
ADDR_HOUSE_CODE VARCHAR2(10), 
ADDR_ORIGIN_CD VARCHAR2(2), 
ADDR_PAYC_ID NUMBER(38,0), 
ADDR_PROV_ID NUMBER(38,0), 
ADDR_STAFF_ID NUMBER(38,0), 
ADDR_STATE_CD VARCHAR2(20), 
ADDR_STREET_1 VARCHAR2(55), 
ADDR_STREET_2 VARCHAR2(55), 
ADDR_TYPE VARCHAR2(240), 
ADDR_TYPE_CD VARCHAR2(32), 
ADDR_VERIFIED VARCHAR2(1), 
ADDR_ZIP VARCHAR2(32), 
ADDR_ZIP_FOUR VARCHAR2(10), 
ADDRESS_ID NUMBER(22,0), 
CASE_NUMBER NUMBER(22,0), 
CLIENT_NUMBER NUMBER(22,0), 
END_NDT NUMBER(22,0), 
MODIFIED_DATE DATE, 
MODIFIED_NAME VARCHAR2(240), 
RECORD_DATE DATE, 
RECORD_NAME VARCHAR2(240), 
SOURCE_ADDR_BEGIN_DATE DATE, 
SOURCE_ADDR_END_DATE DATE, 
START_NDT NUMBER(22,0), 
CREATED_BY VARCHAR2(30),
DATE_CREATED DATE,
UPDATED_BY VARCHAR2(30),
DATE_UPDATED DATE,
DP_ADDRESS_ID NUMBER NOT NULL,
RESIDENCE_ADDR_ZIP VARCHAR2(32), 
RESIDENCE_ADDR_COUNTY VARCHAR2(32)
) TABLESPACE MAXDAT_DATA ;

 ALTER TABLE "EMRS_D_ADDRESS" ADD CONSTRAINT "ADDRESS_ADDRESSID_UK" UNIQUE ("ADDRESS_ID") USING INDEX TABLESPACE "MAXDAT_INDX"  ENABLE;
 ALTER TABLE "EMRS_D_ADDRESS" ADD CONSTRAINT "ADDRESSID_PK" PRIMARY KEY ("DP_ADDRESS_ID") USING INDEX TABLESPACE "MAXDAT_INDX"  ENABLE;
  
GRANT SELECT ON "EMRS_D_ADDRESS" TO "MAXDAT_READ_ONLY";
GRANT select, insert, update on MAXDAT.EMRS_D_ADDRESS to MAXDAT_OLTP_SIU;
GRANT select, insert, update, delete on MAXDAT.EMRS_D_ADDRESS to MAXDAT_OLTP_SIUD;

BEGIN
DBMS_ERRLOG.CREATE_ERROR_LOG ('EMRS_D_ADDRESS','ERRLOG_ADDRESS');
END;
/
  CREATE OR REPLACE TRIGGER "BUIR_ADDRESS" 
 BEFORE INSERT OR UPDATE
 ON emrs_d_address
 FOR EACH ROW
DECLARE
    v_seq_id     EMRS_D_ADDRESS.dp_address_id%TYPE;
BEGIN
  IF INSERTING THEN
    IF :NEW.dp_address_id IS NULL THEN
      SElECT EMRS_SEQ_ADDRESS_ID.NEXTVAL
      INTO v_seq_id
      FROM dual;

      :NEW.dp_address_id   := v_seq_id;
    END IF;
    :NEW.created_by := user;
    :NEW.date_created := sysdate;
  END IF;
  :NEW.updated_by := user;
  :NEW.date_updated := sysdate;
END BUIR_ADDRESS;
/
ALTER TRIGGER "BUIR_ADDRESS" ENABLE;
/



CREATE TABLE EMRS_S_ADDRESS_STG
(ADDR_BAD_DATE DATE, 
ADDR_CITY VARCHAR2(30), 
ADDR_COUNTRY VARCHAR2(20), 
ADDR_CTLK_ID VARCHAR2(32), 
ADDR_STATE_CD VARCHAR2(20), 
ADDR_STREET_1 VARCHAR2(55), 
ADDR_STREET_2 VARCHAR2(55), 
ADDR_TYPE VARCHAR2(240), 
ADDR_TYPE_CD VARCHAR2(32), 
ADDR_ZIP VARCHAR2(32), 
ADDR_ZIP_FOUR VARCHAR2(10), 
ADDRESS_ID NUMBER(22,0), 
CASE_NUMBER NUMBER(22,0), 
CLIENT_NUMBER NUMBER(22,0), 
END_NDT NUMBER(22,0), 
MODIFIED_DATE DATE, 
MODIFIED_NAME VARCHAR2(240), 
RECORD_DATE DATE, 
RECORD_NAME VARCHAR2(240), 
SOURCE_ADDR_BEGIN_DATE DATE, 
SOURCE_ADDR_END_DATE DATE, 
START_NDT NUMBER(22,0), 
EXISTING_REC_DP_ADDRESS_ID NUMBER,
RESIDENCE_ADDR_ZIP VARCHAR2(32), 
RESIDENCE_ADDR_COUNTY VARCHAR2(32)
) TABLESPACE MAXDAT_DATA ;

CREATE INDEX ADDRSTG_ADDRID_IDX  ON EMRS_S_ADDRESS_STG("ADDRESS_ID", "START_NDT") TABLESPACE "MAXDAT_INDX";
CREATE INDEX ADDRSTG_EXRECID_IDX  ON EMRS_S_ADDRESS_STG("EXISTING_REC_DP_ADDRESS_ID") TABLESPACE "MAXDAT_INDX";

CREATE OR REPLACE VIEW EMRS_D_ADDRESS_SV
AS
SELECT addr_attn, 
addr_bad_date, 
addr_bad_date_satisfied, 
addr_bar_code, 
addr_city, 
addr_country, 
addr_ctlk_id, 
addr_dolk_id, 
addr_house_code, 
addr_origin_cd, 
addr_payc_id, 
addr_prov_id, 
addr_staff_id, 
addr_state_cd, 
addr_street_1, 
addr_street_2, 
addr_type, 
addr_type_cd, 
addr_verified, 
addr_zip, 
addr_zip_four, 
address_id, 
case_number, 
client_number, 
end_ndt, 
modified_date, 
modified_name, 
record_date, 
record_name, 
source_addr_begin_date, 
source_addr_end_date, 
start_ndt, 
created_by,
date_created,
updated_by,
date_updated,
dp_address_id
FROM emrs_d_address;

GRANT SELECT ON "EMRS_D_ADDRESS_SV" TO "MAXDAT_READ_ONLY";
