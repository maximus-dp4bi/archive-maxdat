CREATE TABLE hco_s_esr_combined_hours_stg
(ESRCH_ID NUMBER NULL,
	ESR VARCHAR2(10)  NULL,
	ESR_Date DATE  NULL,
	Hours FLOAT(53) NULL,
	Meetings FLOAT(53) NULL,
	HourType VARCHAR2(2) NULL,
	County VARCHAR2(50) NULL,
	SiteCode VARCHAR2(20) NULL,
	LWOP FLOAT(53) NULL,
	FMLA FLOAT(53) NULL,
	KinCare FLOAT(53) NULL,
	ApprVaca FLOAT(53) NULL,
	UnApprVaca FLOAT(53) NULL,
	ApprSick FLOAT(53) NULL,
	UnApprSick FLOAT(53) NULL,
	JuryDuty FLOAT(53) NULL,
	Floater FLOAT(53) NULL,
	Training FLOAT(53) NULL,
	Berevement FLOAT(53) NULL,
	ModifiedDate DATE NULL,
	StartDate DATE NULL,
	Comments VARCHAR2(500) NULL,
	Late FLOAT(53) NULL,
	IsValid VARCHAR2(1) NULL
) TABLESPACE MAXDAT_DATA;

CREATE INDEX HCOSESRCH_IDX01 ON HCO_S_ESR_COMBINED_HOURS_STG(ESRCH_ID) TABLESPACE MAXDAT_INDX;
CREATE INDEX HCOSESRCH_IDX02 ON HCO_S_ESR_COMBINED_HOURS_STG(ESR) TABLESPACE MAXDAT_INDX;
CREATE INDEX HCOSESRCH_IDX03 ON HCO_S_ESR_COMBINED_HOURS_STG(SITECODE) TABLESPACE MAXDAT_INDX; 

GRANT SELECT ON "HCO_S_ESR_COMBINED_HOURS_STG" TO "MAXDAT_READ_ONLY";
GRANT select, insert, update on HCO_S_ESR_COMBINED_HOURS_STG to MAXDAT_OLTP_SIU;
GRANT select, insert, update, delete on HCO_S_ESR_COMBINED_HOURS_STG to MAXDAT_OLTP_SIUD;

CREATE TABLE hco_s_esr_timeoff_request_stg
(ESRTO_ID NUMBER  NULL,
 EmployeeID VARCHAR2(10) NULL,
 ESR VARCHAR2(10)  NULL,
 TimeoffDate DATE NULL,
	StartTime DATE NULL,
	EndTime DATE NULL,
	Note VARCHAR2(200) NULL,
	Approved VARCHAR2(1) NULL,
	Pending VARCHAR2(1) NULL,
	Denied VARCHAR2(1) NULL,
	Comments VARCHAR2(200) NULL,
	ModifiedBy VARCHAR2(10) NULL,
	ShiftCoveredBy VARCHAR2(10) NULL,
	RequestDate DATE NULL,
	TimeoffType VARCHAR2(15) NULL,
	TimeOffHours VARCHAR2(10) NULL,
	County VARCHAR2(50) NULL,
	SiteCode VARCHAR2(20) NULL
) TABLESPACE MAXDAT_DATA;

CREATE INDEX HCOSESRTO_IDX01 ON HCO_S_ESR_TIMEOFF_REQUEST_STG(ESRTO_ID) TABLESPACE MAXDAT_INDX;
CREATE INDEX HCOSESRTO_IDX02 ON HCO_S_ESR_TIMEOFF_REQUEST_STG(ESR) TABLESPACE MAXDAT_INDX;
CREATE INDEX HCOSESRTO_IDX03 ON HCO_S_ESR_TIMEOFF_REQUEST_STG(SITECODE) TABLESPACE MAXDAT_INDX; 

GRANT SELECT ON "HCO_S_ESR_TIMEOFF_REQUEST_STG" TO "MAXDAT_READ_ONLY";
GRANT select, insert, update on HCO_S_ESR_TIMEOFF_REQUEST_STG to MAXDAT_OLTP_SIU;
GRANT select, insert, update, delete on HCO_S_ESR_TIMEOFF_REQUEST_STG to MAXDAT_OLTP_SIUD;


CREATE TABLE EMRS_D_ESR_HOURS
(ESRCH_ID NUMBER NOT NULL
,ESR_ID VARCHAR2(10)  NULL
,ESR_COMBINED_HOURS_DATE DATE
,ESR_SITE_CODE VARCHAR2(20)
,COUNTY_NAME VARCHAR2(50)
,HOUR_TYPE VARCHAR2(2)
,HOURS FLOAT(53)
,MEETINGS FLOAT(53)
,FLOATER FLOAT(53)
,TRAINING FLOAT(53)
,APPROVED_VACATION FLOAT(53)
,UNAPPROVED_VACATION FLOAT(53)
,APPROVED_SICK FLOAT(53)
,UNAPPROVED_SICK FLOAT(53)
,LEAVE_WITHOUT_PAY FLOAT(53)
,FMLA FLOAT(53)
,KIN_CARE FLOAT(53)
,JURY_DUTY FLOAT(53)
,BEREAVEMENT FLOAT(53)
,LATE FLOAT(53)
,MODIFIED_DATE DATE
,START_DATE DATE
,COMMENTS VARCHAR2(500)
,IS_VALID VARCHAR2(1)
,DATE_CREATED DATE
,CREATED_BY VARCHAR2(80)
,DATE_UPDATED DATE
,UPDATED_BY VARCHAR2(80)
) TABLESPACE MAXDAT_DATA;

CREATE UNIQUE INDEX EMRS_ESRH_IDX01 ON EMRS_D_ESR_HOURS(ESRCH_ID) TABLESPACE MAXDAT_INDX;
CREATE INDEX EMRS_ESRH_IDX02 ON EMRS_D_ESR_HOURS(ESR_ID) TABLESPACE MAXDAT_INDX;
CREATE INDEX EMRS_ESRH_IDX03 ON EMRS_D_ESR_HOURS(ESR_SITE_CODE) TABLESPACE MAXDAT_INDX;

GRANT SELECT ON "EMRS_D_ESR_HOURS" TO "MAXDAT_READ_ONLY";
GRANT select, insert, update on EMRS_D_ESR_HOURS to MAXDAT_OLTP_SIU;
GRANT select, insert, update, delete on EMRS_D_ESR_HOURS to MAXDAT_OLTP_SIUD;

BEGIN
DBMS_ERRLOG.CREATE_ERROR_LOG ('EMRS_D_ESR_HOURS','ERRLOG_ESRHOURS');
END;
/

CREATE OR REPLACE TRIGGER "BUIR_D_ESR_HOURS" 
 BEFORE INSERT OR UPDATE
 ON EMRS_D_ESR_HOURS
 FOR EACH ROW
BEGIN
  IF INSERTING THEN  
    :NEW.date_created := sysdate;
    :NEW.created_by := user;
  END IF;
  
  :NEW.date_updated := sysdate;
  :NEW.updated_by := user;
END BUIR_D_ESR_HOURS;
/
ALTER TRIGGER "BUIR_D_ESR_HOURS" ENABLE;
/


CREATE TABLE EMRS_D_ESR_TIMEOFF_REQUEST
(ESRTO_ID NUMBER NOT NULL
,ESR_ID VARCHAR2(10)  NULL
,TIMEOFF_DATE DATE
,ESR_SITE_CODE VARCHAR2(20)
,COUNTY_NAME VARCHAR2(50)
,TIMEOFF_START_DATE DATE
,TIMEOFF_END_DATE DATE
,REQUEST_DATE DATE
,TIMEOFF_REQUEST FLOAT(53)
,TIMEOFF_TYPE VARCHAR2(15)
,APPROVED VARCHAR2(1)
,DENIED VARCHAR2(1)
,PENDING VARCHAR2(1)
,COMMENTS VARCHAR2(200) NULL
,MODIFIED_BY VARCHAR2(10) NULL
,SHIFT_COVERED_BY VARCHAR2(10) NULL
,NOTE VARCHAR2(200) NULL
,DATE_CREATED DATE
,CREATED_BY VARCHAR2(80)
,DATE_UPDATED DATE
,UPDATED_BY VARCHAR2(80)
) TABLESPACE MAXDAT_DATA;

CREATE UNIQUE INDEX EMRS_ESRTO_IDX01 ON EMRS_D_ESR_TIMEOFF_REQUEST(ESRTO_ID) TABLESPACE MAXDAT_INDX;
CREATE INDEX EMRS_ESTO_IDX02 ON EMRS_D_ESR_TIMEOFF_REQUEST(ESR_ID) TABLESPACE MAXDAT_INDX;
CREATE INDEX EMRS_ESTO_IDX03 ON EMRS_D_ESR_TIMEOFF_REQUEST(ESR_SITE_CODE) TABLESPACE MAXDAT_INDX;

GRANT SELECT ON "EMRS_D_ESR_TIMEOFF_REQUEST" TO "MAXDAT_READ_ONLY";
GRANT select, insert, update on EMRS_D_ESR_TIMEOFF_REQUEST to MAXDAT_OLTP_SIU;
GRANT select, insert, update, delete on EMRS_D_ESR_TIMEOFF_REQUEST to MAXDAT_OLTP_SIUD;

BEGIN
DBMS_ERRLOG.CREATE_ERROR_LOG ('EMRS_D_ESR_TIMEOFF_REQUEST','ERRLOG_ESRTIMEOFF');
END;
/

CREATE OR REPLACE TRIGGER "BUIR_D_ESR_TIMEOFF" 
 BEFORE INSERT OR UPDATE
 ON EMRS_D_ESR_TIMEOFF_REQUEST
 FOR EACH ROW
BEGIN
  IF INSERTING THEN  
    :NEW.date_created := sysdate;
    :NEW.created_by := user;
  END IF;
  
  :NEW.date_updated := sysdate;
  :NEW.updated_by := user;
END BUIR_D_ESR_TIMEOFF;
/
ALTER TRIGGER "BUIR_D_ESR_TIMEOFF" ENABLE;
/

CREATE TABLE EMRS_D_ESR_SITE(
	ESR_SITE_ID NUMBER NOT NULL,
	ESR_SITE_NAME VARCHAR2(2000) NULL,
	COUNTY_NAME VARCHAR2(50) NULL,
	COUNTY_CODE VARCHAR2(10) NULL,
	ESR_SITE_CODE VARCHAR2(50) NULL,
	SUPERVISOR VARCHAR2(2000) NULL,
	SITE_ADDRESS VARCHAR2(2000) NULL,
	SITE_CITY VARCHAR2(50) NULL,
	SITE_STATE_CODE VARCHAR2(2) NULL,
	SITE_ZIP VARCHAR2(12) NULL,
	DAY_OPEN VARCHAR2(20) NULL,
	TIME_OPEN VARCHAR2(50) NULL,
	SITE_PHONE VARCHAR2(200) NULL,
	ACTIVE VARCHAR2(3) NULL,
	LATITUDE NUMBER(10) NULL,
	LONGITUDE NUMBER(10) NULL,
	ZIP4 VARCHAR2(4) NULL,
	RTN_CODE VARCHAR2(3) NULL,
	CHG_CODE VARCHAR2(3) NULL,
	LANGUAGE1 VARCHAR2(50) NULL,
	LANGUAGE2 VARCHAR2(50) NULL,
	LANGUAGE3 VARCHAR2(50) NULL,
	LANGUAGE4 VARCHAR2(50) NULL,
	LANGUAGE5 VARCHAR2(50) NULL,
	SITE_LANGUAGE VARCHAR2(500) NULL)  TABLESPACE MAXDAT_DATA;
  
CREATE UNIQUE INDEX EMRS_ESRSITE_IDX01 ON EMRS_D_ESR_SITE(ESR_SITE_ID) TABLESPACE MAXDAT_INDX;
CREATE INDEX EMRS_ESRSITE_IDX02 ON EMRS_D_ESR_SITE(ESR_SITE_CODE) TABLESPACE MAXDAT_INDX;

GRANT SELECT ON "EMRS_D_ESR_SITE" TO "MAXDAT_READ_ONLY";  
GRANT select, insert, update on EMRS_D_ESR_SITE to MAXDAT_OLTP_SIU;
GRANT select, insert, update, delete on EMRS_D_ESR_SITE to MAXDAT_OLTP_SIUD;

CREATE TABLE emrs_d_esr_employee
 (esre_id NUMBER NOT NULL
  ,first_name VARCHAR2(50)
  ,last_name VARCHAR2(50)
  ,esr_id VARCHAR2(50)
  ,supervisor VARCHAR2(2000)
  ,county_name VARCHAR2(50)
  ,department_code VARCHAR2(50)
  ,employee_id VARCHAR2(50)
  ,employee_role VARCHAR2(50)
  ,employee_title VARCHAR2(50)
  ,employee_status VARCHAR2(10)
  ,language VARCHAR2(50)
  ,date_of_hire date
  ,email varchar2(50)
  ,active varchar2(3)) TABLESPACE MAXDAT_DATA;
  
CREATE UNIQUE INDEX EMRS_ESREMP_IDX01 ON EMRS_D_ESR_EMPLOYEE(esre_id) TABLESPACE MAXDAT_INDX;
CREATE INDEX EMRS_ESREMP_IDX02 ON EMRS_D_ESR_EMPLOYEE(employee_id) TABLESPACE MAXDAT_INDX;

GRANT SELECT ON "EMRS_D_ESR_EMPLOYEE" TO "MAXDAT_READ_ONLY";  
GRANT select, insert, update on EMRS_D_ESR_EMPLOYEE to MAXDAT_OLTP_SIU;
GRANT select, insert, update, delete on EMRS_D_ESR_EMPLOYEE to MAXDAT_OLTP_SIUD;

INSERT INTO CORP_ETL_CONTROL
VALUES ('EMRS_MAX_ESRCH_ID','N',1,'Last ESR Combined Hours record processed', sysdate, sysdate);

INSERT INTO CORP_ETL_CONTROL
VALUES ('EMRS_ESRCH_COMBINEDHOURS_DATE','D','2010/01/01 00:00:00','Max ESR Combined Hours update date from source', sysdate, sysdate);

INSERT INTO CORP_ETL_CONTROL
VALUES ('EMRS_ESRTO_TIMEOFF_DATE','D','2010/01/01 00:00:00','Time Off Request date from source', sysdate, sysdate);

INSERT INTO CORP_ETL_CONTROL
VALUES ('EMRS_MAX_ESRTO_ID','N',1,'Last ESR TimeOff Request record processed', sysdate, sysdate);

INSERT INTO CORP_ETL_CONTROL
VALUES ('EMRS_TIMEOFF_LOOKBACK_DAYS','N',180,'Number of days to lookback for TimeOff Request updates', sysdate, sysdate);

INSERT INTO CORP_ETL_CONTROL
VALUES ('EMRS_ESRHOURS_LOOKBACK_DAYS','N',180,'Number of days to lookback for ESR Combined Hours updates', sysdate, sysdate);


commit;
  