CREATE SEQUENCE  "HCO_SEQ_ALT_FORMAT_ID"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 582 CACHE 5 NOORDER  NOCYCLE ;

GRANT SELECT ON "HCO_SEQ_ALT_FORMAT_ID" TO "MAXDAT_READ_ONLY";

CREATE TABLE HCO_D_ALTERNATIVE_FORMAT(
DP_ALTERNATIVE_FORMAT_ID NUMBER(10),
DIM_ALTERNATIVE_BENE_ID NUMBER(10),
CLIENT_NUMBER NUMBER(10),
DCIN VARCHAR2(40),
DATE_REQUESTED DATE,
DATE_MAILED DATE,
MATERIAL_LANGUAGE VARCHAR2(50),
ALTERNATIVE_FORMAT_TYPE  VARCHAR2(50),
VALID_FLAG VARCHAR2(1),
BAD_ADDRESS_TRANSACTION_TYPE VARCHAR2(10),
BAD_ADDRESS_RECORD_DATE DATE,
BAD_ADDRESS_FLAG VARCHAR2(1),
DATE_CREATED DATE,
DATE_UPDATED DATE,
CREATED_BY VARCHAR2(50),
UPDATED_BY VARCHAR2(50)) TABLESPACE MAXDAT_DATA;


ALTER TABLE "HCO_D_ALTERNATIVE_FORMAT" ADD CONSTRAINT "AF_ALTFORMAT_PK" PRIMARY KEY ("DP_ALTERNATIVE_FORMAT_ID") USING INDEX TABLESPACE "MAXDAT_INDX"  ENABLE;

GRANT SELECT ON "HCO_D_ALTERNATIVE_FORMAT" TO "MAXDAT_READ_ONLY";

CREATE OR REPLACE TRIGGER "BUIR_ALTERNATIVE_FORMAT" 
 BEFORE INSERT OR UPDATE
 ON hco_d_alternative_format
 FOR EACH ROW
DECLARE
    v_seq_id     HCO_D_ALTERNATIVE_FORMAT.dp_alternative_format_id%TYPE;
BEGIN
  IF INSERTING THEN
    IF :NEW.dp_alternative_format_id IS NULL THEN
      SElECT HCO_SEQ_ALT_FORMAT_ID.NEXTVAL
      INTO v_seq_id
      FROM dual;

      :NEW.dp_alternative_format_id       := v_seq_id;
    END IF;
    :NEW.date_created := sysdate;
    :NEW.created_by := user;
  END IF;
  
  :NEW.date_updated := sysdate;
  :NEW.updated_by := user;
END BUIR_ALTERNATIVE_FORMAT;
/
ALTER TRIGGER "BUIR_ALTERNATIVE_FORMAT" ENABLE;
/

CREATE OR REPLACE VIEW HCO_D_ALTERNATIVE_FORMAT_SV
AS 
SELECT dim_alternative_bene_id alternative_format_id,
client_number,
dcin,
date_requested,
date_mailed,
material_language,
alternative_format_type,
valid_flag
FROM hco_d_alternative_format
 ;

GRANT SELECT ON "HCO_D_ALTERNATIVE_FORMAT_SV" TO "MAXDAT_READ_ONLY";


