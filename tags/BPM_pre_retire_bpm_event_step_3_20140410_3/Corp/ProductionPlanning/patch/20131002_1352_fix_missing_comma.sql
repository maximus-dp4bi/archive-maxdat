CREATE TABLE PP_D_ACTUAL_DETAILS 
    ( 
     DAD_ID NUMBER  NOT NULL , 
     D_DATE DATE  NOT NULL , 
     D_HOUR NUMBER  NOT NULL , 
     USR_ID NUMBER  NOT NULL , 
     SOURCE_DETAIL_ID NUMBER NOT NULL,
     BUCKET_START_DATE DATE NOT NULL,
     BUCKET_END_DATE DATE NOT NULL,
     JEOPARDY_FLAG VARCHAR2(1) DEFAULT 'N', 
     ACTUAL_ARRIVAL NUMBER , 
     ACTUAL_COMPLETION NUMBER , 
     ACTUAL_INVENTORY NUMBER , 
     ACTUAL_INVENTORY_AGE NUMBER , 
     ACTUAL_HANDLE_TIME NUMBER , 
     ACTUAL_STAFF_HOURS NUMBER 
    );

ALTER TABLE PP_D_ACTUAL_DETAILS 
    ADD CONSTRAINT PP_D_ACTUAL_DETAILS_PK PRIMARY KEY ( DAD_ID ) ;


create or replace view maxdat.PP_D_ACTUAL_DETAILS_SV as
select
  DAD_ID,
  PPDD.D_DATE,
  D_HOUR,
  USR_ID,
  SOURCE_DETAIL_ID, 
  case 
    when DENSE_RANK() over (partition by SOURCE_DETAIL_ID order by SOURCE_DETAIL_ID asc, PPDD.D_DATE asc) = 1 then 1
    else 0
    end ACTUAL_ARRIVAL,
  ACTUAL_COMPLETION,
  ACTUAL_INVENTORY,
  ACTUAL_INVENTORY_AGE,
  ACTUAL_HANDLE_TIME,
  ACTUAL_STAFF_HOURS,
  JEOPARDY_FLAG
from 
  (SELECT D_DATE FROM PP_D_DATES WHERE D_DATE <= TRUNC(SYSDATE)) PPDD,
  PP_D_ACTUAL_DETAILS DAD
where
  PPDD.D_DATE >= DAD.BUCKET_START_DATE 
  and PPDD.D_DATE < DAD.BUCKET_END_DATE
union all
select
  DAD_ID,
  PPDD.D_DATE,
  D_HOUR,
  USR_ID,
  SOURCE_DETAIL_ID, 
  ACTUAL_ARRIVAL,
  ACTUAL_COMPLETION,
  ACTUAL_INVENTORY,
  ACTUAL_INVENTORY_AGE,
  ACTUAL_HANDLE_TIME,
  ACTUAL_STAFF_HOURS,
  JEOPARDY_FLAG
from 
  PP_D_DATES PPDD,
  PP_D_ACTUAL_DETAILS DAD
where
  PPDD.D_DATE = DAD.BUCKET_START_DATE 
  and PPDD.D_DATE = DAD.BUCKET_END_DATE
with read only;

ALTER TABLE PP_D_ACTUAL_DETAILS 
    ADD CONSTRAINT PP_D_ACTUAL_DTLS_D_DATES_FK FOREIGN KEY 
    ( 
     D_DATE
    ) 
    REFERENCES PP_D_DATES 
    ( 
     D_DATE
    );


ALTER TABLE PP_D_ACTUAL_DETAILS 
    ADD CONSTRAINT PP_D_ACTUAL_DTLS_D_HOURS_FK FOREIGN KEY 
    ( 
     D_HOUR
    ) 
    REFERENCES PP_D_HOURS 
    ( 
     D_HOUR
    );

ALTER TABLE PP_D_ACTUAL_DETAILS 
    ADD CONSTRAINT PP_D_ACTUAL_DTLS_UOWSRCREF_FK FOREIGN KEY 
    ( 
     USR_ID
    ) 
    REFERENCES PP_D_UOW_SOURCE_REF 
    ( 
     USR_ID
    );

commit;

/