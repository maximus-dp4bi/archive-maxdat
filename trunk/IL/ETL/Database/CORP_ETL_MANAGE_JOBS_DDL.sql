
  CREATE TABLE "MAXDAT"."CORP_ETL_MANAGE_JOBS" 
   (	"CEMFR_ID" NUMBER NOT NULL ENABLE, 
	"JOB_ID" NUMBER, 
	"CREATE_DT" DATE, 
	"CREATED_BY" VARCHAR2(80 BYTE), 
	"JOB_NAME" VARCHAR2(500 BYTE), 
	"JOB_DETAIL" VARCHAR2(500 BYTE), 
	"JOB_GROUP" VARCHAR2(80 BYTE), 
	"JOB_TYPE" VARCHAR2(32 BYTE), 
	"JOB_START_DT" DATE, 
	"JOB_END_DT" DATE, 
	"JOB_STATUS" VARCHAR2(100 BYTE), 
	"FILE_NAME" VARCHAR2(50 BYTE), 
	"RECEIPT_DT" DATE, 
	"TRANSMIT_DT" DATE, 
	"FILE_TYPE" VARCHAR2(50 BYTE), 
	"FILE_SOURCE" VARCHAR2(50 BYTE), 
	"FILE_DESTINATION" VARCHAR2(50 BYTE), 
	"PLAN_NAME" VARCHAR2(50 BYTE), 
	"RESPONSE_FILE_REQ" VARCHAR2(50 BYTE), 
	"RECORD_COUNT" NUMBER, 
	"RECORD_ERROR_COUNT" NUMBER, 
	"RESPONSE_FILE_NAME" VARCHAR2(50 BYTE), 
	"LAST_UPDATE_BY_NAME" VARCHAR2(50 BYTE), 
	"LAST_UPDATE_BY_DT" DATE, 
	"ASSD_IDENTIFY_JOB" DATE, 
	"ASED_IDENTIFY_JOB" DATE, 
	"ASSD_PROCESS_JOB" DATE, 
	"ASED_PROCESS_JOB" DATE, 
	"ASSD_CREATE_RESPONSE_FILE" DATE, 
	"ASED_CREATE_RESPONSE_FILE" DATE, 
	"ASSD_CREATE_OUTBOUND_FILE" DATE, 
	"ASED_CREATE_OUTBOUND_FILE" DATE, 
	"ASF_IDENTIFY_JOB" VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL ENABLE, 
	"ASF_PROCESS_JOB" VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL ENABLE, 
	"ASF_CREATE_RESPONSE_FILE" VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL ENABLE, 
	"ASF_CREATE_OUTBOUND_FILE" VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL ENABLE, 
	"GWF_PROCESSED_OK" VARCHAR2(1 BYTE), 
	"GWF_JOB_TYPE" VARCHAR2(1 BYTE), 
	"GWF_RESPONSE_FILE" VARCHAR2(1 BYTE), 
	"COMPLETE_DT" DATE, 
	"INSTANCE_STATUS" VARCHAR2(10 BYTE) NOT NULL ENABLE, 
	"CANCEL_DT" DATE, 
	"STG_EXTRACT_DATE" DATE NOT NULL ENABLE, 
	"STG_LAST_UPDATE_DATE" DATE NOT NULL ENABLE, 
	"STAGE_DONE_DATE" DATE, 
	 CONSTRAINT "JOBS_PK" PRIMARY KEY ("JOB_ID")
   );

  CREATE UNIQUE INDEX "MAXDAT"."XPKCORP_ETL_MANAGE_JOBS" ON "MAXDAT"."CORP_ETL_MANAGE_JOBS" ("CEMFR_ID", "JOB_ID") 
  TABLESPACE "MAXDAT_DATA" ;
  
CREATE SEQUENCE  SEQ_CEMFR_ID MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ; 
  

  CREATE OR REPLACE TRIGGER "MAXDAT"."TRG_R_CORP_ETL_MANAGE_JOBS" BEFORE
INSERT OR
UPDATE ON CORP_ETL_MANAGE_JOBS FOR EACH ROW
BEGIN
IF Inserting THEN
IF :NEW.CEMFR_ID IS NULL THEN
SELECT SEQ_CEMFR_ID.Nextval INTO :NEW.CEMFR_ID FROM Dual;
END IF;
IF :NEW.STG_EXTRACT_DATE IS NULL THEN
:NEW.STG_EXTRACT_DATE:= SYSDATE;
END IF;
END IF;
:NEW.STG_LAST_UPDATE_DATE:= SYSDATE;
END;
/
ALTER TRIGGER "MAXDAT"."TRG_R_CORP_ETL_MANAGE_JOBS" ENABLE;
