CREATE OR REPLACE VIEW MAXDAT_SUPPORT.F_MW_V2_INSTANCE_SV AS
SELECT
  SI.STEP_INSTANCE_ID                   AS MW_BI_ID
, SD.STEP_DEFINITION_ID                 AS TASK_TYPE_ID
, DECODE(SI.ESCALATED_IND, 1, 'Y', 'N') AS ESCALATED_FLAG
, CASE WHEN SI.STATUS = 'COMPLETED' THEN SI.COMPLETED_TS ELSE NULL END AS COMPLETE_DATE
, CASE WHEN SI.STATUS = 'TERMINATED' THEN SI.COMPLETED_TS ELSE NULL END AS CANCEL_WORK_DATE
, SI.CREATE_TS AS CREATE_DATE
, SI.CREATE_TS AS INSTANCE_START_DATE
, SI.COMPLETED_TS AS INSTANCE_END_DATE
, SI.STATUS AS CURR_TASK_STATUS
, CASE WHEN COALESCE(DATE(SI.completed_ts),CURRENT_DATE) IS NOT NULL AND DATE(SI.create_ts) IS NOT NULL
       THEN (SELECT CASE WHEN (COUNT(*) -1) < 0 THEN 0 ELSE COUNT(*)-1 END
             FROM MAXEB_DP4BI_PAIEB_PRD.PAIEB_PRD.D_DATES
             WHERE business_day_flag = 'Y'
             AND d_date BETWEEN DATE(si.create_ts) AND COALESCE(DATE(si.completed_ts),CURRENT_DATE)) ELSE 0 END AS AGE_IN_BUSINESS_DAYS
, COALESCE(DATE(si.completed_ts),CURRENT_DATE) - DATE(si.create_ts) AS AGE_IN_CALENDAR_DAYS
  
FROM MAXEB_DP4BI_PAIEB_PRD.PAIEB_PRD.STEP_INSTANCE SI
JOIN MAXEB_DP4BI_PAIEB_PRD.PAIEB_PRD.STEP_DEFINITION SD ON (SI.step_definition_id = SD.step_definition_id AND SD.step_type_cd IN ('VIRTUAL_HUMAN_TASK','HUMAN_TASK'))
WHERE (  (SI.status = 'COMPLETED' AND SI.completed_ts >= add_months(DATE_TRUNC('MONTH',CURRENT_DATE),-2))
          OR
         (SI.status IN ('CLAIMED','UNCLAIMED','INPROCESS'))
      )
;