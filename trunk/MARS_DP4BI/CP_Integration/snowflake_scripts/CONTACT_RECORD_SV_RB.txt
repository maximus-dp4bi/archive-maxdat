CREATE OR REPLACE VIEW PUBLIC.D_CONTACT_RECORDS_SV AS
WITH MARSDB_CONTACT_REPEAT_SV AS
(SELECT DISTINCT * FROM (
SELECT 
  PROJECT_ID,
  CONSUMER_ID,
  CREATED_ON,
  CONTACT_RECORD_ID,
  CR_GROUP,
  REPEAT_CONTACT_FLAG,
  CASE WHEN CONSUMER_ID IS NULL THEN 1 ELSE RANK() OVER(PARTITION BY PROJECT_ID,CONSUMER_ID,CR_GROUP ORDER  BY CREATED_ON,CONTACT_RECORD_ID) END CONTACT_SEQUENCE
FROM (
SELECT PROJECT_ID,CONSUMER_ID,CREATED_ON,CONTACT_RECORD_ID,REPEAT_CONTACT_FLAG,CASE WHEN DIFF IS NOT NULL THEN DIFF ELSE LAG(DIFF) IGNORE NULLS OVER (PARTITION BY PROJECT_ID,CONSUMER_ID ORDER BY CREATED_ON,CONTACT_RECORD_ID) END CR_GROUP
FROM(
SELECT 
    CR.PROJECT_ID,
    CONS_LINK.EXTERNAL_REF_ID CONSUMER_ID,
    CR.CONTACT_RECORD_START_TIME CREATED_ON,
    CR.CONTACT_RECORD_ID,
    CASE WHEN DATEDIFF('SECOND',LAG(CR.CONTACT_RECORD_START_TIME) OVER (PARTITION BY CR.PROJECT_ID,CONS_LINK.EXTERNAL_REF_ID ORDER BY CR.CONTACT_RECORD_START_TIME,CR.CONTACT_RECORD_ID),CR.CONTACT_RECORD_START_TIME)  <= 604800 THEN NULL ELSE CR.CONTACT_RECORD_ID END DIFF, 
    CASE WHEN DATEDIFF('SECOND',LAG(CR.CONTACT_RECORD_START_TIME) OVER (PARTITION BY CR.PROJECT_ID,CONS_LINK.EXTERNAL_REF_ID ORDER BY CR.CONTACT_RECORD_START_TIME,CR.CONTACT_RECORD_ID),CR.CONTACT_RECORD_START_TIME)  <= 604800 THEN 1 ELSE 0 END REPEAT_CONTACT_FLAG,
    LAG(CR.CONTACT_RECORD_START_TIME) OVER (PARTITION BY CR.PROJECT_ID,CONS_LINK.EXTERNAL_REF_ID ORDER BY CR.CONTACT_RECORD_START_TIME,CR.CONTACT_RECORD_ID) PRIOR_CREATE_DT
FROM 
    MARSDB.MARSDB_CONTACT_RECORD_VW AS CR 
LEFT OUTER JOIN 
    MARSDB.MARSDB_EXTERNAL_LINKS_VW CONS_LINK
        ON CR.PROJECT_ID = CONS_LINK.PROJECT_ID 
        AND CR.CONTACT_RECORD_ID = CONS_LINK.INTERNAL_ID
        AND CONS_LINK.INTERNAL_REF_TYPE = 'CONTACT_RECORD'
        AND CONS_LINK.EXTERNAL_REF_TYPE = 'CONSUMER'
        AND CONS_LINK.EFFECTIVE_END_DATE IS NULL
WHERE 1=1

) X ) Y ) Z
--WHERE EXISTS(SELECT 1 FROM MARS_DP4BI_DEV.PUBLIC.D_CONTACT_RECORDS_SV CR WHERE CR.CONTACT_RECORD_ID = Z.CONTACT_RECORD_ID AND CR.PROJECT_ID = Z.PROJECT_ID AND CR.CONTACT_SEQUENCE <> Z.CONTACT_SEQUENCE)
--ORDER BY CONTACT_RECORD_ID
) 
SELECT 
     CR.PROJECT_ID AS PROJECT_ID
    ,CR.CONTACT_RECORD_ID AS CONTACT_RECORD_ID    
    ,CR.CONTACT_RECORD_TYPE AS CONTACT_RECORD_TYPE
    ,CR.CONTACT_TYPE AS CONTACT_TYPE
    ,CR.CONTACT_CHANNEL_TYPE AS CONTACT_CHANNEL
    ,CR.CONTACT_RECORD_STATUS_TYPE AS CONTACT_DISPOSITION
    ,CR.CREATED_ON AS CONTACT_CREATE_DATE_TIME
    ,CR.UPDATED_ON AS CONTACT_RECORD_UPDATED_DATE_TIME
    ,CR.CONTACT_RECORD_END_TIME AS CONTACT_COMPLETE_DATE_TIME
    ,CR.CONTACT_RECORD_START_TIME AS CONTACT_START_TIME
    ,CR.CONTACT_RECORD_END_TIME AS CONTACT_END_TIME
    ,CR.WRAP_UP_TIME AS CONTACT_WRAP_UP_TIME
    ,CR.CALL_DURATION AS CALL_DURATION   
    ,CR.CREATED_BY AS CONTACT_RECORD_CREATED_BY_CRM_ID
    ,CR.CONTACT_OUTCOME AS OUTCOME_OF_CONTACT
    ,CR.LINK_REF_ID AS LINK_REFERENCE_ID
    ,CR.LINK_REF_TYPE AS LINK_REFERENCE_TYPE
    ,CR.CONTACT_RECORD_STATUS_TYPE AS CONTACT_RECORD_STATUS
    ,CR.CONSUMER_AUTHENTICATED_IND AS CONSUMER_ATHENTICATED_INDICATOR
    ,CONS.CONSUMER_ID AS CONSUMER_ID
    ,CONS.CONSUMER_STATUS AS CONSUMER_STATUS
    ,CONS.CONSUMER_LAST_NAME AS CONSUMER_LAST_NAME
    ,CONS.CONSUMER_FIRST_NAME AS CONSUMER_FIRST_NAME
    ,CONS.CONSUMER_MIDDLE_NAME AS CONSUMER_MIDDLE_NAME
    ,CONS.CONSUMER_DATE_OF_BIRTH AS CONSUMER_DOB
    ,CONS.CONSUMER_SSN AS CONSUMER_SSN
    ,CONS.CONSUMER_TYPE AS CONSUMER_TYPE
    ,NULL AS CONSUMER_PREFERRED_LANGUAGE
    ,CC.CONSUMER_ROLE AS CONSUMER_ROLE
    ,(case when dateadd(year, datediff(years, CONS.CONSUMER_DATE_OF_BIRTH::TIMESTAMP_NTZ, current_timestamp::TIMESTAMP_NTZ), CONS.CONSUMER_DATE_OF_BIRTH::TIMESTAMP_NTZ) > current_timestamp::TIMESTAMP_NTZ
                    then datediff(years, CONS.CONSUMER_DATE_OF_BIRTH::TIMESTAMP_NTZ, current_timestamp::TIMESTAMP_NTZ) - 1
                else datediff(years, CONS.CONSUMER_DATE_OF_BIRTH::TIMESTAMP_NTZ, current_timestamp::TIMESTAMP_NTZ)
            end)::DECIMAL as CONSUMER_AGE
    ,CONS.GENDER_CODE AS CONSUMER_GENDER
    ,CONS.CREATED_BY AS CONSUMER_CREATED_BY
    ,CC.CASE_ID AS CASE_ID
    ,CID.EXTERNAL_CASE_ID
    ,ADDR.ADDRESS_COUNTY AS CONSUMER_COUNTY
    ,ADDR.ADDRESS_ZIP AS CONSUMER_ZIP_CODE
    ,CONCAT(CASE WHEN length(ADDR.ADDRESS_HOUSE_CODE) > 0 THEN CONCAT(ADDR.ADDRESS_HOUSE_CODE,',') ELSE '' END, ADDR.ADDRESS_STREET_1) AS CONSUMER_ADDRESS_LINE_1
    ,ADDR.ADDRESS_STREET_2 AS CONSUMER_ADDRESS_LINE_2
    ,ADDR.CONTACT_TYPE_ID AS CONSUMER_CITY
    ,ADDR.ADDRESS_TYPE AS CONSUMER_ADDRESS_TYPE
    ,ADDR.ADDRESS_STATE AS CONSUMER_STATE
    ,ADDR.ADDRESS_ZIP_FOUR AS CONSUMER_ZIP_CODE4
    ,CE.EMAIL_ADDRESS AS CONSUMER_EMAIL_ADDRESS
    ,CE.EMAIL_TYPE AS CONSUMER_EMAIL_TYPE
    ,CP.PHONE_NUMBER AS CONSUMER_PHONE_NUMBER
    ,CP.PHONE_TYPE AS CONSUMER_PHONE_TYPE
    ,CP.SMS_ENABLED_IND AS SMS_ENABLED
    ,NULL AS CONTACT_ADDITIONAL_COMMENTS
    ,CS.MAXIMUS_ID AS CONTACT_RECORD_CREATED_BY_MAXIMUS_ID
    ,CS.LAST_NAME AS CONTACT_RECORD_CREATED_BY_LAST_NAME
    ,CS.FIRST_NAME AS CONTACT_RECORD_CREATED_BY_FIRST_NAME
    ,CCP.CORRESPONDENCE_PREFERENCE AS CONSUMER_CORRESPONDENCE_PREFERENCE
    ,CASE WHEN (select 
                    count(*) as task_count
                from 
                    MARSDB.MARSDB_EXTERNAL_LINKS_VW TASK_LINK
                where CR.PROJECT_ID = TASK_LINK.PROJECT_ID 
                AND CR.CONTACT_RECORD_ID = TASK_LINK.INTERNAL_ID
                AND TASK_LINK.INTERNAL_REF_TYPE = 'CONTACT_RECORD'
                AND TASK_LINK.EXTERNAL_REF_TYPE = 'TASK'
               AND TASK_LINK.EFFECTIVE_END_DATE IS NULL) > 0 THEN 1 ELSE 0 END CONTACT_CREATING_TASKS_FLAG  
    ,NVL(REP.CONTACT_SEQUENCE, 1) AS CONTACT_SEQUENCE
    ,NVL(REP.REPEAT_CONTACT_FLAG, 0) AS REPEAT_CONTACT_FLAG
    --,concat('(', trim(to_varchar(to_number(CR.CONSUMER_PHONE), '000) 000-0000'))) AS CONTACT_RECORD_PHONE
    --,to_number(CR.CONSUMER_PHONE) AS CONTACT_RECORD_PHONE
    ,CR.CONSUMER_PHONE AS CONTACT_RECORD_PHONE
    ,CR.UPDATED_BY AS CONTACT_RECORD_LAST_UPDATED_BY_USER_ID
FROM 
    MARSDB.MARSDB_CONTACT_RECORD_VW AS CR 
LEFT OUTER JOIN 
    MARSDB.MARSDB_EXTERNAL_LINKS_VW CONS_LINK
        ON CR.PROJECT_ID = CONS_LINK.PROJECT_ID 
        AND CR.CONTACT_RECORD_ID = CONS_LINK.INTERNAL_ID
        AND CONS_LINK.INTERNAL_REF_TYPE = 'CONTACT_RECORD'
        AND CONS_LINK.EXTERNAL_REF_TYPE = 'CONSUMER'
        AND CONS_LINK.EFFECTIVE_END_DATE IS NULL
LEFT OUTER JOIN 
    MARSDB.MARSDB_CONSUMER_VW CONS
        ON CR.PROJECT_ID = CONS.PROJECT_ID 
        AND CONS.CONSUMER_ID = CONS_LINK.EXTERNAL_REF_ID
LEFT OUTER JOIN 
    MARSDB.MARSDB_EXTERNAL_LINKS_VW CASE_LINK
        ON CR.PROJECT_ID = CASE_LINK.PROJECT_ID 
        AND CR.CONTACT_RECORD_ID = CASE_LINK.INTERNAL_ID
        AND CASE_LINK.INTERNAL_REF_TYPE = 'CONTACT_RECORD'
        AND CASE_LINK.EXTERNAL_REF_TYPE = 'CASE'
        AND CASE_LINK.EFFECTIVE_END_DATE IS NULL
LEFT OUTER JOIN 
    MARSDB.MARSDB_CASES_VW CASES
        ON CR.PROJECT_ID = CASES.PROJECT_ID 
        AND CASES.CASE_ID = CASE_LINK.EXTERNAL_REF_ID        
LEFT OUTER JOIN
    MARSDB.MARSDB_CASE_CONSUMER_VW CC 
        ON CONS.CONSUMER_ID = CC.CONSUMER_ID
        AND CR.PROJECT_ID = CC.PROJECT_ID
        AND CASES.CASE_ID = CC.CASE_ID        
        --AND CC.EFFECTIVE_END_DATE IS NULL
LEFT OUTER JOIN 
    MARSDB.MARSDB_USER_VW CU
        ON to_varchar(CU.USER_ID) = CR.CREATED_BY
        AND CU.PROJECT_ID = CR.PROJECT_ID 
LEFT OUTER JOIN 
    MARSDB.MARSDB_STAFF_VW CS
        ON CS.STAFF_ID = CU.STAFF_ID         
LEFT OUTER JOIN MARSDB_CONTACT_REPEAT_SV REP
       ON CR.PROJECT_ID = REP.PROJECT_ID AND CR.CONTACT_RECORD_ID = REP.CONTACT_RECORD_ID AND CONS.CONSUMER_ID = REP.CONSUMER_ID
LEFT OUTER JOIN
        MARSDB.MARSDB_CASE_IDENTIFICATION_NUMBER_VW CID ON
            CC.PROJECT_ID = CID.PROJECT_ID AND
            CC.CASE_ID = CID.CASE_ID       
LEFT OUTER JOIN 
    (SELECT *
     FROM (SELECT  AD.CONTACT_TYPE_ID
                ,AD.PROJECT_ID
                ,AD.ADDRESS_VERIFIED
                ,AD.ADDRESS_HOUSE_CODE
                ,AD.ADDRESS_STREET_1
                ,AD.ADDRESS_STREET_2
                ,AD.ADDRESS_ZIP
                ,AD.ADDRESS_ZIP_FOUR
                ,AD.ADDRESS_TYPE
                ,AD.ADDRESS_CITY
                ,AD.ADDRESS_STATE
                ,AD.ADDRESS_COUNTY
                ,AD.PRIMARY_INDICATOR
                ,CNO.EXTERNAL_REF_ID
                ,CNO.EXTERNAL_REF_TYPE                
                ,RANK() OVER (PARTITION BY CNO.EXTERNAL_REF_ID, CT.PROJECT_ID ORDER BY DECODE(PRIMARY_INDICATOR,1,1,DECODE(UPPER(ADDRESS_TYPE),'PHYSICAL',2,3)),AD.EFFECTIVE_END_DATE DESC NULLS FIRST,AD.ADDRESS_ID) arnk
          FROM  MARSDB.MARSDB_CONTACTS_OWNER_VW CNO
            LEFT JOIN MARSDB.MARSDB_CONTACTS_VW CT ON CNO.CONTACT_OWNER_ID = CT.OWNER_ID AND CT.PROJECT_ID = CNO.PROJECT_ID AND CT.CONTACT_TYPE = 'ADDRESS'
            LEFT JOIN  MARSDB.MARSDB_ADDRESS_VW AD  ON AD.CONTACT_TYPE_ID = CT.CONTACT_TYPE_ID AND AD.PROJECT_ID = CT.PROJECT_ID 
          WHERE UPPER(CNO.EXTERNAL_REF_TYPE) = 'CONSUMER'          
          )
      WHERE arnk = 1)  AS ADDR
        ON ADDR.PROJECT_ID = CONS.PROJECT_ID 
        AND ADDR.EXTERNAL_REF_ID = CONS.CONSUMER_ID        
LEFT OUTER JOIN 
    (SELECT *
     FROM (SELECT PHN.PHONE_NUMBER,PHN.DOES_NOT_WORK_IND
                ,PHN.PHONE_TYPE
                ,PHN.SMS_ENABLED_IND
                ,PHN.PRIMARY_INDICATOR
                ,PHN.PROJECT_ID,CNO.EXTERNAL_REF_ID
                ,CT.CONTACT_TYPE_ID
                ,CNO.EXTERNAL_REF_TYPE
                ,PHN.PHONE_ID
                ,RANK() OVER (PARTITION BY CNO.EXTERNAL_REF_ID, CT.PROJECT_ID ORDER BY DECODE(PRIMARY_INDICATOR,1,1,DECODE(UPPER(PHONE_TYPE),'PRIMARY',2,'HOME',3,'CELL',4,5)), PHN.EFFECTIVE_END_DATE DESC NULLS FIRST,PHN.PHONE_ID) prnk
           FROM  MARSDB.MARSDB_CONTACTS_OWNER_VW CNO
             LEFT JOIN MARSDB.MARSDB_CONTACTS_VW CT ON CNO.CONTACT_OWNER_ID = CT.OWNER_ID AND CT.PROJECT_ID = CNO.PROJECT_ID AND CT.CONTACT_TYPE = 'PHONE'
             LEFT JOIN MARSDB.MARSDB_PHONE_VW PHN ON PHN.CONTACT_TYPE_ID = CT.CONTACT_TYPE_ID AND PHN.PROJECT_ID = CT.PROJECT_ID 
           WHERE UPPER(CNO.EXTERNAL_REF_TYPE) = 'CONSUMER')
     WHERE prnk = 1) AS CP
        ON CP.PROJECT_ID = CONS.PROJECT_ID 
        AND CP.EXTERNAL_REF_ID = CONS.CONSUMER_ID         
LEFT OUTER JOIN 
    (SELECT *
     FROM (SELECT  EML.PRIMARY_INDICATOR
                  ,EML.EMAIL_ADDRESS
                  ,EML.EMAIL_TYPE
                  ,EML.DOES_NOT_WORK_IND
                   ,EML.PROJECT_ID
                  ,CNO.EXTERNAL_REF_ID
                  ,CNO.EXTERNAL_REF_TYPE
                  ,EML.CONTACT_TYPE_ID
                  ,RANK() OVER (PARTITION BY CNO.EXTERNAL_REF_ID, CT.PROJECT_ID ORDER BY DECODE(PRIMARY_INDICATOR,1,1,DECODE(UPPER(EMAIL_TYPE),'PRIMARY',2,'OFFICE',3,4)),EML.EFFECTIVE_END_DATE DESC NULLS FIRST,EML.EMAIL_ID) ernk
           FROM  MARSDB.MARSDB_CONTACTS_OWNER_VW CNO
             LEFT JOIN MARSDB.MARSDB_CONTACTS_VW CT ON CNO.CONTACT_OWNER_ID = CT.OWNER_ID AND CT.PROJECT_ID = CNO.PROJECT_ID AND CT.CONTACT_TYPE = 'EMAIL'
             LEFT JOIN MARSDB.MARSDB_EMAIL_VW EML ON EML.CONTACT_TYPE_ID = CT.CONTACT_TYPE_ID  AND EML.PROJECT_ID = CT.PROJECT_ID 
           WHERE UPPER(CNO.EXTERNAL_REF_TYPE) = 'CONSUMER')
     WHERE ernk = 1) AS CE
        ON CE.PROJECT_ID = CONS.PROJECT_ID 
        AND CE.EXTERNAL_REF_ID = CONS.CONSUMER_ID         
LEFT OUTER JOIN 
    (SELECT *
     FROM(SELECT CPR.CONSUMER_ID AS CONSUMER_ID,
                PS.REPORT_LABEL AS CORRESPONDENCE_PREFERENCE ,
                CPR.PROJECT_ID AS PROJECT_ID,
                RANK() OVER (PARTITION BY CPR.CONSUMER_ID,CPR.PROJECT_ID ORDER BY CPR.EFFECTIVE_END_DATE DESC NULLS FIRST, PREFERENCE_ID) cprnk
          FROM MARSDB.MARSDB_COMMUNICATION_PREFERENCES_VW CPR
            JOIN MARSDB.MARSDB_MAP_ENUMS_VW ME ON CPR.VALUE_PAIR_ID_COMM_PREF = ME.VALUE_PAIR_ID AND CPR.PROJECT_ID = ME.PROJECT_ID
            JOIN MARSDB.MARSDB_ENUM_PREFERENCE_TYPE_VW PT ON ME.KEY = PT.VALUE AND CPR.PROJECT_ID = PT.PROJECT_ID 
            JOIN MARSDB.MARSDB_ENUM_PREFERENCE_SELECTION_VW PS ON ME.CHILD = PS.VALUE AND CPR.PROJECT_ID = PS.PROJECT_ID 
          WHERE PT.VALUE = 'CORRESPONDENCE' ) 
     WHERE cprnk = 1) CCP
      ON CCP.CONSUMER_ID = CONS.CONSUMER_ID 
      AND CCP.PROJECT_ID = CONS.PROJECT_ID 
;