create or replace view PUBLIC.ADMIN_PI_INGESTION_ZERO_MEANS_DONE_BY_PROJECT_BY_DATE_VW as
with base as (
               select * from (
                               select dl0.projectid, dl0.ts, dd.date as status_date_est,
                               RANK() OVER (PARTITION BY dl0.projectid,dd.date ORDER BY dl0.ts asc) as row_num
                               from raw.ingest_pi_data_det_log dl0
                               join public.d_dates dd
                               on to_date(convert_timezone('America/New_York',to_timestamp_ltz(to_varchar(dl0.ts)))) = dd.date
                               where dl0.object_category in ('INGESTION STARTED')
               ) where row_num=1
),
latest_base as (
               select * from (
                               select dl0.projectid, dl0.ts, dd.date as status_date_est,
                               RANK() OVER (PARTITION BY dl0.projectid,dd.date ORDER BY dl0.ts desc) as row_num
                               from raw.ingest_pi_data_det_log dl0
                               join public.d_dates dd
                               on to_date(convert_timezone('America/New_York',to_timestamp_ltz(to_varchar(dl0.ts)))) = dd.date
                               where dl0.object_category in ('INGESTION STARTED','INGESTION STARTED REINGEST')
               ) where row_num=1
),
final as (
select * from (
                               select dl1.projectid, to_timestamp_ltz(to_varchar(dl1.ts)) as status_time_ltz, dd.date as status_date_est, 
                               dl1.object_category, dl1.status_string,
                               RANK() OVER (PARTITION BY dl1.projectid,dd.date ORDER BY dl1.ts desc) as row_num
                               from raw.ingest_pi_data_det_log dl1
                               join public.d_dates dd
                               on to_date(convert_timezone('America/New_York',to_timestamp_ltz(to_varchar(dl1.ts)))) = dd.date
  where dl1.projectid != 'ALL'
                               --and dd.date =  date(convert_timezone('America/New_York',current_timestamp()))
               ) where row_num=1
),
min_date as (
              select to_date(convert_timezone('America/New_York',to_timestamp_ltz(to_varchar(min(dl2.ts))))) as min_date 
              from raw.ingest_pi_data_det_log dl2 
),
latest_table_failure as (
                select dl2.projectid, dd.date as status_date_est, dl2.object_name, max(dl2.ts) as ts from raw.ingest_pi_data_det_log dl2
                join public.d_dates dd
                on to_date(convert_timezone('America/New_York',to_timestamp_ltz(to_varchar(dl2.ts)))) = dd.date             
                where dl2.object_category in ('TABLE','TABLE REINGEST')
                and dl2.status_string = 'FAILED'
                --and date(convert_timezone('UTC','America/New_York',to_timestamp(to_varchar(dl2.ts)))) = date(current_timestamp())
                group by dl2.projectid, dd.date, dl2.object_name
),
max_table_ingest_ts as (
                select dl2.projectid, dd.date as status_date_est, max(dl2.ts) as ts from raw.ingest_pi_data_det_log dl2
                join public.d_dates dd
                on to_date(convert_timezone('America/New_York',to_timestamp_ltz(to_varchar(dl2.ts)))) = dd.date
                where dl2.object_category in ('TABLE','TABLE REINGEST')
                and dl2.status_string = 'SUCCEEDED'
                --and date(convert_timezone('UTC','America/New_York',to_timestamp(to_varchar(dl2.ts)))) = date(current_timestamp())
                group by dl2.projectid, dd.date
),

projects_tables_list as (
                                                   
select final.status_date_est, final.status_time_ltz, phist.projectid as projectid,thist.table_name as active_table_name,uthist.table_name as unavailable_table_name
from final

left outer join public.d_pi_projects_history phist
on final.projectid = phist.projectid
and final.status_time_ltz >= phist.start_time
and timestampadd(minute,1,final.status_time_ltz) <= phist.end_time
and phist.active = true

left outer join public.d_pi_tables_history thist
on final.status_time_ltz >= thist.start_time
and timestampadd(minute,1,final.status_time_ltz) <= thist.end_time
and thist.active = true
and thist.s3_sourced = true
                                                   
left outer join public.d_pi_project_unavailable_tables_history uthist
on final.projectid = uthist.project_id
and thist.table_name = uthist.table_name
and final.status_time_ltz >= uthist.start_time
and timestampadd(minute,1,final.status_time_ltz) <= uthist.end_time
and (uthist.end_unavailable_date is null or uthist.end_unavailable_date >= final.status_date_est)
),
sp_list as (
select final.status_date_est, final.status_time_ltz, phist.projectid as projectid,sphist.sp_name as sp_name
from final
  left outer join public.d_pi_projects_history phist
on final.projectid = phist.projectid
and final.status_time_ltz >= phist.start_time
and timestampadd(minute,1,final.status_time_ltz) <= phist.end_time
and phist.active = true
  left outer join public.d_pi_ingestion_sps_history sphist
on final.status_time_ltz >= sphist.start_time
and timestampadd(minute,1,final.status_time_ltz) <= sphist.end_time
and sphist.active = true
  
),
sp_runs as (
  select * from (
                  select dl1.projectid, dl1.object_name, dl1.status_string, dl1.msg,
                         convert_timezone('America/New_York',to_timestamp_ltz(to_varchar(dl1.ts))) as status_time, high_base.status_date_est,
                         RANK() OVER (PARTITION BY dl1.object_name,high_base.status_date_est ORDER BY dl1.ts desc) as row_num
                         from raw.ingest_pi_data_det_log dl1
                         join (select status_date_est,max(ts) as ts from base where base.projectid not in ('9999') group by status_date_est) high_base
                         on to_date(convert_timezone('America/New_York',to_timestamp_ltz(to_varchar(dl1.ts)))) = high_base.status_date_est
                         where object_category = 'SP'
                         and projectid = 'ALL'
                         and dl1.ts >= high_base.ts
               ) where row_num=1
  
  ),
  main as (
select ptlist.status_date_est,ptlist.projectid,ptlist.active_table_name as table_name
from projects_tables_list ptlist
join final 
on ptlist.projectid = final.projectid
and ptlist.status_date_est = final.status_date_est 
where ptlist.projectid is not null
and ptlist.active_table_name is not null
and ptlist.unavailable_table_name is null
and (not exists (
                select 1 from raw.ingest_pi_data_det_log dl
                join base
                on dl.projectid = base.projectid
                and to_date(convert_timezone('America/New_York',to_timestamp_ltz(to_varchar(dl.ts)))) = base.status_date_est
                left outer join latest_table_failure fail
                on dl.projectid = fail.projectid
  and to_date(convert_timezone('America/New_York',to_timestamp_ltz(to_varchar(dl.ts)))) = fail.status_date_est
                and dl.object_name = fail.object_name
                where dl.projectid = ptlist.projectid
                and dl.object_category in ('TABLE','TABLE REINGEST')
                and dl.object_name = ptlist.active_table_name
                and dl.status_string = 'SUCCEEDED'
                and dl.ts >= base.ts 
                and (fail.ts is null or dl.ts > fail.ts)
                and date(convert_timezone('America/New_York',to_timestamp_ltz(to_varchar(dl.ts)))) = ptlist.status_date_est
)
or not (final.object_category in ('INGESTION COMPLETED','INGESTION COMPLETED REINGEST') and final.status_string != 'SUCCESS')
)
),
sp_main as (
select splist.status_date_est,splist.projectid,splist.sp_name as sp_name
from sp_list splist
join final 
on splist.projectid = final.projectid
and splist.status_date_est = final.status_date_est 
where splist.projectid is not null
and splist.sp_name is not null
and (not exists (
                select 1 from raw.ingest_pi_data_det_log dl
                join latest_base as base
                on dl.projectid = base.projectid
                and to_date(convert_timezone('America/New_York',to_timestamp_ltz(to_varchar(dl.ts)))) = base.status_date_est
    left outer join max_table_ingest_ts max_table
  on dl.projectid = max_table.projectid
  and to_date(convert_timezone('America/New_York',to_timestamp_ltz(to_varchar(dl.ts)))) = max_table.status_date_est
                where dl.projectid = splist.projectid
                and dl.object_category in ('SP','SP REINGEST')
                and dl.object_name = splist.sp_name
                and dl.status_string = 'SUCCEEDED'
                and dl.ts >= base.ts 
   and dl.ts >= max_table.ts
                and date(convert_timezone('America/New_York',to_timestamp_ltz(to_varchar(dl.ts)))) = splist.status_date_est
)
or not (final.object_category in ('INGESTION COMPLETED','INGESTION COMPLETED REINGEST') and final.status_string != 'SUCCESS')
)
)

(select ptlist.projectid, ptlist.status_date_est, (count(main.table_name) + count(sp_main.sp_name)) as zero_means_done
from projects_tables_list ptlist
left outer join main
on ptlist.projectid = main.projectid
and ptlist.active_table_name = main.table_name
and ptlist.status_date_est = main.status_date_est
left outer join sp_main
 on ptlist.projectid = sp_main.projectid
 and ptlist.status_date_est = sp_main.status_date_est
group by 1,2 order by 2,1)

union all

select 'ALL' as projectid, d_dates.date,(2 - ifnull(count(sp_runs.*),0)) as zero_means_done
from public.d_dates left outer join sp_runs
on d_dates.date = sp_runs.status_date_est
left outer join min_date
where d_dates.date >= min_date
and d_dates.date <= date(convert_timezone('America/New_York',current_timestamp()))
group by 1,2 order by 1,2;