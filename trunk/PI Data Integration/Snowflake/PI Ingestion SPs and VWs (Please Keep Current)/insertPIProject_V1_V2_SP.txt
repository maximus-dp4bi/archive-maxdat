use role PI_DATA_INGEST_UAT_ALERT_USER;
use warehouse PUREINSIGHTS_UAT_LOAD_DAILY_WH;
use database PUREINSIGHTS_UAT;
use schema RAW;

CREATE or replace PROCEDURE insertPIProject(projectid VARCHAR, projectname VARCHAR, AWSFOLDERNAME VARCHAR, PROJECTTIMEZONE VARCHAR,ACTIVE BOOLEAN, INGEST_WH VARCHAR, PROJECTCHARGECODE VARCHAR, PROJECTCHARGECODENAME VARCHAR)
  RETURNS VARCHAR
  LANGUAGE javascript
  EXECUTE AS CALLER
  AS
  $$
  
     //set logging on
     var sqlCommand = "set do_log = true;";
     snowflake.execute ({sqlText: sqlCommand});
     sqlCommand = "set log_table = 'PI_DATA_CHECK_LOG';";
     snowflake.execute ({sqlText: sqlCommand});
     
function log(msg){
    snowflake.createStatement( { sqlText: `call do_log(:1)`, binds:[msg] } ).execute();
}  


    //truncate table
   sqlCommand = "delete from public.d_pi_projects where projectid = '" + PROJECTID + "';";
    try {
            snowflake.execute (
                {sqlText: sqlCommand}
            );
        }
    catch (err)  {
        log("Failed to truncate d_pi_projects table for projectid " + PROJECTID + ": "+ err); 
        return "1";
        }     

    //insert new row 
    var sqlCommand = "insert into public.d_pi_projects values ('" + PROJECTID +"','" + PROJECTNAME + "','" + AWSFOLDERNAME +  "','"+PROJECTTIMEZONE+ "'," + ACTIVE + ",current_timestamp(),'"+INGEST_WH+"','"+PROJECTCHARGECODE+"','"+PROJECTCHARGECODENAME+"');";

try {
            snowflake.execute (
                {sqlText: sqlCommand}
            );
        }
    catch (err)  {
        log("Failed to load new row into d_pi_projects fr table for projectid " + PROJECTID + ": "+ err);
        return "1";
        }        

        log("Succeeded loading new row into d_pi_projects for projectid " + PROJECTID);
  return "0";  
  
  $$; 
;
