CREATE or replace PROCEDURE insertPIUnavailableTables(tableName VARCHAR, projectid VARCHAR, projectname VARCHAR)
  RETURNS VARCHAR
  LANGUAGE javascript
  EXECUTE AS CALLER
  AS
  $$

  
    //set logging on
     var sqlCommand = "set do_log = true;";
     snowflake.execute ({sqlText: sqlCommand});
     sqlCommand = "set log_table = 'PI_DATA_CHECK_LOG';";
     snowflake.execute ({sqlText: sqlCommand});
     
function log(msg){
    snowflake.createStatement( { sqlText: `call do_log(:1)`, binds:[msg] } ).execute();
}  


    //truncate table
   sqlCommand = "delete from public.d_pi_project_unavailable_tables where project_id = '" + PROJECTID + "' and table_name = '" + TABLENAME + "';";
    try {
            snowflake.execute (
                {sqlText: sqlCommand}
            );
        }
    catch (err)  {
        log("Failed to truncate d_pi_project_unavailable_tables for table " +TABLENAME+ " for projectid " + PROJECTID + ": "+ err); 
        return "1";
        }     

    //insert new row 
    var sqlCommand = "insert into public.d_pi_project_unavailable_tables values ('" + PROJECTID +"','" + PROJECTNAME + "','" + TABLENAME + "',null,current_timestamp());";

try {
            snowflake.execute (
                {sqlText: sqlCommand}
            );
        }
    catch (err)  {
        log("Failed to load new row into d_pi_project_unavailable tables fr table " + TABLENAME + " for projectid " + PROJECTID + ": "+ err);
        return "1";
        }        

        log("Succeeded loading new row into d_pi_prject_unavailable_tables for table " + TABLENAME + " for projectid " + PROJECTID);
  return "0";  
  
  $$;    
  