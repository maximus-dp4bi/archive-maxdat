-- Generated by Oracle SQL Developer Data Modeler 3.3.0.747
--   at:        2013-08-02 15:03:57 EDT
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g

CREATE SEQUENCE SEQ_CC_C_ACTIVITY_TYPE START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_CC_C_CONTACT_QUEUE START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 ;

CREATE SEQUENCE SEQ_CC_C_PROJECT_CONFIG START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_CC_C_UNIT_OF_WORK START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_CC_S_ACD_INTERVAL START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_CC_S_ACD_INTERVAL_PERIOD START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_CC_S_AGENT START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_CC_S_AGENT_ABSENCE START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_CC_S_AGENT_ACTIVITY START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_CC_S_AGENT_SUPERVISOR START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_CC_S_AGENT_WORK_DAY START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_CC_S_APPRVD_EXCPTN START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_CC_S_ATTENDANCE START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_CC_S_CALL_DETAIL START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_CC_S_CONTACT_QUEUE START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_CC_S_EXTERNAL_INTERNAL START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_CC_S_FCST_INTERVAL START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_CC_S_GROUP START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_CC_S_INTERVAL START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_CC_S_IVR_INTERVAL START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_CC_S_PROJECT START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_CC_S_READINESS START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_CC_S_SITE START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE SEQUENCE SEQ_CC_S_WFM_INTERVAL START WITH 1 INCREMENT BY 1 MAXVALUE 9999999999999999999 MINVALUE 1 CACHE 20 ;

CREATE TABLE CC_C_ACTIVITY_TYPE
  (
    ACTIVITY_TYPE_ID   NUMBER (19) NOT NULL ,
    ACTIVITY_TYPE_NAME VARCHAR2 (50) NOT NULL ,
    EXTRACT_DT         DATE NOT NULL ,
    LAST_UPDATE_DT     DATE NOT NULL ,
    LAST_UPDATE_BY     VARCHAR2 (30) NOT NULL ,
    RECORD_EFF_DT      DATE NOT NULL ,
    RECORD_END_DT      DATE NOT NULL
  )
  LOGGING ENABLE ROW MOVEMENT ;
ALTER TABLE CC_C_ACTIVITY_TYPE ADD CONSTRAINT CC_C_ACTIVITY_TYPE_PK PRIMARY KEY
(
  ACTIVITY_TYPE_ID
)
;
ALTER TABLE CC_C_ACTIVITY_TYPE ADD CONSTRAINT CC_C_ACTIVITY_TYPE__UN UNIQUE
(
  ACTIVITY_TYPE_NAME
)
;

CREATE TABLE CC_C_CONTACT_QUEUE
  (
    C_CONTACT_QUEUE_ID NUMBER (19) NOT NULL ,
    CONTACT_QUEUE_ID   NUMBER (19) NOT NULL ,
    UNIT_OF_WORK_NAME  VARCHAR2 (50) NOT NULL ,
    RECORD_EFF_DT      DATE DEFAULT to_date('1900/01/01', 'yyyy/mm/dd') NOT NULL ,
    RECORD_END_DT      DATE DEFAULT to_date('2999/12/31', 'yyyy/mm/dd') NOT NULL
  )
  LOGGING ENABLE ROW MOVEMENT ;
CREATE INDEX CC_C_CONTACT_QUEUE__IDXv1 ON CC_C_CONTACT_QUEUE
  (
    CONTACT_QUEUE_ID ASC ,
    RECORD_EFF_DT DESC
  )
  LOGGING ;
CREATE INDEX CC_C_CONTACT_QUEUE__IDXv2 ON CC_C_CONTACT_QUEUE
  (
    CONTACT_QUEUE_ID ASC
  )
  LOGGING ;
ALTER TABLE CC_C_CONTACT_QUEUE ADD CONSTRAINT CC_C_CONTACT_QUEUEv1_PK PRIMARY KEY
(
  C_CONTACT_QUEUE_ID
)
;

CREATE TABLE CC_C_PRODUCTION_PLAN
  (
    PRODUCTION_PLAN_ID          NUMBER (19) NOT NULL ,
    PROJECT_CONFIG_ID           NUMBER (19) NOT NULL ,
    PRODUCTION_PLAN_NAME        VARCHAR2 (50) NOT NULL ,
    PRODUCTION_PLAN_DESCRIPTION VARCHAR2 (1000) ,
    CREATE_DATE                 DATE DEFAULT SYSDATE NOT NULL ,
    LAST_UPDATE_DATE            DATE DEFAULT SYSDATE NOT NULL
  )
  LOGGING ENABLE ROW MOVEMENT ;
ALTER TABLE CC_C_PRODUCTION_PLAN ADD CONSTRAINT CC_C_PRODUCTION_PLAN_PK PRIMARY KEY
(
  PRODUCTION_PLAN_ID
)
;
ALTER TABLE CC_C_PRODUCTION_PLAN ADD CONSTRAINT CC_C_PRODUCTION_PLAN__UN UNIQUE
(
  PROJECT_CONFIG_ID , PRODUCTION_PLAN_NAME
)
;

CREATE TABLE CC_C_PROJECT_CONFIG
  (
    PROJECT_CONFIG_ID NUMBER (19) NOT NULL ,
    PROJECT_NAME      VARCHAR2 (50) NOT NULL ,
    PROGRAM_NAME      VARCHAR2 (50) NOT NULL ,
    SITE_NAME         VARCHAR2 (50) NOT NULL ,
    REGION_NAME       VARCHAR2 (50) NOT NULL ,
    STATE_NAME        VARCHAR2 (50) NOT NULL ,
    PROVINCE_NAME     VARCHAR2 (50) NOT NULL ,
    DISTRICT_NAME     VARCHAR2 (50) NOT NULL ,
    COUNTRY_NAME      VARCHAR2 (50) NOT NULL ,
    RECORD_EFF_DT     DATE DEFAULT to_date('1900/01/01', 'yyyy/mm/dd') NOT NULL ,
    RECORD_END_DT     DATE DEFAULT to_date('2999/12/31', 'yyyy/mm/dd') NOT NULL
  )
  LOGGING ENABLE ROW MOVEMENT ;
ALTER TABLE CC_C_PROJECT_CONFIG ADD CONSTRAINT CC_C_PROJECT_CONFIG_PK PRIMARY KEY
(
  PROJECT_CONFIG_ID
)
;
ALTER TABLE CC_C_PROJECT_CONFIG ADD CONSTRAINT CC_S_PROJECT_SITE_CONFIG__UN UNIQUE
(
  PROJECT_NAME , PROGRAM_NAME , SITE_NAME , RECORD_EFF_DT
)
;

CREATE TABLE CC_C_UNIT_OF_WORK
  (
    UNIT_OF_WORK_ID   NUMBER (19) NOT NULL ,
    UNIT_OF_WORK_NAME VARCHAR2 (50) NOT NULL ,
    RECORD_EFF_DT     DATE DEFAULT to_date('1900/01/01', 'yyyy/mm/dd') NOT NULL ,
    RECORD_END_DT     DATE DEFAULT to_date('2999/12/31', 'yyyy/mm/dd') NOT NULL
  )
  LOGGING ENABLE ROW MOVEMENT ;
CREATE INDEX CC_C_UNIT_OF_WORK__IDX ON CC_C_UNIT_OF_WORK
  (
    UNIT_OF_WORK_NAME ASC ,
    RECORD_EFF_DT ASC
  )
  LOGGING ;
ALTER TABLE CC_C_UNIT_OF_WORK ADD CONSTRAINT CC_C_UNIT_OF_WORK_PK PRIMARY KEY
(
  UNIT_OF_WORK_ID
)
;
ALTER TABLE CC_C_UNIT_OF_WORK ADD CONSTRAINT CC_C_UNIT_OF_WORK__UN UNIQUE
(
  UNIT_OF_WORK_NAME
)
;

CREATE TABLE CC_S_ACD_INTERVAL
  (
    ACD_INTERVAL_ID                NUMBER (19) NOT NULL ,
    INTERVAL_DATE                  DATE DEFAULT SYSDATE NOT NULL ,
    CONTACT_QUEUE_ID               NUMBER (19) NOT NULL ,
    INTERVAL_ID                    NUMBER (19) NOT NULL ,
    AGENT_ID                       NUMBER (19) NOT NULL ,
    CONTACTS_RECEIVED_FROM_IVR     NUMBER (7) DEFAULT 0 NOT NULL ,
    CONTACTS_OFFERED               NUMBER (7) DEFAULT 0 NOT NULL ,
    CONTACTS_HANDLED               NUMBER (7) DEFAULT 0 NOT NULL ,
    CONTACTS_ABANDONED             NUMBER (7) DEFAULT 0 NOT NULL ,
    MIN_HANDLE_TIME                NUMBER (7,2) DEFAULT 0 NOT NULL ,
    MAX_HANDLE_TIME                NUMBER (7,2) DEFAULT 0 NOT NULL ,
    MEAN_HANDLE_TIME               NUMBER (7,2) DEFAULT 0 NOT NULL ,
    MEDIAN_HANDLE_TIME             NUMBER (7,2) DEFAULT 0 NOT NULL ,
    STDDEV_HANDLE_TIME             NUMBER (7,2) DEFAULT 0 NOT NULL ,
    MIN_SPEED_TO_HANDLE            NUMBER (7,2) DEFAULT 0 NOT NULL ,
    MAX_SPEED_TO_HANDLE            NUMBER (7,2) DEFAULT 0 NOT NULL ,
    MEAN_SPEED_TO_HANDLE           NUMBER (7,2) DEFAULT 0 NOT NULL ,
    MEDIAN_SPEED_TO_HANDLE         NUMBER (7,2) DEFAULT 0 NOT NULL ,
    STDDEV_SPEED_TO_HANDLE         NUMBER (7,2) DEFAULT 0 NOT NULL ,
    MIN_SPEED_OF_ANSWER            NUMBER (7,2) DEFAULT 0 NOT NULL ,
    MAX_SPEED_OF_ANSWER            NUMBER (7,2) DEFAULT 0 NOT NULL ,
    MEAN_SPEED_OF_ANSWER           NUMBER (7,2) DEFAULT 0 NOT NULL ,
    MEDIAN_SPEED_OF_ANSWER         NUMBER (7,2) DEFAULT 0 NOT NULL ,
    STDDEV_SPEED_OF_ANSWER         NUMBER (7,2) DEFAULT 0 NOT NULL ,
    SPEED_OF_ANSWER_PERIOD_1       NUMBER (7) DEFAULT 0 NOT NULL ,
    SPEED_OF_ANSWER_PERIOD_2       NUMBER (7) DEFAULT 0 NOT NULL ,
    SPEED_OF_ANSWER_PERIOD_3       NUMBER (7) DEFAULT 0 NOT NULL ,
    SPEED_OF_ANSWER_PERIOD_4       NUMBER (7) DEFAULT 0 NOT NULL ,
    SPEED_OF_ANSWER_PERIOD_5       NUMBER (7) DEFAULT 0 NOT NULL ,
    SPEED_OF_ANSWER_PERIOD_6       NUMBER (7) DEFAULT 0 NOT NULL ,
    SPEED_OF_ANSWER_PERIOD_7       NUMBER (7) DEFAULT 0 NOT NULL ,
    SPEED_OF_ANSWER_PERIOD_8       NUMBER (7) DEFAULT 0 NOT NULL ,
    SPEED_OF_ANSWER_PERIOD_9       NUMBER (7) DEFAULT 0 NOT NULL ,
    SPEED_OF_ANSWER_PERIOD_10      NUMBER (7) DEFAULT 0 NOT NULL ,
    CALLS_ABANDONED_PERIOD_1       NUMBER (7) DEFAULT 0 NOT NULL ,
    CALLS_ABANDONED_PERIOD_2       NUMBER (7) DEFAULT 0 NOT NULL ,
    CALLS_ABANDONED_PERIOD_3       NUMBER (7) DEFAULT 0 NOT NULL ,
    CALLS_ABANDONED_PERIOD_4       NUMBER (7) DEFAULT 0 NOT NULL ,
    CALLS_ABANDONED_PERIOD_5       NUMBER (7) DEFAULT 0 NOT NULL ,
    CALLS_ABANDONED_PERIOD_6       NUMBER (7) DEFAULT 0 NOT NULL ,
    CALLS_ABANDONED_PERIOD_7       NUMBER (7) DEFAULT 0 NOT NULL ,
    CALLS_ABANDONED_PERIOD_8       NUMBER (7) DEFAULT 0 NOT NULL ,
    CALLS_ABANDONED_PERIOD_9       NUMBER (7) DEFAULT 0 NOT NULL ,
    CALLS_ABANDONED_PERIOD_10      NUMBER (7) DEFAULT 0 NOT NULL ,
    LABOR_MINUTES_TOTAL            NUMBER (10,2) DEFAULT 0 NOT NULL ,
    LABOR_MINUTES_WAITING          NUMBER (10,2) DEFAULT 0 NOT NULL ,
    HEADCOUNT_AVAILABLE            NUMBER (7,2) DEFAULT 0 NOT NULL ,
    CONTACT_INVENTORY              NUMBER (7) DEFAULT 0 NOT NULL ,
    CONTACT_INVENTORY_JEOPARDY     NUMBER (7) DEFAULT 0 NOT NULL ,
    CONTACT_INVENTORY_AGE_TOTAL    NUMBER (5,2) DEFAULT 0 NOT NULL ,
    MIN_CONTACT_INVENTORY_AGE      NUMBER (5,2) DEFAULT 0 NOT NULL ,
    MAX_CONTACT_INVENTORY_AGE      NUMBER (5,2) DEFAULT 0 NOT NULL ,
    MEAN_CONTACT_INVENTORY_AGE     NUMBER (5,2) DEFAULT 0 NOT NULL ,
    MEDIAN_CONTACT_INVENTORY_AGE   NUMBER (5,2) DEFAULT 0 NOT NULL ,
    STDDEV_CONTACT_INVENTORY_AGE   NUMBER (5,2) DEFAULT 0 NOT NULL ,
    CONTACTS_TRANSFERRED           NUMBER (7) DEFAULT 0 NOT NULL ,
    OUTFLOW_CONTACTS               NUMBER (7) DEFAULT 0 NOT NULL ,
    ANSWER_WAIT_TIME_TOTAL         NUMBER (12,2) DEFAULT 0 NOT NULL ,
    ABANDON_TIME_TOTAL             NUMBER (12,2) DEFAULT 0 NOT NULL ,
    TALK_TIME_TOTAL                NUMBER (12,2) DEFAULT 0 NOT NULL ,
    AFTER_CALL_WORK_TIME_TOTAL     NUMBER (12,2) DEFAULT 0 NOT NULL ,
    SERVICE_LEVEL_ANSWERED_PERCENT NUMBER (5,2) DEFAULT 0 NOT NULL ,
    SERVICE_LEVEL_ANSWERED_COUNT   NUMBER (7) DEFAULT 0 NOT NULL ,
    SERVICE_LEVEL_ABANDONED        NUMBER (5,2) DEFAULT 0 ,
    CALLS_ON_HOLD                  NUMBER (7) DEFAULT 0 NOT NULL ,
    HOLD_TIME_TOTAL                NUMBER (12,2) DEFAULT 0 NOT NULL ,
    IVR_TIME_TOTAL                 NUMBER (12,2) DEFAULT 0 ,
    SHORT_ABANDONS                 NUMBER (7) DEFAULT 0 NOT NULL ,
    CONTACTS_BLOCKED               NUMBER (7) DEFAULT 0 NOT NULL ,
    EXTRACT_DT                     DATE DEFAULT SYSDATE NOT NULL ,
    LAST_UPDATE_DT                 DATE DEFAULT SYSDATE NOT NULL ,
    LAST_UPDATE_BY                 VARCHAR2 (30) NOT NULL
  )
  LOGGING ENABLE ROW MOVEMENT ;
CREATE INDEX CC_S_ACD_INT_CC_S_CNTCT_Q_FK ON CC_S_ACD_INTERVAL
  (
    CONTACT_QUEUE_ID ASC
  )
  LOGGING ;
CREATE INDEX CC_S_ACD_INT_CC_S_INTERVAL_FK ON CC_S_ACD_INTERVAL
  (
    ACD_INTERVAL_ID ASC
  )
  LOGGING ;
CREATE INDEX CC_S_ACD_INT_CC_S_AGENT_FK ON CC_S_ACD_INTERVAL
  (
    AGENT_ID ASC
  )
  LOGGING ;
ALTER TABLE CC_S_ACD_INTERVAL ADD CONSTRAINT CC_S_ACD_INTERVAL_PK PRIMARY KEY
(
  ACD_INTERVAL_ID
)
;
ALTER TABLE CC_S_ACD_INTERVAL ADD CONSTRAINT CC_S_ACD_INTERVAL__UN UNIQUE
(
  INTERVAL_DATE , CONTACT_QUEUE_ID , INTERVAL_ID , AGENT_ID
)
;

CREATE TABLE CC_S_ACD_INTERVAL_PERIOD
  (
    ACD_INTERVAL_PERIOD_ID NUMBER (19) NOT NULL ,
    CONTACT_QUEUE_ID       NUMBER (19) NOT NULL ,
    PERIOD_TYPE            VARCHAR2 (50) NOT NULL ,
    PERIOD_1_UPPER_BOUND   NUMBER (5) DEFAULT 0 NOT NULL ,
    PERIOD_2_UPPER_BOUND   NUMBER (5) DEFAULT 0 NOT NULL ,
    PERIOD_3_UPPER_BOUND   NUMBER (5) DEFAULT 0 NOT NULL ,
    PERIOD_4_UPPER_BOUND   NUMBER (5) DEFAULT 0 NOT NULL ,
    PERIOD_5_UPPER_BOUND   NUMBER (5) DEFAULT 0 NOT NULL ,
    PERIOD_6_UPPER_BOUND   NUMBER (5) DEFAULT 0 NOT NULL ,
    PERIOD_7_UPPER_BOUND   NUMBER (5) DEFAULT 0 NOT NULL ,
    PERIOD_8_UPPER_BOUND   NUMBER (5) DEFAULT 0 NOT NULL ,
    PERIOD_9_UPPER_BOUND   NUMBER (5) DEFAULT 0 NOT NULL ,
    PERIOD_10_UPPER_BOUND  NUMBER (5) DEFAULT 0 NOT NULL ,
    EXTRACT_DT             DATE NOT NULL ,
    RECORD_EFF_DT          DATE DEFAULT to_date('1900/01/01', 'yyyy/mm/dd') NOT NULL ,
    RECORD_END_DT          DATE DEFAULT to_date('2999/12/31', 'yyyy/mm/dd') NOT NULL
  )
  LOGGING ENABLE ROW MOVEMENT ;
ALTER TABLE CC_S_ACD_INTERVAL_PERIOD ADD CHECK
(
  PERIOD_TYPE IN ('CALLS_ABANDONED', 'SPEED_OF_ANSWER')
)
;
ALTER TABLE CC_S_ACD_INTERVAL_PERIOD ADD CHECK
(
  PERIOD_1_UPPER_BOUND >= 0
)
;
ALTER TABLE CC_S_ACD_INTERVAL_PERIOD ADD CHECK
(
  PERIOD_2_UPPER_BOUND >= 0
)
;
ALTER TABLE CC_S_ACD_INTERVAL_PERIOD ADD CHECK
(
  PERIOD_3_UPPER_BOUND >= 0
)
;
ALTER TABLE CC_S_ACD_INTERVAL_PERIOD ADD CHECK
(
  PERIOD_4_UPPER_BOUND >= 0
)
;
ALTER TABLE CC_S_ACD_INTERVAL_PERIOD ADD CHECK
(
  PERIOD_5_UPPER_BOUND >= 0
)
;
ALTER TABLE CC_S_ACD_INTERVAL_PERIOD ADD CHECK
(
  PERIOD_6_UPPER_BOUND >= 0
)
;
ALTER TABLE CC_S_ACD_INTERVAL_PERIOD ADD CHECK
(
  PERIOD_7_UPPER_BOUND >= 0
)
;
ALTER TABLE CC_S_ACD_INTERVAL_PERIOD ADD CHECK
(
  PERIOD_8_UPPER_BOUND >= 0
)
;
ALTER TABLE CC_S_ACD_INTERVAL_PERIOD ADD CHECK
(
  PERIOD_9_UPPER_BOUND >= 0
)
;
ALTER TABLE CC_S_ACD_INTERVAL_PERIOD ADD CHECK
(
  PERIOD_10_UPPER_BOUND >= 0
)
;
CREATE INDEX CC_S_ACD_INTERVAL_PERIOD__IDX ON CC_S_ACD_INTERVAL_PERIOD
  (
    CONTACT_QUEUE_ID ASC
  )
  LOGGING ;
ALTER TABLE CC_S_ACD_INTERVAL_PERIOD ADD CONSTRAINT CC_S_ACD_INTERVAL_PERIOD_PK PRIMARY KEY
(
  ACD_INTERVAL_PERIOD_ID
)
;
ALTER TABLE CC_S_ACD_INTERVAL_PERIOD ADD CONSTRAINT CC_S_INTERVAL_PERIOD__UN UNIQUE
(
  CONTACT_QUEUE_ID , PERIOD_TYPE , RECORD_EFF_DT
)
;

CREATE TABLE CC_S_AGENT
  (
    AGENT_ID          NUMBER (19) NOT NULL ,
    LOGIN_ID          NUMBER (19) NOT NULL ,
    PROJECT_CONFIG_ID NUMBER (19) NOT NULL ,
    FIRST_NAME        VARCHAR2 (50) NOT NULL ,
    LAST_NAME         VARCHAR2 (50) NOT NULL ,
    MIDDLE_INITIAL    VARCHAR2 (20) NOT NULL ,
    JOB_TITLE         VARCHAR2 (50) NOT NULL ,
    LANGUAGE          VARCHAR2 (50) NOT NULL ,
    HOURLY_RATE       NUMBER (5,2) DEFAULT 0 NOT NULL ,
    RATE_CURRENCY     VARCHAR2 (3) NOT NULL ,
    AGENT_GROUP       VARCHAR2 (50) NOT NULL ,
    EXTRACT_DT        DATE NOT NULL ,
    LAST_UPDATE_DT    DATE NOT NULL ,
    LAST_UPDATE_BY    VARCHAR2 (30) NOT NULL ,
    RECORD_EFF_DT     DATE NOT NULL ,
    RECORD_END_DT     DATE NOT NULL
  )
  LOGGING ENABLE ROW MOVEMENT ;
ALTER TABLE CC_S_AGENT ADD CONSTRAINT CC_S_AGENT_REC_DATE_CK CHECK
(
  RECORD_EFF_DT <= RECORD_END_DT
)
;
CREATE UNIQUE INDEX CC_S_AGENT__IDX ON CC_S_AGENT
  (
    AGENT_ID ASC
  )
  TABLESPACE TEST LOGGING ;
CREATE UNIQUE INDEX CC_S_AGENT__IDX2 ON CC_S_AGENT
  (
    LOGIN_ID ASC , RECORD_EFF_DT DESC
  )
  TABLESPACE TEST LOGGING ;
  CREATE INDEX CC_S_AGENT__IDXv4 ON CC_S_AGENT
    (
      PROJECT_CONFIG_ID ASC
    )
    LOGGING ;
  ALTER TABLE CC_S_AGENT ADD CONSTRAINT ST_AGENT_PK PRIMARY KEY
  (
    AGENT_ID
  )
  ;
  ALTER TABLE CC_S_AGENT ADD CONSTRAINT CC_S_AGENT_UN UNIQUE
  (
    LOGIN_ID , RECORD_END_DT
  )
  ;

CREATE TABLE CC_S_AGENT_ABSENCE
  (
    AGENT_ABSENCE_ID   NUMBER (19) NOT NULL ,
    ABSENCE_DATE       DATE NOT NULL ,
    AGENT_ID           NUMBER (19) NOT NULL ,
    ABSENCE_TYPE       VARCHAR2 (40) NOT NULL ,
    ABSENCE_MINUTES    NUMBER (6,2) DEFAULT 0 NOT NULL ,
    ABSENCE_START_TIME DATE NOT NULL ,
    ABSENCE_END_TIME   DATE NOT NULL ,
    IS_PLANNED_FLAG    CHAR (1) NOT NULL ,
    EXTRACT_DT         DATE NOT NULL ,
    LAST_UPDATE_DT     DATE NOT NULL ,
    LAST_UPDATE_BY     VARCHAR2 (30) NOT NULL
  )
  LOGGING ENABLE ROW MOVEMENT ;
ALTER TABLE CC_S_AGENT_ABSENCE ADD CONSTRAINT CC_S_AGENT_ABSENCE_CK CHECK
(
  ABSENCE_START_TIME < ABSENCE_END_TIME
)
;
CREATE UNIQUE INDEX CC_S_AGENT_ABSENCE__IDX ON CC_S_AGENT_ABSENCE
  (
    AGENT_ABSENCE_ID ASC
  )
  TABLESPACE TEST LOGGING ;
CREATE UNIQUE INDEX CC_S_AGENT_ABSENCE__IDX2 ON CC_S_AGENT_ABSENCE
  (
    AGENT_ID ASC , ABSENCE_START_TIME DESC
  )
  TABLESPACE TEST LOGGING ;
  ALTER TABLE CC_S_AGENT_ABSENCE ADD CONSTRAINT ST_AGENT_ABSENCES_PK PRIMARY KEY
  (
    AGENT_ABSENCE_ID
  )
  ;
  ALTER TABLE CC_S_AGENT_ABSENCE ADD CONSTRAINT CC_S_AGENT_ABSENCES__UN UNIQUE
  (
    AGENT_ID , ABSENCE_END_TIME
  )
  ;

CREATE TABLE CC_S_AGENT_ACTIVITY
  (
    AGENT_ACTIVITY_ID         NUMBER (19) NOT NULL ,
    AGENT_ID                  NUMBER (19) NOT NULL ,
    ACTIVITY_TYPE_ID          NUMBER (19) NOT NULL ,
    ACTIVITY_START_TIME       DATE NOT NULL ,
    ACTIVITY_END_TIME         DATE NOT NULL ,
    ACTIVITY_DURATION_SECONDS NUMBER (7,2) DEFAULT 0 NOT NULL ,
    ACTIVITY_DT               DATE NOT NULL ,
    EXTRACT_DT                DATE NOT NULL ,
    LAST_UPDATE_DT            DATE NOT NULL ,
    LAST_UPDATE_BY            VARCHAR2 (30) NOT NULL
  )
  LOGGING ENABLE ROW MOVEMENT ;
ALTER TABLE CC_S_AGENT_ACTIVITY ADD CONSTRAINT CC_S_AGENT_ACTIVITY_CK CHECK
(
  ACTIVITY_START_TIME <= ACTIVITY_END_TIME
)
;
CREATE UNIQUE INDEX CC_S_AGENT_ACTIVITY__IDX ON CC_S_AGENT_ACTIVITY
  (
    AGENT_ACTIVITY_ID ASC
  )
  TABLESPACE TEST LOGGING ;
CREATE UNIQUE INDEX CC_S_AGENT_ACTIVITY__IDX2 ON CC_S_AGENT_ACTIVITY
  (
    AGENT_ID ASC , ACTIVITY_START_TIME DESC
  )
  TABLESPACE TEST LOGGING ;
  CREATE INDEX CC_S_AGENT_ACTIVITY__IDXv4 ON CC_S_AGENT_ACTIVITY
    (
      ACTIVITY_TYPE_ID ASC
    )
    LOGGING ;
  ALTER TABLE CC_S_AGENT_ACTIVITY ADD CONSTRAINT ST_AGENT_ACTIVITY_PK PRIMARY KEY
  (
    AGENT_ACTIVITY_ID
  )
  ;
  ALTER TABLE CC_S_AGENT_ACTIVITY ADD CONSTRAINT CC_S_AGENT_ACTIVITY__UN UNIQUE
  (
    AGENT_ID , ACTIVITY_END_TIME , ACTIVITY_TYPE_ID
  )
  ;

CREATE TABLE CC_S_AGENT_SUPERVISOR
  (
    AGENT_SUPERVISOR_ID NUMBER (19) NOT NULL ,
    AGENT_ID            NUMBER (19) NOT NULL ,
    SUPERVISOR_AGENT_ID NUMBER (19) NOT NULL ,
    EXTRACT_DT          DATE NOT NULL ,
    RECORD_EFF_DT       DATE NOT NULL ,
    RECORD_END_DT       DATE NOT NULL
  )
  LOGGING ENABLE ROW MOVEMENT ;
ALTER TABLE CC_S_AGENT_SUPERVISOR ADD CONSTRAINT CC_S_AGENT_SPRVSR_REC_DT_CK CHECK
(
  RECORD_EFF_DT <= RECORD_END_DT
)
;
COMMENT ON TABLE CC_S_AGENT_SUPERVISOR
IS
  'This staging table stores the different superiors of a given agent.  e.g. a record for the agent''s manager, a record for the agent''s supervisor, etc...' ;
CREATE UNIQUE INDEX CC_S_AGENT_SUPERVISOR__IDX ON CC_S_AGENT_SUPERVISOR
  (
    AGENT_SUPERVISOR_ID ASC
  )
  TABLESPACE TEST LOGGING ;
CREATE UNIQUE INDEX CC_S_AGENT_SUPERVISOR__IDX2 ON CC_S_AGENT_SUPERVISOR
  (
    AGENT_ID ASC , RECORD_EFF_DT DESC
  )
  TABLESPACE TEST LOGGING ;
  ALTER TABLE CC_S_AGENT_SUPERVISOR ADD CONSTRAINT ST_AGENT_SUPERVISOR_PK PRIMARY KEY
  (
    AGENT_SUPERVISOR_ID
  )
  ;
  ALTER TABLE CC_S_AGENT_SUPERVISOR ADD CONSTRAINT CC_S_AGENT_SUPERVISOR_UN UNIQUE
  (
    AGENT_ID , SUPERVISOR_AGENT_ID , RECORD_END_DT
  )
  ;

CREATE TABLE CC_S_AGENT_WORK_DAY
  (
    AGENT_WORK_DAY_ID       NUMBER (19) NOT NULL ,
    AGENT_ID                NUMBER (19) NOT NULL ,
    WORK_DATE               DATE NOT NULL ,
    FIRST_LOGIN             DATE NOT NULL ,
    LAST_LOGOUT             DATE NOT NULL ,
    SCHEDULED_SHIFT_MINUTES NUMBER (6,2) DEFAULT 0 NOT NULL ,
    ACTUAL_SHIFT_MINUTES    NUMBER (6,2) DEFAULT 0 NOT NULL ,
    ACTUAL_OVERTIME_MINUTES NUMBER (6,2) DEFAULT 0 NOT NULL ,
    EXTRACT_DT              DATE NOT NULL ,
    LAST_UPDATE_DT          DATE NOT NULL ,
    LAST_UPDATE_BY          VARCHAR2 (30) NOT NULL
  )
  LOGGING ENABLE ROW MOVEMENT ;
CREATE INDEX CC_S_AGENT_WORK_DAY__IDXv2 ON CC_S_AGENT_WORK_DAY
  (
    AGENT_ID ASC
  )
  LOGGING ;
ALTER TABLE CC_S_AGENT_WORK_DAY ADD CONSTRAINT CC_S_AGENT_WORK_DAY_PK PRIMARY KEY
(
  AGENT_WORK_DAY_ID
)
;
ALTER TABLE CC_S_AGENT_WORK_DAY ADD CONSTRAINT CC_S_AGENT_WORK_DAY__UN UNIQUE
(
  AGENT_ID , WORK_DATE
)
;

CREATE TABLE CC_S_CALL_DETAIL
  (
    CALL_DETAIL_ID          NUMBER (19) NOT NULL ,
    CALL_SEGMENT_ID         VARCHAR2 (50) ,
    CALL_DATE               DATE NOT NULL ,
    SOURCE_CALL_ID          VARCHAR2 (40) ,
    AGENT_ID                NUMBER (19) NOT NULL ,
    CALL_SEGMENT_END_DT     DATE NOT NULL ,
    QUEUE_NAME              VARCHAR2 (50) NOT NULL ,
    LANGUAGE                VARCHAR2 (50) NOT NULL ,
    ANI_PHONE_NUMBER        NUMBER (10) NOT NULL ,
    QUEUE_TIME_SECONDS      NUMBER (7,2) DEFAULT 0 NOT NULL ,
    RING_TIME_SECONDS       NUMBER (7,2) DEFAULT 0 NOT NULL ,
    HOLD_TIME_SECONDS       NUMBER (7,2) DEFAULT 0 NOT NULL ,
    AFTER_CALL_WORK_SECONDS NUMBER (7,2) DEFAULT 0 NOT NULL ,
    TALK_TIME_SECONDS       NUMBER (7,2) DEFAULT 0 NOT NULL ,
    XFERRED_OUT_FLAG        CHAR (1) NOT NULL ,
    EXTRACT_DT              DATE DEFAULT SYSDATE NOT NULL ,
    LAST_UPDATE_DT          DATE DEFAULT SYSDATE NOT NULL ,
    LAST_UPDATE_BY          VARCHAR2 (30) NOT NULL
  )
  LOGGING ENABLE ROW MOVEMENT ;
CREATE INDEX CC_S_CALL_DETAIL_CC_S_AGENT_FK ON CC_S_CALL_DETAIL
  (
    AGENT_ID ASC
  )
  LOGGING ;
ALTER TABLE CC_S_CALL_DETAIL ADD CONSTRAINT ST_CALL_DETAIL_PK PRIMARY KEY
(
  CALL_DETAIL_ID
)
;
ALTER TABLE CC_S_CALL_DETAIL ADD CONSTRAINT CC_S_CALL_DETAIL__UN UNIQUE
(
  CALL_SEGMENT_ID
)
;

CREATE TABLE CC_S_CONTACT_QUEUE
  (
    CONTACT_QUEUE_ID  NUMBER (19) NOT NULL ,
    QUEUE_NUMBER      NUMBER (19) NOT NULL ,
    PROJECT_CONFIG_ID NUMBER (19) NOT NULL ,
    QUEUE_NAME        VARCHAR2 (50) NOT NULL ,
    SOURCE_QUEUE      NUMBER (19) NOT NULL ,
    QUEUE_TYPE        VARCHAR2 (50) NOT NULL ,
    SERVICE_PERCENT   NUMBER (3) DEFAULT 0 NOT NULL ,
    SERVICE_SECONDS   NUMBER (5) DEFAULT 0 NOT NULL ,
    QUEUE_GROUP       NUMBER (4) NOT NULL ,
    INTERVAL_MINUTES  NUMBER (2) NOT NULL ,
    RECORD_EFF_DT     DATE DEFAULT to_date('1900/01/01', 'yyyy/mm/dd') NOT NULL ,
    RECORD_END_DT     DATE DEFAULT to_date('2999/12/31', 'yyyy/mm/dd') NOT NULL
  )
  LOGGING ENABLE ROW MOVEMENT ;
CREATE INDEX CC_S_CONTACT_QUEUE__IDXv2 ON CC_S_CONTACT_QUEUE
  (
    PROJECT_CONFIG_ID ASC
  )
  LOGGING ;
ALTER TABLE CC_S_CONTACT_QUEUE ADD CONSTRAINT CC_S_CONTACT_QUEUE_PK PRIMARY KEY
(
  CONTACT_QUEUE_ID
)
;
ALTER TABLE CC_S_CONTACT_QUEUE ADD CONSTRAINT CC_S_CONTACT_QUEUE__UN UNIQUE
(
  QUEUE_NUMBER , RECORD_EFF_DT
)
;

CREATE TABLE CC_S_EXTERNAL_INTERNAL
  (
    EXTERNAL_INTERNAL_ID NUMBER (19) NOT NULL ,
    AGENT_CALLS_DT       DATE NOT NULL ,
    AGENT_ID             NUMBER (19) NOT NULL ,
    EXTERNAL_SECONDS     NUMBER (7,2) DEFAULT 0 NOT NULL ,
    EXTERNAL_CALLS_COUNT NUMBER (7) DEFAULT 0 NOT NULL ,
    INTERNAL_SECONDS     NUMBER (7,2) DEFAULT 0 NOT NULL ,
    INTERNAL_CALLS_COUNT NUMBER (7) DEFAULT 0 NOT NULL ,
    LOGIN_SECONDS        NUMBER (7,2) DEFAULT 0 NOT NULL ,
    EXTRACT_DT           DATE NOT NULL ,
    LAST_UPDATE_DT       DATE NOT NULL ,
    LAST_UPDATE_BY       VARCHAR2 (30) NOT NULL
  )
  LOGGING ENABLE ROW MOVEMENT ;
CREATE UNIQUE INDEX CC_S_EXTERNAL_INTERNAL__IDX ON CC_S_EXTERNAL_INTERNAL
  (
    EXTERNAL_INTERNAL_ID ASC
  )
  TABLESPACE TEST LOGGING ;
CREATE UNIQUE INDEX CC_S_EXTERNAL_INTERNAL__IDX2 ON CC_S_EXTERNAL_INTERNAL
  (
    AGENT_ID ASC , AGENT_CALLS_DT DESC
  )
  TABLESPACE TEST LOGGING ;
  ALTER TABLE CC_S_EXTERNAL_INTERNAL ADD CONSTRAINT CC_S_EXTERNAL_INTERNAL_PK PRIMARY KEY
  (
    EXTERNAL_INTERNAL_ID
  )
  ;
  ALTER TABLE CC_S_EXTERNAL_INTERNAL ADD CONSTRAINT CC_S_EXTERNAL_INTERNAL_UN UNIQUE
  (
    AGENT_CALLS_DT , AGENT_ID
  )
  ;

CREATE TABLE CC_S_FCST_INTERVAL
  (
    FCST_INTERVAL_ID               NUMBER (19) NOT NULL ,
    PRODUCTION_PLAN_HORIZON_ID     NUMBER (19) NOT NULL ,
    UNIT_OF_WORK_ID                NUMBER (19) NOT NULL ,
    INTERVAL_DATE                  DATE NOT NULL ,
    INTERVAL_ID                    NUMBER (19) NOT NULL ,
    FORECAST_VERSION               NUMBER (5) DEFAULT 0 NOT NULL ,
    CONTACTS_CREATED               NUMBER (7) DEFAULT 0 NOT NULL ,
    CONTACTS_OFFERED               NUMBER (7) DEFAULT 0 NOT NULL ,
    CONTACTS_HANDLED               NUMBER (7) DEFAULT 0 NOT NULL ,
    MIN_SPEED_TO_HANDLE            NUMBER (7,2) DEFAULT 0 NOT NULL ,
    MAX_SPEED_TO_HANDLE            NUMBER (7,2) DEFAULT 0 NOT NULL ,
    MEAN_SPEED_TO_HANDLE           NUMBER (7,2) DEFAULT 0 NOT NULL ,
    MEDIAN_SPEED_TO_HANDLE         NUMBER (7,2) DEFAULT 0 NOT NULL ,
    STDDEV_SPEED_TO_HANDLE         NUMBER (7,2) DEFAULT 0 NOT NULL ,
    MIN_SPEED_OF_ANSWER            NUMBER (7,2) DEFAULT 0 NOT NULL ,
    MAX_SPEED_OF_ANSWER            NUMBER (7,2) DEFAULT 0 NOT NULL ,
    MEAN_SPEED_OF_ANSWER           NUMBER (7,2) DEFAULT 0 NOT NULL ,
    MEDIAN_SPEED_OF_ANSWER         NUMBER (7,2) DEFAULT 0 NOT NULL ,
    STDDEV_SPEED_OF_ANSWER         NUMBER (7,2) DEFAULT 0 NOT NULL ,
    CONTACTS_ABANDONED             NUMBER (7) DEFAULT 0 NOT NULL ,
    CONTACT_INVENTORY              NUMBER (7) DEFAULT 0 NOT NULL ,
    MIN_CONTACT_INVENTORY_AGE      NUMBER (5,2) DEFAULT 0 NOT NULL ,
    MAX_CONTACT_INVENTORY_AGE      NUMBER (5,2) DEFAULT 0 NOT NULL ,
    MEAN_CONTACT_INVENTORY_AGE     NUMBER (5,2) DEFAULT 0 NOT NULL ,
    MEDIAN_CONTACT_INVENTORY_AGE   NUMBER (5,2) DEFAULT 0 NOT NULL ,
    STDDEV_CONTACT_INVENTORY_AGE   NUMBER (5,2) DEFAULT 0 NOT NULL ,
    MIN_HANDLE_TIME                NUMBER (7,2) DEFAULT 0 NOT NULL ,
    MAX_HANDLE_TIME                NUMBER (7,2) DEFAULT 0 NOT NULL ,
    MEAN_HANDLE_TIME               NUMBER (7,2) DEFAULT 0 NOT NULL ,
    MEDIAN_HANDLE_TIME             NUMBER (7,2) DEFAULT 0 NOT NULL ,
    CONTACT_INVENTORY_JEOPARDY     NUMBER (7) DEFAULT 0 NOT NULL ,
    STDDEV_HANDLE_TIME             NUMBER (7,2) DEFAULT 0 NOT NULL ,
    LABOR_MINUTES_TOTAL            NUMBER (10,2) DEFAULT 0 NOT NULL ,
    LABOR_MINUTES_AVAILABLE        NUMBER (9,2) DEFAULT 0 NOT NULL ,
    LABOR_MINUTES_WAITING          NUMBER (10,2) DEFAULT 0 NOT NULL ,
    HEADCOUNT_TOTAL                NUMBER (7,2) DEFAULT 0 NOT NULL ,
    HEADCOUNT_AVAILABLE            NUMBER (7,2) DEFAULT 0 NOT NULL ,
    HEADCOUNT_UNAVAILABLE          NUMBER (7,2) DEFAULT 0 NOT NULL ,
    SERVICE_LEVEL_ANSWERED_PERCENT NUMBER (5,2) DEFAULT 0 NOT NULL ,
    EXTRACT_DT                     DATE DEFAULT SYSDATE NOT NULL ,
    LAST_UPDATE_DT                 DATE DEFAULT SYSDATE NOT NULL ,
    LAST_UPDATE_BY                 VARCHAR2 (30) NOT NULL
  )
  LOGGING ENABLE ROW MOVEMENT ;
CREATE INDEX CC_S_FCST_INTERVAL__IDXv2 ON CC_S_FCST_INTERVAL
  (
    UNIT_OF_WORK_ID ASC
  )
  LOGGING ;
CREATE INDEX CC_S_FCST_INTERVAL__IDXv3 ON CC_S_FCST_INTERVAL
  (
    INTERVAL_ID ASC
  )
  LOGGING ;
ALTER TABLE CC_S_FCST_INTERVAL ADD CONSTRAINT CC_S_FCST_INTERVAL_PK PRIMARY KEY
(
  FCST_INTERVAL_ID
)
;
ALTER TABLE CC_S_FCST_INTERVAL ADD CONSTRAINT CC_S_FCST_INTERVAL__UN UNIQUE
(
  PRODUCTION_PLAN_HORIZON_ID , INTERVAL_DATE , UNIT_OF_WORK_ID , INTERVAL_ID , FORECAST_VERSION
)
;

CREATE TABLE CC_S_INTERVAL
  (
    INTERVAL_ID           NUMBER (19) NOT NULL ,
    INTERVAL_START_DATE   DATE NOT NULL ,
    INTERVAL_END_DATE     DATE NOT NULL ,
    INTERVAL_SECONDS      NUMBER (4) DEFAULT 1800 NOT NULL ,
    RECORD_EFF_DT         DATE DEFAULT to_date('1900/01/01', 'yyyy/mm/dd') NOT NULL ,
    RECORD_END_DT         DATE DEFAULT to_date('2999/12/31', 'yyyy/mm/dd') NOT NULL
  )
  LOGGING ENABLE ROW MOVEMENT ;
ALTER TABLE CC_S_INTERVAL ADD CHECK
(
  INTERVAL_SECONDS IN (900, 1800, 3600)
)
;
CREATE INDEX CC_S_INTERVAL__IDX1 ON CC_S_INTERVAL
  (
    INTERVAL_START_DATE ASC
  )
  LOGGING ;
CREATE INDEX CC_S_INTERVAL__IDX2 ON CC_S_INTERVAL
  (
    INTERVAL_END_DATE ASC
  )
  LOGGING ;
ALTER TABLE CC_S_INTERVAL ADD CONSTRAINT CC_S_INTERVAL_PK PRIMARY KEY
(
  INTERVAL_ID
)
;
ALTER TABLE CC_S_INTERVAL ADD CONSTRAINT CC_S_INTERVAL__UN UNIQUE
(
  INTERVAL_START_DATE , INTERVAL_END_DATE
)
;

CREATE TABLE CC_S_IVR_INTERVAL
  (
    IVR_INTERVAL_ID           NUMBER (19) NOT NULL ,
    PROJECT_CONFIG_ID         NUMBER (19) NOT NULL ,
    INTERVAL_DATE             DATE NOT NULL ,
    INTERVAL_ID               NUMBER (19) NOT NULL ,
    CONTACTS_CREATED          NUMBER (7) DEFAULT 0 NOT NULL ,
    CONTACTS_OFFERED_TO_ACD   NUMBER (7) DEFAULT 0 NOT NULL ,
    CONTACTS_CONTAINED_IN_IVR NUMBER (7) DEFAULT 0 NOT NULL ,
    MIN_TIME_IN_THE_IVR       NUMBER (7,2) DEFAULT 0 NOT NULL ,
    MAX_TIME_IN_THE_IVR       NUMBER (7,2) DEFAULT 0 NOT NULL ,
    MEAN_TIME_IN_THE_IVR      NUMBER (7,2) DEFAULT 0 NOT NULL ,
    MEDIAN_TIME_IN_THE_IVR    NUMBER (7,2) DEFAULT 0 NOT NULL ,
    STDDEV_TIME_IN_THE_IVR    NUMBER (7,2) DEFAULT 0 NOT NULL ,
    EXTRACT_DT                DATE NOT NULL ,
    LAST_UPDATE_DT            DATE NOT NULL ,
    LAST_UPDATE_BY            VARCHAR2 (30) NOT NULL
  )
  LOGGING ENABLE ROW MOVEMENT ;
CREATE INDEX CC_S_IVR_INTERVAL__IDXv2 ON CC_S_IVR_INTERVAL
  (
    INTERVAL_ID ASC
  )
  LOGGING ;
ALTER TABLE CC_S_IVR_INTERVAL ADD CONSTRAINT CC_S_ACD_INTERVALv1_PK PRIMARY KEY
(
  IVR_INTERVAL_ID
)
;
ALTER TABLE CC_S_IVR_INTERVAL ADD CONSTRAINT CC_S_IVR_INTERVAL__UN UNIQUE
(
  INTERVAL_DATE , INTERVAL_ID , PROJECT_CONFIG_ID
)
;

CREATE TABLE CC_S_IVR_SELF_SERVICE_PATH
  (
    IVR_SELF_SERVICE_PATH_ID NUMBER (19) NOT NULL ,
    CODE                     VARCHAR2 (30) NOT NULL ,
    DESCRIPTION              VARCHAR2 (255) NOT NULL ,
    BEGIN_NODE               VARCHAR2 (30) NOT NULL ,
    END_NODE                 VARCHAR2 (30) NOT NULL ,
    RECORD_EFF_DT            DATE NOT NULL ,
    RECORD_END_DT            DATE NOT NULL
  )
  LOGGING ENABLE ROW MOVEMENT ;
ALTER TABLE CC_S_IVR_SELF_SERVICE_PATH ADD CONSTRAINT CC_S_SELF_SERVICE_NODE_PK PRIMARY KEY
(
  IVR_SELF_SERVICE_PATH_ID
)
;
ALTER TABLE CC_S_IVR_SELF_SERVICE_PATH ADD CONSTRAINT CC_S_SELF_SERVICE_NODE__UN UNIQUE
(
  CODE , RECORD_EFF_DT
)
;

CREATE TABLE CC_S_IVR_SELF_SERVICE_USAGE
  (
    IVR_SELF_SERVICE_USAGE_ID  NUMBER (19) NOT NULL ,
    IVR_INTERVAL_ID            NUMBER (19) NOT NULL ,
    IVR_SELF_SERVICE_PATH_ID   NUMBER (19) NOT NULL ,
    CONTACTS_ENTERING          NUMBER (10) DEFAULT 0 NOT NULL ,
    CONTACTS_TRANSFERRED       NUMBER (10) NOT NULL ,
    CONTACTS_COMPLETED         NUMBER (10) NOT NULL ,
    MINUTES_IN_IVR_TRANSFERRED NUMBER (12,2) NOT NULL ,
    MINUTES_IN_IVR_COMPLETED   NUMBER (12,2) NOT NULL
  )
  LOGGING ENABLE ROW MOVEMENT ;
CREATE INDEX CC_S_IVR_SELF_SVC_USAGE__IDXv1 ON CC_S_IVR_SELF_SERVICE_USAGE
  (
    IVR_INTERVAL_ID ASC
  )
  LOGGING ;
CREATE INDEX CC_S_IVR_SELF_SVC_USAGE__IDXv2 ON CC_S_IVR_SELF_SERVICE_USAGE
  (
    IVR_SELF_SERVICE_PATH_ID ASC
  )
  LOGGING ;
ALTER TABLE CC_S_IVR_SELF_SERVICE_USAGE ADD CONSTRAINT CC_S_IVR_SELF_SERVICE_USAGE_PK PRIMARY KEY
(
  IVR_SELF_SERVICE_USAGE_ID
)
;
ALTER TABLE CC_S_IVR_SELF_SERVICE_USAGE ADD CONSTRAINT CC_S_IVR_SELF_SVC_USAGE__UN UNIQUE
(
  IVR_INTERVAL_ID , IVR_SELF_SERVICE_PATH_ID
)
;

CREATE TABLE CC_S_PRODUCTION_PLAN_HORIZON
  (
    PRODUCTION_PLAN_HORIZON_ID NUMBER (19) NOT NULL ,
    PRODUCTION_PLAN_ID         NUMBER (19) NOT NULL ,
    HORIZON_START_DATE         DATE DEFAULT SYSDATE ,
    HORIZON_START_HOUR         NUMBER (2) DEFAULT TO_CHAR(SYSDATE, 'HH24') ,
    HORIZON_END_DATE           DATE DEFAULT SYSDATE ,
    HORIZON_END_HOUR           NUMBER (2) DEFAULT TO_CHAR(SYSDATE, 'HH24') ,
    HORIZON_NAME               VARCHAR2 (50) ,
    HORIZON_DESCRIPTION        VARCHAR2 (1000) ,
    CREATE_DATE                DATE DEFAULT SYSDATE ,
    LAST_UPDATE_DATE           DATE DEFAULT SYSDATE
  )
  LOGGING ENABLE ROW MOVEMENT ;
ALTER TABLE CC_S_PRODUCTION_PLAN_HORIZON ADD CONSTRAINT CC_C_HORIZON_PK PRIMARY KEY
(
  PRODUCTION_PLAN_HORIZON_ID
)
;
ALTER TABLE CC_S_PRODUCTION_PLAN_HORIZON ADD CONSTRAINT CC_C_HORIZON__UN UNIQUE
(
  PRODUCTION_PLAN_ID , HORIZON_START_DATE , HORIZON_START_HOUR , HORIZON_END_DATE , HORIZON_END_HOUR
)
;

CREATE TABLE CC_S_TIMEZONEAM
  (
    ID        NUMBER (19) NOT NULL ,
    TIMEZONE  VARCHAR2 (50 BYTE) ,
    STARTTIME DATE ,
    ENDTIME   DATE ,
    BIAS      NUMBER
  )
  LOGGING ;
ALTER TABLE CC_S_TIMEZONEAM ADD CONSTRAINT CC_S_TIMEZONEAM_PK PRIMARY KEY
(
  ID
)
;

CREATE TABLE CC_S_TMP_ACTUALEVENTTIMELINE
  (
    EMPLOYEEID           NUMBER NOT NULL ,
    STARTTIME            DATE NOT NULL ,
    ENDTIME              DATE NOT NULL ,
    ACTIVITYID           NUMBER ,
    ACTIVITYCATEGORYNAME VARCHAR2 (50 BYTE) ,
    ACTIVITYNAME         VARCHAR2 (50 BYTE) ,
    TIMEENTRYEVENTID     NUMBER ,
    ISPAID               VARCHAR2 (20 BYTE) ,
    ORGANIZATIONID       NUMBER ,
    ORGANIZATIONNAME     VARCHAR2 (250 BYTE) ,
    TIMEZONE             VARCHAR2 (30 BYTE) ,
    LOCAL_STARTTIME      DATE ,
    LOCAL_ENDTIME        DATE
  )
  LOGGING ;
CREATE INDEX CC_S_TMP_AET__IDX1 ON CC_S_TMP_ACTUALEVENTTIMELINE
  (
    LOCAL_STARTTIME ASC
  )
  LOGGING ;
CREATE INDEX CC_S_TMP_AET__IDX2 ON CC_S_TMP_ACTUALEVENTTIMELINE
  (
    LOCAL_ENDTIME ASC
  )
  LOGGING ;
--  ERROR: PK name length exceeds maximum allowed length(30)
ALTER TABLE CC_S_TMP_ACTUALEVENTTIMELINE ADD CONSTRAINT CC_S_TMP_AET_PK PRIMARY KEY
(
  EMPLOYEEID, STARTTIME, ENDTIME
)
;

CREATE TABLE CC_S_WFM_INTERVAL
  (
    WFM_INTERVAL_ID         NUMBER (19) NOT NULL ,
    INTERVAL_DATE           DATE NOT NULL ,
    CONTACT_QUEUE_ID        NUMBER (19) NOT NULL ,
    INTERVAL_ID             NUMBER (19) NOT NULL ,
    LABOR_MINUTES_TOTAL     NUMBER (9,2) DEFAULT 0 NOT NULL ,
    LABOR_MINUTES_WAITING   NUMBER (9,2) DEFAULT 0 NOT NULL ,
    LABOR_MINUTES_AVAILABLE NUMBER (9,2) DEFAULT 0 NOT NULL ,
    HEADCOUNT_TOTAL         NUMBER (7,2) DEFAULT 0 NOT NULL ,
    HEADCOUNT_AVAILABLE     NUMBER (7,2) DEFAULT 0 NOT NULL ,
    HEADCOUNT_UNAVAILABLE   NUMBER (7,2) DEFAULT 0 NOT NULL ,
    EXTRACT_DT              DATE NOT NULL ,
    LAST_UPDATE_DT          DATE NOT NULL ,
    LAST_UPDATE_BY          VARCHAR2 (30) NOT NULL
  )
  LOGGING ENABLE ROW MOVEMENT ;
CREATE INDEX CC_S_WFM_INTERVAL__IDXv2 ON CC_S_WFM_INTERVAL
  (
    CONTACT_QUEUE_ID ASC
  )
  LOGGING ;
CREATE INDEX CC_S_WFM_INTERVAL__IDXv3 ON CC_S_WFM_INTERVAL
  (
    INTERVAL_ID ASC
  )
  LOGGING ;
ALTER TABLE CC_S_WFM_INTERVAL ADD CONSTRAINT CC_S_WFM_INTERVAL_PK PRIMARY KEY
(
  WFM_INTERVAL_ID
)
;
ALTER TABLE CC_S_WFM_INTERVAL ADD CONSTRAINT CC_S_WFM_INTERVAL__UN UNIQUE
(
  INTERVAL_DATE , CONTACT_QUEUE_ID , INTERVAL_ID
)
;

CREATE TABLE PP_INPUT_FORECAST_INTERVAL
  (
    PRODUCTION_PLAN_NAME VARCHAR2 ,
    HORIZON_START_DATE   DATE ,
    HORIZON_END_DATE     DATE ,
    INTERVAL_DATE        DATE ,
    INTERVAL_START       VARCHAR2 ,
    INTERVAL_END         VARCHAR2 ,
    UNIT_OF_WORK_NAME    VARCHAR2 ,
    CONTACTS_CREATED     NUMBER
  )
  LOGGING ENABLE ROW MOVEMENT ;

ALTER TABLE CC_S_CONTACT_QUEUE ADD CONSTRAINT CC_C_CNTCT_Q_CC_C_PRJCT_CFG_FK FOREIGN KEY ( PROJECT_CONFIG_ID ) REFERENCES CC_C_PROJECT_CONFIG ( PROJECT_CONFIG_ID ) NOT DEFERRABLE ;

ALTER TABLE CC_C_CONTACT_QUEUE ADD CONSTRAINT CC_C_CNTCT_Q_CC_S_CNTCT_Q_FK FOREIGN KEY ( CONTACT_QUEUE_ID ) REFERENCES CC_S_CONTACT_QUEUE ( CONTACT_QUEUE_ID ) NOT DEFERRABLE ;

ALTER TABLE CC_S_PRODUCTION_PLAN_HORIZON ADD CONSTRAINT CC_C_HRZN_CC_C_PROD_PLN_FK FOREIGN KEY ( PRODUCTION_PLAN_ID ) REFERENCES CC_C_PRODUCTION_PLAN ( PRODUCTION_PLAN_ID ) NOT DEFERRABLE ;

ALTER TABLE CC_C_PRODUCTION_PLAN ADD CONSTRAINT CC_C_PROD_PLN_CC_C_PRJ_CC_C_FK FOREIGN KEY ( PROJECT_CONFIG_ID ) REFERENCES CC_C_PROJECT_CONFIG ( PROJECT_CONFIG_ID ) NOT DEFERRABLE ;

ALTER TABLE CC_S_ACD_INTERVAL ADD CONSTRAINT CC_S_ACD_INTRVL_CC_S_AGENT_FK FOREIGN KEY ( AGENT_ID ) REFERENCES CC_S_AGENT ( AGENT_ID ) NOT DEFERRABLE ;

ALTER TABLE CC_S_ACD_INTERVAL ADD CONSTRAINT CC_S_ACD_INTRVL_CC_S_CNTCTQ_FK FOREIGN KEY ( CONTACT_QUEUE_ID ) REFERENCES CC_S_CONTACT_QUEUE ( CONTACT_QUEUE_ID ) NOT DEFERRABLE ;

ALTER TABLE CC_S_ACD_INTERVAL ADD CONSTRAINT CC_S_ACD_INTRVL_CC_S_INTRVL_FK FOREIGN KEY ( INTERVAL_ID ) REFERENCES CC_S_INTERVAL ( INTERVAL_ID ) NOT DEFERRABLE ;

ALTER TABLE CC_S_AGENT_ABSENCE ADD CONSTRAINT CC_S_AGENT_ABS_CC_S_AGENT_FK FOREIGN KEY ( AGENT_ID ) REFERENCES CC_S_AGENT ( AGENT_ID ) NOT DEFERRABLE ;

ALTER TABLE CC_S_AGENT ADD CONSTRAINT CC_S_AGENT_CC_C_PRJ_CONFIG_FK FOREIGN KEY ( PROJECT_CONFIG_ID ) REFERENCES CC_C_PROJECT_CONFIG ( PROJECT_CONFIG_ID ) NOT DEFERRABLE ;

ALTER TABLE CC_S_AGENT_ACTIVITY ADD CONSTRAINT CC_S_AGT_ACT_CC_C_ACT_TYPE_FK FOREIGN KEY ( ACTIVITY_TYPE_ID ) REFERENCES CC_C_ACTIVITY_TYPE ( ACTIVITY_TYPE_ID ) NOT DEFERRABLE ;

ALTER TABLE CC_S_AGENT_ACTIVITY ADD CONSTRAINT CC_S_AGT_ACT_CC_S_AGT_FK FOREIGN KEY ( AGENT_ID ) REFERENCES CC_S_AGENT ( AGENT_ID ) NOT DEFERRABLE ;

ALTER TABLE CC_S_AGENT_SUPERVISOR ADD CONSTRAINT CC_S_AGT_SUP_CC_S_AGT_FK FOREIGN KEY ( SUPERVISOR_AGENT_ID ) REFERENCES CC_S_AGENT ( AGENT_ID ) NOT DEFERRABLE ;

ALTER TABLE CC_S_AGENT_WORK_DAY ADD CONSTRAINT CC_S_AGT_WORK_DAY_CC_S_AGT_FK FOREIGN KEY ( AGENT_ID ) REFERENCES CC_S_AGENT ( AGENT_ID ) NOT DEFERRABLE ;

ALTER TABLE CC_S_CALL_DETAIL ADD CONSTRAINT CC_S_CALL_DETAIL_CC_S_AGENT_FK FOREIGN KEY ( AGENT_ID ) REFERENCES CC_S_AGENT ( AGENT_ID ) NOT DEFERRABLE ;

ALTER TABLE CC_S_EXTERNAL_INTERNAL ADD CONSTRAINT CC_S_EXT_INT_CC_S_AGENT_FK FOREIGN KEY ( AGENT_ID ) REFERENCES CC_S_AGENT ( AGENT_ID ) NOT DEFERRABLE ;

ALTER TABLE CC_S_FCST_INTERVAL ADD CONSTRAINT CC_S_FCST_INTRVL_CC_C_HRZN_FK FOREIGN KEY ( PRODUCTION_PLAN_HORIZON_ID ) REFERENCES CC_S_PRODUCTION_PLAN_HORIZON ( PRODUCTION_PLAN_HORIZON_ID ) NOT DEFERRABLE ;

ALTER TABLE CC_S_FCST_INTERVAL ADD CONSTRAINT CC_S_FCST_INTRVL_CC_C_UOW_FK FOREIGN KEY ( UNIT_OF_WORK_ID ) REFERENCES CC_C_UNIT_OF_WORK ( UNIT_OF_WORK_ID ) NOT DEFERRABLE ;

ALTER TABLE CC_S_FCST_INTERVAL ADD CONSTRAINT CC_S_FCST_INTRVL_CC_S_INT_FK FOREIGN KEY ( INTERVAL_ID ) REFERENCES CC_S_INTERVAL ( INTERVAL_ID ) NOT DEFERRABLE ;

ALTER TABLE CC_S_ACD_INTERVAL_PERIOD ADD CONSTRAINT CC_S_INT_PRD_CC_C_CNTCT_Q_FK FOREIGN KEY ( CONTACT_QUEUE_ID ) REFERENCES CC_S_CONTACT_QUEUE ( CONTACT_QUEUE_ID ) NOT DEFERRABLE ;

ALTER TABLE CC_S_IVR_INTERVAL ADD CONSTRAINT CC_S_IVR_INTRVL_CC_S_INTRVL_FK FOREIGN KEY ( INTERVAL_ID ) REFERENCES CC_S_INTERVAL ( INTERVAL_ID ) NOT DEFERRABLE ;

ALTER TABLE CC_S_IVR_INTERVAL ADD CONSTRAINT CC_S_IVR_INT_CC_C_PRJ_CC_C_FK FOREIGN KEY ( PROJECT_CONFIG_ID ) REFERENCES CC_C_PROJECT_CONFIG ( PROJECT_CONFIG_ID ) NOT DEFERRABLE ;

ALTER TABLE CC_S_IVR_SELF_SERVICE_USAGE ADD CONSTRAINT CC_S_IVR_SVC_CC_S_IVR_IVL_FK FOREIGN KEY ( IVR_INTERVAL_ID ) REFERENCES CC_S_IVR_INTERVAL ( IVR_INTERVAL_ID ) NOT DEFERRABLE ;

ALTER TABLE CC_S_IVR_SELF_SERVICE_USAGE ADD CONSTRAINT CC_S_IVR_SVC_CC_S_SVC_PATH_FK FOREIGN KEY ( IVR_SELF_SERVICE_PATH_ID ) REFERENCES CC_S_IVR_SELF_SERVICE_PATH ( IVR_SELF_SERVICE_PATH_ID ) NOT DEFERRABLE ;

ALTER TABLE CC_S_WFM_INTERVAL ADD CONSTRAINT CC_S_WFM_INT_CC_S_CNTCT_Q_FK FOREIGN KEY ( CONTACT_QUEUE_ID ) REFERENCES CC_S_CONTACT_QUEUE ( CONTACT_QUEUE_ID ) NOT DEFERRABLE ;

ALTER TABLE CC_S_WFM_INTERVAL ADD CONSTRAINT CC_S_WFM_INT_CC_S_INTRVL_FK FOREIGN KEY ( INTERVAL_ID ) REFERENCES CC_S_INTERVAL ( INTERVAL_ID ) NOT DEFERRABLE ;

CREATE OR REPLACE TRIGGER BIU_CC_C_ACTIVITY_TYPE 
    BEFORE INSERT OR UPDATE ON CC_C_ACTIVITY_TYPE 
    FOR EACH ROW 
    ENABLE 
BEGIN
IF INSERTING AND :NEW.ACTIVITY_TYPE_ID IS NULL THEN 
          SELECT SEQ_CC_C_ACTIVITY_TYPE.NEXTVAL INTO :NEW.ACTIVITY_TYPE_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATE_BY := USER;
END; 
/



CREATE OR REPLACE TRIGGER BIU_CC_C_CONTACT_QUEUE 
    BEFORE INSERT OR UPDATE ON CC_C_CONTACT_QUEUE 
    FOR EACH ROW 
    ENABLE 
BEGIN 
IF INSERTING AND :NEW.C_CONTACT_QUEUE_ID IS NULL THEN 
          SELECT SEQ_CC_C_CONTACT_QUEUE.NEXTVAL INTO :NEW.C_CONTACT_QUEUE_ID FROM DUAL;
END IF;
END; 
/



CREATE OR REPLACE TRIGGER BIU_CC_C_PROJECT_CONFIG 
    BEFORE INSERT OR UPDATE ON CC_C_PROJECT_CONFIG 
    FOR EACH ROW 
    ENABLE 
BEGIN 
IF INSERTING AND :NEW.PROJECT_CONFIG_ID IS NULL THEN 
          SELECT SEQ_CC_C_PROJECT_CONFIG.NEXTVAL INTO :NEW.PROJECT_CONFIG_ID FROM DUAL;
END IF;
END; 
/



CREATE OR REPLACE TRIGGER BIU_CC_C_UNIT_OF_WORK 
    BEFORE INSERT OR UPDATE ON CC_C_UNIT_OF_WORK 
    FOR EACH ROW 
    ENABLE 
BEGIN 
IF INSERTING AND :NEW.UNIT_OF_WORK_ID IS NULL THEN 
          SELECT SEQ_CC_C_UNIT_OF_WORK.NEXTVAL INTO :NEW.UNIT_OF_WORK_ID FROM DUAL;
END IF;
END; 
/



CREATE OR REPLACE TRIGGER BIU_CC_S_ACD_INTERVAL 
    BEFORE INSERT OR UPDATE ON CC_S_ACD_INTERVAL 
    FOR EACH ROW 
    ENABLE 
BEGIN 
IF INSERTING AND :NEW.ACD_INTERVAL_ID IS NULL THEN 
          SELECT SEQ_CC_S_ACD_INTERVAL.NEXTVAL INTO :NEW.ACD_INTERVAL_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
END; 
/



CREATE OR REPLACE TRIGGER BIU_CC_S_ACD_INTERVAL_PERIOD 
    BEFORE INSERT OR UPDATE ON CC_S_ACD_INTERVAL_PERIOD 
    FOR EACH ROW 
    ENABLE 
BEGIN 
IF INSERTING AND :NEW.ACD_INTERVAL_PERIOD_ID IS NULL THEN 
          SELECT SEQ_CC_S_ACD_INTERVAL_PERIOD.NEXTVAL INTO :NEW.ACD_INTERVAL_PERIOD_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
END; 
/



CREATE OR REPLACE TRIGGER BIU_CC_S_AGENT 
    BEFORE INSERT OR UPDATE ON CC_S_AGENT 
    FOR EACH ROW 
    ENABLE 
BEGIN 
IF INSERTING AND :NEW.AGENT_ID IS NULL THEN 
          SELECT SEQ_CC_S_AGENT.NEXTVAL INTO :NEW.AGENT_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
END; 
/



CREATE OR REPLACE TRIGGER BIU_CC_S_AGENT_ABSENCE 
    BEFORE INSERT OR UPDATE ON CC_S_AGENT_ABSENCE 
    FOR EACH ROW 
    ENABLE 
BEGIN
IF INSERTING AND :NEW.AGENT_ABSENCE_ID IS NULL THEN 
          SELECT SEQ_CC_S_AGENT_ABSENCE.NEXTVAL INTO :NEW.AGENT_ABSENCE_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATE_BY := USER;
END; 
/



CREATE OR REPLACE TRIGGER BIU_CC_S_AGENT_ACTIVITY 
    BEFORE INSERT OR UPDATE ON CC_S_AGENT_ACTIVITY 
    FOR EACH ROW 
    ENABLE 
BEGIN 
IF INSERTING AND :NEW.AGENT_ACTIVITY_ID IS NULL THEN 
          SELECT SEQ_CC_S_AGENT_ACTIVITY.NEXTVAL INTO :NEW.AGENT_ACTIVITY_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATE_BY := USER;
END; 
/



CREATE OR REPLACE TRIGGER BIU_CC_S_AGENT_SUPERVISOR 
    BEFORE INSERT OR UPDATE ON CC_S_AGENT_SUPERVISOR 
    FOR EACH ROW 
    ENABLE 
BEGIN 
IF INSERTING AND :NEW.AGENT_SUPERVISOR_ID IS NULL THEN 
          SELECT SEQ_CC_S_AGENT_SUPERVISOR.NEXTVAL INTO :NEW.AGENT_SUPERVISOR_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
END; 
/



CREATE OR REPLACE TRIGGER BIU_CC_S_AGENT_WORK_DAY 
    BEFORE INSERT OR UPDATE ON CC_S_AGENT_WORK_DAY 
    FOR EACH ROW 
    ENABLE 
BEGIN 
IF INSERTING AND :NEW.AGENT_WORK_DAY_ID IS NULL THEN 
          SELECT SEQ_CC_S_AGENT_WORK_DAY.NEXTVAL INTO :NEW.AGENT_WORK_DAY_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
END; 
/



CREATE OR REPLACE TRIGGER BIU_CC_S_CALL_DETAIL 
    BEFORE INSERT OR UPDATE ON CC_S_CALL_DETAIL 
    FOR EACH ROW 
    ENABLE 
BEGIN 
IF INSERTING AND :NEW.CALL_DETAIL_ID IS NULL THEN 
          SELECT SEQ_CC_S_CALL_DETAIL.NEXTVAL INTO :NEW.CALL_DETAIL_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
END; 
/



CREATE OR REPLACE TRIGGER BIU_CC_S_CONTACT_QUEUE 
    BEFORE INSERT OR UPDATE ON CC_S_CONTACT_QUEUE 
    FOR EACH ROW 
    ENABLE 
BEGIN 
IF INSERTING AND :NEW.CONTACT_QUEUE_ID IS NULL THEN 
          SELECT SEQ_CC_S_C_CCONTACT_QUEUE.NEXTVAL INTO :NEW.CONTACT_QUEUE_ID FROM DUAL;
END IF;
END; 
/



CREATE OR REPLACE TRIGGER BIU_CC_S_EXTERNAL_INTERNAL 
    BEFORE INSERT OR UPDATE ON CC_S_EXTERNAL_INTERNAL 
    FOR EACH ROW 
    ENABLE 
BEGIN
IF INSERTING AND :NEW.EXTERNAL_INTERNAL_ID IS NULL THEN 
          SELECT SEQ_CC_S_EXTERNAL_INTERNAL.NEXTVAL INTO :NEW.EXTERNAL_INTERNAL_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATE_BY := USER;
END; 
/



CREATE OR REPLACE TRIGGER BIU_CC_S_FCST_INTERVAL 
    BEFORE INSERT OR UPDATE ON CC_S_FCST_INTERVAL 
    FOR EACH ROW 
    ENABLE 
BEGIN 
IF INSERTING AND :NEW.FCST_INTERVAL_ID IS NULL THEN 
          SELECT SEQ_CC_S_FCST_INTERVAL.NEXTVAL INTO :NEW.FCST_INTERVAL_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
END; 
/



CREATE OR REPLACE TRIGGER BIU_CC_S_INTERVAL 
    BEFORE INSERT OR UPDATE ON CC_S_INTERVAL 
    FOR EACH ROW 
    ENABLE 
BEGIN 
IF INSERTING AND :NEW.INTERVAL_ID IS NULL THEN 
          SELECT SEQ_CC_S_INTERVAL.NEXTVAL INTO :NEW.INTERVAL_ID FROM DUAL;
END IF;
END;  
/



CREATE OR REPLACE TRIGGER BIU_CC_S_IVR_INTERVAL 
    BEFORE INSERT OR UPDATE ON CC_S_IVR_INTERVAL 
    FOR EACH ROW 
    ENABLE 
BEGIN 
IF INSERTING AND :NEW.IVR_INTERVAL_ID IS NULL THEN 
          SELECT SEQ_CC_S_IVR_INTERVAL.NEXTVAL INTO :NEW.IVR_INTERVAL_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
END; 
/



CREATE OR REPLACE TRIGGER BIU_CC_S_WFM_INTERVAL 
    BEFORE INSERT OR UPDATE ON CC_S_WFM_INTERVAL 
    FOR EACH ROW 
    ENABLE 
BEGIN 
IF INSERTING AND :NEW.WFM_INTERVAL_ID IS NULL THEN 
          SELECT SEQ_CC_S_WFM_INTERVAL.NEXTVAL INTO :NEW.WFM_INTERVAL_ID FROM DUAL;
END IF;
IF INSERTING THEN 
          :NEW.EXTRACT_DT := SYSDATE;
END IF;
:NEW.LAST_UPDATE_DT := SYSDATE;
:NEW.LAST_UPDATE_BY := USER;
END;  
/




-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            25
-- CREATE INDEX                            33
-- ALTER TABLE                             86
-- CREATE VIEW                              0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          18
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              1
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         24
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        1
-- CREATE USER                              1
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- ERRORS                                   1
-- WARNINGS                                 0
