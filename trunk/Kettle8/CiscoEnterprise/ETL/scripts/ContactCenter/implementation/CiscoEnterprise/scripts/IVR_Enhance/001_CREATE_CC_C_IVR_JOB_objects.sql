DROP TABLE CC_A_IVR_JOB_CTRL;
CREATE TABLE CC_A_IVR_JOB_CTRL (
IVR_JOB_CTRL_ID NUMBER(38) NOT NULL
, JOB_NAME VARCHAR2(15) NOT NULL
, PROJECT_NAME_PARAM VARCHAR2(100)
, PROGRAM_NAME_PARAM VARCHAR2(100)
, APP_NAME_PARAM VARCHAR2(200)
, START_DATE_PARAM_NUM   NUMBER
, END_DATE_PARAM_NUM  NUMBER
, JOB_PARAM_1  VARCHAR2(100)
, JOB_PARAM_2  VARCHAR2(100)
, JOB_PARAM_3  VARCHAR2(100)
, STATUS VARCHAR2(10) NOT NULL
, STATUS_DT DATE NOT NULL
, CREATE_DT DATE NOT NULL
, CREATED_BY VARCHAR2(50) NOT NULL
, JOB_ID NUMBER(38)
, D_PROJECT_ID  NUMBER(38)
, D_PROGRAM_ID  NUMBER(38)
, STAT_COMMENT VARCHAR2(1000)
)
       TABLESPACE MAXDAT_DATA 
        LOGGING 
;        


ALTER TABLE CC_A_IVR_JOB_CTRL 
    ADD CONSTRAINT CC_A_IVR_JOB_CTRL_PK PRIMARY KEY ( IVR_JOB_CTRL_ID ) ;

DROP SEQUENCE SEQ_IVR_JOB_CTRL_ID;
CREATE SEQUENCE SEQ_IVR_JOB_CTRL_ID;  

CREATE OR REPLACE TRIGGER BIU_CC_A_IVR_JOB_CTRL
    BEFORE INSERT OR UPDATE ON CC_A_IVR_JOB_CTRL 
    FOR EACH ROW 
BEGIN
IF INSERTING AND :NEW.IVR_JOB_CTRL_ID IS NULL THEN 
          SELECT SEQ_IVR_JOB_CTRL_ID.NEXTVAL INTO :NEW.IVR_JOB_CTRL_ID FROM DUAL;
END IF;
    IF :NEW.CREATE_DT IS NULL THEN
      :NEW.CREATE_DT := SYSDATE;
    END IF;
    
    IF :NEW.CREATED_BY IS NULL THEN
       :NEW.CREATED_BY := USER;
    END IF;
    
    IF :NEW.STATUS IS NULL THEN
      :NEW.STATUS := 'PEND';
      :NEW.STATUS_DT := SYSDATE;
    END IF;
    
  IF UPDATING THEN
    IF :NEW.STATUS <> :OLD.STATUS THEN
      :NEW.STATUS_DT := SYSDATE;
  END IF; 
  END IF; 
END;
/

CREATE OR REPLACE VIEW CC_A_IVR_JOB_CTRL_SV AS 
SELECT * FROM CC_A_IVR_JOB_CTRL;

GRANT SELECT ON CC_A_IVR_JOB_CTRL TO CISCO_READ_ONLY;
GRANT SELECT ON CC_A_IVR_JOB_CTRL_SV TO CISCO_READ_ONLY;
GRANT SELECT, INSERT, UPDATE, DELETE ON CC_A_IVR_JOB_CTRL TO SD25802, SR18956, LG74078;
GRANT SELECT ON CC_A_IVR_JOB_CTRL TO MAXDAT_READ_ONLY;
GRANT SELECT ON CC_A_IVR_JOB_CTRL_SV TO MAXDAT_READ_ONLY;
