<?xml version="1.0" encoding="UTF-8"?>
<job>
  <name>jb_ppfps_process_staging_for_each_pp</name>
  <description/>
    <extended_description>
----------------------------------------------------------------
Do not edit these four SVN_* variable values.  They are populated when you commit code to SVN and used later to identify deployed code.
----------------------------------------------------------------

---------------------------------
SVN_FILE_URL        = $URL$ 
SVN_REVISION        = $Revision$ 
SVN_REVISION_DATE   = $Date$
SVN_REVISION_AUTHOR = $Author$
---------------------------------

</extended_description>
  <job_version/>
  <job_status>0</job_status>
  <directory>/</directory>
  <created_user>-</created_user>
  <created_date>2013/05/09 11:52:11.419</created_date>
  <modified_user>-</modified_user>
  <modified_date>2013/05/09 11:52:11.419</modified_date>
  <parameters>
    </parameters>
  <connection>
    <name>DP_SCORECARD</name>
    <server>${DB_SCORECARD_HOSTNAME}</server>
    <type>ORACLE</type>
    <access>Native</access>
    <database>${DB_SCORECARD_NAME}</database>
    <port>${DB_SCORECARD_PORT}</port>
    <username>${DB_SCORECARD_USER}</username>
    <password>${DB_SCORECARD_PASSWORD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>${DB_SCORECARD_PORT}</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SQL_CONNECT</code>
        <attribute>ALTER SESSION SET CURRENT_SCHEMA = DP_SCORECARD;</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>KOFAX_CENTRAL</name>
    <server>${DB_KOFAX_CENTRAL_HOSTNAME}</server>
    <type>MSSQL</type>
    <access>Native</access>
    <database>${DB_KOFAX_CENTRAL_DB}</database>
    <port>${DB_KOFAX_CENTRAL_PORT}</port>
    <username>${DB_KOFAX_CENTRAL_USER}</username>
    <password>${DB_KOFAX_CENTRAL_PASSWORD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>EXTRA_OPTION_MSSQL.instance</code>
        <attribute>${DB_KOFAX_CENTRAL_INSTANCE}</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>MSSQL_DOUBLE_DECIMAL_SEPARATOR</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>${DB_KOFAX_CENTRAL_PORT}</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>Y</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>MAXDAT</name>
    <server>${DB_MAXDAT_HOSTNAME}</server>
    <type>ORACLE</type>
    <access>Native</access>
    <database>${DB_MAXDAT_NAME}</database>
    <port>${DB_MAXDAT_PORT}</port>
    <username>${DB_MAXDAT_USER}</username>
    <password>${DB_MAXDAT_PASSWORD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>INITIAL_POOL_SIZE</code>
        <attribute>20</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>MAXIMUM_POOL_SIZE</code>
        <attribute>100</attribute>
      </attribute>
      <attribute>
        <code>POOLING_initialSize</code>
        <attribute>20</attribute>
      </attribute>
      <attribute>
        <code>POOLING_logAbandoned</code>
        <attribute>false</attribute>
      </attribute>
      <attribute>
        <code>POOLING_maxActive</code>
        <attribute>100</attribute>
      </attribute>
      <attribute>
        <code>POOLING_testOnBorrow</code>
        <attribute>true</attribute>
      </attribute>
      <attribute>
        <code>POOLING_validationQuery</code>
        <attribute>select 1 from dual</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>${DB_MAXDAT_PORT}</attribute>
      </attribute>
      <attribute>
        <code>PREFERRED_SCHEMA_NAME</code>
        <attribute>${DB_MAXDAT_SCHEMA}</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SQL_CONNECT</code>
        <attribute>ALTER SESSION SET CURRENT_SCHEMA = CISCO_ENTERPRISE_CC;</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>Y</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>MAXDATHCO</name>
    <server>${DB_MAXDATHCO_HOSTNAME}</server>
    <type>ORACLE</type>
    <access>Native</access>
    <database>${DB_MAXDATHCO_NAME}</database>
    <port>${DB_MAXDATHCO_PORT}</port>
    <username>${DB_MAXDATHCO_USER}</username>
    <password>${DB_MAXDATHCO_PASSWORD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>INITIAL_POOL_SIZE</code>
        <attribute>20</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>MAXIMUM_POOL_SIZE</code>
        <attribute>100</attribute>
      </attribute>
      <attribute>
        <code>POOLING_initialSize</code>
        <attribute>20</attribute>
      </attribute>
      <attribute>
        <code>POOLING_logAbandoned</code>
        <attribute>false</attribute>
      </attribute>
      <attribute>
        <code>POOLING_maxActive</code>
        <attribute>100</attribute>
      </attribute>
      <attribute>
        <code>POOLING_testOnBorrow</code>
        <attribute>true</attribute>
      </attribute>
      <attribute>
        <code>POOLING_validationQuery</code>
        <attribute>select 1 from dual</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>${DB_MAXDATHCO_PORT}</attribute>
      </attribute>
      <attribute>
        <code>PREFERRED_SCHEMA_NAME</code>
        <attribute>${DB_MAXDATHCO_SCHEMA}</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SQL_CONNECT</code>
        <attribute>ALTER SESSION SET CURRENT_SCHEMA = MAXDAT;</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>Y</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>MOTS</name>
    <server>${DB_MOTS_HOSTNAME}</server>
    <type>ORACLE</type>
    <access>Native</access>
    <database>${DB_MOTS_DATABASENAME}</database>
    <port>${DB_MOTS_PORT}</port>
    <username>${DB_MOTS_USER}</username>
    <password>${DB_MOTS_PASSWORD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>${DB_MOTS_PORT}</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <connection>
    <name>OLTP_SOURCE</name>
    <server>${DB_OLTP_HOSTNAME}</server>
    <type>ORACLE</type>
    <access>Native</access>
    <database>${DB_OLTP_NAME}</database>
    <port>${DB_OLTP_PORT}</port>
    <username>${DB_OLTP_USER}</username>
    <password>${DB_OLTP_PASSWORD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_LOWERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>FORCE_IDENTIFIERS_TO_UPPERCASE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>IS_CLUSTERED</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>PORT_NUMBER</code>
        <attribute>${DB_OLTP_PORT}</attribute>
      </attribute>
      <attribute>
        <code>PREFERRED_SCHEMA_NAME</code>
        <attribute>$DB_OLTP_SCHEMA</attribute>
      </attribute>
      <attribute>
        <code>QUOTE_ALL_FIELDS</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>SUPPORTS_BOOLEAN_DATA_TYPE</code>
        <attribute>N</attribute>
      </attribute>
      <attribute>
        <code>USE_POOLING</code>
        <attribute>N</attribute>
      </attribute>
    </attributes>
  </connection>
  <slaveservers>
    </slaveservers>
  <job-log-table>
    <connection/>
    <schema/>
    <table/>
    <size_limit_lines/>
    <interval/>
    <timeout_days/>
    <field>
      <id>ID_JOB</id>
      <enabled>Y</enabled>
      <name>ID_JOB</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>JOBNAME</name>
    </field>
    <field>
      <id>STATUS</id>
      <enabled>Y</enabled>
      <name>STATUS</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>STARTDATE</id>
      <enabled>Y</enabled>
      <name>STARTDATE</name>
    </field>
    <field>
      <id>ENDDATE</id>
      <enabled>Y</enabled>
      <name>ENDDATE</name>
    </field>
    <field>
      <id>LOGDATE</id>
      <enabled>Y</enabled>
      <name>LOGDATE</name>
    </field>
    <field>
      <id>DEPDATE</id>
      <enabled>Y</enabled>
      <name>DEPDATE</name>
    </field>
    <field>
      <id>REPLAYDATE</id>
      <enabled>Y</enabled>
      <name>REPLAYDATE</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>Y</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>EXECUTING_SERVER</id>
      <enabled>N</enabled>
      <name>EXECUTING_SERVER</name>
    </field>
    <field>
      <id>EXECUTING_USER</id>
      <enabled>N</enabled>
      <name>EXECUTING_USER</name>
    </field>
    <field>
      <id>START_JOB_ENTRY</id>
      <enabled>N</enabled>
      <name>START_JOB_ENTRY</name>
    </field>
    <field>
      <id>CLIENT</id>
      <enabled>N</enabled>
      <name>CLIENT</name>
    </field>
  </job-log-table>
  <jobentry-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>JOBNAME</id>
      <enabled>Y</enabled>
      <name>TRANSNAME</name>
    </field>
    <field>
      <id>JOBENTRYNAME</id>
      <enabled>Y</enabled>
      <name>STEPNAME</name>
    </field>
    <field>
      <id>LINES_READ</id>
      <enabled>Y</enabled>
      <name>LINES_READ</name>
    </field>
    <field>
      <id>LINES_WRITTEN</id>
      <enabled>Y</enabled>
      <name>LINES_WRITTEN</name>
    </field>
    <field>
      <id>LINES_UPDATED</id>
      <enabled>Y</enabled>
      <name>LINES_UPDATED</name>
    </field>
    <field>
      <id>LINES_INPUT</id>
      <enabled>Y</enabled>
      <name>LINES_INPUT</name>
    </field>
    <field>
      <id>LINES_OUTPUT</id>
      <enabled>Y</enabled>
      <name>LINES_OUTPUT</name>
    </field>
    <field>
      <id>LINES_REJECTED</id>
      <enabled>Y</enabled>
      <name>LINES_REJECTED</name>
    </field>
    <field>
      <id>ERRORS</id>
      <enabled>Y</enabled>
      <name>ERRORS</name>
    </field>
    <field>
      <id>RESULT</id>
      <enabled>Y</enabled>
      <name>RESULT</name>
    </field>
    <field>
      <id>NR_RESULT_ROWS</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_ROWS</name>
    </field>
    <field>
      <id>NR_RESULT_FILES</id>
      <enabled>Y</enabled>
      <name>NR_RESULT_FILES</name>
    </field>
    <field>
      <id>LOG_FIELD</id>
      <enabled>N</enabled>
      <name>LOG_FIELD</name>
    </field>
    <field>
      <id>COPY_NR</id>
      <enabled>N</enabled>
      <name>COPY_NR</name>
    </field>
  </jobentry-log-table>
  <channel-log-table>
    <connection/>
    <schema/>
    <table/>
    <timeout_days/>
    <field>
      <id>ID_BATCH</id>
      <enabled>Y</enabled>
      <name>ID_BATCH</name>
    </field>
    <field>
      <id>CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>CHANNEL_ID</name>
    </field>
    <field>
      <id>LOG_DATE</id>
      <enabled>Y</enabled>
      <name>LOG_DATE</name>
    </field>
    <field>
      <id>LOGGING_OBJECT_TYPE</id>
      <enabled>Y</enabled>
      <name>LOGGING_OBJECT_TYPE</name>
    </field>
    <field>
      <id>OBJECT_NAME</id>
      <enabled>Y</enabled>
      <name>OBJECT_NAME</name>
    </field>
    <field>
      <id>OBJECT_COPY</id>
      <enabled>Y</enabled>
      <name>OBJECT_COPY</name>
    </field>
    <field>
      <id>REPOSITORY_DIRECTORY</id>
      <enabled>Y</enabled>
      <name>REPOSITORY_DIRECTORY</name>
    </field>
    <field>
      <id>FILENAME</id>
      <enabled>Y</enabled>
      <name>FILENAME</name>
    </field>
    <field>
      <id>OBJECT_ID</id>
      <enabled>Y</enabled>
      <name>OBJECT_ID</name>
    </field>
    <field>
      <id>OBJECT_REVISION</id>
      <enabled>Y</enabled>
      <name>OBJECT_REVISION</name>
    </field>
    <field>
      <id>PARENT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>PARENT_CHANNEL_ID</name>
    </field>
    <field>
      <id>ROOT_CHANNEL_ID</id>
      <enabled>Y</enabled>
      <name>ROOT_CHANNEL_ID</name>
    </field>
  </channel-log-table>
  <pass_batchid>N</pass_batchid>
  <shared_objects_file/>
  <entries>
    <entry>
      <name>START</name>
      <description/>
      <type>SPECIAL</type>
      <attributes/>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>36</xloc>
      <yloc>58</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Set PP Manager Variables</name>
      <description/>
      <type>TRANS</type>
      <attributes/>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${Internal.Job.Filename.Directory}/tr_ppfps_set_pp_manager_variables.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>Y</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration/>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>200</xloc>
      <yloc>58</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Evaluate rows number in a table</name>
      <description/>
      <type>EVAL_TABLE_CONTENT</type>
      <attributes/>
      <connection>MAXDAT</connection>
      <schemaname/>
      <tablename/>
      <success_condition>rows_count_greater</success_condition>
      <limit>0</limit>
      <is_custom_sql>Y</is_custom_sql>
      <is_usevars>Y</is_usevars>
      <custom_sql>SELECT DISTINCT HORIZON_START_DATE FROM PP_STG_FCST_BY_INV_AGE WHERE CFG_PRODUCTION_PLAN_ID=${V_CFG_PRODUCTION_PLAN_ID} AND PROCESS_DATE IS NULL</custom_sql>
      <add_rows_result>N</add_rows_result>
      <clear_result_rows>Y</clear_result_rows>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>399</xloc>
      <yloc>56</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>DUMMY</name>
      <description/>
      <type>SPECIAL</type>
      <attributes/>
      <start>N</start>
      <dummy>Y</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>528</xloc>
      <yloc>56</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>DUMMY 2</name>
      <description/>
      <type>SPECIAL</type>
      <attributes/>
      <start>N</start>
      <dummy>Y</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>474</xloc>
      <yloc>208</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Chk All UOW in Stg Valid</name>
      <description/>
      <type>EVAL_TABLE_CONTENT</type>
      <attributes/>
      <connection>MAXDAT</connection>
      <schemaname/>
      <tablename/>
      <success_condition>rows_count_smaller_equal</success_condition>
      <limit>0</limit>
      <is_custom_sql>Y</is_custom_sql>
      <is_usevars>Y</is_usevars>
      <custom_sql>SELECT DISTINCT SFI.CFG_PRODUCTION_PLAN_ID, TRIM(SFI.UNIT_OF_WORK_NAME) AS UNIT_OF_WORK_NAME
  FROM PP_STG_FCST_BY_INV_AGE SFI
 WHERE CFG_PRODUCTION_PLAN_ID=${V_CFG_PRODUCTION_PLAN_ID} AND PROCESS_DATE IS NULL AND NOT EXISTs
 (SELECT TRIM(UOW.UNIT_OF_WORK_NAME)
          FROM PP_CFG_UNIT_OF_WORK UOW
         WHERE CFG_PRODUCTION_PLAN_ID=${V_CFG_PRODUCTION_PLAN_ID} AND TRIM(SFI.UNIT_OF_WORK_NAME) = TRIM(UOW.UNIT_OF_WORK_NAME))</custom_sql>
      <add_rows_result>N</add_rows_result>
      <clear_result_rows>Y</clear_result_rows>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>95</xloc>
      <yloc>209</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Log</name>
      <description/>
      <type>TRANS</type>
      <attributes/>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${Internal.Job.Filename.Directory}/tr_pps_write_to_db_log.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration/>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>98</xloc>
      <yloc>134</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Set Log Vars</name>
      <description/>
      <type>SET_VARIABLES</type>
      <attributes/>
      <replacevars>Y</replacevars>
      <filename/>
      <file_variable_type>JVM</file_variable_type>
      <fields>
        <field>
          <variable_name>V_LOG_TYPE</variable_name>
          <variable_value>LOG</variable_value>
          <variable_type>JVM</variable_type>
        </field>
        <field>
          <variable_name>V_LOG_PROCESS</variable_name>
          <variable_value>PP_Forecast_Process_Staging</variable_value>
          <variable_type>JVM</variable_type>
        </field>
        <field>
          <variable_name>V_LOG_DESCRIPTION</variable_name>
          <variable_value>Found new forecast staging data for ${V_PRODUCTION_PLAN_NAME}</variable_value>
          <variable_type>JVM</variable_type>
        </field>
      </fields>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>400</xloc>
      <yloc>135</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Set Log Vars 2</name>
      <description/>
      <type>SET_VARIABLES</type>
      <attributes/>
      <replacevars>Y</replacevars>
      <filename/>
      <file_variable_type>JVM</file_variable_type>
      <fields>
        <field>
          <variable_name>V_LOG_TYPE</variable_name>
          <variable_value>ERR</variable_value>
          <variable_type>JVM</variable_type>
        </field>
        <field>
          <variable_name>V_LOG_PROCESS</variable_name>
          <variable_value>PP_Forecast_Process_Staging</variable_value>
          <variable_type>JVM</variable_type>
        </field>
        <field>
          <variable_name>V_LOG_DESCRIPTION</variable_name>
          <variable_value>Found UOW in forecast INV file that are not defined in is not defined in PP_CFG_UNIT_OF_WORK table for ${V_PRODUCTION_PLAN_NAME}</variable_value>
          <variable_type>JVM</variable_type>
        </field>
      </fields>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>94</xloc>
      <yloc>275</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Log 2</name>
      <description/>
      <type>TRANS</type>
      <attributes/>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${Internal.Job.Filename.Directory}/tr_pps_write_to_db_log.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <logging_remote_work>N</logging_remote_work>
      <run_configuration/>
      <parameters>
        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>198</xloc>
      <yloc>364</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Chk All Frcst Dates in File Exist</name>
      <description/>
      <type>EVAL_TABLE_CONTENT</type>
      <attributes/>
      <connection>MAXDAT</connection>
      <schemaname/>
      <tablename/>
      <success_condition>rows_count_greater_equal</success_condition>
      <limit>1</limit>
      <is_custom_sql>Y</is_custom_sql>
      <is_usevars>Y</is_usevars>
      <custom_sql>WITH FORECAST_HORIZON AS
(
SELECT DISTINCT CFG_PRODUCTION_PLAN_ID,
                HORIZON_START_DATE,
                HORIZON_END_DATE
  from PP_STG_FCST_BY_INV_AGE
 WHERE CFG_PRODUCTION_PLAN_ID = ${V_CFG_PRODUCTION_PLAN_ID}
   AND PROCESS_DATE IS NULL
)
,MIN_MAX_FORECAST_DATES AS (
SELECT MIN(X.FORECAST_DATE) AS MIN_FORECAST_DATE, MAX(X.FORECAST_DATE) AS MAX_FORECAST_DATE FROM PP_STG_FCST_BY_INV_AGE X WHERE CFG_PRODUCTION_PLAN_ID = ${V_CFG_PRODUCTION_PLAN_ID}
   AND PROCESS_DATE IS NULL
   )
SELECT 1 AS CNT
  FROM FORECAST_HORIZON FH, MIN_MAX_FORECAST_DATES MMFD
 WHERE FH.HORIZON_START_DATE = MMFD.MIN_FORECAST_DATE
   AND FH.HORIZON_END_DATE = MMFD.MAX_FORECAST_DATE</custom_sql>
      <add_rows_result>N</add_rows_result>
      <clear_result_rows>Y</clear_result_rows>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>271</xloc>
      <yloc>208</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Set Log Vars 3</name>
      <description/>
      <type>SET_VARIABLES</type>
      <attributes/>
      <replacevars>Y</replacevars>
      <filename/>
      <file_variable_type>JVM</file_variable_type>
      <fields>
        <field>
          <variable_name>V_LOG_TYPE</variable_name>
          <variable_value>ERR</variable_value>
          <variable_type>JVM</variable_type>
        </field>
        <field>
          <variable_name>V_LOG_PROCESS</variable_name>
          <variable_value>PP_Forecast_Process_Staging</variable_value>
          <variable_type>JVM</variable_type>
        </field>
        <field>
          <variable_name>V_LOG_DESCRIPTION</variable_name>
          <variable_value>Forecast Dates are missing in the INV file for ${V_PRODUCTION_PLAN_NAME}</variable_value>
          <variable_type>JVM</variable_type>
        </field>
      </fields>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>272</xloc>
      <yloc>276</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Check Horizon Exist</name>
      <description/>
      <type>EVAL_TABLE_CONTENT</type>
      <attributes/>
      <connection>MAXDAT</connection>
      <schemaname/>
      <tablename/>
      <success_condition>rows_count_greater_equal</success_condition>
      <limit>1</limit>
      <is_custom_sql>Y</is_custom_sql>
      <is_usevars>Y</is_usevars>
      <custom_sql>WITH HRZN AS
(
SELECT DISTINCT CFG_PRODUCTION_PLAN_ID,
                HORIZON_START_DATE,
                HORIZON_END_DATE
  FROM PP_STG_FCST_BY_INV_AGE
 WHERE CFG_PRODUCTION_PLAN_ID=${V_CFG_PRODUCTION_PLAN_ID}
   AND PROCESS_DATE IS NULL 
)
SELECT 1 AS CNT
  FROM HRZN, PP_CFG_HORIZON
 WHERE HRZN.CFG_PRODUCTION_PLAN_ID = PP_CFG_HORIZON.CFG_PRODUCTION_PLAN_ID
   AND HRZN.HORIZON_START_DATE = PP_CFG_HORIZON.HORIZON_START_DATE
   AND HRZN.HORIZON_END_DATE = PP_CFG_HORIZON.HORIZON_END_DATE</custom_sql>
      <add_rows_result>N</add_rows_result>
      <clear_result_rows>Y</clear_result_rows>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>636</xloc>
      <yloc>208</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Update Prev Version End Date</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>DECLARE
V_ERRCODE varchar2(50);
V_ERRMSG varchar2(3000);
V_CNT NUMBER := 0;

BEGIN
  FOR RECS IN 
  (         
    SELECT PP_CFG_HORIZON.CFG_HORIZON_ID,
           (SELECT MAX(FORECAST_VERSION)
              FROM PP_STG_FORECAST
             WHERE CFG_HORIZON_ID IN (PP_CFG_HORIZON.CFG_HORIZON_ID)) AS FORECAST_VERSION
      FROM PP_CFG_HORIZON,
           (SELECT DISTINCT CFG_PRODUCTION_PLAN_ID,
                            HORIZON_START_DATE,
                            HORIZON_END_DATE
              FROM PP_STG_FCST_BY_INV_AGE
             WHERE CFG_PRODUCTION_PLAN_ID = ${V_CFG_PRODUCTION_PLAN_ID}
               AND PROCESS_DATE IS NULL) INV
     WHERE PP_CFG_HORIZON.CFG_PRODUCTION_PLAN_ID = INV.CFG_PRODUCTION_PLAN_ID
       AND PP_CFG_HORIZON.HORIZON_START_DATE = INV.HORIZON_START_DATE
       AND PP_CFG_HORIZON.HORIZON_END_DATE = INV.HORIZON_END_DATE
               
    ) 
    LOOP
        
   UPDATE PP_STG_FORECAST
      SET END_DATE = SYSDATE
    WHERE CFG_HORIZON_ID = RECS.CFG_HORIZON_ID
      AND FORECAST_VERSION = RECS.FORECAST_VERSION;

		V_CNT := V_CNT + 1;
    END LOOP;
    INSERT INTO PP_STG_LOG
      (PP_STG_ID, LOG_TYPE, PROCESS_DATE, PROCESS, DESCRIPTION, CREATE_DATE)
      VALUES (SEQ_PP_STG_ID.NEXTVAL,'LOG',SYSDATE,'PP_Forecast_Process_Staging','Update Prev Version End Date - Processed ' || V_CNT, SYSDATE); 
    COMMIT;

EXCEPTION
WHEN OTHERS 
  THEN 
    ROLLBACK;
    V_ERRCODE := SQLCODE;
    V_ERRMSG := SUBSTR(SQLERRM, 1, 3000);                 
    INSERT INTO PP_STG_LOG
      (PP_STG_ID, LOG_TYPE, PROCESS_DATE, PROCESS, DESCRIPTION, CREATE_DATE)
      VALUES (SEQ_PP_STG_ID.NEXTVAL,'ERR',SYSDATE,'PP_Forecast_Process_Staging','Update Prev Version End Date - ' || V_ERRCODE || ' : ' || V_ERRMSG,SYSDATE); 
      COMMIT; 
	  RAISE;
END;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>T</sendOneStatement>
      <connection>MAXDAT</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>740</xloc>
      <yloc>138</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Insert New Horizon Cfg</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>INSERT INTO PP_CFG_HORIZON
   (CFG_HORIZON_ID, CFG_PRODUCTION_PLAN_ID, HORIZON_START_DATE, HORIZON_START_HOUR, HORIZON_END_DATE, 
    HORIZON_END_HOUR, HORIZON_NAME, HORIZON_DESCRIPTION, CREATE_DATE, LAST_UPDATE_DATE)
SELECT SEQ_CFG_HORIZON_ID.NEXTVAL AS NXVL,
       INV.CFG_PRODUCTION_PLAN_ID,
       INV.HORIZON_START_DATE,
       0 AS HSH,
       INV.HORIZON_END_DATE,
       0 AS HEH,
       TO_CHAR(INV.HORIZON_START_DATE, 'MM/DD/YYYY') || ' - ' || TO_CHAR(INV.HORIZON_END_DATE, 'MM/DD/YYYY') AS HZNAME,
       NULL,
       SYSDATE,
       SYSDATE
  FROM (SELECT DISTINCT CFG_PRODUCTION_PLAN_ID,
                        HORIZON_START_DATE,
                        HORIZON_END_DATE
          FROM PP_STG_FCST_BY_INV_AGE
         WHERE CFG_PRODUCTION_PLAN_ID = ${V_CFG_PRODUCTION_PLAN_ID}
           AND PROCESS_DATE IS NULL) INV;
COMMIT;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>MAXDAT</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>744</xloc>
      <yloc>270</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Proc UOW</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>DECLARE
V_ERRCODE varchar2(50);
V_ERRMSG varchar2(3000);
V_CNT NUMBER := 0;

BEGIN
  FOR RECS IN 
  (
      SELECT INV.HORIZON_START_DATE,
                      INV.HORIZON_END_DATE,
                      (SELECT CFG_UOW_ID
                         FROM PP_CFG_UNIT_OF_WORK
                        WHERE UNIT_OF_WORK_NAME = INV.UNIT_OF_WORK_NAME) AS UOW_ID,
                      INV.FORECAST_DATE,
                      INV.FORECAST_HOUR,
                      INV.IDENTIFIER,
                      (SELECT CFG_HORIZON_ID
                         FROM PP_CFG_HORIZON
                        WHERE CFG_PRODUCTION_PLAN_ID = ${V_CFG_PRODUCTION_PLAN_ID}
                          AND TO_CHAR(HORIZON_START_DATE, 'MM/DD/YYYY') =
                              INV.HORIZON_START_DATE
                          AND HORIZON_START_HOUR = 0
                          AND TO_CHAR(HORIZON_END_DATE, 'MM/DD/YYYY') =
                              INV.HORIZON_END_DATE
                          AND HORIZON_END_HOUR = 0) AS CFG_HORIZON_ID,
                      (SELECT NVL(MAX(FORECAST_VERSION), 0) + 1
                         FROM PP_STG_FORECAST
                        WHERE CFG_HORIZON_ID =
                              (SELECT CFG_HORIZON_ID
                                 FROM PP_CFG_HORIZON
                                WHERE CFG_PRODUCTION_PLAN_ID = ${V_CFG_PRODUCTION_PLAN_ID}
                                  AND TO_CHAR(HORIZON_START_DATE, 'MM/DD/YYYY') = INV.HORIZON_START_DATE
                                  AND HORIZON_START_HOUR = 0
                                  AND TO_CHAR(HORIZON_END_DATE, 'MM/DD/YYYY') = INV.HORIZON_END_DATE
                                  AND HORIZON_END_HOUR = 0)) AS STG_FORECAST_VERSION
                 FROM (SELECT DISTINCT CFG_PRODUCTION_PLAN_ID,
                                       TO_CHAR(HORIZON_START_DATE,'MM/DD/YYYY') AS HORIZON_START_DATE,
                                       TO_CHAR(HORIZON_END_DATE, 'MM/DD/YYYY') AS HORIZON_END_DATE,
                                       TRIM(UNIT_OF_WORK_NAME) AS UNIT_OF_WORK_NAME,
                                       TO_CHAR(FORECAST_DATE, 'MM/DD/YYYY') AS FORECAST_DATE,
                                       FORECAST_HOUR,
                                       TRIM(UNIT_OF_WORK_NAME) ||
                                       TO_CHAR(FORECAST_DATE, 'DDMMYYYY') || '_' ||
                                       TO_CHAR(FORECAST_HOUR) AS IDENTIFIER
                         FROM PP_STG_FCST_BY_INV_AGE
                        WHERE CFG_PRODUCTION_PLAN_ID = ${V_CFG_PRODUCTION_PLAN_ID}
                          AND PROCESS_DATE IS NULL) INV
               
    ) 
    LOOP
        INSERT INTO PP_STG_FORECAST
          (SPPF_ID,
           CFG_HORIZON_ID,
           FORECAST_DATE,
           FORECAST_HOUR,
           CFG_UOW_ID,
           FORECAST_VERSION,
           EFFECTIVE_DATE,
           END_DATE,
           IDENTIFIER)
        VALUES
          (SEQ_SPPF_ID.NEXTVAL,
           RECS.CFG_HORIZON_ID,
           TO_DATE(RECS.FORECAST_DATE, 'MM/dd/yyyy'),
           RECS.FORECAST_HOUR,
           RECS.UOW_ID,
           RECS.STG_FORECAST_VERSION,
           SYSDATE,
           TO_DATE('07/7/7777', 'MM/dd/yyyy'),
           RECS.IDENTIFIER);

		V_CNT := V_CNT + 1;
    END LOOP;
    INSERT INTO PP_STG_LOG
      (PP_STG_ID, LOG_TYPE, PROCESS_DATE, PROCESS, DESCRIPTION, CREATE_DATE)
      VALUES (SEQ_PP_STG_ID.NEXTVAL,'LOG',SYSDATE,'PP_Forecast_Process_Staging','Proc UOW - Processed ' || V_CNT, SYSDATE); 
    COMMIT;

EXCEPTION
WHEN OTHERS 
  THEN 
    ROLLBACK;
    V_ERRCODE := SQLCODE;
    V_ERRMSG := SUBSTR(SQLERRM, 1, 3000);                 
    INSERT INTO PP_STG_LOG
      (PP_STG_ID, LOG_TYPE, PROCESS_DATE, PROCESS, DESCRIPTION, CREATE_DATE)
      VALUES (SEQ_PP_STG_ID.NEXTVAL,'ERR',SYSDATE,'PP_Forecast_Process_Staging','Proc UOW - ' || V_ERRCODE || ' : ' || V_ERRMSG,SYSDATE); 
      COMMIT; 
	  RAISE;
END;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>T</sendOneStatement>
      <connection>MAXDAT</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>843</xloc>
      <yloc>208</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Proc Forecast Inventory</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>DECLARE
V_ERRCODE varchar2(50);
V_ERRMSG varchar2(3000);
V_CNT NUMBER := 0;

BEGIN
  FOR RECS IN 
  (
      WITH ALL_RECS AS
      (
        SELECT FRCST_INV_VOL,
               CFG_PRODUCTION_PLAN_ID,
               TO_CHAR(FORECAST_DATE, 'MM/DD/YYYY') AS FORECAST_DATE,
               UNIT_OF_WORK_NAME,
               TO_CHAR(HORIZON_START_DATE, 'MM/DD/YYYY') AS HORIZON_START_DATE,
               TO_CHAR(HORIZON_END_DATE, 'MM/DD/YYYY') AS HORIZON_END_DATE,
               FORECAST_HOUR,
               (TRIM(UNIT_OF_WORK_NAME) || TO_CHAR(FORECAST_DATE, 'DDMMYYYY') || '_' ||
               TO_CHAR(FORECAST_HOUR)) AS IDENTIFIER
          FROM (SELECT SUM(INVENTORY_VOLUME) AS FRCST_INV_VOL,
                       CFG_PRODUCTION_PLAN_ID,
                       TRIM(UNIT_OF_WORK_NAME) AS UNIT_OF_WORK_NAME,
                       FORECAST_DATE,
                       HORIZON_START_DATE,
                       HORIZON_END_DATE,
                       FORECAST_HOUR
                  FROM PP_STG_FCST_BY_INV_AGE INV
                 WHERE INV.CFG_PRODUCTION_PLAN_ID = ${V_CFG_PRODUCTION_PLAN_ID}
                   AND INV.PROCESS_DATE IS NULL
                 GROUP BY CFG_PRODUCTION_PLAN_ID,
                          UNIT_OF_WORK_NAME,
                          FORECAST_DATE,
                          HORIZON_START_DATE,
                          HORIZON_END_DATE,
                          FORECAST_HOUR)
      ),
      HRZN AS 
      (
          SELECT DISTINCT CFG_HORIZON_ID
            FROM PP_CFG_HORIZON CFG, ALL_RECS
           WHERE CFG.CFG_PRODUCTION_PLAN_ID = ALL_RECS.CFG_PRODUCTION_PLAN_ID
             AND TO_CHAR(CFG.HORIZON_START_DATE, 'MM/DD/YYYY') =
                 ALL_RECS.HORIZON_START_DATE
             AND TO_CHAR(CFG.HORIZON_END_DATE, 'MM/DD/YYYY') =
                 ALL_RECS.HORIZON_END_DATE
             AND CFG.HORIZON_START_HOUR = 0
             AND CFG.HORIZON_END_HOUR = 0
      ),
      VRSN AS
      (
           SELECT MAX(PP_STG_FORECAST.FORECAST_VERSION) AS FORECAST_VERSION
             FROM PP_STG_FORECAST, HRZN
            WHERE PP_STG_FORECAST.CFG_HORIZON_ID = HRZN.CFG_HORIZON_ID
      ) 
      SELECT ALL_RECS.FRCST_INV_VOL,
             ALL_RECS.CFG_PRODUCTION_PLAN_ID,
             ALL_RECS.FORECAST_DATE,
             ALL_RECS.UNIT_OF_WORK_NAME,
             ALL_RECS.HORIZON_START_DATE,
             ALL_RECS.HORIZON_END_DATE,
             ALL_RECS.FORECAST_HOUR,
             ALL_RECS.IDENTIFIER,
             HRZN.CFG_HORIZON_ID,
             VRSN.FORECAST_VERSION
        FROM ALL_RECS, HRZN, VRSN
        ORDER BY ALL_RECS.UNIT_OF_WORK_NAME, ALL_RECS.FORECAST_DATE, ALL_RECS.FORECAST_HOUR 
    ) 
    LOOP
        UPDATE PP_STG_FORECAST
           SET INVENTORY = RECS.FRCST_INV_VOL
         WHERE CFG_HORIZON_ID = RECS.CFG_HORIZON_ID
           AND IDENTIFIER = RECS.IDENTIFIER
           AND CFG_UOW_ID = (SELECT CFG_UOW_ID FROM PP_CFG_UNIT_OF_WORK WHERE UNIT_OF_WORK_NAME = RECS.UNIT_OF_WORK_NAME)
           AND TO_CHAR(FORECAST_DATE, 'MM/DD/YYYY') = RECS.FORECAST_DATE
           AND FORECAST_HOUR = RECS.FORECAST_HOUR
           AND FORECAST_VERSION = RECS.FORECAST_VERSION
           AND PROCESS_DATE IS NULL;

		V_CNT := V_CNT + 1;
    END LOOP;
    INSERT INTO PP_STG_LOG
      (PP_STG_ID, LOG_TYPE, PROCESS_DATE, PROCESS, DESCRIPTION, CREATE_DATE)
      VALUES (SEQ_PP_STG_ID.NEXTVAL,'LOG',SYSDATE,'PP_Forecast_Process_Staging','Proc Forecast Inventory - Processed ' || V_CNT, SYSDATE); 
    COMMIT;

EXCEPTION
WHEN OTHERS 
  THEN 
    ROLLBACK;
    V_ERRCODE := SQLCODE;
    V_ERRMSG := SUBSTR(SQLERRM, 1, 3000);                 
    INSERT INTO PP_STG_LOG
      (PP_STG_ID, LOG_TYPE, PROCESS_DATE, PROCESS, DESCRIPTION, CREATE_DATE)
      VALUES (SEQ_PP_STG_ID.NEXTVAL,'ERR',SYSDATE,'PP_Forecast_Process_Staging','Proc Forecast Inventory - ' || V_ERRCODE || ' : ' || V_ERRMSG,SYSDATE); 
      COMMIT; 
	  RAISE;
END;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>T</sendOneStatement>
      <connection>MAXDAT</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>987</xloc>
      <yloc>240</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>DUMMY 4</name>
      <description/>
      <type>SPECIAL</type>
      <attributes/>
      <start>N</start>
      <dummy>Y</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>881</xloc>
      <yloc>388</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Proc Forecast Intake</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>DECLARE
V_ERRCODE varchar2(50);
V_ERRMSG varchar2(3000);
V_CNT NUMBER := 0;

BEGIN
  FOR RECS IN 
  (
        WITH ALL_RECS AS
        (
            SELECT CFG_PRODUCTION_PLAN_ID,
                   FRCST_INTAKE_VOL,
                   TO_CHAR(FORECAST_DATE, 'MM/DD/YYYY') AS FORECAST_DATE,
                   FORECAST_HOUR,
                   UNIT_OF_WORK_NAME,
                   TO_CHAR(HORIZON_START_DATE, 'MM/DD/YYYY') AS HORIZON_START_DATE,
                   TO_CHAR(HORIZON_END_DATE, 'MM/DD/YYYY') AS HORIZON_END_DATE,
                   IDENTIFIER
              FROM (SELECT SUM(ARRIVAL_VOLUME) AS FRCST_INTAKE_VOL,
                           CFG_PRODUCTION_PLAN_ID,
                           FORECAST_DATE,
                           FORECAST_HOUR,
                           UNIT_OF_WORK_NAME,
                           HORIZON_START_DATE,
                           HORIZON_END_DATE,
                           (TRIM(UNIT_OF_WORK_NAME) ||
                           TO_CHAR(FORECAST_DATE, 'DDMMYYYY') || '_' ||
                           TO_CHAR(FORECAST_HOUR)) AS IDENTIFIER
                      FROM (SELECT CFG_PRODUCTION_PLAN_ID,
                                   FORECAST_DATE,
                                   FORECAST_HOUR,
                                   ARRIVAL_VOLUME,
                                   TRIM(UNIT_OF_WORK_NAME) AS UNIT_OF_WORK_NAME,
                                   HORIZON_START_DATE,
                                   HORIZON_END_DATE
                              FROM PP_STG_FCST_VOLUME
                             WHERE CFG_PRODUCTION_PLAN_ID = ${V_CFG_PRODUCTION_PLAN_ID}
                               AND PROCESS_DATE IS NULL)
                     GROUP BY CFG_PRODUCTION_PLAN_ID,
                              FORECAST_DATE,
                              FORECAST_HOUR,
                              UNIT_OF_WORK_NAME,
                              HORIZON_START_DATE,
                              HORIZON_END_DATE,
                              (TRIM(UNIT_OF_WORK_NAME) ||
                              TO_CHAR(FORECAST_DATE, 'DDMMYYYY') || '_' ||
                              TO_CHAR(FORECAST_HOUR))
                     ORDER BY UNIT_OF_WORK_NAME, FORECAST_DATE, FORECAST_HOUR)
             WHERE CFG_PRODUCTION_PLAN_ID = ${V_CFG_PRODUCTION_PLAN_ID}
        ),
        HRZN AS 
        (
            SELECT DISTINCT CFG_HORIZON_ID
              FROM PP_CFG_HORIZON CFG, ALL_RECS
             WHERE CFG.CFG_PRODUCTION_PLAN_ID =
                   ALL_RECS.CFG_PRODUCTION_PLAN_ID
               AND TO_CHAR(CFG.HORIZON_START_DATE, 'MM/DD/YYYY') =
                   ALL_RECS.HORIZON_START_DATE
               AND TO_CHAR(CFG.HORIZON_END_DATE, 'MM/DD/YYYY') =
                   ALL_RECS.HORIZON_END_DATE
               AND CFG.HORIZON_START_HOUR = 0
               AND CFG.HORIZON_END_HOUR = 0
        ),
        VRSN AS
        (
           SELECT MAX(PP_STG_FORECAST.FORECAST_VERSION) AS FORECAST_VERSION
             FROM PP_STG_FORECAST, HRZN
            WHERE PP_STG_FORECAST.CFG_HORIZON_ID = HRZN.CFG_HORIZON_ID
        ) 
        SELECT ALL_RECS.FRCST_INTAKE_VOL,
               ALL_RECS.CFG_PRODUCTION_PLAN_ID,
               ALL_RECS.FORECAST_DATE,
               ALL_RECS.UNIT_OF_WORK_NAME,
               ALL_RECS.HORIZON_START_DATE,
               ALL_RECS.HORIZON_END_DATE,
               ALL_RECS.FORECAST_HOUR,
               ALL_RECS.IDENTIFIER,
               HRZN.CFG_HORIZON_ID,
               VRSN.FORECAST_VERSION
          FROM ALL_RECS, HRZN, VRSN
         ORDER BY ALL_RECS.UNIT_OF_WORK_NAME,
                  ALL_RECS.FORECAST_DATE,
                  ALL_RECS.FORECAST_HOUR

    ) 
    LOOP
        UPDATE PP_STG_FORECAST
           SET ARRIVAL = RECS.FRCST_INTAKE_VOL
         WHERE CFG_HORIZON_ID = RECS.CFG_HORIZON_ID
           AND IDENTIFIER = RECS.IDENTIFIER
           AND CFG_UOW_ID = (SELECT CFG_UOW_ID FROM PP_CFG_UNIT_OF_WORK WHERE UNIT_OF_WORK_NAME = RECS.UNIT_OF_WORK_NAME)
           AND TO_CHAR(FORECAST_DATE, 'MM/DD/YYYY') = RECS.FORECAST_DATE
           AND FORECAST_HOUR = RECS.FORECAST_HOUR
           AND FORECAST_VERSION = RECS.FORECAST_VERSION
           AND PROCESS_DATE IS NULL;

    V_CNT := V_CNT + 1;
    END LOOP;
    INSERT INTO PP_STG_LOG
      (PP_STG_ID, LOG_TYPE, PROCESS_DATE, PROCESS, DESCRIPTION, CREATE_DATE)
      VALUES (SEQ_PP_STG_ID.NEXTVAL,'LOG',SYSDATE,'PP_Forecast_Process_Staging','Proc Forecast Intake - Processed ' || V_CNT, SYSDATE); 
    COMMIT;

EXCEPTION
WHEN OTHERS 
  THEN 
    ROLLBACK;
    V_ERRCODE := SQLCODE;
    V_ERRMSG := SUBSTR(SQLERRM, 1, 3000);                 
    INSERT INTO PP_STG_LOG
      (PP_STG_ID, LOG_TYPE, PROCESS_DATE, PROCESS, DESCRIPTION, CREATE_DATE)
      VALUES (SEQ_PP_STG_ID.NEXTVAL,'ERR',SYSDATE,'PP_Forecast_Process_Staging','Proc Forecast Intake - ' || V_ERRCODE || ' : ' || V_ERRMSG,SYSDATE); 
      COMMIT; 
    RAISE;
END;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>T</sendOneStatement>
      <connection>MAXDAT</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1068</xloc>
      <yloc>313</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Proc Forecast Completions</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>DECLARE
V_ERRCODE varchar2(50);
V_ERRMSG varchar2(3000);
V_CNT NUMBER := 0;

BEGIN
  FOR RECS IN 
  (
       WITH ALL_RECS AS
       (
          SELECT CFG_PRODUCTION_PLAN_ID,
                 FRCST_COMP_VOL,
                 TO_CHAR(FORECAST_DATE, 'MM/DD/YYYY') AS FORECAST_DATE,
                 FORECAST_HOUR,
                 UNIT_OF_WORK_NAME,
                 TO_CHAR(HORIZON_START_DATE, 'MM/DD/YYYY') AS HORIZON_START_DATE,
                 TO_CHAR(HORIZON_END_DATE, 'MM/DD/YYYY') AS HORIZON_END_DATE,
                 IDENTIFIER
            FROM (SELECT SUM(COMPLETION_VOLUME) AS FRCST_COMP_VOL,
                         CFG_PRODUCTION_PLAN_ID,
                         FORECAST_DATE,
                         FORECAST_HOUR,
                         UNIT_OF_WORK_NAME,
                         HORIZON_START_DATE,
                         HORIZON_END_DATE,
                         (TRIM(UNIT_OF_WORK_NAME) ||
                         TO_CHAR(FORECAST_DATE, 'DDMMYYYY') || '_' ||
                         TO_CHAR(FORECAST_HOUR)) AS IDENTIFIER
                    FROM (SELECT CFG_PRODUCTION_PLAN_ID,
                                 FORECAST_DATE,
                                 FORECAST_HOUR,
                                 COMPLETION_VOLUME,
                                 TRIM(UNIT_OF_WORK_NAME) AS UNIT_OF_WORK_NAME,
                                 HORIZON_START_DATE,
                                 HORIZON_END_DATE
                            FROM PP_STG_FCST_VOLUME
                           WHERE CFG_PRODUCTION_PLAN_ID = ${V_CFG_PRODUCTION_PLAN_ID} 
                             AND PROCESS_DATE IS NULL)
                   GROUP BY CFG_PRODUCTION_PLAN_ID,
                            FORECAST_DATE,
                            FORECAST_HOUR,
                            UNIT_OF_WORK_NAME,
                            HORIZON_START_DATE,
                            HORIZON_END_DATE,
                            (TRIM(UNIT_OF_WORK_NAME) ||
                            TO_CHAR(FORECAST_DATE, 'DDMMYYYY') || '_' ||
                            TO_CHAR(FORECAST_HOUR)))
           WHERE CFG_PRODUCTION_PLAN_ID = ${V_CFG_PRODUCTION_PLAN_ID}
      ),
      HRZN AS
      (
          SELECT DISTINCT CFG_HORIZON_ID
            FROM PP_CFG_HORIZON CFG, ALL_RECS
           WHERE CFG.CFG_PRODUCTION_PLAN_ID = ALL_RECS.CFG_PRODUCTION_PLAN_ID
             AND TO_CHAR(CFG.HORIZON_START_DATE, 'MM/DD/YYYY') =
                 ALL_RECS.HORIZON_START_DATE
             AND TO_CHAR(CFG.HORIZON_END_DATE, 'MM/DD/YYYY') =
                 ALL_RECS.HORIZON_END_DATE
             AND CFG.HORIZON_START_HOUR = 0
             AND CFG.HORIZON_END_HOUR = 0
      ),
      VRSN AS
      (
         SELECT MAX(PP_STG_FORECAST.FORECAST_VERSION) AS FORECAST_VERSION
           FROM PP_STG_FORECAST, HRZN
          WHERE PP_STG_FORECAST.CFG_HORIZON_ID = HRZN.CFG_HORIZON_ID
      )
      SELECT ALL_RECS.FRCST_COMP_VOL,
             ALL_RECS.CFG_PRODUCTION_PLAN_ID,
             ALL_RECS.FORECAST_DATE,
             ALL_RECS.UNIT_OF_WORK_NAME,
             ALL_RECS.HORIZON_START_DATE,
             ALL_RECS.HORIZON_END_DATE,
             ALL_RECS.FORECAST_HOUR,
             ALL_RECS.IDENTIFIER,
             HRZN.CFG_HORIZON_ID,
             VRSN.FORECAST_VERSION
        FROM ALL_RECS, HRZN, VRSN
       ORDER BY ALL_RECS.UNIT_OF_WORK_NAME,
                ALL_RECS.FORECAST_DATE,
                ALL_RECS.FORECAST_HOUR
    ) 
    LOOP

        UPDATE PP_STG_FORECAST
           SET COMPLETION = RECS.FRCST_COMP_VOL
         WHERE CFG_HORIZON_ID = RECS.CFG_HORIZON_ID
           AND IDENTIFIER = RECS.IDENTIFIER
           AND CFG_UOW_ID = (SELECT CFG_UOW_ID
                               FROM PP_CFG_UNIT_OF_WORK
                              WHERE UNIT_OF_WORK_NAME = RECS.UNIT_OF_WORK_NAME)
           AND TO_CHAR(FORECAST_DATE, 'MM/DD/YYYY') = RECS.FORECAST_DATE
           AND FORECAST_HOUR = RECS.FORECAST_HOUR
           AND FORECAST_VERSION = RECS.FORECAST_VERSION
           AND PROCESS_DATE IS NULL;

    V_CNT := V_CNT + 1;
    END LOOP;
    INSERT INTO PP_STG_LOG
      (PP_STG_ID, LOG_TYPE, PROCESS_DATE, PROCESS, DESCRIPTION, CREATE_DATE)
      VALUES (SEQ_PP_STG_ID.NEXTVAL,'LOG',SYSDATE,'PP_Forecast_Process_Staging','Proc Forecast Completions - Processed ' || V_CNT, SYSDATE); 
    COMMIT;

EXCEPTION
WHEN OTHERS 
  THEN 
    ROLLBACK;
    V_ERRCODE := SQLCODE;
    V_ERRMSG := SUBSTR(SQLERRM, 1, 3000);                 
    INSERT INTO PP_STG_LOG
      (PP_STG_ID, LOG_TYPE, PROCESS_DATE, PROCESS, DESCRIPTION, CREATE_DATE)
      VALUES (SEQ_PP_STG_ID.NEXTVAL,'ERR',SYSDATE,'PP_Forecast_Process_Staging','Proc Forecast Completions - ' || V_ERRCODE || ' : ' || V_ERRMSG,SYSDATE); 
      COMMIT; 
    RAISE;
END;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>T</sendOneStatement>
      <connection>MAXDAT</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1080</xloc>
      <yloc>412</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Proc Forecast Jeopardy</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>DECLARE
V_ERRCODE varchar2(50);
V_ERRMSG varchar2(3000);
V_CNT NUMBER := 0;

BEGIN
  FOR RECS IN 
  (
      WITH ALL_RECS AS
      (
        SELECT NVL(JEP_COUNT, 0) AS JEP_COUNT,
             CFG_PRODUCTION_PLAN_ID,
             TO_CHAR(FORECAST_DATE, 'MM/DD/YYYY') AS FORECAST_DATE,
             UNIT_OF_WORK_NAME,
             TO_CHAR(HORIZON_START_DATE, 'MM/DD/YYYY') AS HORIZON_START_DATE,
             TO_CHAR(HORIZON_END_DATE, 'MM/DD/YYYY') AS HORIZON_END_DATE,
             FORECAST_HOUR,
             IDENTIFIER
        FROM (SELECT JEP_COUNT,
                     CFG_PRODUCTION_PLAN_ID,
                     FORECAST_DATE,
                     FORECAST_HOUR,
                     UNIT_OF_WORK_NAME,
                     HORIZON_START_DATE,
                     HORIZON_END_DATE,
                     (TRIM(UNIT_OF_WORK_NAME) ||
                     TO_CHAR(FORECAST_DATE, 'DDMMYYYY') || '_' ||
                     TO_CHAR(FORECAST_HOUR)) AS IDENTIFIER
                FROM (SELECT SUM(INVENTORY_VOLUME) AS JEP_COUNT,
                             CFG_PRODUCTION_PLAN_ID,
                             TRIM(UNIT_OF_WORK_NAME) AS UNIT_OF_WORK_NAME,
                             FORECAST_DATE,
                             HORIZON_START_DATE,
                             HORIZON_END_DATE,
                             FORECAST_HOUR
                        FROM PP_STG_FCST_BY_INV_AGE T1
                       WHERE 1 = 1
                         AND T1.CFG_PRODUCTION_PLAN_ID = ${V_CFG_PRODUCTION_PLAN_ID}
                         AND T1.INVENTORY_AGE >=
                             (SELECT JEOPARDY_INV_AGE
                                FROM PP_CFG_UNIT_OF_WORK
                               WHERE UNIT_OF_WORK_NAME =
                                     TRIM(T1.UNIT_OF_WORK_NAME))
                         AND T1.PROCESS_DATE IS NULL
                       GROUP BY CFG_PRODUCTION_PLAN_ID,
                                UNIT_OF_WORK_NAME,
                                FORECAST_DATE,
                                HORIZON_START_DATE,
                                HORIZON_END_DATE,
                                FORECAST_HOUR))
      ),
      HRZN AS 
      (
          SELECT DISTINCT CFG_HORIZON_ID
            FROM PP_CFG_HORIZON CFG, ALL_RECS
           WHERE CFG.CFG_PRODUCTION_PLAN_ID = ALL_RECS.CFG_PRODUCTION_PLAN_ID
             AND TO_CHAR(CFG.HORIZON_START_DATE, 'MM/DD/YYYY') =
                 ALL_RECS.HORIZON_START_DATE
             AND TO_CHAR(CFG.HORIZON_END_DATE, 'MM/DD/YYYY') =
                 ALL_RECS.HORIZON_END_DATE
             AND CFG.HORIZON_START_HOUR = 0
             AND CFG.HORIZON_END_HOUR = 0
      ),
      VRSN AS
      (
           SELECT MAX(PP_STG_FORECAST.FORECAST_VERSION) AS FORECAST_VERSION
             FROM PP_STG_FORECAST, HRZN
            WHERE PP_STG_FORECAST.CFG_HORIZON_ID = HRZN.CFG_HORIZON_ID
      ) 
      SELECT ALL_RECS.JEP_COUNT,
             ALL_RECS.CFG_PRODUCTION_PLAN_ID,
             ALL_RECS.FORECAST_DATE,
             ALL_RECS.UNIT_OF_WORK_NAME,
             ALL_RECS.HORIZON_START_DATE,
             ALL_RECS.HORIZON_END_DATE,
             ALL_RECS.FORECAST_HOUR,
             ALL_RECS.IDENTIFIER,
             HRZN.CFG_HORIZON_ID,
             VRSN.FORECAST_VERSION
        FROM ALL_RECS, HRZN, VRSN
        ORDER BY ALL_RECS.UNIT_OF_WORK_NAME, ALL_RECS.FORECAST_DATE, ALL_RECS.FORECAST_HOUR 
    ) 
    LOOP

        UPDATE PP_STG_FORECAST
           SET INVENTORY_JEOPARDY   = RECS.JEP_COUNT
         WHERE CFG_HORIZON_ID = RECS.CFG_HORIZON_ID
                   AND IDENTIFIER = RECS.IDENTIFIER
                   AND CFG_UOW_ID = (SELECT CFG_UOW_ID
                                       FROM PP_CFG_UNIT_OF_WORK
                                      WHERE UNIT_OF_WORK_NAME = RECS.UNIT_OF_WORK_NAME)
                   AND TO_CHAR(FORECAST_DATE, 'MM/DD/YYYY') = RECS.FORECAST_DATE
                   AND FORECAST_HOUR = RECS.FORECAST_HOUR
                   AND FORECAST_VERSION = RECS.FORECAST_VERSION
                   AND PROCESS_DATE IS NULL;

    V_CNT := V_CNT + 1;
    END LOOP;
    INSERT INTO PP_STG_LOG
      (PP_STG_ID, LOG_TYPE, PROCESS_DATE, PROCESS, DESCRIPTION, CREATE_DATE)
      VALUES (SEQ_PP_STG_ID.NEXTVAL,'LOG',SYSDATE,'PP_Forecast_Process_Staging','Proc Forecast Jeopardy - Processed ' || V_CNT, SYSDATE); 
    COMMIT;

EXCEPTION
WHEN OTHERS 
  THEN 
    ROLLBACK;
    V_ERRCODE := SQLCODE;
    V_ERRMSG := SUBSTR(SQLERRM, 1, 3000);                 
    INSERT INTO PP_STG_LOG
      (PP_STG_ID, LOG_TYPE, PROCESS_DATE, PROCESS, DESCRIPTION, CREATE_DATE)
      VALUES (SEQ_PP_STG_ID.NEXTVAL,'ERR',SYSDATE,'PP_Forecast_Process_Staging','Proc Forecast Jeopardy - ' || V_ERRCODE || ' : ' || V_ERRMSG,SYSDATE); 
      COMMIT; 
    RAISE;
END;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>T</sendOneStatement>
      <connection>MAXDAT</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>777</xloc>
      <yloc>532</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Proc Forecast Hours Assigned</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>DECLARE
V_ERRCODE varchar2(50);
V_ERRMSG varchar2(3000);
V_CNT NUMBER := 0;

BEGIN
  FOR RECS IN 
  (
      WITH ALL_RECS AS
      (
          SELECT NVL(STAFF_HOURS, 0) AS HOURS_ASSIGNED,
                 CFG_PRODUCTION_PLAN_ID,
                 TO_CHAR(FORECAST_DATE, 'MM/DD/YYYY') AS FORECAST_DATE,
                 FORECAST_HOUR,
                 UNIT_OF_WORK_NAME,
                 TO_CHAR(HORIZON_START_DATE, 'MM/DD/YYYY') AS HORIZON_START_DATE,
                 TO_CHAR(HORIZON_END_DATE, 'MM/DD/YYYY') AS HORIZON_END_DATE,
                 IDENTIFIER
            FROM (SELECT SUM(STAFF_HOURS) AS STAFF_HOURS,
                         CFG_PRODUCTION_PLAN_ID,
                         FORECAST_DATE,
                         FORECAST_HOUR,
                         UNIT_OF_WORK_NAME,
                         HORIZON_START_DATE,
                         HORIZON_END_DATE,
                         (TRIM(UNIT_OF_WORK_NAME) ||
                         TO_CHAR(FORECAST_DATE, 'DDMMYYYY') || '_' ||
                         TO_CHAR(FORECAST_HOUR)) AS IDENTIFIER
                    FROM (SELECT DISTINCT CFG_PRODUCTION_PLAN_ID,
                                          FORECAST_DATE,
                                          FORECAST_HOUR,
                                          TRIM(UNIT_OF_WORK_NAME) AS UNIT_OF_WORK_NAME,
                                          HORIZON_START_DATE,
                                          HORIZON_END_DATE,
                                          STAFF_HOURS
                            FROM PP_STG_FCST_VOLUME
                           WHERE CFG_PRODUCTION_PLAN_ID = ${V_CFG_PRODUCTION_PLAN_ID} 
                             AND PROCESS_DATE IS NULL) A
                   GROUP BY CFG_PRODUCTION_PLAN_ID,
                            FORECAST_DATE,
                            FORECAST_HOUR,
                            UNIT_OF_WORK_NAME,
                            HORIZON_START_DATE,
                            HORIZON_END_DATE,
                            (TRIM(UNIT_OF_WORK_NAME) ||
                            TO_CHAR(FORECAST_DATE, 'DDMMYYYY') || '_' ||
                            TO_CHAR(FORECAST_HOUR)))
           WHERE IDENTIFIER IN (SELECT DISTINCT (TRIM(UNIT_OF_WORK_NAME) ||
                                                TO_CHAR(FORECAST_DATE, 'DDMMYYYY') || '_' ||
                                                TO_CHAR(FORECAST_HOUR)) AS IDENTIFIER
                                  FROM PP_STG_FCST_BY_INV_AGE INV
                                 WHERE INV.CFG_PRODUCTION_PLAN_ID = ${V_CFG_PRODUCTION_PLAN_ID}
                                   AND INV.PROCESS_DATE IS NULL)
      ),
      HRZN AS 
      (
          SELECT DISTINCT CFG_HORIZON_ID
            FROM PP_CFG_HORIZON CFG, ALL_RECS
           WHERE CFG.CFG_PRODUCTION_PLAN_ID = ALL_RECS.CFG_PRODUCTION_PLAN_ID
             AND TO_CHAR(CFG.HORIZON_START_DATE, 'MM/DD/YYYY') =
                 ALL_RECS.HORIZON_START_DATE
             AND TO_CHAR(CFG.HORIZON_END_DATE, 'MM/DD/YYYY') =
                 ALL_RECS.HORIZON_END_DATE
             AND CFG.HORIZON_START_HOUR = 0
             AND CFG.HORIZON_END_HOUR = 0
      ),
      VRSN AS
      (
           SELECT MAX(PP_STG_FORECAST.FORECAST_VERSION) AS FORECAST_VERSION
             FROM PP_STG_FORECAST, HRZN
            WHERE PP_STG_FORECAST.CFG_HORIZON_ID = HRZN.CFG_HORIZON_ID
      ) 
      SELECT ALL_RECS.HOURS_ASSIGNED,
             ALL_RECS.CFG_PRODUCTION_PLAN_ID,
             ALL_RECS.FORECAST_DATE,
             ALL_RECS.UNIT_OF_WORK_NAME,
             ALL_RECS.HORIZON_START_DATE,
             ALL_RECS.HORIZON_END_DATE,
             ALL_RECS.FORECAST_HOUR,
             ALL_RECS.IDENTIFIER,
             HRZN.CFG_HORIZON_ID,
             VRSN.FORECAST_VERSION
        FROM ALL_RECS, HRZN, VRSN
        ORDER BY ALL_RECS.UNIT_OF_WORK_NAME, ALL_RECS.FORECAST_DATE, ALL_RECS.FORECAST_HOUR 
    ) 
    LOOP

        UPDATE PP_STG_FORECAST 
           SET STAFF_HOURS = RECS.HOURS_ASSIGNED
         WHERE CFG_HORIZON_ID = RECS.CFG_HORIZON_ID
                   AND IDENTIFIER = RECS.IDENTIFIER
                   AND CFG_UOW_ID = (SELECT CFG_UOW_ID
                                       FROM PP_CFG_UNIT_OF_WORK
                                      WHERE UNIT_OF_WORK_NAME = RECS.UNIT_OF_WORK_NAME)
                   AND TO_CHAR(FORECAST_DATE, 'MM/DD/YYYY') = RECS.FORECAST_DATE
                   AND FORECAST_HOUR = RECS.FORECAST_HOUR
                   AND FORECAST_VERSION = RECS.FORECAST_VERSION
                   AND PROCESS_DATE IS NULL;

    V_CNT := V_CNT + 1;
    END LOOP;
    INSERT INTO PP_STG_LOG
      (PP_STG_ID, LOG_TYPE, PROCESS_DATE, PROCESS, DESCRIPTION, CREATE_DATE)
      VALUES (SEQ_PP_STG_ID.NEXTVAL,'LOG',SYSDATE,'PP_Forecast_Process_Staging','Proc Forecast Hours Assigned - Processed ' || V_CNT, SYSDATE); 
    COMMIT;

EXCEPTION
WHEN OTHERS 
  THEN 
    ROLLBACK;
    V_ERRCODE := SQLCODE;
    V_ERRMSG := SUBSTR(SQLERRM, 1, 3000);                 
    INSERT INTO PP_STG_LOG
      (PP_STG_ID, LOG_TYPE, PROCESS_DATE, PROCESS, DESCRIPTION, CREATE_DATE)
      VALUES (SEQ_PP_STG_ID.NEXTVAL,'ERR',SYSDATE,'PP_Forecast_Process_Staging','Proc Forecast Hours Assigned - ' || V_ERRCODE || ' : ' || V_ERRMSG,SYSDATE); 
      COMMIT; 
    RAISE;
END;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>T</sendOneStatement>
      <connection>MAXDAT</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>702</xloc>
      <yloc>450</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Proc Forecast Handle Times</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>DECLARE
V_ERRCODE varchar2(50);
V_ERRMSG varchar2(3000);
V_CNT NUMBER := 0;

BEGIN
  FOR RECS IN 
  (
     WITH ALL_RECS AS
      (
        SELECT CFG_PRODUCTION_PLAN_ID,
                    AVG_HANDLE_TIME,
                    MIN_HANDLE_TIME,
                    MAX_HANDLE_TIME,
                    TO_CHAR(FORECAST_DATE, 'MM/DD/YYYY') AS FORECAST_DATE,
                    FORECAST_HOUR,
                    UNIT_OF_WORK_NAME,
                    TO_CHAR(HORIZON_START_DATE, 'MM/DD/YYYY') AS HORIZON_START_DATE,
                    TO_CHAR(HORIZON_END_DATE, 'MM/DD/YYYY') AS HORIZON_END_DATE,
                    IDENTIFIER
               FROM (SELECT CFG_PRODUCTION_PLAN_ID,
                            AVG_HANDLE_TIME,
                            MIN_HANDLE_TIME,
                            MAX_HANDLE_TIME,
                            FORECAST_DATE,
                            FORECAST_HOUR,
                            UNIT_OF_WORK_NAME,
                            HORIZON_START_DATE,
                            HORIZON_END_DATE,
                            (TRIM(UNIT_OF_WORK_NAME) ||
                            TO_CHAR(FORECAST_DATE, 'DDMMYYYY') || '_' ||
                            TO_CHAR(FORECAST_HOUR)) AS IDENTIFIER
                       FROM (SELECT CFG_PRODUCTION_PLAN_ID,
                                    HANDLE_TIME_AVG AS AVG_HANDLE_TIME,
                                    HANDLE_TIME_MIN AS MIN_HANDLE_TIME,
                                    HANDLE_TIME_MAX AS MAX_HANDLE_TIME,
                                    FORECAST_DATE,
                                    FORECAST_HOUR,
                                    TRIM(UNIT_OF_WORK_NAME) AS UNIT_OF_WORK_NAME,
                                    HORIZON_START_DATE,
                                    HORIZON_END_DATE
                               FROM PP_STG_FCST_VOLUME
                              WHERE CFG_PRODUCTION_PLAN_ID = ${V_CFG_PRODUCTION_PLAN_ID} 
                                AND PROCESS_DATE IS NULL) A)
              WHERE IDENTIFIER IN
                    (SELECT DISTINCT (TRIM(UNIT_OF_WORK_NAME) ||
                                     TO_CHAR(FORECAST_DATE, 'DDMMYYYY') || '_' ||
                                     TO_CHAR(FORECAST_HOUR)) AS IDENTIFIER
                       FROM PP_STG_FCST_BY_INV_AGE INV
                      WHERE INV.CFG_PRODUCTION_PLAN_ID = ${V_CFG_PRODUCTION_PLAN_ID} 
                        AND INV.PROCESS_DATE IS NULL)
      ),
      HRZN AS 
      (
          SELECT DISTINCT CFG_HORIZON_ID
            FROM PP_CFG_HORIZON CFG, ALL_RECS
           WHERE CFG.CFG_PRODUCTION_PLAN_ID = ALL_RECS.CFG_PRODUCTION_PLAN_ID
             AND TO_CHAR(CFG.HORIZON_START_DATE, 'MM/DD/YYYY') =
                 ALL_RECS.HORIZON_START_DATE
             AND TO_CHAR(CFG.HORIZON_END_DATE, 'MM/DD/YYYY') =
                 ALL_RECS.HORIZON_END_DATE
             AND CFG.HORIZON_START_HOUR = 0
             AND CFG.HORIZON_END_HOUR = 0
      ),
      VRSN AS
      (
           SELECT MAX(PP_STG_FORECAST.FORECAST_VERSION) AS FORECAST_VERSION
             FROM PP_STG_FORECAST, HRZN
            WHERE PP_STG_FORECAST.CFG_HORIZON_ID = HRZN.CFG_HORIZON_ID
      ) 
      SELECT ALL_RECS.AVG_HANDLE_TIME,
             ALL_RECS.MIN_HANDLE_TIME,
             ALL_RECS.MAX_HANDLE_TIME,
             ALL_RECS.CFG_PRODUCTION_PLAN_ID,
             ALL_RECS.FORECAST_DATE,
             ALL_RECS.UNIT_OF_WORK_NAME,
             ALL_RECS.HORIZON_START_DATE,
             ALL_RECS.HORIZON_END_DATE,
             ALL_RECS.FORECAST_HOUR,
             ALL_RECS.IDENTIFIER,
             HRZN.CFG_HORIZON_ID,
             VRSN.FORECAST_VERSION
        FROM ALL_RECS, HRZN, VRSN
        ORDER BY ALL_RECS.UNIT_OF_WORK_NAME, ALL_RECS.FORECAST_DATE, ALL_RECS.FORECAST_HOUR 
    ) 
    LOOP

        UPDATE PP_STG_FORECAST 
           SET HANDLE_TIME_AVG=RECS.AVG_HANDLE_TIME,
               HANDLE_TIME_MIN=RECS.MIN_HANDLE_TIME,
               HANDLE_TIME_MAX=RECS.MAX_HANDLE_TIME
         WHERE CFG_HORIZON_ID = RECS.CFG_HORIZON_ID
                   AND IDENTIFIER = RECS.IDENTIFIER
                   AND CFG_UOW_ID = (SELECT CFG_UOW_ID
                                       FROM PP_CFG_UNIT_OF_WORK
                                      WHERE UNIT_OF_WORK_NAME = RECS.UNIT_OF_WORK_NAME)
                   AND TO_CHAR(FORECAST_DATE, 'MM/DD/YYYY') = RECS.FORECAST_DATE
                   AND FORECAST_HOUR = RECS.FORECAST_HOUR
                   AND FORECAST_VERSION = RECS.FORECAST_VERSION
                   AND PROCESS_DATE IS NULL;

    V_CNT := V_CNT + 1;
    END LOOP;
    INSERT INTO PP_STG_LOG
      (PP_STG_ID, LOG_TYPE, PROCESS_DATE, PROCESS, DESCRIPTION, CREATE_DATE)
      VALUES (SEQ_PP_STG_ID.NEXTVAL,'LOG',SYSDATE,'PP_Forecast_Process_Staging','Proc Forecast Handle Times - Processed ' || V_CNT, SYSDATE); 
    COMMIT;

EXCEPTION
WHEN OTHERS 
  THEN 
    ROLLBACK;
    V_ERRCODE := SQLCODE;
    V_ERRMSG := SUBSTR(SQLERRM, 1, 3000);                 
    INSERT INTO PP_STG_LOG
      (PP_STG_ID, LOG_TYPE, PROCESS_DATE, PROCESS, DESCRIPTION, CREATE_DATE)
      VALUES (SEQ_PP_STG_ID.NEXTVAL,'ERR',SYSDATE,'PP_Forecast_Process_Staging','Proc Forecast Handle Times - ' || V_ERRCODE || ' : ' || V_ERRMSG,SYSDATE); 
      COMMIT; 
    RAISE;
END;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>T</sendOneStatement>
      <connection>MAXDAT</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>685</xloc>
      <yloc>355</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Update Process Flag</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>BEGIN
UPDATE PP_STG_FCST_BY_INV_AGE SET PROCESS_DATE = SYSDATE WHERE CFG_PRODUCTION_PLAN_ID=${V_CFG_PRODUCTION_PLAN_ID} AND PROCESS_DATE IS NULL;   
UPDATE PP_STG_FCST_VOLUME SET PROCESS_DATE = SYSDATE WHERE CFG_PRODUCTION_PLAN_ID=${V_CFG_PRODUCTION_PLAN_ID} AND PROCESS_DATE IS NULL;
COMMIT;
END;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>T</sendOneStatement>
      <connection>MAXDAT</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>406</xloc>
      <yloc>497</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Proc Inv Avg Age</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>DECLARE
V_ERRCODE varchar2(50);
V_ERRMSG varchar2(3000);
V_CNT NUMBER := 0;

BEGIN
  FOR RECS IN 
  (
      WITH ALL_RECS AS
      (
       SELECT NVL(AVG_AGE, 0) AS AVG_AGE,
             CFG_PRODUCTION_PLAN_ID,
             TO_CHAR(FORECAST_DATE, 'MM/DD/YYYY') AS FORECAST_DATE,
             UNIT_OF_WORK_NAME,
             TO_CHAR(HORIZON_START_DATE, 'MM/DD/YYYY') AS HORIZON_START_DATE,
             TO_CHAR(HORIZON_END_DATE, 'MM/DD/YYYY') AS HORIZON_END_DATE,
             FORECAST_HOUR,
             IDENTIFIER
            FROM (SELECT SUM(PRODUCT) /
                   DECODE(SUM(INVENTORY_VOLUME), 0, 1, SUM(INVENTORY_VOLUME)) AS AVG_AGE,
                   CFG_PRODUCTION_PLAN_ID,
                   UNIT_OF_WORK_NAME,
                   FORECAST_DATE,
                   HORIZON_START_DATE,
                   HORIZON_END_DATE,
                   FORECAST_HOUR,
                   (TRIM(UNIT_OF_WORK_NAME) || TO_CHAR(FORECAST_DATE, 'DDMMYYYY') || '_' ||
                   TO_CHAR(FORECAST_HOUR)) AS IDENTIFIER
              FROM (SELECT INVENTORY_VOLUME * INVENTORY_AGE AS PRODUCT,
                           INVENTORY_VOLUME,
                           INVENTORY_AGE,
                           CFG_PRODUCTION_PLAN_ID,
                           TRIM(UNIT_OF_WORK_NAME) AS UNIT_OF_WORK_NAME,
                           FORECAST_DATE,
                           HORIZON_START_DATE,
                           HORIZON_END_DATE,
                           FORECAST_HOUR
                      FROM PP_STG_FCST_BY_INV_AGE INV
                     WHERE INV.CFG_PRODUCTION_PLAN_ID = ${V_CFG_PRODUCTION_PLAN_ID}
                       AND INV.PROCESS_DATE IS NULL)
             GROUP BY CFG_PRODUCTION_PLAN_ID,
                      UNIT_OF_WORK_NAME,
                      FORECAST_DATE,
                      HORIZON_START_DATE,
                      HORIZON_END_DATE,
                      FORECAST_HOUR,
                      TRIM(UNIT_OF_WORK_NAME) || TO_CHAR(FORECAST_DATE, 'DDMMYYYY') || '_' ||
                      TO_CHAR(FORECAST_HOUR))

      ),
      HRZN AS 
      (
          SELECT DISTINCT CFG_HORIZON_ID
            FROM PP_CFG_HORIZON CFG, ALL_RECS
           WHERE CFG.CFG_PRODUCTION_PLAN_ID = ALL_RECS.CFG_PRODUCTION_PLAN_ID
             AND TO_CHAR(CFG.HORIZON_START_DATE, 'MM/DD/YYYY') =
                 ALL_RECS.HORIZON_START_DATE
             AND TO_CHAR(CFG.HORIZON_END_DATE, 'MM/DD/YYYY') =
                 ALL_RECS.HORIZON_END_DATE
             AND CFG.HORIZON_START_HOUR = 0
             AND CFG.HORIZON_END_HOUR = 0
      ),
      VRSN AS
      (
           SELECT MAX(PP_STG_FORECAST.FORECAST_VERSION) AS FORECAST_VERSION
             FROM PP_STG_FORECAST, HRZN
            WHERE PP_STG_FORECAST.CFG_HORIZON_ID = HRZN.CFG_HORIZON_ID
      ) 
      SELECT ALL_RECS.AVG_AGE,
             ALL_RECS.CFG_PRODUCTION_PLAN_ID,
             ALL_RECS.FORECAST_DATE,
             ALL_RECS.UNIT_OF_WORK_NAME,
             ALL_RECS.HORIZON_START_DATE,
             ALL_RECS.HORIZON_END_DATE,
             ALL_RECS.FORECAST_HOUR,
             ALL_RECS.IDENTIFIER,
             HRZN.CFG_HORIZON_ID,
             VRSN.FORECAST_VERSION
        FROM ALL_RECS, HRZN, VRSN
        ORDER BY ALL_RECS.UNIT_OF_WORK_NAME, ALL_RECS.FORECAST_DATE, ALL_RECS.FORECAST_HOUR           
    ) 
    LOOP

        UPDATE PP_STG_FORECAST
           SET INVENTORY_AGE_AVG   = RECS.AVG_AGE
         WHERE CFG_HORIZON_ID = RECS.CFG_HORIZON_ID
                   AND IDENTIFIER = RECS.IDENTIFIER
                   AND CFG_UOW_ID = (SELECT CFG_UOW_ID
                                       FROM PP_CFG_UNIT_OF_WORK
                                      WHERE UNIT_OF_WORK_NAME = RECS.UNIT_OF_WORK_NAME)
                   AND TO_CHAR(FORECAST_DATE, 'MM/DD/YYYY') = RECS.FORECAST_DATE
                   AND FORECAST_HOUR = RECS.FORECAST_HOUR
                   AND FORECAST_VERSION = RECS.FORECAST_VERSION
                   AND PROCESS_DATE IS NULL;

    V_CNT := V_CNT + 1;
    END LOOP;
    INSERT INTO PP_STG_LOG
      (PP_STG_ID, LOG_TYPE, PROCESS_DATE, PROCESS, DESCRIPTION, CREATE_DATE)
      VALUES (SEQ_PP_STG_ID.NEXTVAL,'LOG',SYSDATE,'PP_Forecast_Process_Staging','Proc Inv Avg Age - Processed ' || V_CNT, SYSDATE); 
    COMMIT;

EXCEPTION
WHEN OTHERS 
  THEN 
    ROLLBACK;
    V_ERRCODE := SQLCODE;
    V_ERRMSG := SUBSTR(SQLERRM, 1, 3000);                 
    INSERT INTO PP_STG_LOG
      (PP_STG_ID, LOG_TYPE, PROCESS_DATE, PROCESS, DESCRIPTION, CREATE_DATE)
      VALUES (SEQ_PP_STG_ID.NEXTVAL,'ERR',SYSDATE,'PP_Forecast_Process_Staging','Proc Inv Avg Age - ' || V_ERRCODE || ' : ' || V_ERRMSG,SYSDATE); 
      COMMIT; 
    RAISE;
END;    </sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>T</sendOneStatement>
      <connection>MAXDAT</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1037</xloc>
      <yloc>502</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Proc Inv Min Max Age</name>
      <description/>
      <type>SQL</type>
      <attributes/>
      <sql>DECLARE
V_ERRCODE varchar2(50);
V_ERRMSG varchar2(3000);
V_CNT NUMBER := 0;

BEGIN
  FOR RECS IN 
  (
      WITH ALL_RECS AS
      (
        SELECT MIN(INVENTORY_AGE) AS MIN_AGE,
               MAX(INVENTORY_AGE) AS MAX_AGE,
               CFG_PRODUCTION_PLAN_ID,
               UNIT_OF_WORK_NAME,
               TO_CHAR(HORIZON_START_DATE, 'MM/DD/YYYY') AS HORIZON_START_DATE,
               TO_CHAR(HORIZON_END_DATE, 'MM/DD/YYYY') AS HORIZON_END_DATE
               FROM
               (
                SELECT INVENTORY_AGE,
                       CFG_PRODUCTION_PLAN_ID,
                       TRIM(UNIT_OF_WORK_NAME) AS UNIT_OF_WORK_NAME,
                       HORIZON_START_DATE,
                       HORIZON_END_DATE
                  FROM PP_STG_FCST_BY_INV_AGE INV
                 WHERE INV.CFG_PRODUCTION_PLAN_ID = ${V_CFG_PRODUCTION_PLAN_ID}
                   AND INV.PROCESS_DATE IS NULL)
                   GROUP BY CFG_PRODUCTION_PLAN_ID,
                                      UNIT_OF_WORK_NAME,
                                      HORIZON_START_DATE,
                                      HORIZON_END_DATE

      ),
      HRZN AS 
      (
          SELECT DISTINCT CFG_HORIZON_ID
            FROM PP_CFG_HORIZON CFG, ALL_RECS
           WHERE CFG.CFG_PRODUCTION_PLAN_ID = ALL_RECS.CFG_PRODUCTION_PLAN_ID
             AND TO_CHAR(CFG.HORIZON_START_DATE, 'MM/DD/YYYY') =
                 ALL_RECS.HORIZON_START_DATE
             AND TO_CHAR(CFG.HORIZON_END_DATE, 'MM/DD/YYYY') =
                 ALL_RECS.HORIZON_END_DATE
             AND CFG.HORIZON_START_HOUR = 0
             AND CFG.HORIZON_END_HOUR = 0
      ),
      VRSN AS
      (
           SELECT MAX(PP_STG_FORECAST.FORECAST_VERSION) AS FORECAST_VERSION
             FROM PP_STG_FORECAST, HRZN
            WHERE PP_STG_FORECAST.CFG_HORIZON_ID = HRZN.CFG_HORIZON_ID
      ) 
      SELECT ALL_RECS.MIN_AGE,
             ALL_RECS.MAX_AGE,
             ALL_RECS.CFG_PRODUCTION_PLAN_ID,
             ALL_RECS.UNIT_OF_WORK_NAME,
             ALL_RECS.HORIZON_START_DATE,
             ALL_RECS.HORIZON_END_DATE,
             HRZN.CFG_HORIZON_ID,
             VRSN.FORECAST_VERSION
        FROM ALL_RECS, HRZN, VRSN      
    ) 
    LOOP

        UPDATE PP_STG_FORECAST
           SET INVENTORY_AGE_MIN   = RECS.MIN_AGE, 
               INVENTORY_AGE_MAX   = RECS.MAX_AGE           
         WHERE CFG_HORIZON_ID = RECS.CFG_HORIZON_ID
                   AND CFG_UOW_ID = (SELECT CFG_UOW_ID
                                       FROM PP_CFG_UNIT_OF_WORK
                                      WHERE UNIT_OF_WORK_NAME = RECS.UNIT_OF_WORK_NAME)
                   AND FORECAST_VERSION = RECS.FORECAST_VERSION
                   AND PROCESS_DATE IS NULL;

    V_CNT := V_CNT + 1;
    END LOOP;
    INSERT INTO PP_STG_LOG
      (PP_STG_ID, LOG_TYPE, PROCESS_DATE, PROCESS, DESCRIPTION, CREATE_DATE)
      VALUES (SEQ_PP_STG_ID.NEXTVAL,'LOG',SYSDATE,'PP_Forecast_Process_Staging','Proc Inv Min Max Age - Processed ' || V_CNT, SYSDATE); 
    COMMIT;

EXCEPTION
WHEN OTHERS 
  THEN 
    ROLLBACK;
    V_ERRCODE := SQLCODE;
    V_ERRMSG := SUBSTR(SQLERRM, 1, 3000);                 
    INSERT INTO PP_STG_LOG
      (PP_STG_ID, LOG_TYPE, PROCESS_DATE, PROCESS, DESCRIPTION, CREATE_DATE)
      VALUES (SEQ_PP_STG_ID.NEXTVAL,'ERR',SYSDATE,'PP_Forecast_Process_Staging','Proc Inv Min Max Age - ' || V_ERRCODE || ' : ' || V_ERRMSG,SYSDATE); 
      COMMIT; 
    RAISE;
END;                           </sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>T</sendOneStatement>
      <connection>MAXDAT</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>927</xloc>
      <yloc>549</yloc>
      <attributes_kjc/>
    </entry>
    <entry>
      <name>Success</name>
      <description/>
      <type>SUCCESS</type>
      <attributes/>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>640</xloc>
      <yloc>48</yloc>
      <attributes_kjc/>
    </entry>
  </entries>
  <hops>
    <hop>
      <from>START</from>
      <to>Set PP Manager Variables</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Set PP Manager Variables</from>
      <to>Evaluate rows number in a table</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Evaluate rows number in a table</from>
      <to>Set Log Vars</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Set Log Vars</from>
      <to>Log</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Log</from>
      <to>Chk All UOW in Stg Valid</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Chk All UOW in Stg Valid</from>
      <to>Set Log Vars 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Set Log Vars 2</from>
      <to>Log 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Chk All UOW in Stg Valid</from>
      <to>Chk All Frcst Dates in File Exist</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Chk All Frcst Dates in File Exist</from>
      <to>Set Log Vars 3</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Evaluate rows number in a table</from>
      <to>DUMMY</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Chk All Frcst Dates in File Exist</from>
      <to>DUMMY 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>DUMMY 2</from>
      <to>Check Horizon Exist</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>Check Horizon Exist</from>
      <to>Update Prev Version End Date</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Check Horizon Exist</from>
      <to>Insert New Horizon Cfg</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Proc UOW</from>
      <to>Proc Forecast Inventory</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Proc UOW</from>
      <to>DUMMY 4</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Proc Forecast Inventory</from>
      <to>DUMMY 4</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Proc Forecast Inventory</from>
      <to>Proc Forecast Intake</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Proc Forecast Intake</from>
      <to>DUMMY 4</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Update Prev Version End Date</from>
      <to>Proc UOW</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Insert New Horizon Cfg</from>
      <to>Proc UOW</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Proc Forecast Intake</from>
      <to>Proc Forecast Completions</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Proc Forecast Completions</from>
      <to>DUMMY 4</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Proc Forecast Jeopardy</from>
      <to>DUMMY 4</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Proc Forecast Jeopardy</from>
      <to>Proc Forecast Hours Assigned</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Proc Forecast Hours Assigned</from>
      <to>DUMMY 4</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Proc Forecast Handle Times</from>
      <to>DUMMY 4</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Proc Forecast Hours Assigned</from>
      <to>Proc Forecast Handle Times</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Proc Forecast Handle Times</from>
      <to>Update Process Flag</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Log 2</from>
      <to>Update Process Flag</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Set Log Vars 3</from>
      <to>Log 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Proc Forecast Completions</from>
      <to>Proc Inv Avg Age</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Proc Inv Avg Age</from>
      <to>DUMMY 4</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Proc Inv Avg Age</from>
      <to>Proc Inv Min Max Age</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Proc Inv Min Max Age</from>
      <to>Proc Forecast Jeopardy</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Proc Inv Min Max Age</from>
      <to>DUMMY 4</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>DUMMY</from>
      <to>Success</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
  </hops>
  <notepads>
  </notepads>
  <attributes/>
</job>
